MODULE <test-module>
  FILE /classFieldReference.kt
    CLASS CLASS A
      CONSTRUCTOR public constructor A(/*0*/ s1: kotlin.String, /*1*/ s2: kotlin.String)
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          SET_BACKING_FIELD s1 type=kotlin.Unit operator=null
            receiver: THIS public final class A type=zzz.A
            value: GET_VAR s1 type=kotlin.String operator=INITIALIZE_PROPERTY_FROM_PARAMETER
          SET_BACKING_FIELD s2 type=kotlin.Unit operator=null
            receiver: THIS public final class A type=zzz.A
            value: GET_VAR s2 type=kotlin.String operator=INITIALIZE_PROPERTY_FROM_PARAMETER
          INSTANCE_INITIALIZER_CALL classDescriptor=A
      PROPERTY public final val s1: kotlin.String
        EXPRESSION_BODY
          GET_VAR s1 type=kotlin.String operator=INITIALIZE_PROPERTY_FROM_PARAMETER
      PROPERTY public final val s2: kotlin.String
        EXPRESSION_BODY
          GET_VAR s2 type=kotlin.String operator=INITIALIZE_PROPERTY_FROM_PARAMETER
      PROPERTY @kotlin.jvm.JvmField() public final val publicField: kotlin.String
        EXPRESSION_BODY
          CALL .<get-s1> type=kotlin.String operator=GET_PROPERTY
            $this: THIS public final class A type=zzz.A
      PROPERTY @kotlin.jvm.JvmField() internal final val internalField: kotlin.String
        EXPRESSION_BODY
          CALL .<get-s2> type=kotlin.String operator=GET_PROPERTY
            $this: THIS public final class A type=zzz.A
      FUN public final fun testAccessors(): kotlin.Unit
        BLOCK_BODY
          CALL .checkAccessor type=kotlin.Unit operator=null
            prop: CALLABLE_REFERENCE publicField type=kotlin.reflect.KProperty1<zzz.A, kotlin.String> operator=null
            value: CALL .<get-s1> type=kotlin.String operator=GET_PROPERTY
              $this: THIS public final class A type=zzz.A
            receiver: THIS public final class A type=zzz.A
          CALL .checkAccessor type=kotlin.Unit operator=null
            prop: CALLABLE_REFERENCE internalField type=kotlin.reflect.KProperty1<zzz.A, kotlin.String> operator=null
            value: CALL .<get-s2> type=kotlin.String operator=GET_PROPERTY
              $this: THIS public final class A type=zzz.A
            receiver: THIS public final class A type=zzz.A
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        CALL .testAccessors type=kotlin.Unit operator=null
          $this: CALL .<init> type=zzz.A operator=null
            s1: CONST String type=kotlin.String value='1'
            s2: CONST String type=kotlin.String value='2'
        RETURN type=kotlin.Nothing from=box
          CONST String type=kotlin.String value='OK'
    FUN public fun </*0*/ T, /*1*/ R> checkAccessor(/*0*/ prop: kotlin.reflect.KProperty1<T, R>, /*1*/ value: R, /*2*/ receiver: T): kotlin.Unit
      BLOCK_BODY
        CALL .assertEquals type=kotlin.Unit operator=null
          expected: CALL .get type=R operator=null
            $this: GET_VAR prop type=kotlin.reflect.KProperty1<T, R> operator=null
            receiver: GET_VAR receiver type=T operator=null
          actual: GET_VAR value type=R operator=null
          message: STRING_CONCATENATION type=kotlin.String
            CONST String type=kotlin.String value='Property '
            GET_VAR prop type=kotlin.reflect.KProperty1<T, R> operator=null
            CONST String type=kotlin.String value=' has wrong value'
