MODULE <test-module>
  FILE /primitive.kt
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        BLOCK type=kotlin.Int operator=EXCLEXCL
          VAR val tmp0_notnull: kotlin.Int
            CONST Int type=kotlin.Int value='42'
          WHEN type=kotlin.Int operator=null
            if: CALL .EQEQ type=kotlin.Boolean operator=EQEQ
              arg0: GET_VAR tmp0_notnull type=kotlin.Int operator=null
              arg1: CONST Null type=kotlin.Nothing? value='null'
            then: CALL .THROW_NPE type=kotlin.Nothing operator=EXCLEXCL
            else: GET_VAR tmp0_notnull type=kotlin.Int operator=null
        BLOCK type=kotlin.Long operator=EXCLEXCL
          VAR val tmp1_notnull: kotlin.Long
            CALL .toLong type=kotlin.Long operator=null
              $this: CONST Int type=kotlin.Int value='42'
          WHEN type=kotlin.Long operator=null
            if: CALL .EQEQ type=kotlin.Boolean operator=EQEQ
              arg0: GET_VAR tmp1_notnull type=kotlin.Long operator=null
              arg1: CONST Null type=kotlin.Nothing? value='null'
            then: CALL .THROW_NPE type=kotlin.Nothing operator=EXCLEXCL
            else: GET_VAR tmp1_notnull type=kotlin.Long operator=null
        RETURN type=kotlin.Nothing from=box
          BLOCK type=kotlin.String operator=EXCLEXCL
            VAR val tmp2_notnull: kotlin.String
              CONST String type=kotlin.String value='OK'
            WHEN type=kotlin.String operator=null
              if: CALL .EQEQ type=kotlin.Boolean operator=EQEQ
                arg0: GET_VAR tmp2_notnull type=kotlin.String operator=null
                arg1: CONST Null type=kotlin.Nothing? value='null'
              then: CALL .THROW_NPE type=kotlin.Nothing operator=EXCLEXCL
              else: GET_VAR tmp2_notnull type=kotlin.String operator=null
