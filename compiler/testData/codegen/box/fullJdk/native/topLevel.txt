MODULE <test-module>
  FILE /topLevel.kt
    FUN public external fun bar(/*0*/ l: kotlin.Long, /*1*/ s: kotlin.String): kotlin.Double
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        VAR var d: kotlin.Double
          CONST Double type=kotlin.Double value='0.0'
        TRY_CATCH type=kotlin.Unit
          try: BLOCK type=kotlin.Nothing operator=null
            SET_VAR d type=kotlin.Unit operator=EQ
              CALL .bar type=kotlin.Double operator=null
                l: CONST Long type=kotlin.Long value='1'
                s: CONST String type=kotlin.String value=''
            RETURN type=kotlin.Nothing from=box
              CONST String type=kotlin.String value='Link error expected on object'
          catch e: BLOCK type=kotlin.Unit operator=null
            WHEN type=kotlin.Unit operator=IF
              if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
                arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
                  arg0: CALL .<get-message> type=kotlin.String? operator=GET_PROPERTY
                    $this: GET_VAR e type=java.lang.UnsatisfiedLinkError operator=null
                  arg1: CONST String type=kotlin.String value='foo.TopLevelKt.bar(JLjava/lang/String;)D'
              then: RETURN type=kotlin.Nothing from=box
                CALL .plus type=kotlin.String operator=PLUS
                  $this: CONST String type=kotlin.String value='Fail 1: '
                  other: CALL .<get-message> type=kotlin.String? operator=GET_PROPERTY
                    $this: GET_VAR e type=java.lang.UnsatisfiedLinkError operator=null
        RETURN type=kotlin.Nothing from=box
          CONST String type=kotlin.String value='OK'
