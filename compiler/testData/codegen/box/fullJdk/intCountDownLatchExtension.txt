MODULE <test-module>
  FILE /intCountDownLatchExtension.kt
    FUN public fun </*0*/ T> kotlin.Int.latch(/*0*/ op: java.util.concurrent.CountDownLatch.() -> T): T
      BLOCK_BODY
        VAR val cdl: java.util.concurrent.CountDownLatch
          CALL .<init> type=java.util.concurrent.CountDownLatch operator=null
            p0: $RECEIVER of: latch type=kotlin.Int
        VAR val res: T
          CALL .invoke type=T operator=INVOKE
            $this: GET_VAR op type=java.util.concurrent.CountDownLatch.() -> T operator=VARIABLE_AS_FUNCTION
            $receiver: GET_VAR cdl type=java.util.concurrent.CountDownLatch operator=null
        CALL .await type=kotlin.Unit operator=null
          $this: GET_VAR cdl type=java.util.concurrent.CountDownLatch operator=null
        RETURN type=kotlin.Nothing from=latch
          GET_VAR res type=T operator=null
    FUN public fun id(/*0*/ op: () -> kotlin.Unit): kotlin.Unit
      BLOCK_BODY
        RETURN type=kotlin.Nothing from=id
          CALL .invoke type=kotlin.Unit operator=INVOKE
            $this: GET_VAR op type=() -> kotlin.Unit operator=VARIABLE_AS_FUNCTION
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        CALL .latch type=kotlin.Unit operator=null
          $receiver: CONST Int type=kotlin.Int value='1'
          op: BLOCK type=java.util.concurrent.CountDownLatch.() -> kotlin.Unit operator=LAMBDA
            FUN local final fun java.util.concurrent.CountDownLatch.<anonymous>(): kotlin.Unit
              BLOCK_BODY
                RETURN type=kotlin.Nothing from=<anonymous>
                  CALL .id type=kotlin.Unit operator=null
                    op: BLOCK type=() -> kotlin.Unit operator=LAMBDA
                      FUN local final fun <anonymous>(): kotlin.Unit
                        BLOCK_BODY
                          RETURN type=kotlin.Nothing from=<anonymous>
                            CALL .countDown type=kotlin.Unit operator=null
                              $this: $RECEIVER of: <anonymous> type=java.util.concurrent.CountDownLatch
                      CALLABLE_REFERENCE <anonymous> type=() -> kotlin.Unit operator=LAMBDA
            CALLABLE_REFERENCE <anonymous> type=java.util.concurrent.CountDownLatch.() -> kotlin.Unit operator=LAMBDA
        RETURN type=kotlin.Nothing from=box
          CONST String type=kotlin.String value='OK'
