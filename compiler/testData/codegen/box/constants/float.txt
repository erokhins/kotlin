MODULE <test-module>
  FILE /float.kt
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        WHEN type=kotlin.Unit operator=IF
          if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
              arg0: CONST Float type=kotlin.Float value='1.0'
              arg1: CALL .toFloat type=kotlin.Float operator=null
                $this: CONST Int type=kotlin.Int value='1'
          then: RETURN type=kotlin.Nothing from=box
            CONST String type=kotlin.String value='fail 1'
        WHEN type=kotlin.Unit operator=IF
          if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
              arg0: CONST Float type=kotlin.Float value='1.0'
              arg1: CALL .toFloat type=kotlin.Float operator=null
                $this: CONST Double type=kotlin.Double value='1.0'
          then: RETURN type=kotlin.Nothing from=box
            CONST String type=kotlin.String value='fail 2'
        WHEN type=kotlin.Unit operator=IF
          if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
              arg0: CONST Float type=kotlin.Float value='10.0'
              arg1: CALL .toFloat type=kotlin.Float operator=null
                $this: CONST Double type=kotlin.Double value='10.0'
          then: RETURN type=kotlin.Nothing from=box
            CONST String type=kotlin.String value='fail 3'
        WHEN type=kotlin.Unit operator=IF
          if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
              arg0: CONST Float type=kotlin.Float value='10.0'
              arg1: CALL .toFloat type=kotlin.Float operator=null
                $this: CONST Double type=kotlin.Double value='10.0'
          then: RETURN type=kotlin.Nothing from=box
            CONST String type=kotlin.String value='fail 4'
        WHEN type=kotlin.Unit operator=IF
          if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
              arg0: CONST Float type=kotlin.Float value='0.1'
              arg1: CALL .toFloat type=kotlin.Float operator=null
                $this: CONST Double type=kotlin.Double value='0.1'
          then: RETURN type=kotlin.Nothing from=box
            CONST String type=kotlin.String value='fail 5'
        WHEN type=kotlin.Unit operator=IF
          if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
              arg0: CONST Float type=kotlin.Float value='0.1'
              arg1: CALL .toFloat type=kotlin.Float operator=null
                $this: CONST Double type=kotlin.Double value='0.1'
          then: RETURN type=kotlin.Nothing from=box
            CONST String type=kotlin.String value='fail 6'
        WHEN type=kotlin.Unit operator=IF
          if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
              arg0: CONST Float type=kotlin.Float value='1.0'
              arg1: CALL .toFloat type=kotlin.Float operator=null
                $this: CONST Int type=kotlin.Int value='1'
          then: RETURN type=kotlin.Nothing from=box
            CONST String type=kotlin.String value='fail 7'
        WHEN type=kotlin.Unit operator=IF
          if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
              arg0: CONST Float type=kotlin.Float value='1.0'
              arg1: CALL .toFloat type=kotlin.Float operator=null
                $this: CONST Double type=kotlin.Double value='1.0'
          then: RETURN type=kotlin.Nothing from=box
            CONST String type=kotlin.String value='fail 8'
        WHEN type=kotlin.Unit operator=IF
          if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
              arg0: CONST Float type=kotlin.Float value='10.0'
              arg1: CALL .toFloat type=kotlin.Float operator=null
                $this: CONST Double type=kotlin.Double value='10.0'
          then: RETURN type=kotlin.Nothing from=box
            CONST String type=kotlin.String value='fail 9'
        WHEN type=kotlin.Unit operator=IF
          if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
              arg0: CONST Float type=kotlin.Float value='10.0'
              arg1: CALL .toFloat type=kotlin.Float operator=null
                $this: CONST Double type=kotlin.Double value='10.0'
          then: RETURN type=kotlin.Nothing from=box
            CONST String type=kotlin.String value='fail 10'
        WHEN type=kotlin.Unit operator=IF
          if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
              arg0: CONST Float type=kotlin.Float value='0.1'
              arg1: CALL .toFloat type=kotlin.Float operator=null
                $this: CONST Double type=kotlin.Double value='0.1'
          then: RETURN type=kotlin.Nothing from=box
            CONST String type=kotlin.String value='fail 11'
        WHEN type=kotlin.Unit operator=IF
          if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
              arg0: CONST Float type=kotlin.Float value='0.1'
              arg1: CALL .toFloat type=kotlin.Float operator=null
                $this: CONST Double type=kotlin.Double value='0.1'
          then: RETURN type=kotlin.Nothing from=box
            CONST String type=kotlin.String value='fail 12'
        RETURN type=kotlin.Nothing from=box
          CONST String type=kotlin.String value='OK'
