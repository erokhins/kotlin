MODULE <test-module>
  FILE /removeAtTwoSpecialBridges.kt
    CLASS CLASS A0
      CONSTRUCTOR public constructor A0</*0*/ E>()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          INSTANCE_INITIALIZER_CALL classDescriptor=A0
      FUN public open override /*1*/ fun add(/*0*/ element: E): kotlin.Boolean
        BLOCK_BODY
          THROW type=kotlin.Nothing
            CALL .<init> type=java.lang.UnsupportedOperationException operator=null
      FUN public open override /*1*/ fun add(/*0*/ index: kotlin.Int, /*1*/ element: E): kotlin.Unit
        BLOCK_BODY
          THROW type=kotlin.Nothing
            CALL .<init> type=java.lang.UnsupportedOperationException operator=null
      FUN public open override /*1*/ fun addAll(/*0*/ index: kotlin.Int, /*1*/ elements: kotlin.collections.Collection<E>): kotlin.Boolean
        BLOCK_BODY
          THROW type=kotlin.Nothing
            CALL .<init> type=java.lang.UnsupportedOperationException operator=null
      FUN public open override /*1*/ fun addAll(/*0*/ elements: kotlin.collections.Collection<E>): kotlin.Boolean
        BLOCK_BODY
          THROW type=kotlin.Nothing
            CALL .<init> type=java.lang.UnsupportedOperationException operator=null
      FUN public open override /*1*/ fun clear(): kotlin.Unit
        BLOCK_BODY
          THROW type=kotlin.Nothing
            CALL .<init> type=java.lang.UnsupportedOperationException operator=null
      FUN public open override /*1*/ fun listIterator(): kotlin.collections.MutableListIterator<E>
        BLOCK_BODY
          THROW type=kotlin.Nothing
            CALL .<init> type=java.lang.UnsupportedOperationException operator=null
      FUN public open override /*1*/ fun listIterator(/*0*/ index: kotlin.Int): kotlin.collections.MutableListIterator<E>
        BLOCK_BODY
          THROW type=kotlin.Nothing
            CALL .<init> type=java.lang.UnsupportedOperationException operator=null
      FUN public open override /*1*/ fun remove(/*0*/ element: E): kotlin.Boolean
        BLOCK_BODY
          THROW type=kotlin.Nothing
            CALL .<init> type=java.lang.UnsupportedOperationException operator=null
      FUN public open override /*1*/ fun removeAll(/*0*/ elements: kotlin.collections.Collection<E>): kotlin.Boolean
        BLOCK_BODY
          THROW type=kotlin.Nothing
            CALL .<init> type=java.lang.UnsupportedOperationException operator=null
      FUN public open override /*1*/ fun removeAt(/*0*/ index: kotlin.Int): E
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=removeAt
            TYPE_OP operator=CAST typeOperand=E
              CONST String type=kotlin.String value='K'
      FUN public open override /*1*/ fun retainAll(/*0*/ elements: kotlin.collections.Collection<E>): kotlin.Boolean
        BLOCK_BODY
          THROW type=kotlin.Nothing
            CALL .<init> type=java.lang.UnsupportedOperationException operator=null
      FUN public open override /*1*/ fun set(/*0*/ index: kotlin.Int, /*1*/ element: E): E
        BLOCK_BODY
          THROW type=kotlin.Nothing
            CALL .<init> type=java.lang.UnsupportedOperationException operator=null
      FUN public open override /*1*/ fun subList(/*0*/ fromIndex: kotlin.Int, /*1*/ toIndex: kotlin.Int): kotlin.collections.MutableList<E>
        BLOCK_BODY
          THROW type=kotlin.Nothing
            CALL .<init> type=java.lang.UnsupportedOperationException operator=null
      PROPERTY public open override /*1*/ val size: kotlin.Int
        PROPERTY_GETTER public open override /*1*/ fun <get-size>(): kotlin.Int
          BLOCK_BODY
            THROW type=kotlin.Nothing
              CALL .<init> type=java.lang.UnsupportedOperationException operator=null
      FUN public open override /*1*/ fun contains(/*0*/ element: E): kotlin.Boolean
        BLOCK_BODY
          THROW type=kotlin.Nothing
            CALL .<init> type=java.lang.UnsupportedOperationException operator=null
      FUN public open override /*1*/ fun containsAll(/*0*/ elements: kotlin.collections.Collection<E>): kotlin.Boolean
        BLOCK_BODY
          THROW type=kotlin.Nothing
            CALL .<init> type=java.lang.UnsupportedOperationException operator=null
      FUN public open override /*1*/ fun get(/*0*/ index: kotlin.Int): E
        BLOCK_BODY
          THROW type=kotlin.Nothing
            CALL .<init> type=java.lang.UnsupportedOperationException operator=null
      FUN public open override /*1*/ fun indexOf(/*0*/ element: E): kotlin.Int
        BLOCK_BODY
          THROW type=kotlin.Nothing
            CALL .<init> type=java.lang.UnsupportedOperationException operator=null
      FUN public open override /*1*/ fun isEmpty(): kotlin.Boolean
        BLOCK_BODY
          THROW type=kotlin.Nothing
            CALL .<init> type=java.lang.UnsupportedOperationException operator=null
      FUN public open override /*1*/ fun lastIndexOf(/*0*/ element: E): kotlin.Int
        BLOCK_BODY
          THROW type=kotlin.Nothing
            CALL .<init> type=java.lang.UnsupportedOperationException operator=null
      FUN public open override /*1*/ fun iterator(): kotlin.collections.MutableIterator<E>
        BLOCK_BODY
          THROW type=kotlin.Nothing
            CALL .<init> type=java.lang.UnsupportedOperationException operator=null
    CLASS CLASS A1
      CONSTRUCTOR public constructor A1()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL A0
          INSTANCE_INITIALIZER_CALL classDescriptor=A1
      FUN public open override /*1*/ fun removeAt(/*0*/ p0: kotlin.Int): kotlin.String
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=removeAt
            CONST String type=kotlin.String value='O'
    CLASS CLASS A2
      CONSTRUCTOR public constructor A2()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL A0
          INSTANCE_INITIALIZER_CALL classDescriptor=A2
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        VAR val a1: A1
          CALL .<init> type=A1 operator=null
        VAR val a2: A2
          CALL .<init> type=A2 operator=null
        RETURN type=kotlin.Nothing from=box
          CALL .plus type=kotlin.String operator=PLUS
            $this: CALL .removeAt type=kotlin.String operator=null
              $this: GET_VAR a1 type=A1 operator=null
              p0: CONST Int type=kotlin.Int value='123'
            other: CALL .removeAt type=kotlin.String operator=null
              $this: GET_VAR a2 type=A2 operator=null
              index: CONST Int type=kotlin.Int value='456'
