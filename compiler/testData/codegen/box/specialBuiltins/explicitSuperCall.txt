MODULE <test-module>
  FILE /explicitSuperCall.kt
    CLASS CLASS A
      CONSTRUCTOR public constructor A()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL ArrayList
          INSTANCE_INITIALIZER_CALL classDescriptor=A
      PROPERTY public open override /*1*/ val size: kotlin.Int
        PROPERTY_GETTER public open override /*1*/ fun <get-size>(): kotlin.Int
          BLOCK_BODY
            RETURN type=kotlin.Nothing from=<get-size>
              CALL .plus type=kotlin.Int operator=PLUS
                $this: CALL .<get-size> superQualifier=ArrayList type=kotlin.Int operator=GET_PROPERTY
                  $this: THIS public final class A : java.util.ArrayList<kotlin.String> type=java.util.ArrayList<kotlin.String>
                other: CONST Int type=kotlin.Int value='56'
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        VAR val a: A
          CALL .<init> type=A operator=null
        WHEN type=kotlin.Unit operator=IF
          if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
              arg0: CALL .<get-size> type=kotlin.Int operator=GET_PROPERTY
                $this: GET_VAR a type=A operator=null
              arg1: CONST Int type=kotlin.Int value='56'
          then: RETURN type=kotlin.Nothing from=box
            STRING_CONCATENATION type=kotlin.String
              CONST String type=kotlin.String value='fail: '
              CALL .<get-size> type=kotlin.Int operator=GET_PROPERTY
                $this: GET_VAR a type=A operator=null
        RETURN type=kotlin.Nothing from=box
          CONST String type=kotlin.String value='OK'
