MODULE <test-module>
  FILE /implicitSmartCastThis.kt
    CLASS CLASS A
      CONSTRUCTOR public constructor A()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          INSTANCE_INITIALIZER_CALL classDescriptor=A
    CLASS CLASS B
      CONSTRUCTOR public constructor B()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL A
          INSTANCE_INITIALIZER_CALL classDescriptor=B
      FUN public final fun foo(/*0*/ i: kotlin.Int): kotlin.Int
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=foo
            GET_VAR i type=kotlin.Int operator=null
    FUN public fun A.test(): kotlin.Int
      BLOCK_BODY
        RETURN type=kotlin.Nothing from=test
          WHEN type=kotlin.Int operator=IF
            if: TYPE_OP operator=INSTANCEOF typeOperand=B
              $RECEIVER of: test type=A
            then: CALL .foo type=kotlin.Int operator=null
              $this: TYPE_OP operator=IMPLICIT_CAST typeOperand=B
                $RECEIVER of: test type=A
              i: CONST Int type=kotlin.Int value='42'
            else: CONST Int type=kotlin.Int value='0'
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        WHEN type=kotlin.Unit operator=IF
          if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
              arg0: CALL .test type=kotlin.Int operator=null
                $receiver: CALL .<init> type=B operator=null
              arg1: CONST Int type=kotlin.Int value='42'
          then: RETURN type=kotlin.Nothing from=box
            CONST String type=kotlin.String value='fail1'
        WHEN type=kotlin.Unit operator=IF
          if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
              arg0: CALL .test type=kotlin.Int operator=null
                $receiver: CALL .<init> type=A operator=null
              arg1: CONST Int type=kotlin.Int value='0'
          then: RETURN type=kotlin.Nothing from=box
            CONST String type=kotlin.String value='fail2'
        RETURN type=kotlin.Nothing from=box
          CONST String type=kotlin.String value='OK'
