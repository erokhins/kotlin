MODULE <test-module>
  FILE /noOptimization.kt
    CLASS CLASS A
      CONSTRUCTOR public constructor A()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          INSTANCE_INITIALIZER_CALL classDescriptor=A
    CLASS CLASS B
      CONSTRUCTOR public constructor B()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          INSTANCE_INITIALIZER_CALL classDescriptor=B
    PROPERTY public var holder: kotlin.Int
      EXPRESSION_BODY
        CONST Int type=kotlin.Int value='0'
    FUN public operator fun A.not(): A
      BLOCK_BODY
        BLOCK type=kotlin.Int operator=POSTFIX_INCR
          BLOCK type=kotlin.Int operator=POSTFIX_INCR
            VAR val tmp0: kotlin.Int
              CALL .<get-holder> type=kotlin.Int operator=POSTFIX_INCR
            CALL .<set-holder> type=kotlin.Unit operator=POSTFIX_INCR
              <set-?>: CALL .inc type=kotlin.Int operator=POSTFIX_INCR
                $this: GET_VAR tmp0 type=kotlin.Int operator=null
            GET_VAR tmp0 type=kotlin.Int operator=null
        RETURN type=kotlin.Nothing from=not
          $RECEIVER of: not type=A
    FUN public operator fun B.not(): kotlin.Boolean
      BLOCK_BODY
        BLOCK type=kotlin.Int operator=POSTFIX_INCR
          BLOCK type=kotlin.Int operator=POSTFIX_INCR
            VAR val tmp0: kotlin.Int
              CALL .<get-holder> type=kotlin.Int operator=POSTFIX_INCR
            CALL .<set-holder> type=kotlin.Unit operator=POSTFIX_INCR
              <set-?>: CALL .inc type=kotlin.Int operator=POSTFIX_INCR
                $this: GET_VAR tmp0 type=kotlin.Int operator=null
            GET_VAR tmp0 type=kotlin.Int operator=null
        RETURN type=kotlin.Nothing from=not
          CONST Boolean type=kotlin.Boolean value='false'
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        CALL .not type=A operator=EXCL
          $receiver: CALL .not type=A operator=EXCL
            $receiver: CALL .not type=A operator=EXCL
              $receiver: CALL .not type=A operator=EXCL
                $receiver: CALL .not type=A operator=EXCL
                  $receiver: CALL .<init> type=A operator=null
        WHEN type=kotlin.Unit operator=IF
          if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
              arg0: CALL .<get-holder> type=kotlin.Int operator=GET_PROPERTY
              arg1: CONST Int type=kotlin.Int value='5'
          then: RETURN type=kotlin.Nothing from=box
            CONST String type=kotlin.String value='fail 1'
        CALL .<set-holder> type=kotlin.Unit operator=EQ
          <set-?>: CONST Int type=kotlin.Int value='0'
        WHEN type=kotlin.Unit operator=IF
          if: WHEN type=kotlin.Boolean operator=OROR
            if: CALL .not type=kotlin.Boolean operator=EXCL
              $this: CALL .not type=kotlin.Boolean operator=EXCL
                $this: CALL .not type=kotlin.Boolean operator=EXCL
                  $receiver: CALL .<init> type=B operator=null
            then: CONST Boolean type=kotlin.Boolean value='true'
            else: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
              arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
                arg0: CALL .<get-holder> type=kotlin.Int operator=GET_PROPERTY
                arg1: CONST Int type=kotlin.Int value='1'
          then: RETURN type=kotlin.Nothing from=box
            CONST String type=kotlin.String value='fail 2'
        WHEN type=kotlin.Unit operator=IF
          if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
              arg0: CALL .not type=kotlin.Boolean operator=EXCL
                $receiver: CALL .<init> type=B operator=null
              arg1: CONST Boolean type=kotlin.Boolean value='false'
          then: RETURN type=kotlin.Nothing from=box
            CONST String type=kotlin.String value='fail 3'
        WHEN type=kotlin.Unit operator=IF
          if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
              arg0: CALL .not type=kotlin.Boolean operator=EXCL
                $this: CALL .not type=kotlin.Boolean operator=EXCL
                  $receiver: CALL .<init> type=B operator=null
              arg1: CONST Boolean type=kotlin.Boolean value='true'
          then: RETURN type=kotlin.Nothing from=box
            CONST String type=kotlin.String value='fail 4'
        RETURN type=kotlin.Nothing from=box
          CONST String type=kotlin.String value='OK'
