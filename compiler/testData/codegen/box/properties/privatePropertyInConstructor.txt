MODULE <test-module>
  FILE /privatePropertyInConstructor.kt
    CLASS CLASS A
      CONSTRUCTOR public constructor A(/*0*/ x: kotlin.String, /*1*/ y: kotlin.Double)
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          SET_BACKING_FIELD x type=kotlin.Unit operator=null
            receiver: THIS public final class A type=A
            value: GET_VAR x type=kotlin.String operator=INITIALIZE_PROPERTY_FROM_PARAMETER
          SET_BACKING_FIELD y type=kotlin.Unit operator=null
            receiver: THIS public final class A type=A
            value: GET_VAR y type=kotlin.Double operator=INITIALIZE_PROPERTY_FROM_PARAMETER
          INSTANCE_INITIALIZER_CALL classDescriptor=A
      PROPERTY private final val x: kotlin.String
        EXPRESSION_BODY
          GET_VAR x type=kotlin.String operator=INITIALIZE_PROPERTY_FROM_PARAMETER
      PROPERTY private final var y: kotlin.Double
        EXPRESSION_BODY
          GET_VAR y type=kotlin.Double operator=INITIALIZE_PROPERTY_FROM_PARAMETER
      FUN public final fun foo(): kotlin.Unit
        BLOCK_BODY
          VAR val r: () -> kotlin.Unit
            BLOCK type=() -> kotlin.Unit operator=LAMBDA
              FUN local final fun <anonymous>(): kotlin.Unit
                BLOCK_BODY
                  WHEN type=kotlin.Unit operator=IF
                    if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
                      arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
                        arg0: CALL .<get-x> type=kotlin.String operator=GET_PROPERTY
                          $this: THIS public final class A type=A
                        arg1: CONST String type=kotlin.String value='abc'
                    then: THROW type=kotlin.Nothing
                      CALL .<init> type=java.lang.AssertionError operator=null
                        p0: CALL .<get-x> type=kotlin.String operator=GET_PROPERTY
                          $this: THIS public final class A type=A
                  CALL .<set-y> type=kotlin.Unit operator=EQ
                    $this: THIS public final class A type=A
                    <set-?>: CONST Double type=kotlin.Double value='0.0'
                  RETURN type=kotlin.Nothing from=<anonymous>
                    WHEN type=kotlin.Unit operator=IF
                      if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
                        arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
                          arg0: CALL .<get-y> type=kotlin.Double operator=GET_PROPERTY
                            $this: THIS public final class A type=A
                          arg1: CONST Double type=kotlin.Double value='0.0'
                      then: THROW type=kotlin.Nothing
                        CALL .<init> type=java.lang.AssertionError operator=null
                          p0: CALL .<get-y> type=kotlin.Double operator=GET_PROPERTY
                            $this: THIS public final class A type=A
              CALLABLE_REFERENCE <anonymous> type=() -> kotlin.Unit operator=LAMBDA
          CALL .invoke type=kotlin.Unit operator=INVOKE
            $this: GET_VAR r type=() -> kotlin.Unit operator=VARIABLE_AS_FUNCTION
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        CALL .foo type=kotlin.Unit operator=null
          $this: CALL .<init> type=A operator=null
            x: CONST String type=kotlin.String value='abc'
            y: CONST Double type=kotlin.Double value='3.14'
        RETURN type=kotlin.Nothing from=box
          CONST String type=kotlin.String value='OK'
