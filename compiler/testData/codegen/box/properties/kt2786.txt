MODULE <test-module>
  FILE /kt2786.kt
    CLASS INTERFACE FooTrait
      PROPERTY public abstract val propertyTest: kotlin.String
    CLASS CLASS FooDelegate
      CONSTRUCTOR public constructor FooDelegate()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          INSTANCE_INITIALIZER_CALL classDescriptor=FooDelegate
      PROPERTY public open override /*1*/ val propertyTest: kotlin.String = "OK"
        EXPRESSION_BODY
          CONST String type=kotlin.String value='OK'
    CLASS CLASS DelegateTest
      CONSTRUCTOR public constructor DelegateTest()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          INSTANCE_INITIALIZER_CALL classDescriptor=DelegateTest
      PROPERTY val `DelegateTest$FooTrait$delegate`: FooDelegate
        EXPRESSION_BODY
          CALL .<init> type=FooDelegate operator=null
      PROPERTY public open override /*1*/ /*delegation*/ val propertyTest: kotlin.String
        PROPERTY_GETTER public open override /*1*/ /*delegation*/ fun <get-propertyTest>(): kotlin.String
          BLOCK_BODY
            RETURN type=kotlin.Nothing from=<get-propertyTest>
              CALL .<get-propertyTest> type=kotlin.String operator=null
                $this: GET_VAR DelegateTest$FooTrait$delegate type=FooDelegate operator=null
      FUN public final fun test(): kotlin.String
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=test
            CALL .<get-propertyTest> type=kotlin.String operator=GET_PROPERTY
              $this: THIS public final class DelegateTest : FooTrait type=DelegateTest
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        RETURN type=kotlin.Nothing from=box
          CALL .test type=kotlin.String operator=null
            $this: CALL .<init> type=DelegateTest operator=null
