MODULE <test-module>
  FILE /primitiveOverrideDefaultAccessor.kt
    CLASS INTERFACE R
      PROPERTY public abstract var value: T
    CLASS CLASS A
      CONSTRUCTOR public constructor A(/*0*/ value: kotlin.Int)
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          SET_BACKING_FIELD value type=kotlin.Unit operator=null
            receiver: THIS public final class A : R<kotlin.Int> type=A
            value: GET_VAR value type=kotlin.Int operator=INITIALIZE_PROPERTY_FROM_PARAMETER
          INSTANCE_INITIALIZER_CALL classDescriptor=A
      PROPERTY public open override /*1*/ var value: kotlin.Int
        EXPRESSION_BODY
          GET_VAR value type=kotlin.Int operator=INITIALIZE_PROPERTY_FROM_PARAMETER
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        VAR val a: A
          CALL .<init> type=A operator=null
            value: CONST Int type=kotlin.Int value='239'
        CALL .<set-value> type=kotlin.Unit operator=EQ
          $this: GET_VAR a type=A operator=null
          <set-?>: CONST Int type=kotlin.Int value='42'
        RETURN type=kotlin.Nothing from=box
          WHEN type=kotlin.String operator=IF
            if: CALL .EQEQ type=kotlin.Boolean operator=EQEQ
              arg0: CALL .<get-value> type=kotlin.Int operator=GET_PROPERTY
                $this: GET_VAR a type=A operator=null
              arg1: CONST Int type=kotlin.Int value='42'
            then: CONST String type=kotlin.String value='OK'
            else: CONST String type=kotlin.String value='Fail 1'
