MODULE <test-module>
  FILE /kt1714.kt
    CLASS INTERFACE A
      PROPERTY public abstract val method: (() -> kotlin.Unit)?
      PROPERTY public abstract val test: java.lang.Integer
    CLASS CLASS AImpl
      CONSTRUCTOR public constructor AImpl()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          INSTANCE_INITIALIZER_CALL classDescriptor=AImpl
      PROPERTY public open override /*1*/ val method: (() -> kotlin.Unit)?
        EXPRESSION_BODY
          BLOCK type=() -> kotlin.Unit operator=LAMBDA
            FUN local final fun <anonymous>(): kotlin.Unit
              BLOCK_BODY
                RETURN type=kotlin.Nothing from=<anonymous>
            CALLABLE_REFERENCE <anonymous> type=() -> kotlin.Unit operator=LAMBDA
      PROPERTY public open override /*1*/ val test: java.lang.Integer
        EXPRESSION_BODY
          CALL .<init> type=java.lang.Integer operator=null
            p0: CONST Int type=kotlin.Int value='777'
    FUN public fun test(/*0*/ a: A): kotlin.Unit
      BLOCK_BODY
        VAR val method: (() -> kotlin.Unit)?
          CALL .<get-method> type=(() -> kotlin.Unit)? operator=GET_PROPERTY
            $this: GET_VAR a type=A operator=null
        WHEN type=kotlin.Unit operator=IF
          if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
              arg0: GET_VAR method type=(() -> kotlin.Unit)? operator=null
              arg1: CONST Null type=kotlin.Nothing? value='null'
          then: BLOCK type=kotlin.Unit operator=null
            CALL .invoke type=kotlin.Unit operator=INVOKE
              $this: GET_VAR method type=(() -> kotlin.Unit)? operator=VARIABLE_AS_FUNCTION
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        CALL .<get-test> type=java.lang.Integer operator=GET_PROPERTY
          $this: CALL .<init> type=AImpl operator=null
        CALL .test type=kotlin.Unit operator=null
          a: CALL .<init> type=AImpl operator=null
        RETURN type=kotlin.Nothing from=box
          CONST String type=kotlin.String value='OK'
