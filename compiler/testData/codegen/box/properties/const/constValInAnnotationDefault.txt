MODULE <test-module>
  FILE /constValInAnnotationDefault.kt
    PROPERTY public const val z: kotlin.String = "OK"
      EXPRESSION_BODY
        CONST String type=kotlin.String value='OK'
    CLASS ANNOTATION_CLASS A
      CONSTRUCTOR public constructor A(/*0*/ value: kotlin.String = ...)
        value: EXPRESSION_BODY
          CALL .<get-z> type=kotlin.String operator=GET_PROPERTY
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          SET_BACKING_FIELD value type=kotlin.Unit operator=null
            receiver: THIS public final annotation class A : kotlin.Annotation type=A
            value: GET_VAR value type=kotlin.String operator=INITIALIZE_PROPERTY_FROM_PARAMETER
          INSTANCE_INITIALIZER_CALL classDescriptor=A
      PROPERTY public final val value: kotlin.String
        EXPRESSION_BODY
          GET_VAR value type=kotlin.String operator=INITIALIZE_PROPERTY_FROM_PARAMETER
    CLASS CLASS Test
      CONSTRUCTOR public constructor Test()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          INSTANCE_INITIALIZER_CALL classDescriptor=Test
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        RETURN type=kotlin.Nothing from=box
          CALL .<get-value> type=kotlin.String operator=GET_PROPERTY
            $this: TYPE_OP operator=IMPLICIT_NOTNULL typeOperand=A
              CALL .getAnnotation type=A! operator=null
                $this: CALL .<get-java> type=java.lang.Class<Test> operator=GET_PROPERTY
                  $receiver: CLASS_REFERENCE Test type=kotlin.reflect.KClass<Test>
                p0: CALL .<get-java> type=java.lang.Class<A> operator=GET_PROPERTY
                  $receiver: CLASS_REFERENCE A type=kotlin.reflect.KClass<A>
