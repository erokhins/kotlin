MODULE <test-module>
  FILE /test.kt
    CLASS CLASS OurTest
      CONSTRUCTOR public constructor OurTest()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Test
          INSTANCE_INITIALIZER_CALL classDescriptor=OurTest
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        VAR val t: OurTest
          CALL .<init> type=OurTest operator=null
        VAR val x: kotlin.collections.MutableCollection<kotlin.String>
          GET_VAR t type=OurTest operator=null
        WHEN type=kotlin.Unit operator=IF
          if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
              arg0: CALL .<get-size> type=kotlin.Int operator=GET_PROPERTY
                $this: GET_VAR t type=OurTest operator=null
              arg1: CONST Int type=kotlin.Int value='56'
          then: RETURN type=kotlin.Nothing from=box
            STRING_CONCATENATION type=kotlin.String
              CONST String type=kotlin.String value='fail 1: '
              CALL .<get-size> type=kotlin.Int operator=GET_PROPERTY
                $this: GET_VAR t type=OurTest operator=null
        WHEN type=kotlin.Unit operator=IF
          if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
              arg0: CALL .<get-size> type=kotlin.Int operator=GET_PROPERTY
                $this: GET_VAR x type=kotlin.collections.MutableCollection<kotlin.String> operator=null
              arg1: CONST Int type=kotlin.Int value='56'
          then: RETURN type=kotlin.Nothing from=box
            STRING_CONCATENATION type=kotlin.String
              CONST String type=kotlin.String value='fail 1: '
              CALL .<get-size> type=kotlin.Int operator=GET_PROPERTY
                $this: GET_VAR x type=kotlin.collections.MutableCollection<kotlin.String> operator=null
        RETURN type=kotlin.Nothing from=box
          CONST String type=kotlin.String value='OK'
