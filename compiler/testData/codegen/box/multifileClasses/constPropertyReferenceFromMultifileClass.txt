MODULE <test-module>
  FILE /1.kt
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        VAR val okRef: kotlin.reflect.KProperty0<kotlin.String>
          CALLABLE_REFERENCE OK type=kotlin.reflect.KProperty0<kotlin.String> operator=null
        VAR val annotations: kotlin.collections.List<kotlin.Annotation>
          CALL .<get-annotations> type=kotlin.collections.List<kotlin.Annotation> operator=GET_PROPERTY
            $this: GET_VAR okRef type=kotlin.reflect.KProperty0<kotlin.String> operator=null
        WHEN type=kotlin.Unit operator=IF
          if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
              arg0: CALL .<get-size> type=kotlin.Int operator=GET_PROPERTY
                $this: GET_VAR annotations type=kotlin.collections.List<kotlin.Annotation> operator=null
              arg1: CONST Int type=kotlin.Int value='1'
          then: BLOCK type=kotlin.Nothing operator=null
            RETURN type=kotlin.Nothing from=box
              STRING_CONCATENATION type=kotlin.String
                CONST String type=kotlin.String value='Failed, annotations: '
                GET_VAR annotations type=kotlin.collections.List<kotlin.Annotation> operator=null
        RETURN type=kotlin.Nothing from=box
          CALL .get type=kotlin.String operator=null
            $this: GET_VAR okRef type=kotlin.reflect.KProperty0<kotlin.String> operator=null
  FILE /2.kt
    CLASS ANNOTATION_CLASS A
      CONSTRUCTOR public constructor A()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          INSTANCE_INITIALIZER_CALL classDescriptor=A
    PROPERTY @a.A() public const val OK: kotlin.String = "OK"
      EXPRESSION_BODY
        CONST String type=kotlin.String value='OK'
