MODULE <test-module>
  FILE /objectSuperConstructorCall.kt
    CLASS CLASS S
      CONSTRUCTOR public constructor S</*0*/ T>(/*0*/ klass: java.lang.Class<T>)
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          SET_BACKING_FIELD klass type=kotlin.Unit operator=null
            receiver: THIS public abstract class S</*0*/ T> type=S<T>
            value: GET_VAR klass type=java.lang.Class<T> operator=INITIALIZE_PROPERTY_FROM_PARAMETER
          INSTANCE_INITIALIZER_CALL classDescriptor=S
      PROPERTY public final val klass: java.lang.Class<T>
        EXPRESSION_BODY
          GET_VAR klass type=java.lang.Class<T> operator=INITIALIZE_PROPERTY_FROM_PARAMETER
      PROPERTY public final val result: kotlin.String!
        EXPRESSION_BODY
          CALL .<get-simpleName> type=kotlin.String! operator=GET_PROPERTY
            $receiver: CALL .<get-klass> type=java.lang.Class<T> operator=GET_PROPERTY
              $this: THIS public abstract class S</*0*/ T> type=S<T>
    CLASS OBJECT OK
      CONSTRUCTOR private constructor OK()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL S
            klass: CALL .<get-java> type=java.lang.Class<OK> operator=GET_PROPERTY
              $receiver: CLASS_REFERENCE OK type=kotlin.reflect.KClass<OK>
          INSTANCE_INITIALIZER_CALL classDescriptor=OK
    CLASS CLASS C
      CONSTRUCTOR public constructor C()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          INSTANCE_INITIALIZER_CALL classDescriptor=C
      CLASS OBJECT Companion
        CONSTRUCTOR private constructor Companion()
          BLOCK_BODY
            DELEGATING_CONSTRUCTOR_CALL S
              klass: CALL .<get-java> type=java.lang.Class<C.Companion> operator=GET_PROPERTY
                $receiver: CLASS_REFERENCE Companion type=kotlin.reflect.KClass<C.Companion>
            INSTANCE_INITIALIZER_CALL classDescriptor=Companion
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        CALL .assertEquals type=kotlin.Unit operator=null
          expected: CONST String type=kotlin.String value='Companion'
          actual: CALL .<get-result> type=kotlin.String! operator=GET_PROPERTY
            $this: GET_OBJECT Companion type=C.Companion
        RETURN type=kotlin.Nothing from=box
          TYPE_OP operator=IMPLICIT_NOTNULL typeOperand=kotlin.String
            CALL .<get-result> type=kotlin.String! operator=GET_PROPERTY
              $this: GET_OBJECT OK type=OK
