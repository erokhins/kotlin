MODULE <test-module>
  FILE /javaIntrinsicWithSideEffect.kt
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        VAR var x: kotlin.Int
          CONST Int type=kotlin.Int value='42'
        VAR val k: java.lang.Class<kotlin.Int>
          CALL .<get-java> type=java.lang.Class<kotlin.Int> operator=GET_PROPERTY
            $receiver: GET_CLASS type=kotlin.reflect.KClass<kotlin.Int>
              BLOCK type=kotlin.Int operator=POSTFIX_INCR
                VAR val tmp0: kotlin.Int
                  GET_VAR x type=kotlin.Int operator=POSTFIX_INCR
                SET_VAR x type=kotlin.Unit operator=POSTFIX_INCR
                  CALL .inc type=kotlin.Int operator=POSTFIX_INCR
                    $this: GET_VAR tmp0 type=kotlin.Int operator=null
                GET_VAR tmp0 type=kotlin.Int operator=null
        WHEN type=kotlin.Unit operator=IF
          if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
              arg0: GET_VAR k type=java.lang.Class<kotlin.Int> operator=null
              arg1: CALL .<get-java> type=java.lang.Class<kotlin.Int> operator=GET_PROPERTY
                $receiver: CLASS_REFERENCE Int type=kotlin.reflect.KClass<kotlin.Int>
          then: RETURN type=kotlin.Nothing from=box
            STRING_CONCATENATION type=kotlin.String
              CONST String type=kotlin.String value='Fail 1: '
              GET_VAR k type=java.lang.Class<kotlin.Int> operator=null
        WHEN type=kotlin.Unit operator=IF
          if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
              arg0: GET_VAR x type=kotlin.Int operator=null
              arg1: CONST Int type=kotlin.Int value='43'
          then: RETURN type=kotlin.Nothing from=box
            STRING_CONCATENATION type=kotlin.String
              CONST String type=kotlin.String value='Fail 2: '
              GET_VAR x type=kotlin.Int operator=null
              CONST String type=kotlin.String value=' (side effect should have taken place)'
        RETURN type=kotlin.Nothing from=box
          CONST String type=kotlin.String value='OK'
