MODULE <test-module>
  FILE /simpleConstructorAnnotation.kt
    CLASS ANNOTATION_CLASS Primary
      CONSTRUCTOR public constructor Primary()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          INSTANCE_INITIALIZER_CALL classDescriptor=Primary
    CLASS ANNOTATION_CLASS Secondary
      CONSTRUCTOR public constructor Secondary()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          INSTANCE_INITIALIZER_CALL classDescriptor=Secondary
    CLASS CLASS C
      CONSTRUCTOR @Primary() public constructor C()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          INSTANCE_INITIALIZER_CALL classDescriptor=C
      CONSTRUCTOR @Secondary() public constructor C(/*0*/ s: kotlin.String)
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL C
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        VAR val ans: kotlin.collections.List<kotlin.String!>
          CALL .sorted type=kotlin.collections.List<kotlin.String!> operator=null
            $receiver: CALL .map type=kotlin.collections.List<kotlin.String!> operator=null
              $receiver: CALL .<get-constructors> type=kotlin.collections.Collection<kotlin.reflect.KFunction<C>> operator=GET_PROPERTY
                $this: CLASS_REFERENCE C type=kotlin.reflect.KClass<C>
              transform: BLOCK type=(kotlin.reflect.KFunction<C>) -> kotlin.String! operator=LAMBDA
                FUN local final fun <anonymous>(/*0*/ it: kotlin.reflect.KFunction<C>): kotlin.String!
                  BLOCK_BODY
                    RETURN type=kotlin.Nothing from=<anonymous>
                      CALL .<get-simpleName> type=kotlin.String! operator=GET_PROPERTY
                        $receiver: CALL .<get-java> type=java.lang.Class<out kotlin.Annotation> operator=GET_PROPERTY
                          $receiver: CALL .<get-annotationClass> type=kotlin.reflect.KClass<out kotlin.Annotation> operator=GET_PROPERTY
                            $receiver: CALL .single type=kotlin.Annotation operator=null
                              $receiver: CALL .<get-annotations> type=kotlin.collections.List<kotlin.Annotation> operator=GET_PROPERTY
                                $this: GET_VAR it type=kotlin.reflect.KFunction<C> operator=null
                CALLABLE_REFERENCE <anonymous> type=(kotlin.reflect.KFunction<C>) -> kotlin.String! operator=LAMBDA
        WHEN type=kotlin.Unit operator=IF
          if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
              arg0: GET_VAR ans type=kotlin.collections.List<kotlin.String!> operator=null
              arg1: CALL .listOf type=kotlin.collections.List<kotlin.String> operator=null
                elements: VARARG type=Array<out String> varargElementType=String
                  CONST String type=kotlin.String value='Primary'
                  CONST String type=kotlin.String value='Secondary'
          then: RETURN type=kotlin.Nothing from=box
            STRING_CONCATENATION type=kotlin.String
              CONST String type=kotlin.String value='Fail: '
              GET_VAR ans type=kotlin.collections.List<kotlin.String!> operator=null
        RETURN type=kotlin.Nothing from=box
          CONST String type=kotlin.String value='OK'
