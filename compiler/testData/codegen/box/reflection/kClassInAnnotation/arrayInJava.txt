MODULE <test-module>
  FILE /array.kt
    CLASS ANNOTATION_CLASS Ann
      CONSTRUCTOR public constructor Ann(/*0*/ args: kotlin.Array<kotlin.reflect.KClass<*>>)
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          SET_BACKING_FIELD args type=kotlin.Unit operator=null
            receiver: THIS @kotlin.annotation.Retention(value = AnnotationRetention.RUNTIME) public final annotation class Ann : kotlin.Annotation type=Ann
            value: GET_VAR args type=kotlin.Array<kotlin.reflect.KClass<*>> operator=INITIALIZE_PROPERTY_FROM_PARAMETER
          INSTANCE_INITIALIZER_CALL classDescriptor=Ann
      PROPERTY public final val args: kotlin.Array<kotlin.reflect.KClass<*>>
        EXPRESSION_BODY
          GET_VAR args type=kotlin.Array<kotlin.reflect.KClass<*>> operator=INITIALIZE_PROPERTY_FROM_PARAMETER
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        VAR val args: kotlin.Array<kotlin.reflect.KClass<*>>
          CALL .<get-args> type=kotlin.Array<kotlin.reflect.KClass<*>> operator=GET_PROPERTY
            $this: TYPE_OP operator=IMPLICIT_NOTNULL typeOperand=Ann
              CALL .getAnnotation type=Ann! operator=null
                $this: CALL .<get-java> type=java.lang.Class<Test> operator=GET_PROPERTY
                  $receiver: CLASS_REFERENCE Test type=kotlin.reflect.KClass<Test>
                p0: CALL .<get-java> type=java.lang.Class<Ann> operator=GET_PROPERTY
                  $receiver: CLASS_REFERENCE Ann type=kotlin.reflect.KClass<Ann>
        VAR val argName1: kotlin.String
          BLOCK type=kotlin.String operator=ELVIS
            VAR val tmp0_elvis_lhs: kotlin.String!
              CALL .<get-simpleName> type=kotlin.String! operator=GET_PROPERTY
                $receiver: CALL .<get-java> type=java.lang.Class<out kotlin.Any> operator=GET_PROPERTY
                  $receiver: CALL .get type=kotlin.reflect.KClass<*> operator=GET_ARRAY_ELEMENT
                    $this: GET_VAR args type=kotlin.Array<kotlin.reflect.KClass<*>> operator=null
                    index: CONST Int type=kotlin.Int value='0'
            WHEN type=kotlin.String operator=null
              if: CALL .EQEQ type=kotlin.Boolean operator=EQEQ
                arg0: GET_VAR tmp0_elvis_lhs type=kotlin.String! operator=null
                arg1: CONST Null type=kotlin.Nothing? value='null'
              then: CONST String type=kotlin.String value='fail 1'
              else: TYPE_OP operator=IMPLICIT_NOTNULL typeOperand=kotlin.String
                GET_VAR tmp0_elvis_lhs type=kotlin.String! operator=null
        VAR val argName2: kotlin.String
          BLOCK type=kotlin.String operator=ELVIS
            VAR val tmp1_elvis_lhs: kotlin.String!
              CALL .<get-simpleName> type=kotlin.String! operator=GET_PROPERTY
                $receiver: CALL .<get-java> type=java.lang.Class<out kotlin.Any> operator=GET_PROPERTY
                  $receiver: CALL .get type=kotlin.reflect.KClass<*> operator=GET_ARRAY_ELEMENT
                    $this: GET_VAR args type=kotlin.Array<kotlin.reflect.KClass<*>> operator=null
                    index: CONST Int type=kotlin.Int value='1'
            WHEN type=kotlin.String operator=null
              if: CALL .EQEQ type=kotlin.Boolean operator=EQEQ
                arg0: GET_VAR tmp1_elvis_lhs type=kotlin.String! operator=null
                arg1: CONST Null type=kotlin.Nothing? value='null'
              then: CONST String type=kotlin.String value='fail 2'
              else: TYPE_OP operator=IMPLICIT_NOTNULL typeOperand=kotlin.String
                GET_VAR tmp1_elvis_lhs type=kotlin.String! operator=null
        RETURN type=kotlin.Nothing from=box
          CALL .plus type=kotlin.String operator=PLUS
            $this: GET_VAR argName1 type=kotlin.String operator=null
            other: GET_VAR argName2 type=kotlin.String operator=null
