MODULE <test-module>
  FILE /reifiedTypeJavaClass.kt
    CLASS CLASS Klass
      CONSTRUCTOR public constructor Klass()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          INSTANCE_INITIALIZER_CALL classDescriptor=Klass
    FUN public inline fun </*0*/ reified T : kotlin.Any> simpleName(): kotlin.String
      BLOCK_BODY
        RETURN type=kotlin.Nothing from=simpleName
          TYPE_OP operator=IMPLICIT_NOTNULL typeOperand=kotlin.String
            CALL .getSimpleName type=kotlin.String! operator=null
              $this: CALL .<get-java> type=java.lang.Class<T> operator=GET_PROPERTY
                $receiver: CLASS_REFERENCE T type=kotlin.reflect.KClass<T>
    FUN public inline fun </*0*/ reified T : kotlin.Any> simpleName2(): kotlin.String
      BLOCK_BODY
        VAR val kClass: kotlin.reflect.KClass<T>
          CLASS_REFERENCE T type=kotlin.reflect.KClass<T>
        RETURN type=kotlin.Nothing from=simpleName2
          TYPE_OP operator=IMPLICIT_NOTNULL typeOperand=kotlin.String
            CALL .getSimpleName type=kotlin.String! operator=null
              $this: CALL .<get-java> type=java.lang.Class<T> operator=GET_PROPERTY
                $receiver: GET_VAR kClass type=kotlin.reflect.KClass<T> operator=null
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        CALL .assertEquals type=kotlin.Unit operator=null
          expected: CONST String type=kotlin.String value='Integer'
          actual: CALL .simpleName type=kotlin.String operator=null
        CALL .assertEquals type=kotlin.Unit operator=null
          expected: CONST String type=kotlin.String value='Integer'
          actual: CALL .simpleName2 type=kotlin.String operator=null
        CALL .assertEquals type=kotlin.Unit operator=null
          expected: CONST String type=kotlin.String value='Klass'
          actual: CALL .simpleName type=kotlin.String operator=null
        RETURN type=kotlin.Nothing from=box
          CONST String type=kotlin.String value='OK'
