MODULE <test-module>
  FILE /starProjectedType.kt
    CLASS CLASS Foo
      CONSTRUCTOR public constructor Foo</*0*/ K, /*1*/ V>()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          INSTANCE_INITIALIZER_CALL classDescriptor=Foo
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        VAR val foo: kotlin.reflect.KType
          CALL .<get-starProjectedType> type=kotlin.reflect.KType operator=GET_PROPERTY
            $receiver: CLASS_REFERENCE Foo type=kotlin.reflect.KClass<Foo<*, *>>
        CALL .assertEquals type=kotlin.Unit operator=null
          expected: CLASS_REFERENCE Foo type=kotlin.reflect.KClass<Foo<*, *>>
          actual: CALL .<get-classifier> type=kotlin.reflect.KClassifier? operator=GET_PROPERTY
            $this: GET_VAR foo type=kotlin.reflect.KType operator=null
        CALL .assertEquals type=kotlin.Unit operator=null
          expected: CALL .listOf type=kotlin.collections.List<kotlin.reflect.KTypeProjection> operator=null
            elements: VARARG type=Array<out KTypeProjection> varargElementType=KTypeProjection
              CALL .<get-STAR> type=kotlin.reflect.KTypeProjection operator=GET_PROPERTY
                $this: GET_OBJECT Companion type=kotlin.reflect.KTypeProjection.Companion
              CALL .<get-STAR> type=kotlin.reflect.KTypeProjection operator=GET_PROPERTY
                $this: GET_OBJECT Companion type=kotlin.reflect.KTypeProjection.Companion
          actual: CALL .<get-arguments> type=kotlin.collections.List<kotlin.reflect.KTypeProjection> operator=GET_PROPERTY
            $this: GET_VAR foo type=kotlin.reflect.KType operator=null
        CALL .assertEquals type=kotlin.Unit operator=null
          expected: GET_VAR foo type=kotlin.reflect.KType operator=null
          actual: CALL .createType type=kotlin.reflect.KType operator=null
            $receiver: CLASS_REFERENCE Foo type=kotlin.reflect.KClass<Foo<*, *>>
            arguments: CALL .listOf type=kotlin.collections.List<kotlin.reflect.KTypeProjection> operator=null
              elements: VARARG type=Array<out KTypeProjection> varargElementType=KTypeProjection
                CALL .<get-STAR> type=kotlin.reflect.KTypeProjection operator=GET_PROPERTY
                  $this: GET_OBJECT Companion type=kotlin.reflect.KTypeProjection.Companion
                CALL .<get-STAR> type=kotlin.reflect.KTypeProjection operator=GET_PROPERTY
                  $this: GET_OBJECT Companion type=kotlin.reflect.KTypeProjection.Companion
        CALL .assertEquals type=kotlin.Unit operator=null
          expected: CLASS_REFERENCE String type=kotlin.reflect.KClass<kotlin.String>
          actual: CALL .<get-classifier> type=kotlin.reflect.KClassifier? operator=GET_PROPERTY
            $this: CALL .<get-starProjectedType> type=kotlin.reflect.KType operator=GET_PROPERTY
              $receiver: CLASS_REFERENCE String type=kotlin.reflect.KClass<kotlin.String>
        CALL .assertEquals type=kotlin.Unit operator=null
          expected: CALL .listOf type=kotlin.collections.List<kotlin.reflect.KTypeProjection> operator=null
          actual: CALL .<get-arguments> type=kotlin.collections.List<kotlin.reflect.KTypeProjection> operator=GET_PROPERTY
            $this: CALL .<get-starProjectedType> type=kotlin.reflect.KType operator=GET_PROPERTY
              $receiver: CLASS_REFERENCE String type=kotlin.reflect.KClass<kotlin.String>
        VAR val tp: kotlin.reflect.KTypeParameter
          CALL .first type=kotlin.reflect.KTypeParameter operator=null
            $receiver: CALL .<get-typeParameters> type=kotlin.collections.List<kotlin.reflect.KTypeParameter> operator=GET_PROPERTY
              $this: CLASS_REFERENCE Foo type=kotlin.reflect.KClass<Foo<*, *>>
        CALL .assertEquals type=kotlin.Unit operator=null
          expected: CALL .createType type=kotlin.reflect.KType operator=null
            $receiver: GET_VAR tp type=kotlin.reflect.KTypeParameter operator=null
          actual: CALL .<get-starProjectedType> type=kotlin.reflect.KType operator=GET_PROPERTY
            $receiver: GET_VAR tp type=kotlin.reflect.KTypeParameter operator=null
        RETURN type=kotlin.Nothing from=box
          CONST String type=kotlin.String value='OK'
