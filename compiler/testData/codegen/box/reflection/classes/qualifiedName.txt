MODULE <test-module>
  FILE /qualifiedName.kt
    CLASS CLASS Klass
      CONSTRUCTOR public constructor Klass()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          INSTANCE_INITIALIZER_CALL classDescriptor=Klass
      CLASS CLASS Nested
        CONSTRUCTOR public constructor Nested()
          BLOCK_BODY
            DELEGATING_CONSTRUCTOR_CALL Any
            INSTANCE_INITIALIZER_CALL classDescriptor=Nested
      CLASS OBJECT Companion
        CONSTRUCTOR private constructor Companion()
          BLOCK_BODY
            DELEGATING_CONSTRUCTOR_CALL Any
            INSTANCE_INITIALIZER_CALL classDescriptor=Companion
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        CALL .assertEquals type=kotlin.Unit operator=null
          expected: CONST String type=kotlin.String value='Klass'
          actual: CALL .<get-qualifiedName> type=kotlin.String? operator=GET_PROPERTY
            $this: CLASS_REFERENCE Klass type=kotlin.reflect.KClass<Klass>
        CALL .assertEquals type=kotlin.Unit operator=null
          expected: CONST String type=kotlin.String value='Klass.Nested'
          actual: CALL .<get-qualifiedName> type=kotlin.String? operator=GET_PROPERTY
            $this: CLASS_REFERENCE Nested type=kotlin.reflect.KClass<Klass.Nested>
        CALL .assertEquals type=kotlin.Unit operator=null
          expected: CONST String type=kotlin.String value='Klass.Companion'
          actual: CALL .<get-qualifiedName> type=kotlin.String? operator=GET_PROPERTY
            $this: CLASS_REFERENCE Companion type=kotlin.reflect.KClass<Klass.Companion>
        CALL .assertEquals type=kotlin.Unit operator=null
          expected: CONST String type=kotlin.String value='kotlin.Any'
          actual: CALL .<get-qualifiedName> type=kotlin.String? operator=GET_PROPERTY
            $this: CLASS_REFERENCE Any type=kotlin.reflect.KClass<kotlin.Any>
        CALL .assertEquals type=kotlin.Unit operator=null
          expected: CONST String type=kotlin.String value='kotlin.Int'
          actual: CALL .<get-qualifiedName> type=kotlin.String? operator=GET_PROPERTY
            $this: CLASS_REFERENCE Int type=kotlin.reflect.KClass<kotlin.Int>
        CALL .assertEquals type=kotlin.Unit operator=null
          expected: CONST String type=kotlin.String value='kotlin.Int.Companion'
          actual: CALL .<get-qualifiedName> type=kotlin.String? operator=GET_PROPERTY
            $this: CLASS_REFERENCE Companion type=kotlin.reflect.KClass<kotlin.Int.Companion>
        CALL .assertEquals type=kotlin.Unit operator=null
          expected: CONST String type=kotlin.String value='kotlin.IntArray'
          actual: CALL .<get-qualifiedName> type=kotlin.String? operator=GET_PROPERTY
            $this: CLASS_REFERENCE IntArray type=kotlin.reflect.KClass<kotlin.IntArray>
        CALL .assertEquals type=kotlin.Unit operator=null
          expected: CONST String type=kotlin.String value='kotlin.collections.List'
          actual: CALL .<get-qualifiedName> type=kotlin.String? operator=GET_PROPERTY
            $this: CLASS_REFERENCE List type=kotlin.reflect.KClass<kotlin.collections.List<*>>
        CALL .assertEquals type=kotlin.Unit operator=null
          expected: CONST String type=kotlin.String value='kotlin.String'
          actual: CALL .<get-qualifiedName> type=kotlin.String? operator=GET_PROPERTY
            $this: CLASS_REFERENCE String type=kotlin.reflect.KClass<kotlin.String>
        CALL .assertEquals type=kotlin.Unit operator=null
          expected: CONST String type=kotlin.String value='kotlin.String'
          actual: CALL .<get-qualifiedName> type=kotlin.String? operator=GET_PROPERTY
            $this: CLASS_REFERENCE String type=kotlin.reflect.KClass<java.lang.String>
        CALL .assertEquals type=kotlin.Unit operator=null
          expected: CONST String type=kotlin.String value='kotlin.Array'
          actual: CALL .<get-qualifiedName> type=kotlin.String? operator=GET_PROPERTY
            $this: CLASS_REFERENCE Array type=kotlin.reflect.KClass<kotlin.Array<kotlin.Any>>
        CALL .assertEquals type=kotlin.Unit operator=null
          expected: CONST String type=kotlin.String value='kotlin.Array'
          actual: CALL .<get-qualifiedName> type=kotlin.String? operator=GET_PROPERTY
            $this: CLASS_REFERENCE Array type=kotlin.reflect.KClass<kotlin.Array<kotlin.Int>>
        CALL .assertEquals type=kotlin.Unit operator=null
          expected: CONST String type=kotlin.String value='kotlin.Array'
          actual: CALL .<get-qualifiedName> type=kotlin.String? operator=GET_PROPERTY
            $this: CLASS_REFERENCE Array type=kotlin.reflect.KClass<kotlin.Array<kotlin.Array<kotlin.String>>>
        CALL .assertEquals type=kotlin.Unit operator=null
          expected: CONST String type=kotlin.String value='java.util.Date'
          actual: CALL .<get-qualifiedName> type=kotlin.String? operator=GET_PROPERTY
            $this: CLASS_REFERENCE Date type=kotlin.reflect.KClass<java.util.Date>
        CALL .assertEquals type=kotlin.Unit operator=null
          expected: CONST String type=kotlin.String value='kotlin.jvm.internal.Ref.ObjectRef'
          actual: CALL .<get-qualifiedName> type=kotlin.String? operator=GET_PROPERTY
            $this: CLASS_REFERENCE ObjectRef type=kotlin.reflect.KClass<kotlin.jvm.internal.Ref.ObjectRef<*>>
        CALL .assertEquals type=kotlin.Unit operator=null
          expected: CONST String type=kotlin.String value='java.lang.Void'
          actual: CALL .<get-qualifiedName> type=kotlin.String? operator=GET_PROPERTY
            $this: CLASS_REFERENCE Void type=kotlin.reflect.KClass<java.lang.Void>
        CLASS CLASS Local
          CONSTRUCTOR public constructor Local()
            BLOCK_BODY
              DELEGATING_CONSTRUCTOR_CALL Any
              INSTANCE_INITIALIZER_CALL classDescriptor=Local
        CALL .assertEquals type=kotlin.Unit operator=null
          expected: CONST Null type=kotlin.Nothing? value='null'
          actual: CALL .<get-qualifiedName> type=kotlin.String? operator=GET_PROPERTY
            $this: CLASS_REFERENCE Local type=kotlin.reflect.KClass<box.Local>
        VAR val o: box.<no name provided>
          BLOCK type=box.<no name provided> operator=OBJECT_LITERAL
            CLASS CLASS <no name provided>
              CONSTRUCTOR public constructor <no name provided>()
                BLOCK_BODY
                  DELEGATING_CONSTRUCTOR_CALL Any
                  INSTANCE_INITIALIZER_CALL classDescriptor=<no name provided>
            CALL .<init> type=box.<no name provided> operator=OBJECT_LITERAL
        CALL .assertEquals type=kotlin.Unit operator=null
          expected: CONST Null type=kotlin.Nothing? value='null'
          actual: CALL .<get-qualifiedName> type=kotlin.String? operator=GET_PROPERTY
            $this: CALL .<get-kotlin> type=kotlin.reflect.KClass<box.<no name provided>> operator=GET_PROPERTY
              $receiver: CALL .<get-javaClass> type=java.lang.Class<box.<no name provided>> operator=GET_PROPERTY
                $receiver: GET_VAR o type=box.<no name provided> operator=null
        RETURN type=kotlin.Nothing from=box
          CONST String type=kotlin.String value='OK'
