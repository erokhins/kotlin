MODULE <test-module>
  FILE /properties.kt
    PROPERTY public const val const: kotlin.String = "const"
      EXPRESSION_BODY
        CONST String type=kotlin.String value='const'
    PROPERTY public val nonConst: kotlin.String = "nonConst"
      EXPRESSION_BODY
        CONST String type=kotlin.String value='nonConst'
    CLASS CLASS A
      CONSTRUCTOR public constructor A()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          INSTANCE_INITIALIZER_CALL classDescriptor=A
      PROPERTY public final lateinit var lateinit: kotlin.Unit
      PROPERTY public final var nonLateinit: kotlin.Unit
        EXPRESSION_BODY
          GET_OBJECT Unit type=kotlin.Unit
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        CALL .assertTrue type=kotlin.Unit operator=null
          actual: CALL .<get-isConst> type=kotlin.Boolean operator=GET_PROPERTY
            $this: CALLABLE_REFERENCE const type=kotlin.reflect.KProperty0<kotlin.String> operator=null
        CALL .assertFalse type=kotlin.Unit operator=null
          actual: CALL .<get-isConst> type=kotlin.Boolean operator=GET_PROPERTY
            $this: CALLABLE_REFERENCE nonConst type=kotlin.reflect.KProperty0<kotlin.String> operator=null
        CALL .assertTrue type=kotlin.Unit operator=null
          actual: CALL .<get-isLateinit> type=kotlin.Boolean operator=GET_PROPERTY
            $this: CALLABLE_REFERENCE lateinit type=kotlin.reflect.KMutableProperty1<A, kotlin.Unit> operator=null
        CALL .assertFalse type=kotlin.Unit operator=null
          actual: CALL .<get-isLateinit> type=kotlin.Boolean operator=GET_PROPERTY
            $this: CALLABLE_REFERENCE nonLateinit type=kotlin.reflect.KMutableProperty1<A, kotlin.Unit> operator=null
        RETURN type=kotlin.Nothing from=box
          CONST String type=kotlin.String value='OK'
