MODULE <test-module>
  FILE /typeToStringInnerGeneric.kt
    CLASS CLASS A
      CONSTRUCTOR public constructor A</*0*/ T1>()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          INSTANCE_INITIALIZER_CALL classDescriptor=A
      CLASS CLASS B
        CONSTRUCTOR public constructor B</*0*/ T2, /*1*/ T3>()
          BLOCK_BODY
            DELEGATING_CONSTRUCTOR_CALL Any
            INSTANCE_INITIALIZER_CALL classDescriptor=B
        CLASS CLASS C
          CONSTRUCTOR public constructor C</*0*/ T4>()
            BLOCK_BODY
              DELEGATING_CONSTRUCTOR_CALL Any
              INSTANCE_INITIALIZER_CALL classDescriptor=C
    FUN public fun foo(): A<kotlin.Int>.B<kotlin.Double, kotlin.Float>.C<kotlin.Long>
      BLOCK_BODY
        BLOCK type=kotlin.Nothing operator=EXCLEXCL
          VAR val tmp0_notnull: kotlin.Nothing?
            CONST Null type=kotlin.Nothing? value='null'
          WHEN type=kotlin.Nothing operator=null
            if: CALL .EQEQ type=kotlin.Boolean operator=EQEQ
              arg0: GET_VAR tmp0_notnull type=kotlin.Nothing? operator=null
              arg1: CONST Null type=kotlin.Nothing? value='null'
            then: CALL .THROW_NPE type=kotlin.Nothing operator=EXCLEXCL
            else: GET_VAR tmp0_notnull type=kotlin.Nothing? operator=null
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        CALL .assertEquals type=kotlin.Unit operator=null
          expected: CONST String type=kotlin.String value='A<kotlin.Int>.B<kotlin.Double, kotlin.Float>.C<kotlin.Long>'
          actual: CALL .toString type=kotlin.String operator=null
            $this: CALL .<get-returnType> type=kotlin.reflect.KType operator=GET_PROPERTY
              $this: CALLABLE_REFERENCE foo type=kotlin.reflect.KFunction0<A<kotlin.Int>.B<kotlin.Double, kotlin.Float>.C<kotlin.Long>> operator=null
        RETURN type=kotlin.Nothing from=box
          CONST String type=kotlin.String value='OK'
