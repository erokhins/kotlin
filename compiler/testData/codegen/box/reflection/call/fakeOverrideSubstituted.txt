MODULE <test-module>
  FILE /fakeOverrideSubstituted.kt
    CLASS CLASS A
      CONSTRUCTOR public constructor A</*0*/ T>(/*0*/ t: T)
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          SET_BACKING_FIELD t type=kotlin.Unit operator=null
            receiver: THIS public open class A</*0*/ T> type=A<T>
            value: GET_VAR t type=T operator=INITIALIZE_PROPERTY_FROM_PARAMETER
          INSTANCE_INITIALIZER_CALL classDescriptor=A
      PROPERTY public final val t: T
        EXPRESSION_BODY
          GET_VAR t type=T operator=INITIALIZE_PROPERTY_FROM_PARAMETER
      FUN public final fun foo(): T
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=foo
            CALL .<get-t> type=T operator=GET_PROPERTY
              $this: THIS public open class A</*0*/ T> type=A<T>
    CLASS CLASS B
      CONSTRUCTOR public constructor B(/*0*/ s: kotlin.String)
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL A
            t: GET_VAR s type=kotlin.String operator=null
          INSTANCE_INITIALIZER_CALL classDescriptor=B
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        VAR val foo: kotlin.reflect.KCallable<*>
          CALL .single type=kotlin.reflect.KCallable<*> operator=null
            $receiver: CALL .<get-members> type=kotlin.collections.Collection<kotlin.reflect.KCallable<*>> operator=GET_PROPERTY
              $this: CLASS_REFERENCE B type=kotlin.reflect.KClass<B>
            predicate: BLOCK type=(kotlin.reflect.KCallable<*>) -> kotlin.Boolean operator=LAMBDA
              FUN local final fun <anonymous>(/*0*/ it: kotlin.reflect.KCallable<*>): kotlin.Boolean
                BLOCK_BODY
                  RETURN type=kotlin.Nothing from=<anonymous>
                    CALL .EQEQ type=kotlin.Boolean operator=EQEQ
                      arg0: CALL .<get-name> type=kotlin.String operator=GET_PROPERTY
                        $this: GET_VAR it type=kotlin.reflect.KCallable<*> operator=null
                      arg1: CONST String type=kotlin.String value='foo'
              CALLABLE_REFERENCE <anonymous> type=(kotlin.reflect.KCallable<*>) -> kotlin.Boolean operator=LAMBDA
        RETURN type=kotlin.Nothing from=box
          TYPE_OP operator=CAST typeOperand=kotlin.String
            CALL .call type=kotlin.Any? operator=null
              $this: GET_VAR foo type=kotlin.reflect.KCallable<*> operator=null
              args: VARARG type=Array<out Any?> varargElementType=Any?
                CALL .<init> type=B operator=null
                  s: CONST String type=kotlin.String value='OK'
