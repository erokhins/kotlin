MODULE <test-module>
  FILE /exceptionHappened.kt
    FUN public fun fail(/*0*/ message: kotlin.String): kotlin.Unit
      BLOCK_BODY
        THROW type=kotlin.Nothing
          CALL .<init> type=java.lang.AssertionError operator=null
            p0: GET_VAR message type=kotlin.String operator=null
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        TRY_CATCH type=kotlin.Unit
          try: BLOCK type=kotlin.Unit operator=null
            CALL .call type=kotlin.Unit operator=null
              $this: CALLABLE_REFERENCE fail type=kotlin.reflect.KFunction1<kotlin.String, kotlin.Unit> operator=null
              args: VARARG type=Array<out Any?> varargElementType=Any?
                CONST String type=kotlin.String value='OK'
          catch e: BLOCK type=kotlin.Nothing operator=null
            RETURN type=kotlin.Nothing from=box
              CALL .toString type=kotlin.String operator=null
                $receiver: CALL .<get-message> type=kotlin.String? operator=GET_PROPERTY
                  $this: TYPE_OP operator=IMPLICIT_NOTNULL typeOperand=kotlin.Throwable
                    CALL .getTargetException type=kotlin.Throwable! operator=null
                      $this: GET_VAR e type=java.lang.reflect.InvocationTargetException operator=null
        RETURN type=kotlin.Nothing from=box
          CONST String type=kotlin.String value='Fail: no exception was thrown'
