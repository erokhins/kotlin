MODULE <test-module>
  FILE /extensionFunction.kt
    FUN public fun kotlin.String.sum(/*0*/ other: kotlin.String = ...): kotlin.String
      other: EXPRESSION_BODY
        CONST String type=kotlin.String value='b'
      BLOCK_BODY
        RETURN type=kotlin.Nothing from=sum
          CALL .plus type=kotlin.String operator=PLUS
            $this: $RECEIVER of: sum type=kotlin.String
            other: GET_VAR other type=kotlin.String operator=null
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        VAR val f: kotlin.reflect.KFunction2<kotlin.String, kotlin.String, kotlin.String>
          CALLABLE_REFERENCE sum type=kotlin.reflect.KFunction2<kotlin.String, kotlin.String, kotlin.String> operator=null
        CALL .assertEquals type=kotlin.Unit operator=null
          expected: CONST String type=kotlin.String value='ab'
          actual: CALL .callBy type=kotlin.String operator=null
            $this: GET_VAR f type=kotlin.reflect.KFunction2<kotlin.String, kotlin.String, kotlin.String> operator=null
            args: CALL .mapOf type=kotlin.collections.Map<kotlin.reflect.KParameter, kotlin.String> operator=null
              pair: CALL .to type=kotlin.Pair<kotlin.reflect.KParameter, kotlin.String> operator=null
                $receiver: CALL .first type=kotlin.reflect.KParameter operator=null
                  $receiver: CALL .<get-parameters> type=kotlin.collections.List<kotlin.reflect.KParameter> operator=GET_PROPERTY
                    $this: GET_VAR f type=kotlin.reflect.KFunction2<kotlin.String, kotlin.String, kotlin.String> operator=null
                that: CONST String type=kotlin.String value='a'
        RETURN type=kotlin.Nothing from=box
          CONST String type=kotlin.String value='OK'
