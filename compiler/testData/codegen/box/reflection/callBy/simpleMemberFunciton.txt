MODULE <test-module>
  FILE /simpleMemberFunciton.kt
    CLASS CLASS A
      CONSTRUCTOR public constructor A(/*0*/ result: kotlin.String = ...)
        result: EXPRESSION_BODY
          CONST String type=kotlin.String value='OK'
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          SET_BACKING_FIELD result type=kotlin.Unit operator=null
            receiver: THIS public final class A type=A
            value: GET_VAR result type=kotlin.String operator=INITIALIZE_PROPERTY_FROM_PARAMETER
          INSTANCE_INITIALIZER_CALL classDescriptor=A
      PROPERTY public final val result: kotlin.String
        EXPRESSION_BODY
          GET_VAR result type=kotlin.String operator=INITIALIZE_PROPERTY_FROM_PARAMETER
      FUN public final fun foo(/*0*/ x: kotlin.Int = ...): kotlin.String
        x: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='42'
        BLOCK_BODY
          CALL .assert type=kotlin.Unit operator=null
            value: CALL .EQEQ type=kotlin.Boolean operator=EQEQ
              arg0: GET_VAR x type=kotlin.Int operator=null
              arg1: CONST Int type=kotlin.Int value='42'
            lazyMessage: BLOCK type=() -> kotlin.Int operator=LAMBDA
              FUN local final fun <anonymous>(): kotlin.Int
                BLOCK_BODY
                  RETURN type=kotlin.Nothing from=<anonymous>
                    GET_VAR x type=kotlin.Int operator=null
              CALLABLE_REFERENCE <anonymous> type=() -> kotlin.Int operator=LAMBDA
          RETURN type=kotlin.Nothing from=foo
            CALL .<get-result> type=kotlin.String operator=GET_PROPERTY
              $this: THIS public final class A type=A
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        RETURN type=kotlin.Nothing from=box
          CALL .callBy type=kotlin.String operator=null
            $this: CALLABLE_REFERENCE foo type=kotlin.reflect.KFunction2<A, kotlin.Int, kotlin.String> operator=null
            args: CALL .mapOf type=kotlin.collections.Map<kotlin.reflect.KParameter, A> operator=null
              pair: CALL .to type=kotlin.Pair<kotlin.reflect.KParameter, A> operator=null
                $receiver: CALL .first type=kotlin.reflect.KParameter operator=null
                  $receiver: CALL .<get-parameters> type=kotlin.collections.List<kotlin.reflect.KParameter> operator=GET_PROPERTY
                    $this: CALLABLE_REFERENCE foo type=kotlin.reflect.KFunction2<A, kotlin.Int, kotlin.String> operator=null
                that: CALL .<init> type=A operator=null
