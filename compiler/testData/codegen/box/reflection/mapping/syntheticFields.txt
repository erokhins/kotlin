MODULE <test-module>
  FILE /syntheticFields.kt
    CLASS ENUM_CLASS A
      CONSTRUCTOR private constructor A()
        BLOCK_BODY
          ENUM_CONSTRUCTOR_CALL Enum super
          INSTANCE_INITIALIZER_CALL classDescriptor=A
      FUN public final /*synthesized*/ fun values(): kotlin.Array<A>
        SYNTHETIC_BODY kind=ENUM_VALUES
      FUN public final /*synthesized*/ fun valueOf(/*0*/ value: kotlin.String): A
        SYNTHETIC_BODY kind=ENUM_VALUEOF
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        BLOCK type=kotlin.Unit operator=FOR_LOOP
          VAR val tmp0_iterator: kotlin.collections.Iterator<java.lang.reflect.Field!>
            CALL .iterator type=kotlin.collections.Iterator<java.lang.reflect.Field!> operator=FOR_LOOP_ITERATOR
              $this: TYPE_OP operator=IMPLICIT_CAST typeOperand=kotlin.Array<java.lang.reflect.Field!>
                TYPE_OP operator=IMPLICIT_NOTNULL typeOperand=kotlin.Array<out java.lang.reflect.Field!>
                  CALL .getDeclaredFields type=kotlin.Array<(out) java.lang.reflect.Field!>! operator=null
                    $this: CALL .<get-java> type=java.lang.Class<A> operator=GET_PROPERTY
                      $receiver: CLASS_REFERENCE A type=kotlin.reflect.KClass<A>
          WHILE label=null operator=FOR_LOOP_INNER_WHILE
            condition: CALL .hasNext type=kotlin.Boolean operator=FOR_LOOP_HAS_NEXT
              $this: GET_VAR tmp0_iterator type=kotlin.collections.Iterator<java.lang.reflect.Field!> operator=null
            body: BLOCK type=kotlin.Unit operator=FOR_LOOP_INNER_WHILE
              VAR val field: java.lang.reflect.Field!
                CALL .next type=java.lang.reflect.Field! operator=FOR_LOOP_NEXT
                  $this: GET_VAR tmp0_iterator type=kotlin.collections.Iterator<java.lang.reflect.Field!> operator=null
              BLOCK type=kotlin.Unit operator=null
                VAR val prop: kotlin.reflect.KProperty<*>?
                  CALL .<get-kotlin> type=kotlin.reflect.KProperty<*>? operator=GET_PROPERTY
                    $receiver: TYPE_OP operator=IMPLICIT_NOTNULL typeOperand=java.lang.reflect.Field
                      GET_VAR field type=java.lang.reflect.Field! operator=null
                WHEN type=kotlin.Unit operator=IF
                  if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
                    arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
                      arg0: GET_VAR prop type=kotlin.reflect.KProperty<*>? operator=null
                      arg1: CONST Null type=kotlin.Nothing? value='null'
                  then: RETURN type=kotlin.Nothing from=box
                    STRING_CONCATENATION type=kotlin.String
                      CONST String type=kotlin.String value='Fail, property found: '
                      GET_VAR prop type=kotlin.reflect.KProperty<*>? operator=null
        RETURN type=kotlin.Nothing from=box
          CONST String type=kotlin.String value='OK'
