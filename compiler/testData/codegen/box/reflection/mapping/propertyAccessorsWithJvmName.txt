MODULE <test-module>
  FILE /propertyAccessorsWithJvmName.kt
    PROPERTY public var state: kotlin.String
      EXPRESSION_BODY
        CONST String type=kotlin.String value='value'
      PROPERTY_GETTER @kotlin.jvm.JvmName(name = "getter") public fun <get-state>(): kotlin.String
      PROPERTY_SETTER @kotlin.jvm.JvmName(name = "setter") public fun <set-state>(/*0*/ <set-?>: kotlin.String): kotlin.Unit
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        VAR val p: kotlin.reflect.KMutableProperty0<kotlin.String>
          CALLABLE_REFERENCE state type=kotlin.reflect.KMutableProperty0<kotlin.String> operator=null
        WHEN type=kotlin.Unit operator=IF
          if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
              arg0: CALL .<get-name> type=kotlin.String operator=GET_PROPERTY
                $this: GET_VAR p type=kotlin.reflect.KMutableProperty0<kotlin.String> operator=null
              arg1: CONST String type=kotlin.String value='state'
          then: RETURN type=kotlin.Nothing from=box
            STRING_CONCATENATION type=kotlin.String
              CONST String type=kotlin.String value='Fail name: '
              CALL .<get-name> type=kotlin.String operator=GET_PROPERTY
                $this: GET_VAR p type=kotlin.reflect.KMutableProperty0<kotlin.String> operator=null
        WHEN type=kotlin.Unit operator=IF
          if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
              arg0: CALL .get type=kotlin.String operator=null
                $this: GET_VAR p type=kotlin.reflect.KMutableProperty0<kotlin.String> operator=null
              arg1: CONST String type=kotlin.String value='value'
          then: RETURN type=kotlin.Nothing from=box
            STRING_CONCATENATION type=kotlin.String
              CONST String type=kotlin.String value='Fail get: '
              CALL .get type=kotlin.String operator=null
                $this: GET_VAR p type=kotlin.reflect.KMutableProperty0<kotlin.String> operator=null
        CALL .set type=kotlin.Unit operator=null
          $this: GET_VAR p type=kotlin.reflect.KMutableProperty0<kotlin.String> operator=null
          value: CONST String type=kotlin.String value='OK'
        VAR val getterName: kotlin.String!
          CALL .getName type=kotlin.String! operator=null
            $this: BLOCK type=java.lang.reflect.Method operator=EXCLEXCL
              VAR val tmp0_notnull: java.lang.reflect.Method?
                CALL .<get-javaGetter> type=java.lang.reflect.Method? operator=GET_PROPERTY
                  $receiver: GET_VAR p type=kotlin.reflect.KMutableProperty0<kotlin.String> operator=null
              WHEN type=java.lang.reflect.Method operator=null
                if: CALL .EQEQ type=kotlin.Boolean operator=EQEQ
                  arg0: GET_VAR tmp0_notnull type=java.lang.reflect.Method? operator=null
                  arg1: CONST Null type=kotlin.Nothing? value='null'
                then: CALL .THROW_NPE type=kotlin.Nothing operator=EXCLEXCL
                else: GET_VAR tmp0_notnull type=java.lang.reflect.Method? operator=null
        WHEN type=kotlin.Unit operator=IF
          if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
              arg0: GET_VAR getterName type=kotlin.String! operator=null
              arg1: CONST String type=kotlin.String value='getter'
          then: RETURN type=kotlin.Nothing from=box
            STRING_CONCATENATION type=kotlin.String
              CONST String type=kotlin.String value='Fail getter name: '
              GET_VAR getterName type=kotlin.String! operator=null
        VAR val setterName: kotlin.String!
          CALL .getName type=kotlin.String! operator=null
            $this: BLOCK type=java.lang.reflect.Method operator=EXCLEXCL
              VAR val tmp1_notnull: java.lang.reflect.Method?
                CALL .<get-javaSetter> type=java.lang.reflect.Method? operator=GET_PROPERTY
                  $receiver: GET_VAR p type=kotlin.reflect.KMutableProperty0<kotlin.String> operator=null
              WHEN type=java.lang.reflect.Method operator=null
                if: CALL .EQEQ type=kotlin.Boolean operator=EQEQ
                  arg0: GET_VAR tmp1_notnull type=java.lang.reflect.Method? operator=null
                  arg1: CONST Null type=kotlin.Nothing? value='null'
                then: CALL .THROW_NPE type=kotlin.Nothing operator=EXCLEXCL
                else: GET_VAR tmp1_notnull type=java.lang.reflect.Method? operator=null
        WHEN type=kotlin.Unit operator=IF
          if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
              arg0: GET_VAR setterName type=kotlin.String! operator=null
              arg1: CONST String type=kotlin.String value='setter'
          then: RETURN type=kotlin.Nothing from=box
            STRING_CONCATENATION type=kotlin.String
              CONST String type=kotlin.String value='Fail setter name: '
              GET_VAR setterName type=kotlin.String! operator=null
        RETURN type=kotlin.Nothing from=box
          CALL .get type=kotlin.String operator=null
            $this: GET_VAR p type=kotlin.reflect.KMutableProperty0<kotlin.String> operator=null
