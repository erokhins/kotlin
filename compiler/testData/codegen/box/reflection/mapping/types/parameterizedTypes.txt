MODULE <test-module>
  FILE /parameterizedTypes.kt
    CLASS CLASS A
      CONSTRUCTOR public constructor A(/*0*/ foo: kotlin.collections.List<kotlin.String>)
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          SET_BACKING_FIELD foo type=kotlin.Unit operator=null
            receiver: THIS public final class A type=A
            value: GET_VAR foo type=kotlin.collections.List<kotlin.String> operator=INITIALIZE_PROPERTY_FROM_PARAMETER
          INSTANCE_INITIALIZER_CALL classDescriptor=A
      PROPERTY private final var foo: kotlin.collections.List<kotlin.String>
        EXPRESSION_BODY
          GET_VAR foo type=kotlin.collections.List<kotlin.String> operator=INITIALIZE_PROPERTY_FROM_PARAMETER
    CLASS OBJECT O
      CONSTRUCTOR private constructor O()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          INSTANCE_INITIALIZER_CALL classDescriptor=O
      PROPERTY @kotlin.jvm.JvmStatic() private final var bar: kotlin.collections.List<kotlin.String>
        EXPRESSION_BODY
          CALL .listOf type=kotlin.collections.List<kotlin.String> operator=null
    FUN public fun topLevel(): kotlin.collections.List<kotlin.String>
      BLOCK_BODY
        RETURN type=kotlin.Nothing from=topLevel
          CALL .listOf type=kotlin.collections.List<kotlin.String> operator=null
    FUN public fun kotlin.Any.extension(): kotlin.collections.List<kotlin.String>
      BLOCK_BODY
        RETURN type=kotlin.Nothing from=extension
          CALL .listOf type=kotlin.collections.List<kotlin.String> operator=null
    FUN public fun assertGenericType(/*0*/ type: kotlin.reflect.KType): kotlin.Unit
      BLOCK_BODY
        VAR val javaType: java.lang.reflect.Type
          CALL .<get-javaType> type=java.lang.reflect.Type operator=GET_PROPERTY
            $receiver: GET_VAR type type=kotlin.reflect.KType operator=null
        WHEN type=kotlin.Unit operator=IF
          if: TYPE_OP operator=NOT_INSTANCEOF typeOperand=java.lang.reflect.ParameterizedType
            GET_VAR javaType type=java.lang.reflect.Type operator=null
          then: BLOCK type=kotlin.Nothing operator=null
            THROW type=kotlin.Nothing
              CALL .<init> type=java.lang.AssertionError operator=null
                p0: STRING_CONCATENATION type=kotlin.String
                  CONST String type=kotlin.String value='Type should be a parameterized type, but was '
                  GET_VAR javaType type=java.lang.reflect.Type operator=null
                  CONST String type=kotlin.String value=' ('
                  CALL .<get-javaClass> type=java.lang.Class<java.lang.reflect.Type> operator=GET_PROPERTY
                    $receiver: GET_VAR javaType type=java.lang.reflect.Type operator=null
                  CONST String type=kotlin.String value=')'
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        VAR val foo: kotlin.reflect.KMutableProperty<*>
          TYPE_OP operator=CAST typeOperand=kotlin.reflect.KMutableProperty<*>
            CALL .single type=kotlin.reflect.KCallable<*> operator=null
              $receiver: CALL .<get-members> type=kotlin.collections.Collection<kotlin.reflect.KCallable<*>> operator=GET_PROPERTY
                $this: CLASS_REFERENCE A type=kotlin.reflect.KClass<A>
              predicate: BLOCK type=(kotlin.reflect.KCallable<*>) -> kotlin.Boolean operator=LAMBDA
                FUN local final fun <anonymous>(/*0*/ it: kotlin.reflect.KCallable<*>): kotlin.Boolean
                  BLOCK_BODY
                    RETURN type=kotlin.Nothing from=<anonymous>
                      CALL .EQEQ type=kotlin.Boolean operator=EQEQ
                        arg0: CALL .<get-name> type=kotlin.String operator=GET_PROPERTY
                          $this: GET_VAR it type=kotlin.reflect.KCallable<*> operator=null
                        arg1: CONST String type=kotlin.String value='foo'
                CALLABLE_REFERENCE <anonymous> type=(kotlin.reflect.KCallable<*>) -> kotlin.Boolean operator=LAMBDA
        CALL .assertGenericType type=kotlin.Unit operator=null
          type: CALL .<get-returnType> type=kotlin.reflect.KType operator=GET_PROPERTY
            $this: GET_VAR foo type=kotlin.reflect.KMutableProperty<*> operator=null
        CALL .assertGenericType type=kotlin.Unit operator=null
          type: CALL .<get-returnType> type=kotlin.reflect.KType operator=GET_PROPERTY
            $this: CALL .<get-getter> type=kotlin.reflect.KProperty.Getter<kotlin.Any?> operator=GET_PROPERTY
              $this: GET_VAR foo type=kotlin.reflect.KMutableProperty<*> operator=null
        CALL .assertGenericType type=kotlin.Unit operator=null
          type: CALL .<get-type> type=kotlin.reflect.KType operator=GET_PROPERTY
            $this: CALL .last type=kotlin.reflect.KParameter operator=null
              $receiver: CALL .<get-parameters> type=kotlin.collections.List<kotlin.reflect.KParameter> operator=GET_PROPERTY
                $this: CALL .<get-setter> type=kotlin.reflect.KMutableProperty.Setter<out kotlin.Any?> operator=GET_PROPERTY
                  $this: GET_VAR foo type=kotlin.reflect.KMutableProperty<*> operator=null
        VAR val bar: kotlin.reflect.KMutableProperty<*>
          TYPE_OP operator=CAST typeOperand=kotlin.reflect.KMutableProperty<*>
            CALL .single type=kotlin.reflect.KCallable<*> operator=null
              $receiver: CALL .<get-members> type=kotlin.collections.Collection<kotlin.reflect.KCallable<*>> operator=GET_PROPERTY
                $this: CLASS_REFERENCE O type=kotlin.reflect.KClass<O>
              predicate: BLOCK type=(kotlin.reflect.KCallable<*>) -> kotlin.Boolean operator=LAMBDA
                FUN local final fun <anonymous>(/*0*/ it: kotlin.reflect.KCallable<*>): kotlin.Boolean
                  BLOCK_BODY
                    RETURN type=kotlin.Nothing from=<anonymous>
                      CALL .EQEQ type=kotlin.Boolean operator=EQEQ
                        arg0: CALL .<get-name> type=kotlin.String operator=GET_PROPERTY
                          $this: GET_VAR it type=kotlin.reflect.KCallable<*> operator=null
                        arg1: CONST String type=kotlin.String value='bar'
                CALLABLE_REFERENCE <anonymous> type=(kotlin.reflect.KCallable<*>) -> kotlin.Boolean operator=LAMBDA
        CALL .assertGenericType type=kotlin.Unit operator=null
          type: CALL .<get-returnType> type=kotlin.reflect.KType operator=GET_PROPERTY
            $this: GET_VAR bar type=kotlin.reflect.KMutableProperty<*> operator=null
        CALL .assertGenericType type=kotlin.Unit operator=null
          type: CALL .<get-returnType> type=kotlin.reflect.KType operator=GET_PROPERTY
            $this: CALL .<get-getter> type=kotlin.reflect.KProperty.Getter<kotlin.Any?> operator=GET_PROPERTY
              $this: GET_VAR bar type=kotlin.reflect.KMutableProperty<*> operator=null
        CALL .assertGenericType type=kotlin.Unit operator=null
          type: CALL .<get-type> type=kotlin.reflect.KType operator=GET_PROPERTY
            $this: CALL .last type=kotlin.reflect.KParameter operator=null
              $receiver: CALL .<get-parameters> type=kotlin.collections.List<kotlin.reflect.KParameter> operator=GET_PROPERTY
                $this: CALL .<get-setter> type=kotlin.reflect.KMutableProperty.Setter<out kotlin.Any?> operator=GET_PROPERTY
                  $this: GET_VAR bar type=kotlin.reflect.KMutableProperty<*> operator=null
        CALL .assertGenericType type=kotlin.Unit operator=null
          type: CALL .<get-returnType> type=kotlin.reflect.KType operator=GET_PROPERTY
            $this: CALLABLE_REFERENCE topLevel type=kotlin.reflect.KFunction0<kotlin.collections.List<kotlin.String>> operator=null
        CALL .assertGenericType type=kotlin.Unit operator=null
          type: CALL .<get-returnType> type=kotlin.reflect.KType operator=GET_PROPERTY
            $this: CALLABLE_REFERENCE extension type=kotlin.reflect.KFunction1<kotlin.Any, kotlin.collections.List<kotlin.String>> operator=null
        CALL .assertGenericType type=kotlin.Unit operator=null
          type: CALL .<get-type> type=kotlin.reflect.KType operator=GET_PROPERTY
            $this: CALL .single type=kotlin.reflect.KParameter operator=null
              $receiver: CALL .<get-parameters> type=kotlin.collections.List<kotlin.reflect.KParameter> operator=GET_PROPERTY
                $this: CALLABLE_REFERENCE <init> type=kotlin.reflect.KFunction1<kotlin.collections.List<kotlin.String>, A> operator=null
        RETURN type=kotlin.Nothing from=box
          CONST String type=kotlin.String value='OK'
