MODULE <test-module>
  FILE /functionParameterNameAndIndex.kt
    FUN public fun foo(/*0*/ bar: kotlin.String): kotlin.Int
      BLOCK_BODY
        RETURN type=kotlin.Nothing from=foo
          CALL .<get-length> type=kotlin.Int operator=GET_PROPERTY
            $this: GET_VAR bar type=kotlin.String operator=null
    CLASS CLASS A
      CONSTRUCTOR public constructor A(/*0*/ c: kotlin.String)
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          SET_BACKING_FIELD c type=kotlin.Unit operator=null
            receiver: THIS public final class A type=A
            value: GET_VAR c type=kotlin.String operator=INITIALIZE_PROPERTY_FROM_PARAMETER
          INSTANCE_INITIALIZER_CALL classDescriptor=A
      PROPERTY public final val c: kotlin.String
        EXPRESSION_BODY
          GET_VAR c type=kotlin.String operator=INITIALIZE_PROPERTY_FROM_PARAMETER
      FUN public final fun foz(/*0*/ baz: kotlin.Int): kotlin.Unit
        BLOCK_BODY
      FUN public final fun kotlin.Double.mext(/*0*/ mez: kotlin.Long): kotlin.Unit
        BLOCK_BODY
    FUN public fun kotlin.Int.qux(/*0*/ zux: kotlin.String): kotlin.Unit
      BLOCK_BODY
    FUN public fun checkParameters(/*0*/ f: kotlin.reflect.KFunction<*>, /*1*/ names: kotlin.collections.List<kotlin.String?>): kotlin.Unit
      BLOCK_BODY
        VAR val params: kotlin.collections.List<kotlin.reflect.KParameter>
          CALL .<get-parameters> type=kotlin.collections.List<kotlin.reflect.KParameter> operator=GET_PROPERTY
            $this: GET_VAR f type=kotlin.reflect.KFunction<*> operator=null
        CALL .assertEquals type=kotlin.Unit operator=null
          expected: GET_VAR names type=kotlin.collections.List<kotlin.String?> operator=null
          actual: CALL .map type=kotlin.collections.List<kotlin.String?> operator=null
            $receiver: GET_VAR params type=kotlin.collections.List<kotlin.reflect.KParameter> operator=null
            transform: BLOCK type=(kotlin.reflect.KParameter) -> kotlin.String? operator=LAMBDA
              FUN local final fun <anonymous>(/*0*/ it: kotlin.reflect.KParameter): kotlin.String?
                BLOCK_BODY
                  RETURN type=kotlin.Nothing from=<anonymous>
                    CALL .<get-name> type=kotlin.String? operator=GET_PROPERTY
                      $this: GET_VAR it type=kotlin.reflect.KParameter operator=null
              CALLABLE_REFERENCE <anonymous> type=(kotlin.reflect.KParameter) -> kotlin.String? operator=LAMBDA
        CALL .assertEquals type=kotlin.Unit operator=null
          expected: CALL .toList type=kotlin.collections.List<kotlin.Int> operator=null
            $receiver: CALL .<get-indices> type=kotlin.ranges.IntRange operator=GET_PROPERTY
              $receiver: GET_VAR params type=kotlin.collections.List<kotlin.reflect.KParameter> operator=null
          actual: CALL .map type=kotlin.collections.List<kotlin.Int> operator=null
            $receiver: GET_VAR params type=kotlin.collections.List<kotlin.reflect.KParameter> operator=null
            transform: BLOCK type=(kotlin.reflect.KParameter) -> kotlin.Int operator=LAMBDA
              FUN local final fun <anonymous>(/*0*/ it: kotlin.reflect.KParameter): kotlin.Int
                BLOCK_BODY
                  RETURN type=kotlin.Nothing from=<anonymous>
                    CALL .<get-index> type=kotlin.Int operator=GET_PROPERTY
                      $this: GET_VAR it type=kotlin.reflect.KParameter operator=null
              CALLABLE_REFERENCE <anonymous> type=(kotlin.reflect.KParameter) -> kotlin.Int operator=LAMBDA
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        CALL .checkParameters type=kotlin.Unit operator=null
          f: CALLABLE_REFERENCE box type=kotlin.reflect.KFunction0<kotlin.String> operator=null
          names: CALL .listOf type=kotlin.collections.List<kotlin.String?> operator=null
        CALL .checkParameters type=kotlin.Unit operator=null
          f: CALLABLE_REFERENCE foo type=kotlin.reflect.KFunction1<kotlin.String, kotlin.Int> operator=null
          names: CALL .listOf type=kotlin.collections.List<kotlin.String> operator=null
            element: CONST String type=kotlin.String value='bar'
        CALL .checkParameters type=kotlin.Unit operator=null
          f: CALLABLE_REFERENCE foz type=kotlin.reflect.KFunction2<A, kotlin.Int, kotlin.Unit> operator=null
          names: CALL .listOf type=kotlin.collections.List<kotlin.String?> operator=null
            elements: VARARG type=Array<out String?> varargElementType=String?
              CONST Null type=kotlin.Nothing? value='null'
              CONST String type=kotlin.String value='baz'
        CALL .checkParameters type=kotlin.Unit operator=null
          f: CALLABLE_REFERENCE qux type=kotlin.reflect.KFunction2<kotlin.Int, kotlin.String, kotlin.Unit> operator=null
          names: CALL .listOf type=kotlin.collections.List<kotlin.String?> operator=null
            elements: VARARG type=Array<out String?> varargElementType=String?
              CONST Null type=kotlin.Nothing? value='null'
              CONST String type=kotlin.String value='zux'
        CALL .checkParameters type=kotlin.Unit operator=null
          f: CALL .single type=kotlin.reflect.KFunction<*> operator=null
            $receiver: CALL .<get-functions> type=kotlin.collections.Collection<kotlin.reflect.KFunction<*>> operator=GET_PROPERTY
              $receiver: CLASS_REFERENCE A type=kotlin.reflect.KClass<A>
            predicate: BLOCK type=(kotlin.reflect.KFunction<*>) -> kotlin.Boolean operator=LAMBDA
              FUN local final fun <anonymous>(/*0*/ it: kotlin.reflect.KFunction<*>): kotlin.Boolean
                BLOCK_BODY
                  RETURN type=kotlin.Nothing from=<anonymous>
                    CALL .EQEQ type=kotlin.Boolean operator=EQEQ
                      arg0: CALL .<get-name> type=kotlin.String operator=GET_PROPERTY
                        $this: GET_VAR it type=kotlin.reflect.KFunction<*> operator=null
                      arg1: CONST String type=kotlin.String value='mext'
              CALLABLE_REFERENCE <anonymous> type=(kotlin.reflect.KFunction<*>) -> kotlin.Boolean operator=LAMBDA
          names: CALL .listOf type=kotlin.collections.List<kotlin.String?> operator=null
            elements: VARARG type=Array<out String?> varargElementType=String?
              CONST Null type=kotlin.Nothing? value='null'
              CONST Null type=kotlin.Nothing? value='null'
              CONST String type=kotlin.String value='mez'
        CALL .checkParameters type=kotlin.Unit operator=null
          f: CALLABLE_REFERENCE <init> type=kotlin.reflect.KFunction1<kotlin.String, A> operator=null
          names: CALL .listOf type=kotlin.collections.List<kotlin.String> operator=null
            element: CONST String type=kotlin.String value='c'
        RETURN type=kotlin.Nothing from=box
          CONST String type=kotlin.String value='OK'
