MODULE <test-module>
  FILE /isMarkedNullable.kt
    CLASS CLASS A
      CONSTRUCTOR public constructor A()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          INSTANCE_INITIALIZER_CALL classDescriptor=A
      FUN public final fun </*0*/ T, /*1*/ U : kotlin.Any> foo(/*0*/ p1: kotlin.String, /*1*/ p2: kotlin.String?, /*2*/ p3: T, /*3*/ p4: U, /*4*/ p5: U?): kotlin.Unit
        BLOCK_BODY
    FUN public fun kotlin.Any?.ext(): kotlin.Unit
      BLOCK_BODY
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        VAR val ps: kotlin.collections.List<kotlin.Boolean>
          CALL .map type=kotlin.collections.List<kotlin.Boolean> operator=null
            $receiver: CALL .<get-parameters> type=kotlin.collections.List<kotlin.reflect.KParameter> operator=GET_PROPERTY
              $this: CALL .single type=kotlin.reflect.KFunction<*> operator=null
                $receiver: CALL .<get-declaredFunctions> type=kotlin.collections.Collection<kotlin.reflect.KFunction<*>> operator=GET_PROPERTY
                  $receiver: CLASS_REFERENCE A type=kotlin.reflect.KClass<A>
            transform: BLOCK type=(kotlin.reflect.KParameter) -> kotlin.Boolean operator=LAMBDA
              FUN local final fun <anonymous>(/*0*/ it: kotlin.reflect.KParameter): kotlin.Boolean
                BLOCK_BODY
                  RETURN type=kotlin.Nothing from=<anonymous>
                    CALL .<get-isMarkedNullable> type=kotlin.Boolean operator=GET_PROPERTY
                      $this: CALL .<get-type> type=kotlin.reflect.KType operator=GET_PROPERTY
                        $this: GET_VAR it type=kotlin.reflect.KParameter operator=null
              CALLABLE_REFERENCE <anonymous> type=(kotlin.reflect.KParameter) -> kotlin.Boolean operator=LAMBDA
        CALL .assertEquals type=kotlin.Unit operator=null
          expected: CALL .listOf type=kotlin.collections.List<kotlin.Boolean> operator=null
            elements: VARARG type=Array<out Boolean> varargElementType=Boolean
              CONST Boolean type=kotlin.Boolean value='false'
              CONST Boolean type=kotlin.Boolean value='false'
              CONST Boolean type=kotlin.Boolean value='true'
              CONST Boolean type=kotlin.Boolean value='false'
              CONST Boolean type=kotlin.Boolean value='false'
              CONST Boolean type=kotlin.Boolean value='true'
          actual: GET_VAR ps type=kotlin.collections.List<kotlin.Boolean> operator=null
        CALL .assertTrue type=kotlin.Unit operator=null
          actual: CALL .<get-isMarkedNullable> type=kotlin.Boolean operator=GET_PROPERTY
            $this: CALL .<get-type> type=kotlin.reflect.KType operator=GET_PROPERTY
              $this: CALL .single type=kotlin.reflect.KParameter operator=null
                $receiver: CALL .<get-parameters> type=kotlin.collections.List<kotlin.reflect.KParameter> operator=GET_PROPERTY
                  $this: CALLABLE_REFERENCE ext type=kotlin.reflect.KFunction1<kotlin.Any?, kotlin.Unit> operator=null
        RETURN type=kotlin.Nothing from=box
          CONST String type=kotlin.String value='OK'
