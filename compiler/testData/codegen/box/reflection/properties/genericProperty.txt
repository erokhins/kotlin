MODULE <test-module>
  FILE /genericProperty.kt
    CLASS CLASS Box
      CONSTRUCTOR public constructor Box</*0*/ T>(/*0*/ element: T)
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          SET_BACKING_FIELD element type=kotlin.Unit operator=null
            receiver: THIS public final data class Box</*0*/ T> type=Box<T>
            value: GET_VAR element type=T operator=INITIALIZE_PROPERTY_FROM_PARAMETER
          INSTANCE_INITIALIZER_CALL classDescriptor=Box
      PROPERTY public final val element: T
        EXPRESSION_BODY
          GET_VAR element type=T operator=INITIALIZE_PROPERTY_FROM_PARAMETER
      FUN public final operator /*synthesized*/ fun component1(): T
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=component1
            CALL .<get-element> type=T operator=GET_PROPERTY
              $this: THIS public final data class Box</*0*/ T> type=Box<T>
      FUN public final /*synthesized*/ fun copy(/*0*/ element: T = ...): Box<T>
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=copy
            CALL .<init> type=Box<T> operator=null
              element: GET_VAR element type=T operator=null
      FUN public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=toString
            STRING_CONCATENATION type=kotlin.String
              CONST String type=kotlin.String value='Box('
              CONST String type=kotlin.String value='element='
              CALL .<get-element> type=T operator=GET_PROPERTY
                $this: THIS public final data class Box</*0*/ T> type=Box<T>
              CONST String type=kotlin.String value=')'
      FUN public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        BLOCK_BODY
          VAR val tmp0_result: kotlin.Int
            CONST Int type=kotlin.Int value='0'
          SET_VAR tmp0_result type=kotlin.Unit operator=EQ
            CALL .hashCode type=kotlin.Int operator=null
              $this: TYPE_OP operator=IMPLICIT_CAST typeOperand=kotlin.Any
                CALL .<get-element> type=T operator=GET_PROPERTY
                  $this: THIS public final data class Box</*0*/ T> type=Box<T>
          RETURN type=kotlin.Nothing from=hashCode
            GET_VAR tmp0_result type=kotlin.Int operator=null
      FUN public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        BLOCK_BODY
          WHEN type=kotlin.Unit operator=null
            if: CALL .EQEQEQ type=kotlin.Boolean operator=EQEQEQ
              arg0: THIS public final data class Box</*0*/ T> type=Box<T>
              arg1: GET_VAR other type=kotlin.Any? operator=null
            then: RETURN type=kotlin.Nothing from=equals
              CONST Boolean type=kotlin.Boolean value='true'
          WHEN type=kotlin.Unit operator=null
            if: TYPE_OP operator=NOT_INSTANCEOF typeOperand=Box<T>
              GET_VAR other type=kotlin.Any? operator=null
            then: RETURN type=kotlin.Nothing from=equals
              CONST Boolean type=kotlin.Boolean value='false'
          VAR val tmp0_other_with_cast: Box<T>
            TYPE_OP operator=CAST typeOperand=Box<T>
              GET_VAR other type=kotlin.Any? operator=null
          WHEN type=kotlin.Unit operator=null
            if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
              arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
                arg0: CALL .<get-element> type=T operator=GET_PROPERTY
                  $this: THIS public final data class Box</*0*/ T> type=Box<T>
                arg1: CALL .<get-element> type=T operator=GET_PROPERTY
                  $this: GET_VAR tmp0_other_with_cast type=Box<T> operator=null
            then: RETURN type=kotlin.Nothing from=equals
              CONST Boolean type=kotlin.Boolean value='false'
          RETURN type=kotlin.Nothing from=equals
            CONST Boolean type=kotlin.Boolean value='true'
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        VAR val p: kotlin.reflect.KProperty1<Box<kotlin.String>, kotlin.String>
          CALLABLE_REFERENCE element type=kotlin.reflect.KProperty1<Box<kotlin.String>, kotlin.String> operator=null
        CALL .assertEquals type=kotlin.Unit operator=null
          expected: CONST String type=kotlin.String value='val Box<T>.element: T'
          actual: CALL .toString type=kotlin.String operator=null
            $this: GET_VAR p type=kotlin.reflect.KProperty1<Box<kotlin.String>, kotlin.String> operator=null
        RETURN type=kotlin.Nothing from=box
          CALL .call type=kotlin.String operator=null
            $this: GET_VAR p type=kotlin.reflect.KProperty1<Box<kotlin.String>, kotlin.String> operator=null
            args: VARARG type=Array<out Any?> varargElementType=Any?
              CALL .<init> type=Box<kotlin.String> operator=null
                element: CONST String type=kotlin.String value='OK'
