MODULE <test-module>
  FILE /allVsDeclared.kt
    CLASS CLASS Super
      CONSTRUCTOR public constructor Super()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          INSTANCE_INITIALIZER_CALL classDescriptor=Super
      PROPERTY public final val a: kotlin.Int = 1
        EXPRESSION_BODY
          CONST Int type=kotlin.Int value='1'
      PROPERTY public final val kotlin.String.b: kotlin.String
        PROPERTY_GETTER public final fun kotlin.String.<get-b>(): kotlin.String
          BLOCK_BODY
            RETURN type=kotlin.Nothing from=<get-b>
              $RECEIVER of: b type=kotlin.String
    CLASS CLASS Sub
      CONSTRUCTOR public constructor Sub()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Super
          INSTANCE_INITIALIZER_CALL classDescriptor=Sub
      PROPERTY public final val c: kotlin.Double = 1.0.toDouble()
        EXPRESSION_BODY
          CONST Double type=kotlin.Double value='1.0'
      PROPERTY public final val kotlin.Char.d: kotlin.Char
        PROPERTY_GETTER public final fun kotlin.Char.<get-d>(): kotlin.Char
          BLOCK_BODY
            RETURN type=kotlin.Nothing from=<get-d>
              $RECEIVER of: d type=kotlin.Char
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        VAR val sub: kotlin.reflect.KClass<Sub>
          CLASS_REFERENCE Sub type=kotlin.reflect.KClass<Sub>
        CALL .assertEquals type=kotlin.Unit operator=null
          expected: CALL .listOf type=kotlin.collections.List<kotlin.String> operator=null
            elements: VARARG type=Array<out String> varargElementType=String
              CONST String type=kotlin.String value='a'
              CONST String type=kotlin.String value='c'
          actual: CALL .sorted type=kotlin.collections.List<kotlin.String> operator=null
            $receiver: CALL .map type=kotlin.collections.List<kotlin.String> operator=null
              $receiver: CALL .<get-memberProperties> type=kotlin.collections.Collection<kotlin.reflect.KProperty1<Sub, *>> operator=GET_PROPERTY
                $receiver: GET_VAR sub type=kotlin.reflect.KClass<Sub> operator=null
              transform: BLOCK type=(kotlin.reflect.KProperty1<Sub, *>) -> kotlin.String operator=LAMBDA
                FUN local final fun <anonymous>(/*0*/ it: kotlin.reflect.KProperty1<Sub, *>): kotlin.String
                  BLOCK_BODY
                    RETURN type=kotlin.Nothing from=<anonymous>
                      CALL .<get-name> type=kotlin.String operator=GET_PROPERTY
                        $this: GET_VAR it type=kotlin.reflect.KProperty1<Sub, *> operator=null
                CALLABLE_REFERENCE <anonymous> type=(kotlin.reflect.KProperty1<Sub, *>) -> kotlin.String operator=LAMBDA
        CALL .assertEquals type=kotlin.Unit operator=null
          expected: CALL .listOf type=kotlin.collections.List<kotlin.String> operator=null
            elements: VARARG type=Array<out String> varargElementType=String
              CONST String type=kotlin.String value='b'
              CONST String type=kotlin.String value='d'
          actual: CALL .sorted type=kotlin.collections.List<kotlin.String> operator=null
            $receiver: CALL .map type=kotlin.collections.List<kotlin.String> operator=null
              $receiver: CALL .<get-memberExtensionProperties> type=kotlin.collections.Collection<kotlin.reflect.KProperty2<Sub, *, *>> operator=GET_PROPERTY
                $receiver: GET_VAR sub type=kotlin.reflect.KClass<Sub> operator=null
              transform: BLOCK type=(kotlin.reflect.KProperty2<Sub, *, *>) -> kotlin.String operator=LAMBDA
                FUN local final fun <anonymous>(/*0*/ it: kotlin.reflect.KProperty2<Sub, *, *>): kotlin.String
                  BLOCK_BODY
                    RETURN type=kotlin.Nothing from=<anonymous>
                      CALL .<get-name> type=kotlin.String operator=GET_PROPERTY
                        $this: GET_VAR it type=kotlin.reflect.KProperty2<Sub, *, *> operator=null
                CALLABLE_REFERENCE <anonymous> type=(kotlin.reflect.KProperty2<Sub, *, *>) -> kotlin.String operator=LAMBDA
        CALL .assertEquals type=kotlin.Unit operator=null
          expected: CALL .listOf type=kotlin.collections.List<kotlin.String> operator=null
            element: CONST String type=kotlin.String value='c'
          actual: CALL .map type=kotlin.collections.List<kotlin.String> operator=null
            $receiver: CALL .<get-declaredMemberProperties> type=kotlin.collections.Collection<kotlin.reflect.KProperty1<Sub, *>> operator=GET_PROPERTY
              $receiver: GET_VAR sub type=kotlin.reflect.KClass<Sub> operator=null
            transform: BLOCK type=(kotlin.reflect.KProperty1<Sub, *>) -> kotlin.String operator=LAMBDA
              FUN local final fun <anonymous>(/*0*/ it: kotlin.reflect.KProperty1<Sub, *>): kotlin.String
                BLOCK_BODY
                  RETURN type=kotlin.Nothing from=<anonymous>
                    CALL .<get-name> type=kotlin.String operator=GET_PROPERTY
                      $this: GET_VAR it type=kotlin.reflect.KProperty1<Sub, *> operator=null
              CALLABLE_REFERENCE <anonymous> type=(kotlin.reflect.KProperty1<Sub, *>) -> kotlin.String operator=LAMBDA
        CALL .assertEquals type=kotlin.Unit operator=null
          expected: CALL .listOf type=kotlin.collections.List<kotlin.String> operator=null
            element: CONST String type=kotlin.String value='d'
          actual: CALL .map type=kotlin.collections.List<kotlin.String> operator=null
            $receiver: CALL .<get-declaredMemberExtensionProperties> type=kotlin.collections.Collection<kotlin.reflect.KProperty2<Sub, *, *>> operator=GET_PROPERTY
              $receiver: GET_VAR sub type=kotlin.reflect.KClass<Sub> operator=null
            transform: BLOCK type=(kotlin.reflect.KProperty2<Sub, *, *>) -> kotlin.String operator=LAMBDA
              FUN local final fun <anonymous>(/*0*/ it: kotlin.reflect.KProperty2<Sub, *, *>): kotlin.String
                BLOCK_BODY
                  RETURN type=kotlin.Nothing from=<anonymous>
                    CALL .<get-name> type=kotlin.String operator=GET_PROPERTY
                      $this: GET_VAR it type=kotlin.reflect.KProperty2<Sub, *, *> operator=null
              CALLABLE_REFERENCE <anonymous> type=(kotlin.reflect.KProperty2<Sub, *, *>) -> kotlin.String operator=LAMBDA
        RETURN type=kotlin.Nothing from=box
          CONST String type=kotlin.String value='OK'
