MODULE <test-module>
  FILE /privateClassVal.kt
    CLASS CLASS Result
      CONSTRUCTOR public constructor Result()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          INSTANCE_INITIALIZER_CALL classDescriptor=Result
      PROPERTY private final val value: kotlin.String = "OK"
        EXPRESSION_BODY
          CONST String type=kotlin.String value='OK'
      FUN public final fun ref(): kotlin.reflect.KProperty1<Result, kotlin.String>
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=ref
            TYPE_OP operator=CAST typeOperand=kotlin.reflect.KProperty1<Result, kotlin.String>
              CALL .single type=kotlin.reflect.KProperty1<Result, *> operator=null
                $receiver: CALL .<get-memberProperties> type=kotlin.collections.Collection<kotlin.reflect.KProperty1<Result, *>> operator=GET_PROPERTY
                  $receiver: CLASS_REFERENCE Result type=kotlin.reflect.KClass<Result>
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        VAR val p: kotlin.reflect.KProperty1<Result, kotlin.String>
          CALL .ref type=kotlin.reflect.KProperty1<Result, kotlin.String> operator=null
            $this: CALL .<init> type=Result operator=null
        TRY_CATCH type=kotlin.Unit
          try: BLOCK type=kotlin.Nothing operator=null
            CALL .get type=kotlin.String operator=null
              $this: GET_VAR p type=kotlin.reflect.KProperty1<Result, kotlin.String> operator=null
              receiver: CALL .<init> type=Result operator=null
            RETURN type=kotlin.Nothing from=box
              CONST String type=kotlin.String value='Fail: private property is accessible by default'
          catch e: BLOCK type=kotlin.Unit operator=null
        CALL .<set-isAccessible> type=kotlin.Unit operator=EQ
          $receiver: GET_VAR p type=kotlin.reflect.KProperty1<Result, kotlin.String> operator=null
          value: CONST Boolean type=kotlin.Boolean value='true'
        VAR val r: kotlin.String
          CALL .get type=kotlin.String operator=null
            $this: GET_VAR p type=kotlin.reflect.KProperty1<Result, kotlin.String> operator=null
            receiver: CALL .<init> type=Result operator=null
        CALL .<set-isAccessible> type=kotlin.Unit operator=EQ
          $receiver: GET_VAR p type=kotlin.reflect.KProperty1<Result, kotlin.String> operator=null
          value: CONST Boolean type=kotlin.Boolean value='false'
        TRY_CATCH type=kotlin.Unit
          try: BLOCK type=kotlin.Nothing operator=null
            CALL .get type=kotlin.String operator=null
              $this: GET_VAR p type=kotlin.reflect.KProperty1<Result, kotlin.String> operator=null
              receiver: CALL .<init> type=Result operator=null
            RETURN type=kotlin.Nothing from=box
              CONST String type=kotlin.String value='Fail: setAccessible(false) had no effect'
          catch e: BLOCK type=kotlin.Unit operator=null
        RETURN type=kotlin.Nothing from=box
          GET_VAR r type=kotlin.String operator=null
