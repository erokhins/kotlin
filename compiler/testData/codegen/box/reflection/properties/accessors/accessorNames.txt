MODULE <test-module>
  FILE /accessorNames.kt
    PROPERTY public var foo: kotlin.String
      EXPRESSION_BODY
        CONST String type=kotlin.String value=''
    PROPERTY public var kotlin.String.bar: kotlin.String
      PROPERTY_GETTER public fun kotlin.String.<get-bar>(): kotlin.String
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=<get-bar>
            $RECEIVER of: bar type=kotlin.String
      PROPERTY_SETTER public fun kotlin.String.<set-bar>(/*0*/ value: kotlin.String): kotlin.Unit
        BLOCK_BODY
    CLASS CLASS A
      CONSTRUCTOR public constructor A(/*0*/ baz: kotlin.Int)
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          SET_BACKING_FIELD baz type=kotlin.Unit operator=null
            receiver: THIS public final class A type=A
            value: GET_VAR baz type=kotlin.Int operator=INITIALIZE_PROPERTY_FROM_PARAMETER
          INSTANCE_INITIALIZER_CALL classDescriptor=A
      PROPERTY public final var baz: kotlin.Int
        EXPRESSION_BODY
          GET_VAR baz type=kotlin.Int operator=INITIALIZE_PROPERTY_FROM_PARAMETER
      PROPERTY public final var kotlin.String.quux: kotlin.String
        PROPERTY_GETTER public final fun kotlin.String.<get-quux>(): kotlin.String
          BLOCK_BODY
            RETURN type=kotlin.Nothing from=<get-quux>
              $RECEIVER of: quux type=kotlin.String
        PROPERTY_SETTER public final fun kotlin.String.<set-quux>(/*0*/ value: kotlin.String): kotlin.Unit
          BLOCK_BODY
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        CALL .assertEquals type=kotlin.Unit operator=null
          expected: CONST String type=kotlin.String value='<get-foo>'
          actual: CALL .<get-name> type=kotlin.String operator=GET_PROPERTY
            $this: CALL .<get-getter> type=kotlin.reflect.KProperty0.Getter<kotlin.String> operator=GET_PROPERTY
              $this: CALLABLE_REFERENCE foo type=kotlin.reflect.KMutableProperty0<kotlin.String> operator=null
        CALL .assertEquals type=kotlin.Unit operator=null
          expected: CONST String type=kotlin.String value='<set-foo>'
          actual: CALL .<get-name> type=kotlin.String operator=GET_PROPERTY
            $this: CALL .<get-setter> type=kotlin.reflect.KMutableProperty0.Setter<kotlin.String> operator=GET_PROPERTY
              $this: CALLABLE_REFERENCE foo type=kotlin.reflect.KMutableProperty0<kotlin.String> operator=null
        CALL .assertEquals type=kotlin.Unit operator=null
          expected: CONST String type=kotlin.String value='<get-bar>'
          actual: CALL .<get-name> type=kotlin.String operator=GET_PROPERTY
            $this: CALL .<get-getter> type=kotlin.reflect.KProperty1.Getter<kotlin.String, kotlin.String> operator=GET_PROPERTY
              $this: CALLABLE_REFERENCE bar type=kotlin.reflect.KMutableProperty1<kotlin.String, kotlin.String> operator=null
        CALL .assertEquals type=kotlin.Unit operator=null
          expected: CONST String type=kotlin.String value='<set-bar>'
          actual: CALL .<get-name> type=kotlin.String operator=GET_PROPERTY
            $this: CALL .<get-setter> type=kotlin.reflect.KMutableProperty1.Setter<kotlin.String, kotlin.String> operator=GET_PROPERTY
              $this: CALLABLE_REFERENCE bar type=kotlin.reflect.KMutableProperty1<kotlin.String, kotlin.String> operator=null
        CALL .assertEquals type=kotlin.Unit operator=null
          expected: CONST String type=kotlin.String value='<get-baz>'
          actual: CALL .<get-name> type=kotlin.String operator=GET_PROPERTY
            $this: CALL .<get-getter> type=kotlin.reflect.KProperty1.Getter<A, kotlin.Int> operator=GET_PROPERTY
              $this: CALLABLE_REFERENCE baz type=kotlin.reflect.KMutableProperty1<A, kotlin.Int> operator=null
        CALL .assertEquals type=kotlin.Unit operator=null
          expected: CONST String type=kotlin.String value='<set-baz>'
          actual: CALL .<get-name> type=kotlin.String operator=GET_PROPERTY
            $this: CALL .<get-setter> type=kotlin.reflect.KMutableProperty1.Setter<A, kotlin.Int> operator=GET_PROPERTY
              $this: CALLABLE_REFERENCE baz type=kotlin.reflect.KMutableProperty1<A, kotlin.Int> operator=null
        VAR val me: kotlin.reflect.KMutableProperty2<A, kotlin.String, kotlin.String>
          TYPE_OP operator=CAST typeOperand=kotlin.reflect.KMutableProperty2<A, kotlin.String, kotlin.String>
            CALL .single type=kotlin.reflect.KProperty2<A, *, *> operator=null
              $receiver: CALL .<get-memberExtensionProperties> type=kotlin.collections.Collection<kotlin.reflect.KProperty2<A, *, *>> operator=GET_PROPERTY
                $receiver: CLASS_REFERENCE A type=kotlin.reflect.KClass<A>
        CALL .assertEquals type=kotlin.Unit operator=null
          expected: CONST String type=kotlin.String value='<get-quux>'
          actual: CALL .<get-name> type=kotlin.String operator=GET_PROPERTY
            $this: CALL .<get-getter> type=kotlin.reflect.KProperty2.Getter<A, kotlin.String, kotlin.String> operator=GET_PROPERTY
              $this: GET_VAR me type=kotlin.reflect.KMutableProperty2<A, kotlin.String, kotlin.String> operator=null
        CALL .assertEquals type=kotlin.Unit operator=null
          expected: CONST String type=kotlin.String value='<set-quux>'
          actual: CALL .<get-name> type=kotlin.String operator=GET_PROPERTY
            $this: CALL .<get-setter> type=kotlin.reflect.KMutableProperty2.Setter<A, kotlin.String, kotlin.String> operator=GET_PROPERTY
              $this: GET_VAR me type=kotlin.reflect.KMutableProperty2<A, kotlin.String, kotlin.String> operator=null
        RETURN type=kotlin.Nothing from=box
          CONST String type=kotlin.String value='OK'
