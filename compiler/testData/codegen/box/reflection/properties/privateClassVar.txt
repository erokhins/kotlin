MODULE <test-module>
  FILE /privateClassVar.kt
    CLASS CLASS A
      CONSTRUCTOR public constructor A()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          INSTANCE_INITIALIZER_CALL classDescriptor=A
      PROPERTY private final var value: kotlin.Int
        EXPRESSION_BODY
          CONST Int type=kotlin.Int value='0'
      FUN public final fun ref(): kotlin.reflect.KMutableProperty1<A, kotlin.Int>
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=ref
            TYPE_OP operator=CAST typeOperand=kotlin.reflect.KMutableProperty1<A, kotlin.Int>
              CALL .single type=kotlin.reflect.KProperty1<A, *> operator=null
                $receiver: CALL .<get-memberProperties> type=kotlin.collections.Collection<kotlin.reflect.KProperty1<A, *>> operator=GET_PROPERTY
                  $receiver: CLASS_REFERENCE A type=kotlin.reflect.KClass<A>
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        VAR val a: A
          CALL .<init> type=A operator=null
        VAR val p: kotlin.reflect.KMutableProperty1<A, kotlin.Int>
          CALL .ref type=kotlin.reflect.KMutableProperty1<A, kotlin.Int> operator=null
            $this: GET_VAR a type=A operator=null
        TRY_CATCH type=kotlin.Unit
          try: BLOCK type=kotlin.Nothing operator=null
            CALL .set type=kotlin.Unit operator=null
              $this: GET_VAR p type=kotlin.reflect.KMutableProperty1<A, kotlin.Int> operator=null
              receiver: GET_VAR a type=A operator=null
              value: CONST Int type=kotlin.Int value='1'
            RETURN type=kotlin.Nothing from=box
              CONST String type=kotlin.String value='Fail: private property is accessible by default'
          catch e: BLOCK type=kotlin.Unit operator=null
        CALL .<set-isAccessible> type=kotlin.Unit operator=EQ
          $receiver: GET_VAR p type=kotlin.reflect.KMutableProperty1<A, kotlin.Int> operator=null
          value: CONST Boolean type=kotlin.Boolean value='true'
        CALL .set type=kotlin.Unit operator=null
          $this: GET_VAR p type=kotlin.reflect.KMutableProperty1<A, kotlin.Int> operator=null
          receiver: GET_VAR a type=A operator=null
          value: CONST Int type=kotlin.Int value='2'
        CALL .get type=kotlin.Int operator=null
          $this: GET_VAR p type=kotlin.reflect.KMutableProperty1<A, kotlin.Int> operator=null
          receiver: GET_VAR a type=A operator=null
        CALL .<set-isAccessible> type=kotlin.Unit operator=EQ
          $receiver: GET_VAR p type=kotlin.reflect.KMutableProperty1<A, kotlin.Int> operator=null
          value: CONST Boolean type=kotlin.Boolean value='false'
        TRY_CATCH type=kotlin.Unit
          try: BLOCK type=kotlin.Nothing operator=null
            CALL .set type=kotlin.Unit operator=null
              $this: GET_VAR p type=kotlin.reflect.KMutableProperty1<A, kotlin.Int> operator=null
              receiver: GET_VAR a type=A operator=null
              value: CONST Int type=kotlin.Int value='3'
            RETURN type=kotlin.Nothing from=box
              CONST String type=kotlin.String value='Fail: setAccessible(false) had no effect'
          catch e: BLOCK type=kotlin.Unit operator=null
        RETURN type=kotlin.Nothing from=box
          CONST String type=kotlin.String value='OK'
