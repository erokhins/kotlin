MODULE <test-module>
  FILE /K.kt
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        CALL .assertEquals type=kotlin.Unit operator=null
          expected: CLASS_REFERENCE String type=kotlin.reflect.KClass<kotlin.String>
          actual: CALL .<get-classifier> type=kotlin.reflect.KClassifier? operator=GET_PROPERTY
            $this: CALL .<get-returnType> type=kotlin.reflect.KType operator=GET_PROPERTY
              $this: CALLABLE_REFERENCE string type=kotlin.reflect.KFunction0<kotlin.String!> operator=null
        CALL .assertEquals type=kotlin.Unit operator=null
          expected: CLASS_REFERENCE List type=kotlin.reflect.KClass<kotlin.collections.List<*>>
          actual: CALL .<get-classifier> type=kotlin.reflect.KClassifier? operator=GET_PROPERTY
            $this: CALL .<get-returnType> type=kotlin.reflect.KType operator=GET_PROPERTY
              $this: CALLABLE_REFERENCE list type=kotlin.reflect.KFunction0<kotlin.collections.(Mutable)List<kotlin.Any!>!> operator=null
        CALL .assertEquals type=kotlin.Unit operator=null
          expected: BLOCK type=java.lang.Class<kotlin.Int> operator=EXCLEXCL
            VAR val tmp0_notnull: java.lang.Class<kotlin.Int>?
              CALL .<get-javaPrimitiveType> type=java.lang.Class<kotlin.Int>? operator=GET_PROPERTY
                $receiver: CLASS_REFERENCE Int type=kotlin.reflect.KClass<kotlin.Int>
            WHEN type=java.lang.Class<kotlin.Int> operator=null
              if: CALL .EQEQ type=kotlin.Boolean operator=EQEQ
                arg0: GET_VAR tmp0_notnull type=java.lang.Class<kotlin.Int>? operator=null
                arg1: CONST Null type=kotlin.Nothing? value='null'
              then: CALL .THROW_NPE type=kotlin.Nothing operator=EXCLEXCL
              else: GET_VAR tmp0_notnull type=java.lang.Class<kotlin.Int>? operator=null
          actual: CALL .<get-java> type=java.lang.Class<out kotlin.Any> operator=GET_PROPERTY
            $receiver: TYPE_OP operator=CAST typeOperand=kotlin.reflect.KClass<*>
              CALL .<get-classifier> type=kotlin.reflect.KClassifier? operator=GET_PROPERTY
                $this: CALL .<get-returnType> type=kotlin.reflect.KType operator=GET_PROPERTY
                  $this: CALLABLE_REFERENCE primitiveInt type=kotlin.reflect.KFunction0<kotlin.Int> operator=null
        CALL .assertEquals type=kotlin.Unit operator=null
          expected: CALL .<get-javaObjectType> type=java.lang.Class<kotlin.Int> operator=GET_PROPERTY
            $receiver: CLASS_REFERENCE Int type=kotlin.reflect.KClass<kotlin.Int>
          actual: CALL .<get-java> type=java.lang.Class<out kotlin.Any> operator=GET_PROPERTY
            $receiver: TYPE_OP operator=CAST typeOperand=kotlin.reflect.KClass<*>
              CALL .<get-classifier> type=kotlin.reflect.KClassifier? operator=GET_PROPERTY
                $this: CALL .<get-returnType> type=kotlin.reflect.KType operator=GET_PROPERTY
                  $this: CALLABLE_REFERENCE wrapperInt type=kotlin.reflect.KFunction0<kotlin.Int!> operator=null
        RETURN type=kotlin.Nothing from=box
          CONST String type=kotlin.String value='OK'
