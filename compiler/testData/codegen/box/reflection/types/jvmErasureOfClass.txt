MODULE <test-module>
  FILE /jvmErasureOfClass.kt
    FUN public fun string(): kotlin.String
      BLOCK_BODY
        BLOCK type=kotlin.Nothing operator=EXCLEXCL
          VAR val tmp0_notnull: kotlin.Nothing?
            CONST Null type=kotlin.Nothing? value='null'
          WHEN type=kotlin.Nothing operator=null
            if: CALL .EQEQ type=kotlin.Boolean operator=EQEQ
              arg0: GET_VAR tmp0_notnull type=kotlin.Nothing? operator=null
              arg1: CONST Null type=kotlin.Nothing? value='null'
            then: CALL .THROW_NPE type=kotlin.Nothing operator=EXCLEXCL
            else: GET_VAR tmp0_notnull type=kotlin.Nothing? operator=null
    FUN public fun array(): kotlin.Array<kotlin.String>
      BLOCK_BODY
        BLOCK type=kotlin.Nothing operator=EXCLEXCL
          VAR val tmp0_notnull: kotlin.Nothing?
            CONST Null type=kotlin.Nothing? value='null'
          WHEN type=kotlin.Nothing operator=null
            if: CALL .EQEQ type=kotlin.Boolean operator=EQEQ
              arg0: GET_VAR tmp0_notnull type=kotlin.Nothing? operator=null
              arg1: CONST Null type=kotlin.Nothing? value='null'
            then: CALL .THROW_NPE type=kotlin.Nothing operator=EXCLEXCL
            else: GET_VAR tmp0_notnull type=kotlin.Nothing? operator=null
    FUN public fun collection(): kotlin.collections.Collection<kotlin.String>
      BLOCK_BODY
        BLOCK type=kotlin.Nothing operator=EXCLEXCL
          VAR val tmp0_notnull: kotlin.Nothing?
            CONST Null type=kotlin.Nothing? value='null'
          WHEN type=kotlin.Nothing operator=null
            if: CALL .EQEQ type=kotlin.Boolean operator=EQEQ
              arg0: GET_VAR tmp0_notnull type=kotlin.Nothing? operator=null
              arg1: CONST Null type=kotlin.Nothing? value='null'
            then: CALL .THROW_NPE type=kotlin.Nothing operator=EXCLEXCL
            else: GET_VAR tmp0_notnull type=kotlin.Nothing? operator=null
    FUN public fun mutableCollection(): kotlin.collections.MutableCollection<kotlin.String>
      BLOCK_BODY
        BLOCK type=kotlin.Nothing operator=EXCLEXCL
          VAR val tmp0_notnull: kotlin.Nothing?
            CONST Null type=kotlin.Nothing? value='null'
          WHEN type=kotlin.Nothing operator=null
            if: CALL .EQEQ type=kotlin.Boolean operator=EQEQ
              arg0: GET_VAR tmp0_notnull type=kotlin.Nothing? operator=null
              arg1: CONST Null type=kotlin.Nothing? value='null'
            then: CALL .THROW_NPE type=kotlin.Nothing operator=EXCLEXCL
            else: GET_VAR tmp0_notnull type=kotlin.Nothing? operator=null
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        CALL .assertEquals type=kotlin.Unit operator=null
          expected: CLASS_REFERENCE String type=kotlin.reflect.KClass<kotlin.String>
          actual: CALL .<get-jvmErasure> type=kotlin.reflect.KClass<*> operator=GET_PROPERTY
            $receiver: CALL .<get-returnType> type=kotlin.reflect.KType operator=GET_PROPERTY
              $this: CALLABLE_REFERENCE string type=kotlin.reflect.KFunction0<kotlin.String> operator=null
        CALL .assertEquals type=kotlin.Unit operator=null
          expected: CLASS_REFERENCE Array type=kotlin.reflect.KClass<kotlin.Array<kotlin.String>>
          actual: CALL .<get-jvmErasure> type=kotlin.reflect.KClass<*> operator=GET_PROPERTY
            $receiver: CALL .<get-returnType> type=kotlin.reflect.KType operator=GET_PROPERTY
              $this: CALLABLE_REFERENCE array type=kotlin.reflect.KFunction0<kotlin.Array<kotlin.String>> operator=null
        CALL .assertEquals type=kotlin.Unit operator=null
          expected: CLASS_REFERENCE Collection type=kotlin.reflect.KClass<kotlin.collections.Collection<*>>
          actual: CALL .<get-jvmErasure> type=kotlin.reflect.KClass<*> operator=GET_PROPERTY
            $receiver: CALL .<get-returnType> type=kotlin.reflect.KType operator=GET_PROPERTY
              $this: CALLABLE_REFERENCE collection type=kotlin.reflect.KFunction0<kotlin.collections.Collection<kotlin.String>> operator=null
        CALL .assertEquals type=kotlin.Unit operator=null
          expected: CLASS_REFERENCE MutableCollection type=kotlin.reflect.KClass<kotlin.collections.MutableCollection<*>>
          actual: CALL .<get-jvmErasure> type=kotlin.reflect.KClass<*> operator=GET_PROPERTY
            $receiver: CALL .<get-returnType> type=kotlin.reflect.KType operator=GET_PROPERTY
              $this: CALLABLE_REFERENCE mutableCollection type=kotlin.reflect.KFunction0<kotlin.collections.MutableCollection<kotlin.String>> operator=null
        RETURN type=kotlin.Nothing from=box
          CONST String type=kotlin.String value='OK'
