MODULE <test-module>
  FILE /overflowLong.kt
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        VAR val a: kotlin.Long = -2147483648.toLong()
          TYPE_OP operator=IMPLICIT_CAST typeOperand=kotlin.Long
            CALL .plus type=kotlin.Int operator=PLUS
              $this: CONST Int type=kotlin.Int value='2147483647'
              other: CONST Int type=kotlin.Int value='1'
        WHEN type=kotlin.Unit operator=IF
          if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
              arg0: GET_VAR a type=kotlin.Long operator=null
              arg1: CONST Long type=kotlin.Long value='-2147483648'
          then: RETURN type=kotlin.Nothing from=box
            CONST String type=kotlin.String value='fail: in this case we should add to ints and than cast the result to long - overflow expected'
        VAR val l1: kotlin.Long = 9223372036854775807.toLong()
          CALL .<get-MAX_VALUE> type=kotlin.Long operator=GET_PROPERTY
            $this: GET_OBJECT Companion type=kotlin.Long.Companion
        VAR val l2: kotlin.Long = -9223372036854775808.toLong()
          CALL .plus type=kotlin.Long operator=PLUS
            $this: GET_VAR l1 type=kotlin.Long operator=null
            other: CONST Int type=kotlin.Int value='1'
        WHEN type=kotlin.Unit operator=IF
          if: CALL .GT0 type=kotlin.Boolean operator=GT
            arg0: CALL .compareTo type=kotlin.Int operator=GT
              $this: GET_VAR l2 type=kotlin.Long operator=null
              other: GET_VAR l1 type=kotlin.Long operator=null
          then: RETURN type=kotlin.Nothing from=box
            CONST String type=kotlin.String value='fail: Long.MAX_VALUE + 1 should overflow to negative.'
        VAR val l3: kotlin.Long = -9223372036854775808.toLong()
          CALL .<get-MIN_VALUE> type=kotlin.Long operator=GET_PROPERTY
            $this: GET_OBJECT Companion type=kotlin.Long.Companion
        VAR val l4: kotlin.Long = 9223372036854775807.toLong()
          CALL .minus type=kotlin.Long operator=MINUS
            $this: GET_VAR l3 type=kotlin.Long operator=null
            other: CONST Int type=kotlin.Int value='1'
        WHEN type=kotlin.Unit operator=IF
          if: CALL .LT0 type=kotlin.Boolean operator=LT
            arg0: CALL .compareTo type=kotlin.Int operator=LT
              $this: GET_VAR l4 type=kotlin.Long operator=null
              other: GET_VAR l3 type=kotlin.Long operator=null
          then: RETURN type=kotlin.Nothing from=box
            CONST String type=kotlin.String value='fail: Long.MIN_VALUE - 1 should overflow to positive.'
        RETURN type=kotlin.Nothing from=box
          CONST String type=kotlin.String value='OK'
