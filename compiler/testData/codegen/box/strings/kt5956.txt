MODULE <test-module>
  FILE /kt5956.kt
    CLASS CLASS Thing
      CONSTRUCTOR public constructor Thing(/*0*/ delegate: kotlin.CharSequence)
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          SET_BACKING_FIELD delegate type=kotlin.Unit operator=null
            receiver: THIS public final class Thing : kotlin.CharSequence type=Thing
            value: GET_VAR delegate type=kotlin.CharSequence operator=INITIALIZE_PROPERTY_FROM_PARAMETER
          INSTANCE_INITIALIZER_CALL classDescriptor=Thing
      PROPERTY public final val delegate: kotlin.CharSequence
        EXPRESSION_BODY
          GET_VAR delegate type=kotlin.CharSequence operator=INITIALIZE_PROPERTY_FROM_PARAMETER
      FUN public open override /*1*/ fun get(/*0*/ index: kotlin.Int): kotlin.Char
        BLOCK_BODY
          THROW type=kotlin.Nothing
            CALL .<init> type=java.lang.UnsupportedOperationException operator=null
      PROPERTY public open override /*1*/ val length: kotlin.Int
        PROPERTY_GETTER public open override /*1*/ fun <get-length>(): kotlin.Int
          BLOCK_BODY
            RETURN type=kotlin.Nothing from=<get-length>
              CONST Int type=kotlin.Int value='0'
      FUN public open override /*1*/ fun subSequence(/*0*/ start: kotlin.Int, /*1*/ end: kotlin.Int): kotlin.CharSequence
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=subSequence
            CALL .subSequence type=kotlin.CharSequence operator=null
              $this: CALL .<get-delegate> type=kotlin.CharSequence operator=GET_PROPERTY
                $this: THIS public final class Thing : kotlin.CharSequence type=Thing
              startIndex: GET_VAR start type=kotlin.Int operator=null
              endIndex: GET_VAR end type=kotlin.Int operator=null
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        VAR val txt: Thing
          CALL .<init> type=Thing operator=null
            delegate: CONST String type=kotlin.String value='hello there'
        VAR val s: kotlin.CharSequence
          CALL .subSequence type=kotlin.CharSequence operator=null
            $this: GET_VAR txt type=Thing operator=null
            start: CONST Int type=kotlin.Int value='0'
            end: CONST Int type=kotlin.Int value='1'
        RETURN type=kotlin.Nothing from=box
          WHEN type=kotlin.String operator=IF
            if: CALL .EQEQ type=kotlin.Boolean operator=EQEQ
              arg0: GET_VAR s type=kotlin.CharSequence operator=null
              arg1: CONST String type=kotlin.String value='h'
            then: CONST String type=kotlin.String value='OK'
            else: STRING_CONCATENATION type=kotlin.String
              CONST String type=kotlin.String value='Fail: '
              GET_VAR s type=kotlin.CharSequence operator=null
