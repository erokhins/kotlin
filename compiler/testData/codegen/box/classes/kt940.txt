MODULE <test-module>
  FILE /kt940.kt
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        VAR val w: box.<no name provided>
          BLOCK type=box.<no name provided> operator=OBJECT_LITERAL
            CLASS CLASS <no name provided>
              CONSTRUCTOR public constructor <no name provided>()
                BLOCK_BODY
                  DELEGATING_CONSTRUCTOR_CALL Any
                  INSTANCE_INITIALIZER_CALL classDescriptor=<no name provided>
              FUN public open override /*1*/ fun compare(/*0*/ o1: kotlin.String?, /*1*/ o2: kotlin.String?): kotlin.Int
                BLOCK_BODY
                  VAR val l1: kotlin.Int
                    BLOCK type=kotlin.Int operator=ELVIS
                      VAR val tmp1_elvis_lhs: kotlin.Int?
                        BLOCK type=kotlin.Int? operator=SAFE_CALL
                          VAR val tmp0_safe_receiver: kotlin.String?
                            GET_VAR o1 type=kotlin.String? operator=null
                          WHEN type=kotlin.Int? operator=SAFE_CALL
                            if: CALL .EQEQ type=kotlin.Boolean operator=EQEQ
                              arg0: GET_VAR tmp0_safe_receiver type=kotlin.String? operator=null
                              arg1: CONST Null type=kotlin.Nothing? value='null'
                            then: CONST Null type=kotlin.Nothing? value='null'
                            else: CALL .<get-length> type=kotlin.Int operator=GET_PROPERTY
                              $this: GET_VAR tmp0_safe_receiver type=kotlin.String? operator=null
                      WHEN type=kotlin.Int operator=null
                        if: CALL .EQEQ type=kotlin.Boolean operator=EQEQ
                          arg0: GET_VAR tmp1_elvis_lhs type=kotlin.Int? operator=null
                          arg1: CONST Null type=kotlin.Nothing? value='null'
                        then: CONST Int type=kotlin.Int value='0'
                        else: GET_VAR tmp1_elvis_lhs type=kotlin.Int? operator=null
                  VAR val l2: kotlin.Int
                    BLOCK type=kotlin.Int operator=ELVIS
                      VAR val tmp3_elvis_lhs: kotlin.Int?
                        BLOCK type=kotlin.Int? operator=SAFE_CALL
                          VAR val tmp2_safe_receiver: kotlin.String?
                            GET_VAR o2 type=kotlin.String? operator=null
                          WHEN type=kotlin.Int? operator=SAFE_CALL
                            if: CALL .EQEQ type=kotlin.Boolean operator=EQEQ
                              arg0: GET_VAR tmp2_safe_receiver type=kotlin.String? operator=null
                              arg1: CONST Null type=kotlin.Nothing? value='null'
                            then: CONST Null type=kotlin.Nothing? value='null'
                            else: CALL .<get-length> type=kotlin.Int operator=GET_PROPERTY
                              $this: GET_VAR tmp2_safe_receiver type=kotlin.String? operator=null
                      WHEN type=kotlin.Int operator=null
                        if: CALL .EQEQ type=kotlin.Boolean operator=EQEQ
                          arg0: GET_VAR tmp3_elvis_lhs type=kotlin.Int? operator=null
                          arg1: CONST Null type=kotlin.Nothing? value='null'
                        then: CONST Int type=kotlin.Int value='0'
                        else: GET_VAR tmp3_elvis_lhs type=kotlin.Int? operator=null
                  RETURN type=kotlin.Nothing from=compare
                    CALL .minus type=kotlin.Int operator=MINUS
                      $this: GET_VAR l1 type=kotlin.Int operator=null
                      other: GET_VAR l2 type=kotlin.Int operator=null
              FUN public open override /*1*/ fun equals(/*0*/ obj: kotlin.Any?): kotlin.Boolean
                BLOCK_BODY
                  RETURN type=kotlin.Nothing from=equals
                    CALL .EQEQEQ type=kotlin.Boolean operator=EQEQEQ
                      arg0: GET_VAR obj type=kotlin.Any? operator=null
                      arg1: THIS local final class <no name provided> : java.util.Comparator<kotlin.String?> type=box.<no name provided>
            CALL .<init> type=box.<no name provided> operator=OBJECT_LITERAL
        CALL .compare type=kotlin.Int operator=null
          $this: GET_VAR w type=box.<no name provided> operator=null
          o1: CONST String type=kotlin.String value='aaa'
          o2: CONST String type=kotlin.String value='bbb'
        RETURN type=kotlin.Nothing from=box
          CONST String type=kotlin.String value='OK'
