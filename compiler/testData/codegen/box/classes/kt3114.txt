MODULE <test-module>
  FILE /kt3114.kt
    CLASS CLASS KeySpan
      CONSTRUCTOR public constructor KeySpan(/*0*/ left: kotlin.String)
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          SET_BACKING_FIELD left type=kotlin.Unit operator=null
            receiver: THIS public final class KeySpan type=KeySpan
            value: GET_VAR left type=kotlin.String operator=INITIALIZE_PROPERTY_FROM_PARAMETER
          INSTANCE_INITIALIZER_CALL classDescriptor=KeySpan
      PROPERTY public final val left: kotlin.String
        EXPRESSION_BODY
          GET_VAR left type=kotlin.String operator=INITIALIZE_PROPERTY_FROM_PARAMETER
      FUN public final fun matches(/*0*/ value: kotlin.String): kotlin.Boolean
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=matches
            WHEN type=kotlin.Boolean operator=ANDAND
              if: CALL .GT0 type=kotlin.Boolean operator=GT
                arg0: CALL .compareTo type=kotlin.Int operator=GT
                  $this: CALL .<get-left> type=kotlin.String operator=GET_PROPERTY
                    $this: THIS public final class KeySpan type=KeySpan
                  other: GET_VAR value type=kotlin.String operator=null
              then: CALL .GT0 type=kotlin.Boolean operator=GT
                arg0: CALL .compareTo type=kotlin.Int operator=GT
                  $this: CALL .<get-left> type=kotlin.String operator=GET_PROPERTY
                    $this: THIS public final class KeySpan type=KeySpan
                  other: GET_VAR value type=kotlin.String operator=null
              else: CONST Boolean type=kotlin.Boolean value='false'
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        CALL .matches type=kotlin.Boolean operator=null
          $this: CALL .<init> type=KeySpan operator=null
            left: CONST String type=kotlin.String value='1'
          value: CONST String type=kotlin.String value='3'
        RETURN type=kotlin.Nothing from=box
          CONST String type=kotlin.String value='OK'
