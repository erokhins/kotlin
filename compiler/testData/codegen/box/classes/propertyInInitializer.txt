MODULE <test-module>
  FILE /propertyInInitializer.kt
    CLASS CLASS Outer
      CONSTRUCTOR public constructor Outer()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          INSTANCE_INITIALIZER_CALL classDescriptor=Outer
      PROPERTY public final val s: kotlin.String = "xyzzy"
        EXPRESSION_BODY
          CONST String type=kotlin.String value='xyzzy'
      CLASS CLASS InnerBase
        CONSTRUCTOR public constructor InnerBase(/*0*/ name: kotlin.String)
          BLOCK_BODY
            DELEGATING_CONSTRUCTOR_CALL Any
            SET_BACKING_FIELD name type=kotlin.Unit operator=null
              receiver: THIS public open inner class InnerBase type=Outer.InnerBase
              value: GET_VAR name type=kotlin.String operator=INITIALIZE_PROPERTY_FROM_PARAMETER
            INSTANCE_INITIALIZER_CALL classDescriptor=InnerBase
        PROPERTY public final val name: kotlin.String
          EXPRESSION_BODY
            GET_VAR name type=kotlin.String operator=INITIALIZE_PROPERTY_FROM_PARAMETER
      CLASS CLASS InnerDerived
        CONSTRUCTOR public constructor InnerDerived()
          BLOCK_BODY
            DELEGATING_CONSTRUCTOR_CALL InnerBase
              $this: THIS public final class Outer type=Outer
              name: CALL .<get-s> type=kotlin.String operator=GET_PROPERTY
                $this: THIS public final class Outer type=Outer
            INSTANCE_INITIALIZER_CALL classDescriptor=InnerDerived
      PROPERTY public final val x: Outer.InnerDerived
        EXPRESSION_BODY
          CALL .<init> type=Outer.InnerDerived operator=null
            $this: THIS public final class Outer type=Outer
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        VAR val o: Outer
          CALL .<init> type=Outer operator=null
        RETURN type=kotlin.Nothing from=box
          WHEN type=kotlin.String operator=IF
            if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
              arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
                arg0: CALL .<get-name> type=kotlin.String operator=GET_PROPERTY
                  $this: CALL .<get-x> type=Outer.InnerDerived operator=GET_PROPERTY
                    $this: GET_VAR o type=Outer operator=null
                arg1: CONST String type=kotlin.String value='xyzzy'
            then: CONST String type=kotlin.String value='fail'
            else: CONST String type=kotlin.String value='OK'
