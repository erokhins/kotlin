MODULE <test-module>
  FILE /implementComparableInSubclass.kt
    CLASS CLASS Base
      CONSTRUCTOR public constructor Base()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          INSTANCE_INITIALIZER_CALL classDescriptor=Base
      PROPERTY public final val x: kotlin.Int = 23
        EXPRESSION_BODY
          CONST Int type=kotlin.Int value='23'
    CLASS CLASS Derived
      CONSTRUCTOR public constructor Derived()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Base
          INSTANCE_INITIALIZER_CALL classDescriptor=Derived
      PROPERTY public final val y: kotlin.Int = 42
        EXPRESSION_BODY
          CONST Int type=kotlin.Int value='42'
      FUN public open override /*1*/ fun compareTo(/*0*/ other: foo.Derived): kotlin.Int
        BLOCK_BODY
          THROW type=kotlin.Nothing
            CALL .<init> type=java.lang.UnsupportedOperationException operator=null
              p0: CONST String type=kotlin.String value='not implemented'
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        VAR val b: foo.Derived
          CALL .<init> type=foo.Derived operator=null
        WHEN type=kotlin.Unit operator=IF
          if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
              arg0: CALL .<get-x> type=kotlin.Int operator=GET_PROPERTY
                $this: GET_VAR b type=foo.Derived operator=null
              arg1: CONST Int type=kotlin.Int value='23'
          then: RETURN type=kotlin.Nothing from=box
            STRING_CONCATENATION type=kotlin.String
              CONST String type=kotlin.String value='fail1: '
              CALL .<get-x> type=kotlin.Int operator=GET_PROPERTY
                $this: GET_VAR b type=foo.Derived operator=null
        WHEN type=kotlin.Unit operator=IF
          if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
              arg0: CALL .<get-y> type=kotlin.Int operator=GET_PROPERTY
                $this: GET_VAR b type=foo.Derived operator=null
              arg1: CONST Int type=kotlin.Int value='42'
          then: RETURN type=kotlin.Nothing from=box
            STRING_CONCATENATION type=kotlin.String
              CONST String type=kotlin.String value='fail2: '
              CALL .<get-y> type=kotlin.Int operator=GET_PROPERTY
                $this: GET_VAR b type=foo.Derived operator=null
        RETURN type=kotlin.Nothing from=box
          CONST String type=kotlin.String value='OK'
