MODULE <test-module>
  FILE /kt1018.kt
    CLASS CLASS StockMarketTableModel
      CONSTRUCTOR public constructor StockMarketTableModel()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          INSTANCE_INITIALIZER_CALL classDescriptor=StockMarketTableModel
      FUN public final fun getColumnCount(): kotlin.Int
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=getColumnCount
            BLOCK type=kotlin.Int operator=EXCLEXCL
              VAR val tmp1_notnull: kotlin.Int?
                BLOCK type=kotlin.Int? operator=SAFE_CALL
                  VAR val tmp0_safe_receiver: kotlin.Array<kotlin.Int?>
                    CALL .<get-COLUMN_TITLES> type=kotlin.Array<kotlin.Int?> operator=GET_PROPERTY
                      $this: THIS public companion object Companion type=StockMarketTableModel.Companion
                  WHEN type=kotlin.Int? operator=SAFE_CALL
                    if: CALL .EQEQ type=kotlin.Boolean operator=EQEQ
                      arg0: GET_VAR tmp0_safe_receiver type=kotlin.Array<kotlin.Int?> operator=null
                      arg1: CONST Null type=kotlin.Nothing? value='null'
                    then: CONST Null type=kotlin.Nothing? value='null'
                    else: CALL .<get-size> type=kotlin.Int operator=GET_PROPERTY
                      $this: GET_VAR tmp0_safe_receiver type=kotlin.Array<kotlin.Int?> operator=null
              WHEN type=kotlin.Int operator=null
                if: CALL .EQEQ type=kotlin.Boolean operator=EQEQ
                  arg0: GET_VAR tmp1_notnull type=kotlin.Int? operator=null
                  arg1: CONST Null type=kotlin.Nothing? value='null'
                then: CALL .THROW_NPE type=kotlin.Nothing operator=EXCLEXCL
                else: GET_VAR tmp1_notnull type=kotlin.Int? operator=null
      CLASS OBJECT Companion
        CONSTRUCTOR private constructor Companion()
          BLOCK_BODY
            DELEGATING_CONSTRUCTOR_CALL Any
            INSTANCE_INITIALIZER_CALL classDescriptor=Companion
        PROPERTY private final val COLUMN_TITLES: kotlin.Array<kotlin.Int?>
          EXPRESSION_BODY
            CALL .arrayOfNulls type=kotlin.Array<kotlin.Int?> operator=null
              size: CONST Int type=kotlin.Int value='10'
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        RETURN type=kotlin.Nothing from=box
          WHEN type=kotlin.String operator=IF
            if: CALL .EQEQ type=kotlin.Boolean operator=EQEQ
              arg0: CALL .getColumnCount type=kotlin.Int operator=null
                $this: CALL .<init> type=StockMarketTableModel operator=null
              arg1: CONST Int type=kotlin.Int value='10'
            then: CONST String type=kotlin.String value='OK'
            else: CONST String type=kotlin.String value='fail'
