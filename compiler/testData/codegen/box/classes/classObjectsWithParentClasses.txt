MODULE <test-module>
  FILE /classObjectsWithParentClasses.kt
    CLASS CLASS Test
      CONSTRUCTOR public constructor Test()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          INSTANCE_INITIALIZER_CALL classDescriptor=Test
      CLASS OBJECT Companion
        CONSTRUCTOR private constructor Companion()
          BLOCK_BODY
            DELEGATING_CONSTRUCTOR_CALL Any
            INSTANCE_INITIALIZER_CALL classDescriptor=Companion
        FUN public final fun testStatic(/*0*/ ic: Test.InnerClass): Test.NotInnerClass
          BLOCK_BODY
            RETURN type=kotlin.Nothing from=testStatic
              CALL .<init> type=Test.NotInnerClass operator=null
                value: CALL .<get-value> type=kotlin.Int operator=GET_PROPERTY
                  $this: GET_VAR ic type=Test.InnerClass operator=null
      FUN public final fun test(): Test.InnerClass
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=test
            CALL .<init> type=Test.InnerClass operator=null
              $this: THIS public open class Test type=Test
              value: CONST Int type=kotlin.Int value='150'
      CLASS CLASS InnerClass
        CONSTRUCTOR public constructor InnerClass(/*0*/ value: kotlin.Int)
          BLOCK_BODY
            DELEGATING_CONSTRUCTOR_CALL Any
            SET_BACKING_FIELD value type=kotlin.Unit operator=null
              receiver: THIS public open inner class InnerClass type=Test.InnerClass
              value: GET_VAR value type=kotlin.Int operator=INITIALIZE_PROPERTY_FROM_PARAMETER
            INSTANCE_INITIALIZER_CALL classDescriptor=InnerClass
        PROPERTY public final val value: kotlin.Int
          EXPRESSION_BODY
            GET_VAR value type=kotlin.Int operator=INITIALIZE_PROPERTY_FROM_PARAMETER
      CLASS CLASS NotInnerClass
        CONSTRUCTOR public constructor NotInnerClass(/*0*/ value: kotlin.Int)
          BLOCK_BODY
            DELEGATING_CONSTRUCTOR_CALL Any
            SET_BACKING_FIELD value type=kotlin.Unit operator=null
              receiver: THIS public open class NotInnerClass type=Test.NotInnerClass
              value: GET_VAR value type=kotlin.Int operator=INITIALIZE_PROPERTY_FROM_PARAMETER
            INSTANCE_INITIALIZER_CALL classDescriptor=NotInnerClass
        PROPERTY public final val value: kotlin.Int
          EXPRESSION_BODY
            GET_VAR value type=kotlin.Int operator=INITIALIZE_PROPERTY_FROM_PARAMETER
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        RETURN type=kotlin.Nothing from=box
          WHEN type=kotlin.String operator=IF
            if: CALL .EQEQ type=kotlin.Boolean operator=EQEQ
              arg0: CALL .<get-value> type=kotlin.Int operator=GET_PROPERTY
                $this: CALL .testStatic type=Test.NotInnerClass operator=null
                  $this: GET_OBJECT Companion type=Test.Companion
                  ic: CALL .test type=Test.InnerClass operator=null
                    $this: CALL .<init> type=Test operator=null
              arg1: CONST Int type=kotlin.Int value='150'
            then: CONST String type=kotlin.String value='OK'
            else: CONST String type=kotlin.String value='FAIL'
