MODULE <test-module>
  FILE /kt3414.kt
    CLASS INTERFACE A
      FUN public abstract fun foo(): kotlin.Int
    CLASS INTERFACE B
      FUN public abstract fun foo(): kotlin.Int
    CLASS CLASS Z
      CONSTRUCTOR public constructor Z(/*0*/ a: A)
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          SET_BACKING_FIELD a type=kotlin.Unit operator=null
            receiver: THIS public final class Z : A, B type=Z
            value: GET_VAR a type=A operator=INITIALIZE_PROPERTY_FROM_PARAMETER
          INSTANCE_INITIALIZER_CALL classDescriptor=Z
      PROPERTY public final val a: A
        EXPRESSION_BODY
          GET_VAR a type=A operator=INITIALIZE_PROPERTY_FROM_PARAMETER
      PROPERTY val `Z$A$delegate`: A
        EXPRESSION_BODY
          GET_VAR a type=A operator=null
      FUN public open override /*2*/ /*delegation*/ fun foo(): kotlin.Int
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=foo
            CALL .foo type=kotlin.Int operator=null
              $this: GET_VAR Z$A$delegate type=A operator=null
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        VAR val s: Z
          CALL .<init> type=Z operator=null
            a: BLOCK type=box.<no name provided> operator=OBJECT_LITERAL
              CLASS CLASS <no name provided>
                CONSTRUCTOR public constructor <no name provided>()
                  BLOCK_BODY
                    DELEGATING_CONSTRUCTOR_CALL Any
                    INSTANCE_INITIALIZER_CALL classDescriptor=<no name provided>
                FUN public open override /*1*/ fun foo(): kotlin.Int
                  BLOCK_BODY
                    RETURN type=kotlin.Nothing from=foo
                      CONST Int type=kotlin.Int value='1'
              CALL .<init> type=box.<no name provided> operator=OBJECT_LITERAL
        RETURN type=kotlin.Nothing from=box
          WHEN type=kotlin.String operator=IF
            if: CALL .EQEQ type=kotlin.Boolean operator=EQEQ
              arg0: CALL .foo type=kotlin.Int operator=null
                $this: GET_VAR s type=Z operator=null
              arg1: CONST Int type=kotlin.Int value='1'
            then: CONST String type=kotlin.String value='OK'
            else: CONST String type=kotlin.String value='fail'
