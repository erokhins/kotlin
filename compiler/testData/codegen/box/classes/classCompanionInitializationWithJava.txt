MODULE <test-module>
  FILE /CompanionInitialization.kt
    CLASS INTERFACE IStatic
    CLASS CLASS Static
      CONSTRUCTOR public constructor Static(/*0*/ x: IStatic)
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          INSTANCE_INITIALIZER_CALL classDescriptor=Static
      FUN public final fun doSth(): kotlin.Unit
        BLOCK_BODY
    CLASS CLASS ConcreteWithStatic
      CONSTRUCTOR public constructor ConcreteWithStatic()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          INSTANCE_INITIALIZER_CALL classDescriptor=ConcreteWithStatic
      CLASS OBJECT Companion
        CONSTRUCTOR private constructor Companion()
          BLOCK_BODY
            DELEGATING_CONSTRUCTOR_CALL Static
              x: CALL .<init> type=ConcreteWithStatic operator=null
            INSTANCE_INITIALIZER_CALL classDescriptor=Companion
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        CALL .doSth type=kotlin.Unit operator=null
          $this: GET_OBJECT Companion type=ConcreteWithStatic.Companion
        VAR val companion: kotlin.Any?
          CALL .getCompanion type=kotlin.Any! operator=null
        WHEN type=kotlin.Unit operator=IF
          if: CALL .EQEQ type=kotlin.Boolean operator=EQEQ
            arg0: GET_VAR companion type=kotlin.Any? operator=null
            arg1: CONST Null type=kotlin.Nothing? value='null'
          then: RETURN type=kotlin.Nothing from=box
            CONST String type=kotlin.String value='fail 1'
        WHEN type=kotlin.Unit operator=IF
          if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
              arg0: GET_VAR companion type=kotlin.Any? operator=null
              arg1: GET_OBJECT Companion type=ConcreteWithStatic.Companion
          then: RETURN type=kotlin.Nothing from=box
            CONST String type=kotlin.String value='fail 2'
        RETURN type=kotlin.Nothing from=box
          CONST String type=kotlin.String value='OK'
