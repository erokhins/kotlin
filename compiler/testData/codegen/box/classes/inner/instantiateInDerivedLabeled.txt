MODULE <test-module>
  FILE /instantiateInDerivedLabeled.kt
    CLASS CLASS A
      CONSTRUCTOR public constructor A(/*0*/ value: kotlin.String)
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          SET_BACKING_FIELD value type=kotlin.Unit operator=null
            receiver: THIS public open class A type=A
            value: GET_VAR value type=kotlin.String operator=INITIALIZE_PROPERTY_FROM_PARAMETER
          INSTANCE_INITIALIZER_CALL classDescriptor=A
      PROPERTY public final val value: kotlin.String
        EXPRESSION_BODY
          GET_VAR value type=kotlin.String operator=INITIALIZE_PROPERTY_FROM_PARAMETER
      CLASS CLASS B
        CONSTRUCTOR public constructor B(/*0*/ s: kotlin.String)
          BLOCK_BODY
            DELEGATING_CONSTRUCTOR_CALL Any
            SET_BACKING_FIELD s type=kotlin.Unit operator=null
              receiver: THIS public final inner class B type=A.B
              value: GET_VAR s type=kotlin.String operator=INITIALIZE_PROPERTY_FROM_PARAMETER
            INSTANCE_INITIALIZER_CALL classDescriptor=B
        PROPERTY public final val s: kotlin.String
          EXPRESSION_BODY
            GET_VAR s type=kotlin.String operator=INITIALIZE_PROPERTY_FROM_PARAMETER
        PROPERTY public final val result: kotlin.String
          EXPRESSION_BODY
            CALL .plus type=kotlin.String operator=PLUS
              $this: CALL .plus type=kotlin.String operator=PLUS
                $this: CALL .<get-value> type=kotlin.String operator=GET_PROPERTY
                  $this: THIS public open class A type=A
                other: CONST String type=kotlin.String value='_'
              other: CALL .<get-s> type=kotlin.String operator=GET_PROPERTY
                $this: THIS public final inner class B type=A.B
    CLASS CLASS C
      CONSTRUCTOR public constructor C()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL A
            value: CONST String type=kotlin.String value='fromC'
          INSTANCE_INITIALIZER_CALL classDescriptor=C
      CLASS CLASS X
        CONSTRUCTOR public constructor X()
          BLOCK_BODY
            DELEGATING_CONSTRUCTOR_CALL A
              value: CONST String type=kotlin.String value='fromX'
            INSTANCE_INITIALIZER_CALL classDescriptor=X
        FUN public final fun classReceiver(): A.B
          BLOCK_BODY
            RETURN type=kotlin.Nothing from=classReceiver
              CALL .<init> type=A.B operator=null
                $this: THIS public final inner class X : A type=C.X
                s: CONST String type=kotlin.String value='OK'
        FUN public final fun superReceiver(): A.B
          BLOCK_BODY
            RETURN type=kotlin.Nothing from=superReceiver
              CALL .<init> superQualifier=A type=A.B operator=null
                $this: THIS public final inner class X : A type=A
                s: CONST String type=kotlin.String value='OK'
        FUN public final fun superXReceiver(): A.B
          BLOCK_BODY
            RETURN type=kotlin.Nothing from=superXReceiver
              CALL .<init> superQualifier=A type=A.B operator=null
                $this: THIS public final inner class X : A type=A
                s: CONST String type=kotlin.String value='OK'
        FUN public final fun superXCastReceiver(): A.B
          BLOCK_BODY
            RETURN type=kotlin.Nothing from=superXCastReceiver
              CALL .<init> type=A.B operator=null
                $this: TYPE_OP operator=CAST typeOperand=A
                  THIS public final inner class X : A type=C.X
                s: CONST String type=kotlin.String value='OK'
        FUN public final fun superCReceiver(): A.B
          BLOCK_BODY
            RETURN type=kotlin.Nothing from=superCReceiver
              CALL .<init> superQualifier=A type=A.B operator=null
                $this: THIS public final class C : A type=A
                s: CONST String type=kotlin.String value='OK'
        FUN public final fun superCCastReceiver(): A.B
          BLOCK_BODY
            RETURN type=kotlin.Nothing from=superCCastReceiver
              CALL .<init> type=A.B operator=null
                $this: TYPE_OP operator=CAST typeOperand=A
                  THIS public final class C : A type=C
                s: CONST String type=kotlin.String value='OK'
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        VAR val receiver: C.X
          CALL .<init> type=C.X operator=null
            $this: CALL .<init> type=C operator=null
        VAR var result: kotlin.String
          CALL .<get-result> type=kotlin.String operator=GET_PROPERTY
            $this: CALL .classReceiver type=A.B operator=null
              $this: GET_VAR receiver type=C.X operator=null
        WHEN type=kotlin.Unit operator=IF
          if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
              arg0: GET_VAR result type=kotlin.String operator=null
              arg1: CONST String type=kotlin.String value='fromX_OK'
          then: RETURN type=kotlin.Nothing from=box
            STRING_CONCATENATION type=kotlin.String
              CONST String type=kotlin.String value='fail 1: '
              GET_VAR result type=kotlin.String operator=null
        SET_VAR result type=kotlin.Unit operator=EQ
          CALL .<get-result> type=kotlin.String operator=GET_PROPERTY
            $this: CALL .superReceiver type=A.B operator=null
              $this: GET_VAR receiver type=C.X operator=null
        WHEN type=kotlin.Unit operator=IF
          if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
              arg0: GET_VAR result type=kotlin.String operator=null
              arg1: CONST String type=kotlin.String value='fromX_OK'
          then: RETURN type=kotlin.Nothing from=box
            STRING_CONCATENATION type=kotlin.String
              CONST String type=kotlin.String value='fail 2: '
              GET_VAR result type=kotlin.String operator=null
        SET_VAR result type=kotlin.Unit operator=EQ
          CALL .<get-result> type=kotlin.String operator=GET_PROPERTY
            $this: CALL .superXReceiver type=A.B operator=null
              $this: GET_VAR receiver type=C.X operator=null
        WHEN type=kotlin.Unit operator=IF
          if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
              arg0: GET_VAR result type=kotlin.String operator=null
              arg1: CONST String type=kotlin.String value='fromX_OK'
          then: RETURN type=kotlin.Nothing from=box
            STRING_CONCATENATION type=kotlin.String
              CONST String type=kotlin.String value='fail 3: '
              GET_VAR result type=kotlin.String operator=null
        SET_VAR result type=kotlin.Unit operator=EQ
          CALL .<get-result> type=kotlin.String operator=GET_PROPERTY
            $this: CALL .superXCastReceiver type=A.B operator=null
              $this: GET_VAR receiver type=C.X operator=null
        WHEN type=kotlin.Unit operator=IF
          if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
              arg0: GET_VAR result type=kotlin.String operator=null
              arg1: CONST String type=kotlin.String value='fromX_OK'
          then: RETURN type=kotlin.Nothing from=box
            STRING_CONCATENATION type=kotlin.String
              CONST String type=kotlin.String value='fail 4: '
              GET_VAR result type=kotlin.String operator=null
        SET_VAR result type=kotlin.Unit operator=EQ
          CALL .<get-result> type=kotlin.String operator=GET_PROPERTY
            $this: CALL .superCReceiver type=A.B operator=null
              $this: GET_VAR receiver type=C.X operator=null
        WHEN type=kotlin.Unit operator=IF
          if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
              arg0: GET_VAR result type=kotlin.String operator=null
              arg1: CONST String type=kotlin.String value='fromC_OK'
          then: RETURN type=kotlin.Nothing from=box
            STRING_CONCATENATION type=kotlin.String
              CONST String type=kotlin.String value='fail 3: '
              GET_VAR result type=kotlin.String operator=null
        SET_VAR result type=kotlin.Unit operator=EQ
          CALL .<get-result> type=kotlin.String operator=GET_PROPERTY
            $this: CALL .superCCastReceiver type=A.B operator=null
              $this: GET_VAR receiver type=C.X operator=null
        WHEN type=kotlin.Unit operator=IF
          if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
              arg0: GET_VAR result type=kotlin.String operator=null
              arg1: CONST String type=kotlin.String value='fromC_OK'
          then: RETURN type=kotlin.Nothing from=box
            STRING_CONCATENATION type=kotlin.String
              CONST String type=kotlin.String value='fail 4: '
              GET_VAR result type=kotlin.String operator=null
        RETURN type=kotlin.Nothing from=box
          CONST String type=kotlin.String value='OK'
