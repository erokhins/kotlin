MODULE <test-module>
  FILE /instantiateInSameClass.kt
    CLASS CLASS C
      CONSTRUCTOR public constructor C(/*0*/ value: kotlin.String = ...)
        value: EXPRESSION_BODY
          CONST String type=kotlin.String value='C'
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          SET_BACKING_FIELD value type=kotlin.Unit operator=null
            receiver: THIS public final class C type=C
            value: GET_VAR value type=kotlin.String operator=INITIALIZE_PROPERTY_FROM_PARAMETER
          INSTANCE_INITIALIZER_CALL classDescriptor=C
      PROPERTY public final val value: kotlin.String
        EXPRESSION_BODY
          GET_VAR value type=kotlin.String operator=INITIALIZE_PROPERTY_FROM_PARAMETER
      CLASS CLASS B
        CONSTRUCTOR public constructor B(/*0*/ s: kotlin.String)
          BLOCK_BODY
            DELEGATING_CONSTRUCTOR_CALL Any
            SET_BACKING_FIELD s type=kotlin.Unit operator=null
              receiver: THIS public final inner class B type=C.B
              value: GET_VAR s type=kotlin.String operator=INITIALIZE_PROPERTY_FROM_PARAMETER
            INSTANCE_INITIALIZER_CALL classDescriptor=B
        PROPERTY public final val s: kotlin.String
          EXPRESSION_BODY
            GET_VAR s type=kotlin.String operator=INITIALIZE_PROPERTY_FROM_PARAMETER
        PROPERTY public final val result: kotlin.String
          EXPRESSION_BODY
            CALL .plus type=kotlin.String operator=PLUS
              $this: CALL .plus type=kotlin.String operator=PLUS
                $this: CALL .<get-value> type=kotlin.String operator=GET_PROPERTY
                  $this: THIS public final class C type=C
                other: CONST String type=kotlin.String value='_'
              other: CALL .<get-s> type=kotlin.String operator=GET_PROPERTY
                $this: THIS public final inner class B type=C.B
      FUN public final fun classReceiver(): C.B
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=classReceiver
            CALL .<init> type=C.B operator=null
              $this: THIS public final class C type=C
              s: CONST String type=kotlin.String value='OK'
      FUN public final fun newCReceiver(): C.B
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=newCReceiver
            CALL .<init> type=C.B operator=null
              $this: CALL .<init> type=C operator=null
                value: CONST String type=kotlin.String value='newC'
              s: CONST String type=kotlin.String value='OK'
      FUN public final fun cReceiver(): C.B
        BLOCK_BODY
          VAR val c: C
            CALL .<init> type=C operator=null
              value: CONST String type=kotlin.String value='newC'
          RETURN type=kotlin.Nothing from=cReceiver
            CALL .<init> type=C.B operator=null
              $this: GET_VAR c type=C operator=null
              s: CONST String type=kotlin.String value='OK'
      FUN public final fun C.extReceiver1(): C.B
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=extReceiver1
            CALL .<init> type=C.B operator=null
              $this: $RECEIVER of: extReceiver1 type=C
              s: CONST String type=kotlin.String value='OK'
      FUN public final fun extReceiver(): C.B
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=extReceiver
            CALL .extReceiver1 type=C.B operator=null
              $this: THIS public final class C type=C
              $receiver: CALL .<init> type=C operator=null
                value: CONST String type=kotlin.String value='newC'
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        VAR val receiver: C
          CALL .<init> type=C operator=null
        VAR var result: kotlin.String
          CALL .<get-result> type=kotlin.String operator=GET_PROPERTY
            $this: CALL .classReceiver type=C.B operator=null
              $this: GET_VAR receiver type=C operator=null
        WHEN type=kotlin.Unit operator=IF
          if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
              arg0: GET_VAR result type=kotlin.String operator=null
              arg1: CONST String type=kotlin.String value='C_OK'
          then: RETURN type=kotlin.Nothing from=box
            STRING_CONCATENATION type=kotlin.String
              CONST String type=kotlin.String value='fail 1: '
              GET_VAR result type=kotlin.String operator=null
        SET_VAR result type=kotlin.Unit operator=EQ
          CALL .<get-result> type=kotlin.String operator=GET_PROPERTY
            $this: CALL .cReceiver type=C.B operator=null
              $this: GET_VAR receiver type=C operator=null
        WHEN type=kotlin.Unit operator=IF
          if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
              arg0: GET_VAR result type=kotlin.String operator=null
              arg1: CONST String type=kotlin.String value='newC_OK'
          then: RETURN type=kotlin.Nothing from=box
            STRING_CONCATENATION type=kotlin.String
              CONST String type=kotlin.String value='fail 3: '
              GET_VAR result type=kotlin.String operator=null
        SET_VAR result type=kotlin.Unit operator=EQ
          CALL .<get-result> type=kotlin.String operator=GET_PROPERTY
            $this: CALL .newCReceiver type=C.B operator=null
              $this: GET_VAR receiver type=C operator=null
        WHEN type=kotlin.Unit operator=IF
          if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
              arg0: GET_VAR result type=kotlin.String operator=null
              arg1: CONST String type=kotlin.String value='newC_OK'
          then: RETURN type=kotlin.Nothing from=box
            STRING_CONCATENATION type=kotlin.String
              CONST String type=kotlin.String value='fail 3: '
              GET_VAR result type=kotlin.String operator=null
        SET_VAR result type=kotlin.Unit operator=EQ
          CALL .<get-result> type=kotlin.String operator=GET_PROPERTY
            $this: CALL .extReceiver type=C.B operator=null
              $this: GET_VAR receiver type=C operator=null
        WHEN type=kotlin.Unit operator=IF
          if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
              arg0: GET_VAR result type=kotlin.String operator=null
              arg1: CONST String type=kotlin.String value='newC_OK'
          then: RETURN type=kotlin.Nothing from=box
            STRING_CONCATENATION type=kotlin.String
              CONST String type=kotlin.String value='fail 3: '
              GET_VAR result type=kotlin.String operator=null
        RETURN type=kotlin.Nothing from=box
          CONST String type=kotlin.String value='OK'
