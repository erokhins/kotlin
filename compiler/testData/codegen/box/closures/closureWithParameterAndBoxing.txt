MODULE <test-module>
  FILE /closureWithParameterAndBoxing.kt
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        RETURN type=kotlin.Nothing from=box
          WHEN type=kotlin.String operator=IF
            if: CALL .EQEQ type=kotlin.Boolean operator=EQEQ
              arg0: CALL .apply type=kotlin.Int operator=null
                arg: CONST Int type=kotlin.Int value='5'
                f: BLOCK type=(kotlin.Int) -> kotlin.Int operator=LAMBDA
                  FUN local final fun <anonymous>(/*0*/ arg: kotlin.Int): kotlin.Int
                    BLOCK_BODY
                      RETURN type=kotlin.Nothing from=<anonymous>
                        CALL .plus type=kotlin.Int operator=PLUS
                          $this: GET_VAR arg type=kotlin.Int operator=null
                          other: CONST Int type=kotlin.Int value='13'
                  CALLABLE_REFERENCE <anonymous> type=(kotlin.Int) -> kotlin.Int operator=LAMBDA
              arg1: CONST Int type=kotlin.Int value='18'
            then: CONST String type=kotlin.String value='OK'
            else: CONST String type=kotlin.String value='fail'
    FUN public fun apply(/*0*/ arg: kotlin.Int, /*1*/ f: (kotlin.Int) -> kotlin.Int): kotlin.Int
      BLOCK_BODY
        RETURN type=kotlin.Nothing from=apply
          CALL .invoke type=kotlin.Int operator=INVOKE
            $this: GET_VAR f type=(kotlin.Int) -> kotlin.Int operator=VARIABLE_AS_FUNCTION
            p1: GET_VAR arg type=kotlin.Int operator=null
