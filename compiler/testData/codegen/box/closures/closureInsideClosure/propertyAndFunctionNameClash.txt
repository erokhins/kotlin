MODULE <test-module>
  FILE /propertyAndFunctionNameClash.kt
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        CALL .test type=kotlin.Unit operator=null
          $receiver: CALL .<init> type=d.ListTag operator=null
          list: CALL .listOf type=kotlin.collections.List<kotlin.String> operator=null
            strings: VARARG type=Array<out String> varargElementType=String
              CONST String type=kotlin.String value='a'
              CONST String type=kotlin.String value='b'
        RETURN type=kotlin.Nothing from=box
          CONST String type=kotlin.String value='OK'
    FUN public fun d.ListTag.test(/*0*/ list: kotlin.collections.List<kotlin.String>): kotlin.Unit
      BLOCK_BODY
        BLOCK type=kotlin.Unit operator=FOR_LOOP
          VAR val tmp0_iterator: kotlin.collections.Iterator<kotlin.String>
            CALL .iterator type=kotlin.collections.Iterator<kotlin.String> operator=FOR_LOOP_ITERATOR
              $this: GET_VAR list type=kotlin.collections.List<kotlin.String> operator=null
          WHILE label=null operator=FOR_LOOP_INNER_WHILE
            condition: CALL .hasNext type=kotlin.Boolean operator=FOR_LOOP_HAS_NEXT
              $this: GET_VAR tmp0_iterator type=kotlin.collections.Iterator<kotlin.String> operator=null
            body: BLOCK type=kotlin.Unit operator=FOR_LOOP_INNER_WHILE
              VAR val item: kotlin.String
                CALL .next type=kotlin.String operator=FOR_LOOP_NEXT
                  $this: GET_VAR tmp0_iterator type=kotlin.collections.Iterator<kotlin.String> operator=null
              BLOCK type=kotlin.Unit operator=null
                CALL .item type=kotlin.Unit operator=null
                  $receiver: $RECEIVER of: test type=d.ListTag
                  body: BLOCK type=d.LI.() -> kotlin.Unit operator=LAMBDA
                    FUN local final fun d.LI.<anonymous>(): kotlin.Unit
                      BLOCK_BODY
                        RETURN type=kotlin.Nothing from=<anonymous>
                          CALL .a type=kotlin.Unit operator=null
                            $receiver: $RECEIVER of: <anonymous> type=d.LI
                            contents: BLOCK type=d.A.() -> kotlin.Unit operator=LAMBDA
                              FUN local final fun d.A.<anonymous>(): kotlin.Unit
                                BLOCK_BODY
                                  RETURN type=kotlin.Nothing from=<anonymous>
                                    CALL .<set-text> type=kotlin.Unit operator=EQ
                                      $this: $RECEIVER of: <anonymous> type=d.A
                                      <set-?>: GET_VAR item type=kotlin.String operator=null
                              CALLABLE_REFERENCE <anonymous> type=d.A.() -> kotlin.Unit operator=LAMBDA
                    CALLABLE_REFERENCE <anonymous> type=d.LI.() -> kotlin.Unit operator=LAMBDA
    CLASS CLASS HtmlTag
      CONSTRUCTOR public constructor HtmlTag()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          INSTANCE_INITIALIZER_CALL classDescriptor=HtmlTag
    CLASS CLASS ListTag
      CONSTRUCTOR public constructor ListTag()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL HtmlTag
          INSTANCE_INITIALIZER_CALL classDescriptor=ListTag
    CLASS CLASS LI
      CONSTRUCTOR public constructor LI()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL ListTag
          INSTANCE_INITIALIZER_CALL classDescriptor=LI
    FUN public fun d.ListTag.item(/*0*/ body: d.LI.() -> kotlin.Unit): kotlin.Unit
      BLOCK_BODY
    FUN public fun d.HtmlTag.a(/*0*/ contents: d.A.() -> kotlin.Unit): kotlin.Unit
      BLOCK_BODY
    CLASS CLASS A
      CONSTRUCTOR public constructor A()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL HtmlTag
          INSTANCE_INITIALIZER_CALL classDescriptor=A
      PROPERTY public abstract var text: kotlin.String
    FUN public fun listOf(/*0*/ vararg strings: kotlin.String /*kotlin.Array<out kotlin.String>*/): kotlin.collections.List<kotlin.String>
      BLOCK_BODY
        VAR val list: java.util.ArrayList<kotlin.String>
          CALL .<init> type=java.util.ArrayList<kotlin.String> operator=null
        BLOCK type=kotlin.Unit operator=FOR_LOOP
          VAR val tmp0_iterator: kotlin.collections.Iterator<kotlin.String>
            CALL .iterator type=kotlin.collections.Iterator<kotlin.String> operator=FOR_LOOP_ITERATOR
              $this: GET_VAR strings type=kotlin.Array<out kotlin.String> operator=null
          WHILE label=null operator=FOR_LOOP_INNER_WHILE
            condition: CALL .hasNext type=kotlin.Boolean operator=FOR_LOOP_HAS_NEXT
              $this: GET_VAR tmp0_iterator type=kotlin.collections.Iterator<kotlin.String> operator=null
            body: BLOCK type=kotlin.Unit operator=FOR_LOOP_INNER_WHILE
              VAR val s: kotlin.String
                CALL .next type=kotlin.String operator=FOR_LOOP_NEXT
                  $this: GET_VAR tmp0_iterator type=kotlin.collections.Iterator<kotlin.String> operator=null
              BLOCK type=kotlin.Boolean operator=null
                CALL .add type=kotlin.Boolean operator=null
                  $this: GET_VAR list type=java.util.ArrayList<kotlin.String> operator=null
                  element: GET_VAR s type=kotlin.String operator=null
        RETURN type=kotlin.Nothing from=listOf
          GET_VAR list type=java.util.ArrayList<kotlin.String> operator=null
