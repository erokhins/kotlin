MODULE <test-module>
  FILE /statementLikeLastExpression.kt
    PROPERTY public var globalResult: kotlin.String
      EXPRESSION_BODY
        CONST String type=kotlin.String value=''
    CLASS CLASS Controller
      CONSTRUCTOR public constructor Controller()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          INSTANCE_INITIALIZER_CALL classDescriptor=Controller
      FUN public final suspend fun suspendWithValue(/*0*/ v: kotlin.String, /*1*/ x: kotlin.coroutines.Continuation<kotlin.String>): kotlin.Unit
        BLOCK_BODY
          CALL .resume type=kotlin.Unit operator=null
            $this: GET_VAR x type=kotlin.coroutines.Continuation<kotlin.String> operator=null
            data: GET_VAR v type=kotlin.String operator=null
      FUN public final operator fun handleResult(/*0*/ x: kotlin.String, /*1*/ c: kotlin.coroutines.Continuation<kotlin.Nothing>): kotlin.Unit
        BLOCK_BODY
          CALL .<set-globalResult> type=kotlin.Unit operator=EQ
            <set-?>: GET_VAR x type=kotlin.String operator=null
    FUN public fun builder(/*0*/ coroutine c: Controller.() -> kotlin.coroutines.Continuation<kotlin.Unit>): kotlin.Unit
      BLOCK_BODY
        CALL .resume type=kotlin.Unit operator=null
          $this: CALL .invoke type=kotlin.coroutines.Continuation<kotlin.Unit> operator=INVOKE
            $this: GET_VAR c type=Controller.() -> kotlin.coroutines.Continuation<kotlin.Unit> operator=VARIABLE_AS_FUNCTION
            p1: CALL .<init> type=Controller operator=null
          data: GET_OBJECT Unit type=kotlin.Unit
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        VAR var condition: kotlin.Boolean
          CONST Boolean type=kotlin.Boolean value='true'
        CALL .builder type=kotlin.Unit operator=null
          c: TYPE_OP operator=IMPLICIT_CAST typeOperand=Controller.() -> kotlin.coroutines.Continuation<kotlin.Unit>
            BLOCK type=Controller.() -> kotlin.String operator=LAMBDA
              FUN local final fun Controller.<anonymous>(): kotlin.String
                BLOCK_BODY
                  RETURN type=kotlin.Nothing from=<anonymous>
                    WHEN type=kotlin.String operator=IF
                      if: GET_VAR condition type=kotlin.Boolean operator=null
                      then: BLOCK type=kotlin.String operator=null
                        CALL .suspendWithValue type=kotlin.String operator=null
                          $this: $RECEIVER of: <anonymous> type=Controller
                          v: CONST String type=kotlin.String value='OK'
                      else: BLOCK type=kotlin.String operator=null
                        CALL .suspendWithValue type=kotlin.String operator=null
                          $this: $RECEIVER of: <anonymous> type=Controller
                          v: CONST String type=kotlin.String value='fail 1'
              CALLABLE_REFERENCE <anonymous> type=Controller.() -> kotlin.String operator=LAMBDA
        RETURN type=kotlin.Nothing from=box
          CALL .<get-globalResult> type=kotlin.String operator=GET_PROPERTY
