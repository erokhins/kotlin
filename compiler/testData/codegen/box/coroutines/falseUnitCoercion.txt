MODULE <test-module>
  FILE /falseUnitCoercion.kt
    CLASS CLASS Controller
      CONSTRUCTOR public constructor Controller()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          INSTANCE_INITIALIZER_CALL classDescriptor=Controller
      FUN public final suspend fun </*0*/ T> suspendHere(/*0*/ v: T, /*1*/ x: kotlin.coroutines.Continuation<T>): kotlin.Unit
        BLOCK_BODY
          CALL .resume type=kotlin.Unit operator=null
            $this: GET_VAR x type=kotlin.coroutines.Continuation<T> operator=null
            data: GET_VAR v type=T operator=null
    FUN public fun builder(/*0*/ coroutine c: Controller.() -> kotlin.coroutines.Continuation<kotlin.Unit>): kotlin.Unit
      BLOCK_BODY
        CALL .resume type=kotlin.Unit operator=null
          $this: CALL .invoke type=kotlin.coroutines.Continuation<kotlin.Unit> operator=INVOKE
            $this: GET_VAR c type=Controller.() -> kotlin.coroutines.Continuation<kotlin.Unit> operator=VARIABLE_AS_FUNCTION
            p1: CALL .<init> type=Controller operator=null
          data: GET_OBJECT Unit type=kotlin.Unit
    PROPERTY public var result: kotlin.Any
      EXPRESSION_BODY
        CONST String type=kotlin.String value=''
    FUN public fun </*0*/ T : kotlin.Any> foo(/*0*/ v: T): kotlin.Unit
      BLOCK_BODY
        CALL .builder type=kotlin.Unit operator=null
          c: TYPE_OP operator=IMPLICIT_CAST typeOperand=Controller.() -> kotlin.coroutines.Continuation<kotlin.Unit>
            BLOCK type=Controller.() -> kotlin.Unit operator=LAMBDA
              FUN local final fun Controller.<anonymous>(): kotlin.Unit
                BLOCK_BODY
                  VAR val r: T
                    CALL .suspendHere type=T operator=null
                      $this: $RECEIVER of: <anonymous> type=Controller
                      v: GET_VAR v type=T operator=null
                  CALL .suspendHere type=kotlin.String operator=null
                    $this: $RECEIVER of: <anonymous> type=Controller
                    v: CONST String type=kotlin.String value=''
                  RETURN type=kotlin.Nothing from=<anonymous>
                    CALL .<set-result> type=kotlin.Unit operator=EQ
                      <set-?>: GET_VAR r type=T operator=null
              CALLABLE_REFERENCE <anonymous> type=Controller.() -> kotlin.Unit operator=LAMBDA
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        CALL .foo type=kotlin.Unit operator=null
          v: CONST String type=kotlin.String value='OK'
        RETURN type=kotlin.Nothing from=box
          TYPE_OP operator=CAST typeOperand=kotlin.String
            CALL .<get-result> type=kotlin.Any operator=GET_PROPERTY
