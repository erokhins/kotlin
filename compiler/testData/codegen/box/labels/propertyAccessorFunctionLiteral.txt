MODULE <test-module>
  FILE /propertyAccessorFunctionLiteral.kt
    PROPERTY public val kotlin.Int.getter: kotlin.Int
      PROPERTY_GETTER public fun kotlin.Int.<get-getter>(): kotlin.Int
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=<get-getter>
            CALL .invoke type=kotlin.Int operator=null
              $this: BLOCK type=() -> kotlin.Int operator=LAMBDA
                FUN local final fun <anonymous>(): kotlin.Int
                  BLOCK_BODY
                    RETURN type=kotlin.Nothing from=<anonymous>
                      $RECEIVER of: getter type=kotlin.Int
                CALLABLE_REFERENCE <anonymous> type=() -> kotlin.Int operator=LAMBDA
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        VAR val i: kotlin.Int = 1
          CONST Int type=kotlin.Int value='1'
        WHEN type=kotlin.Unit operator=IF
          if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
              arg0: CALL .<get-getter> type=kotlin.Int operator=GET_PROPERTY
                $receiver: GET_VAR i type=kotlin.Int operator=null
              arg1: CONST Int type=kotlin.Int value='1'
          then: RETURN type=kotlin.Nothing from=box
            CONST String type=kotlin.String value='getter failed'
        RETURN type=kotlin.Nothing from=box
          CONST String type=kotlin.String value='OK'
