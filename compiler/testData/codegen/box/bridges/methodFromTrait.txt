MODULE <test-module>
  FILE /methodFromTrait.kt
    CLASS INTERFACE A
      FUN public open fun foo(/*0*/ t: T, /*1*/ u: U): kotlin.String
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=foo
            CONST String type=kotlin.String value='A'
    CLASS CLASS Z
      CONSTRUCTOR public constructor Z</*0*/ T>()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          INSTANCE_INITIALIZER_CALL classDescriptor=Z
      FUN public open override /*1*/ fun foo(/*0*/ t: T, /*1*/ u: kotlin.Int): kotlin.String
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=foo
            CONST String type=kotlin.String value='Z'
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        VAR val z: Z<kotlin.Int>
          CALL .<init> type=Z<kotlin.Int> operator=null
        VAR val a: A<kotlin.Int, kotlin.Int>
          GET_VAR z type=Z<kotlin.Int> operator=null
        RETURN type=kotlin.Nothing from=box
          WHEN type=kotlin.String operator=WHEN
            if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
              arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
                arg0: CALL .foo type=kotlin.String operator=null
                  $this: GET_VAR z type=Z<kotlin.Int> operator=null
                  t: CONST Int type=kotlin.Int value='0'
                  u: CONST Int type=kotlin.Int value='0'
                arg1: CONST String type=kotlin.String value='Z'
            then: CONST String type=kotlin.String value='Fail #1'
            if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
              arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
                arg0: CALL .foo type=kotlin.String operator=null
                  $this: GET_VAR a type=A<kotlin.Int, kotlin.Int> operator=null
                  t: CONST Int type=kotlin.Int value='0'
                  u: CONST Int type=kotlin.Int value='0'
                arg1: CONST String type=kotlin.String value='Z'
            then: CONST String type=kotlin.String value='Fail #2'
            else: CONST String type=kotlin.String value='OK'
