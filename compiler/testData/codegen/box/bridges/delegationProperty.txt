MODULE <test-module>
  FILE /delegationProperty.kt
    CLASS INTERFACE A
      PROPERTY public abstract var result: T
    CLASS CLASS B
      CONSTRUCTOR public constructor B(/*0*/ a: A<kotlin.String>)
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          INSTANCE_INITIALIZER_CALL classDescriptor=B
      PROPERTY val `B$A$delegate`: A<kotlin.String>
        EXPRESSION_BODY
          GET_VAR a type=A<kotlin.String> operator=null
      PROPERTY public open override /*1*/ /*delegation*/ var result: kotlin.String
        PROPERTY_GETTER public open override /*1*/ /*delegation*/ fun <get-result>(): kotlin.String
          BLOCK_BODY
            RETURN type=kotlin.Nothing from=<get-result>
              CALL .<get-result> type=kotlin.String operator=null
                $this: GET_VAR B$A$delegate type=A<kotlin.String> operator=null
        PROPERTY_SETTER public open override /*1*/ /*delegation*/ fun <set-result>(/*0*/ <set-?>: kotlin.String): kotlin.Unit
          BLOCK_BODY
            CALL .<set-result> type=kotlin.Unit operator=null
              $this: GET_VAR B$A$delegate type=A<kotlin.String> operator=null
              <set-?>: GET_VAR <set-?> type=kotlin.String operator=null
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        VAR val o: box.<no name provided>
          BLOCK type=box.<no name provided> operator=OBJECT_LITERAL
            CLASS CLASS <no name provided>
              CONSTRUCTOR public constructor <no name provided>()
                BLOCK_BODY
                  DELEGATING_CONSTRUCTOR_CALL Any
                  INSTANCE_INITIALIZER_CALL classDescriptor=<no name provided>
              PROPERTY public open override /*1*/ var result: kotlin.String
                EXPRESSION_BODY
                  CONST String type=kotlin.String value='Fail'
            CALL .<init> type=box.<no name provided> operator=OBJECT_LITERAL
        VAR val b: A<kotlin.String>
          CALL .<init> type=B operator=null
            a: GET_VAR o type=box.<no name provided> operator=null
        CALL .<set-result> type=kotlin.Unit operator=EQ
          $this: GET_VAR b type=A<kotlin.String> operator=null
          <set-?>: CONST String type=kotlin.String value='OK'
        WHEN type=kotlin.Unit operator=IF
          if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
              arg0: CALL .<get-result> type=kotlin.String operator=GET_PROPERTY
                $this: GET_VAR b type=A<kotlin.String> operator=null
              arg1: CONST String type=kotlin.String value='OK'
          then: RETURN type=kotlin.Nothing from=box
            CONST String type=kotlin.String value='Fail'
        RETURN type=kotlin.Nothing from=box
          CALL .<get-result> type=kotlin.String operator=GET_PROPERTY
            $this: GET_VAR b type=A<kotlin.String> operator=null
