MODULE <test-module>
  FILE /propertyDiamond.kt
    CLASS INTERFACE A
      PROPERTY public abstract val o: O
      PROPERTY public abstract val k: K
    CLASS INTERFACE B
    CLASS INTERFACE C
    CLASS CLASS D
      CONSTRUCTOR public constructor D()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          INSTANCE_INITIALIZER_CALL classDescriptor=D
      PROPERTY public open override /*2*/ val o: kotlin.String = "O"
        EXPRESSION_BODY
          CONST String type=kotlin.String value='O'
      PROPERTY public open override /*2*/ val k: kotlin.String = "K"
        EXPRESSION_BODY
          CONST String type=kotlin.String value='K'
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        VAR val a: A<kotlin.String, kotlin.String>
          CALL .<init> type=D operator=null
        RETURN type=kotlin.Nothing from=box
          CALL .plus type=kotlin.String operator=PLUS
            $this: CALL .<get-o> type=kotlin.String operator=GET_PROPERTY
              $this: GET_VAR a type=A<kotlin.String, kotlin.String> operator=null
            other: CALL .<get-k> type=kotlin.String operator=GET_PROPERTY
              $this: GET_VAR a type=A<kotlin.String, kotlin.String> operator=null
