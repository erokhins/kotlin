MODULE <test-module>
  FILE /simpleReturnType.kt
    CLASS CLASS A
      CONSTRUCTOR public constructor A</*0*/ T : kotlin.Number>(/*0*/ t: T)
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          SET_BACKING_FIELD t type=kotlin.Unit operator=null
            receiver: THIS public open class A</*0*/ T : kotlin.Number> type=A<T>
            value: GET_VAR t type=T operator=INITIALIZE_PROPERTY_FROM_PARAMETER
          INSTANCE_INITIALIZER_CALL classDescriptor=A
      PROPERTY public final val t: T
        EXPRESSION_BODY
          GET_VAR t type=T operator=INITIALIZE_PROPERTY_FROM_PARAMETER
      FUN public open fun foo(): T
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=foo
            CALL .<get-t> type=T operator=GET_PROPERTY
              $this: THIS public open class A</*0*/ T : kotlin.Number> type=A<T>
    CLASS CLASS Z
      CONSTRUCTOR public constructor Z()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL A
            t: CONST Int type=kotlin.Int value='17'
          INSTANCE_INITIALIZER_CALL classDescriptor=Z
      FUN public open override /*1*/ fun foo(): kotlin.Int
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=foo
            CONST Int type=kotlin.Int value='239'
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        VAR val z: Z
          CALL .<init> type=Z operator=null
        VAR val a: A<kotlin.Int>
          GET_VAR z type=Z operator=null
        RETURN type=kotlin.Nothing from=box
          WHEN type=kotlin.String operator=WHEN
            if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
              arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
                arg0: CALL .foo type=kotlin.Int operator=null
                  $this: GET_VAR z type=Z operator=null
                arg1: CONST Int type=kotlin.Int value='239'
            then: CONST String type=kotlin.String value='Fail #1'
            if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
              arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
                arg0: CALL .foo type=kotlin.Int operator=null
                  $this: GET_VAR a type=A<kotlin.Int> operator=null
                arg1: CONST Int type=kotlin.Int value='239'
            then: CONST String type=kotlin.String value='Fail #2'
            else: CONST String type=kotlin.String value='OK'
