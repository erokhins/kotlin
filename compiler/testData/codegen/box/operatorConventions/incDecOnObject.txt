MODULE <test-module>
  FILE /incDecOnObject.kt
    CLASS CLASS X
      CONSTRUCTOR public constructor X(/*0*/ value: kotlin.Long)
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          SET_BACKING_FIELD value type=kotlin.Unit operator=null
            receiver: THIS public final class X type=X
            value: GET_VAR value type=kotlin.Long operator=INITIALIZE_PROPERTY_FROM_PARAMETER
          INSTANCE_INITIALIZER_CALL classDescriptor=X
      PROPERTY public final var value: kotlin.Long
        EXPRESSION_BODY
          GET_VAR value type=kotlin.Long operator=INITIALIZE_PROPERTY_FROM_PARAMETER
    FUN public operator fun X.inc(): X
      BLOCK_BODY
        BLOCK type=kotlin.Long operator=POSTFIX_INCR
          VAR val tmp0_this: X
            $RECEIVER of: inc type=X
          BLOCK type=kotlin.Long operator=POSTFIX_INCR
            VAR val tmp1: kotlin.Long
              CALL .<get-value> type=kotlin.Long operator=POSTFIX_INCR
                $this: GET_VAR tmp0_this type=X operator=null
            CALL .<set-value> type=kotlin.Unit operator=POSTFIX_INCR
              $this: GET_VAR tmp0_this type=X operator=null
              <set-?>: CALL .inc type=kotlin.Long operator=POSTFIX_INCR
                $this: GET_VAR tmp1 type=kotlin.Long operator=null
            GET_VAR tmp1 type=kotlin.Long operator=null
        RETURN type=kotlin.Nothing from=inc
          $RECEIVER of: inc type=X
    FUN public operator fun X.dec(): X
      BLOCK_BODY
        BLOCK type=kotlin.Long operator=POSTFIX_DECR
          VAR val tmp0_this: X
            $RECEIVER of: dec type=X
          BLOCK type=kotlin.Long operator=POSTFIX_DECR
            VAR val tmp1: kotlin.Long
              CALL .<get-value> type=kotlin.Long operator=POSTFIX_DECR
                $this: GET_VAR tmp0_this type=X operator=null
            CALL .<set-value> type=kotlin.Unit operator=POSTFIX_DECR
              $this: GET_VAR tmp0_this type=X operator=null
              <set-?>: CALL .dec type=kotlin.Long operator=POSTFIX_DECR
                $this: GET_VAR tmp1 type=kotlin.Long operator=null
            GET_VAR tmp1 type=kotlin.Long operator=null
        RETURN type=kotlin.Nothing from=dec
          $RECEIVER of: dec type=X
    CLASS CLASS Z
      CONSTRUCTOR public constructor Z()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          INSTANCE_INITIALIZER_CALL classDescriptor=Z
      PROPERTY public final var counter: kotlin.Int
        EXPRESSION_BODY
          CONST Int type=kotlin.Int value='0'
      PROPERTY public final var prop: X
        EXPRESSION_BODY
          CALL .<init> type=X operator=null
            value: CONST Long type=kotlin.Long value='0'
        PROPERTY_GETTER public final fun <get-prop>(): X
          BLOCK_BODY
            BLOCK type=kotlin.Int operator=POSTFIX_INCR
              VAR val tmp0_this: Z
                THIS public final class Z type=Z
              BLOCK type=kotlin.Int operator=POSTFIX_INCR
                VAR val tmp1: kotlin.Int
                  CALL .<get-counter> type=kotlin.Int operator=POSTFIX_INCR
                    $this: GET_VAR tmp0_this type=Z operator=null
                CALL .<set-counter> type=kotlin.Unit operator=POSTFIX_INCR
                  $this: GET_VAR tmp0_this type=Z operator=null
                  <set-?>: CALL .inc type=kotlin.Int operator=POSTFIX_INCR
                    $this: GET_VAR tmp1 type=kotlin.Int operator=null
                GET_VAR tmp1 type=kotlin.Int operator=null
            RETURN type=kotlin.Nothing from=<get-prop>
              GET_VAR field type=X operator=null
        PROPERTY_SETTER public final fun <set-prop>(/*0*/ a: X): kotlin.Unit
          BLOCK_BODY
            BLOCK type=kotlin.Int operator=POSTFIX_INCR
              VAR val tmp0_this: Z
                THIS public final class Z type=Z
              BLOCK type=kotlin.Int operator=POSTFIX_INCR
                VAR val tmp1: kotlin.Int
                  CALL .<get-counter> type=kotlin.Int operator=POSTFIX_INCR
                    $this: GET_VAR tmp0_this type=Z operator=null
                CALL .<set-counter> type=kotlin.Unit operator=POSTFIX_INCR
                  $this: GET_VAR tmp0_this type=Z operator=null
                  <set-?>: CALL .inc type=kotlin.Int operator=POSTFIX_INCR
                    $this: GET_VAR tmp1 type=kotlin.Int operator=null
                GET_VAR tmp1 type=kotlin.Int operator=null
            SET_BACKING_FIELD prop type=kotlin.Unit operator=EQ
              value: GET_VAR a type=X operator=null
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        VAR var z: Z
          CALL .<init> type=Z operator=null
        BLOCK type=X operator=POSTFIX_INCR
          VAR val tmp0_this: Z
            GET_VAR z type=Z operator=null
          BLOCK type=X operator=POSTFIX_INCR
            VAR val tmp1: X
              CALL .<get-prop> type=X operator=POSTFIX_INCR
                $this: GET_VAR tmp0_this type=Z operator=null
            CALL .<set-prop> type=kotlin.Unit operator=POSTFIX_INCR
              $this: GET_VAR tmp0_this type=Z operator=null
              a: CALL .inc type=X operator=POSTFIX_INCR
                $receiver: GET_VAR tmp1 type=X operator=null
            GET_VAR tmp1 type=X operator=null
        WHEN type=kotlin.Unit operator=IF
          if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
              arg0: CALL .<get-counter> type=kotlin.Int operator=GET_PROPERTY
                $this: GET_VAR z type=Z operator=null
              arg1: CONST Int type=kotlin.Int value='2'
          then: RETURN type=kotlin.Nothing from=box
            STRING_CONCATENATION type=kotlin.String
              CONST String type=kotlin.String value='fail in postfix increment: '
              CALL .<get-counter> type=kotlin.Int operator=GET_PROPERTY
                $this: GET_VAR z type=Z operator=null
              CONST String type=kotlin.String value=' != 2'
        WHEN type=kotlin.Unit operator=IF
          if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
              arg0: CALL .<get-value> type=kotlin.Long operator=GET_PROPERTY
                $this: CALL .<get-prop> type=X operator=GET_PROPERTY
                  $this: GET_VAR z type=Z operator=null
              arg1: CALL .toLong type=kotlin.Long operator=null
                $this: CONST Int type=kotlin.Int value='1'
          then: RETURN type=kotlin.Nothing from=box
            STRING_CONCATENATION type=kotlin.String
              CONST String type=kotlin.String value='fail in postfix increment: '
              CALL .<get-value> type=kotlin.Long operator=GET_PROPERTY
                $this: CALL .<get-prop> type=X operator=GET_PROPERTY
                  $this: GET_VAR z type=Z operator=null
              CONST String type=kotlin.String value=' != 1'
        SET_VAR z type=kotlin.Unit operator=EQ
          CALL .<init> type=Z operator=null
        BLOCK type=X operator=POSTFIX_DECR
          VAR val tmp2_this: Z
            GET_VAR z type=Z operator=null
          BLOCK type=X operator=POSTFIX_DECR
            VAR val tmp3: X
              CALL .<get-prop> type=X operator=POSTFIX_DECR
                $this: GET_VAR tmp2_this type=Z operator=null
            CALL .<set-prop> type=kotlin.Unit operator=POSTFIX_DECR
              $this: GET_VAR tmp2_this type=Z operator=null
              a: CALL .dec type=X operator=POSTFIX_DECR
                $receiver: GET_VAR tmp3 type=X operator=null
            GET_VAR tmp3 type=X operator=null
        WHEN type=kotlin.Unit operator=IF
          if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
              arg0: CALL .<get-counter> type=kotlin.Int operator=GET_PROPERTY
                $this: GET_VAR z type=Z operator=null
              arg1: CONST Int type=kotlin.Int value='2'
          then: RETURN type=kotlin.Nothing from=box
            STRING_CONCATENATION type=kotlin.String
              CONST String type=kotlin.String value='fail in postfix decrement: '
              CALL .<get-counter> type=kotlin.Int operator=GET_PROPERTY
                $this: GET_VAR z type=Z operator=null
              CONST String type=kotlin.String value=' != 2'
        WHEN type=kotlin.Unit operator=IF
          if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
              arg0: CALL .<get-value> type=kotlin.Long operator=GET_PROPERTY
                $this: CALL .<get-prop> type=X operator=GET_PROPERTY
                  $this: GET_VAR z type=Z operator=null
              arg1: CALL .unaryMinus type=kotlin.Long operator=UMINUS
                $this: CALL .toLong type=kotlin.Long operator=null
                  $this: CONST Int type=kotlin.Int value='1'
          then: RETURN type=kotlin.Nothing from=box
            STRING_CONCATENATION type=kotlin.String
              CONST String type=kotlin.String value='fail in postfix decrement: '
              CALL .<get-value> type=kotlin.Long operator=GET_PROPERTY
                $this: CALL .<get-prop> type=X operator=GET_PROPERTY
                  $this: GET_VAR z type=Z operator=null
              CONST String type=kotlin.String value=' != -1'
        RETURN type=kotlin.Nothing from=box
          CONST String type=kotlin.String value='OK'
