MODULE <test-module>
  FILE /IteratorWithRemove.kt
    CLASS CLASS MyIterator
      CONSTRUCTOR public constructor MyIterator</*0*/ T>(/*0*/ v: T)
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          SET_BACKING_FIELD v type=kotlin.Unit operator=null
            receiver: THIS public final class MyIterator</*0*/ T> : kotlin.collections.Iterator<T> type=MyIterator<T>
            value: GET_VAR v type=T operator=INITIALIZE_PROPERTY_FROM_PARAMETER
          INSTANCE_INITIALIZER_CALL classDescriptor=MyIterator
      PROPERTY public final val v: T
        EXPRESSION_BODY
          GET_VAR v type=T operator=INITIALIZE_PROPERTY_FROM_PARAMETER
      FUN public open override /*1*/ fun next(): T
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=next
            CALL .<get-v> type=T operator=GET_PROPERTY
              $this: THIS public final class MyIterator</*0*/ T> : kotlin.collections.Iterator<T> type=MyIterator<T>
      FUN public open override /*1*/ fun hasNext(): kotlin.Boolean
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=hasNext
            CONST Boolean type=kotlin.Boolean value='true'
      FUN public final fun remove(): kotlin.Unit
        BLOCK_BODY
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        CALL .remove type=kotlin.Unit operator=null
          $this: TYPE_OP operator=CAST typeOperand=java.util.Iterator<kotlin.String>
            CALL .<init> type=MyIterator<kotlin.String> operator=null
              v: CONST String type=kotlin.String value=''
        RETURN type=kotlin.Nothing from=box
          CONST String type=kotlin.String value='OK'
