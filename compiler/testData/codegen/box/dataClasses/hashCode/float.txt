MODULE <test-module>
  FILE /float.kt
    CLASS CLASS A
      CONSTRUCTOR public constructor A(/*0*/ a: kotlin.Float)
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          SET_BACKING_FIELD a type=kotlin.Unit operator=null
            receiver: THIS public final data class A type=A
            value: GET_VAR a type=kotlin.Float operator=INITIALIZE_PROPERTY_FROM_PARAMETER
          INSTANCE_INITIALIZER_CALL classDescriptor=A
      PROPERTY public final val a: kotlin.Float
        EXPRESSION_BODY
          GET_VAR a type=kotlin.Float operator=INITIALIZE_PROPERTY_FROM_PARAMETER
      FUN public final operator /*synthesized*/ fun component1(): kotlin.Float
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=component1
            CALL .<get-a> type=kotlin.Float operator=GET_PROPERTY
              $this: THIS public final data class A type=A
      FUN public final /*synthesized*/ fun copy(/*0*/ a: kotlin.Float = ...): A
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=copy
            CALL .<init> type=A operator=null
              a: GET_VAR a type=kotlin.Float operator=null
      FUN public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=toString
            STRING_CONCATENATION type=kotlin.String
              CONST String type=kotlin.String value='A('
              CONST String type=kotlin.String value='a='
              CALL .<get-a> type=kotlin.Float operator=GET_PROPERTY
                $this: THIS public final data class A type=A
              CONST String type=kotlin.String value=')'
      FUN public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        BLOCK_BODY
          VAR val tmp0_result: kotlin.Int
            CONST Int type=kotlin.Int value='0'
          SET_VAR tmp0_result type=kotlin.Unit operator=EQ
            CALL .hashCode type=kotlin.Int operator=null
              $this: CALL .<get-a> type=kotlin.Float operator=GET_PROPERTY
                $this: THIS public final data class A type=A
          RETURN type=kotlin.Nothing from=hashCode
            GET_VAR tmp0_result type=kotlin.Int operator=null
      FUN public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        BLOCK_BODY
          WHEN type=kotlin.Unit operator=null
            if: CALL .EQEQEQ type=kotlin.Boolean operator=EQEQEQ
              arg0: THIS public final data class A type=A
              arg1: GET_VAR other type=kotlin.Any? operator=null
            then: RETURN type=kotlin.Nothing from=equals
              CONST Boolean type=kotlin.Boolean value='true'
          WHEN type=kotlin.Unit operator=null
            if: TYPE_OP operator=NOT_INSTANCEOF typeOperand=A
              GET_VAR other type=kotlin.Any? operator=null
            then: RETURN type=kotlin.Nothing from=equals
              CONST Boolean type=kotlin.Boolean value='false'
          VAR val tmp0_other_with_cast: A
            TYPE_OP operator=CAST typeOperand=A
              GET_VAR other type=kotlin.Any? operator=null
          WHEN type=kotlin.Unit operator=null
            if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
              arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
                arg0: CALL .<get-a> type=kotlin.Float operator=GET_PROPERTY
                  $this: THIS public final data class A type=A
                arg1: CALL .<get-a> type=kotlin.Float operator=GET_PROPERTY
                  $this: GET_VAR tmp0_other_with_cast type=A operator=null
            then: RETURN type=kotlin.Nothing from=equals
              CONST Boolean type=kotlin.Boolean value='false'
          RETURN type=kotlin.Nothing from=equals
            CONST Boolean type=kotlin.Boolean value='true'
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        VAR val v1: kotlin.Int
          CALL .hashCode type=kotlin.Int operator=null
            $this: CALL .<init> type=A operator=null
              a: CALL .unaryMinus type=kotlin.Float operator=UMINUS
                $this: CALL .toFloat type=kotlin.Float operator=null
                  $this: CONST Int type=kotlin.Int value='10'
        VAR val v2: kotlin.Int
          CALL .hashCode type=kotlin.Int operator=null
            $this: BLOCK type=kotlin.Float operator=EXCLEXCL
              VAR val tmp0_notnull: kotlin.Float?
                TYPE_OP operator=CAST typeOperand=kotlin.Float?
                  CALL .unaryMinus type=kotlin.Float operator=UMINUS
                    $this: CALL .toFloat type=kotlin.Float operator=null
                      $this: CONST Int type=kotlin.Int value='10'
              WHEN type=kotlin.Float operator=null
                if: CALL .EQEQ type=kotlin.Boolean operator=EQEQ
                  arg0: GET_VAR tmp0_notnull type=kotlin.Float? operator=null
                  arg1: CONST Null type=kotlin.Nothing? value='null'
                then: CALL .THROW_NPE type=kotlin.Nothing operator=EXCLEXCL
                else: GET_VAR tmp0_notnull type=kotlin.Float? operator=null
        RETURN type=kotlin.Nothing from=box
          WHEN type=kotlin.String operator=IF
            if: CALL .EQEQ type=kotlin.Boolean operator=EQEQ
              arg0: GET_VAR v1 type=kotlin.Int operator=null
              arg1: GET_VAR v2 type=kotlin.Int operator=null
            then: CONST String type=kotlin.String value='OK'
            else: STRING_CONCATENATION type=kotlin.String
              GET_VAR v1 type=kotlin.Int operator=null
              CONST String type=kotlin.String value=' '
              GET_VAR v2 type=kotlin.Int operator=null
