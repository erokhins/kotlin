MODULE <test-module>
  FILE /createdNestedInOuterMember.kt
    FUN public fun foo(/*0*/ f: (kotlin.Int) -> kotlin.Int): kotlin.Int
      BLOCK_BODY
        RETURN type=kotlin.Nothing from=foo
          CALL .invoke type=kotlin.Int operator=INVOKE
            $this: GET_VAR f type=(kotlin.Int) -> kotlin.Int operator=VARIABLE_AS_FUNCTION
            p1: CONST Int type=kotlin.Int value='0'
    CLASS CLASS Outer
      CONSTRUCTOR public constructor Outer()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          INSTANCE_INITIALIZER_CALL classDescriptor=Outer
      CLASS CLASS Nested
        CONSTRUCTOR public constructor Nested()
          BLOCK_BODY
            DELEGATING_CONSTRUCTOR_CALL Any
            INSTANCE_INITIALIZER_CALL classDescriptor=Nested
        PROPERTY public final val y: kotlin.Int
          EXPRESSION_BODY
            CALL .foo type=kotlin.Int operator=null
              f: BLOCK type=(kotlin.Int) -> kotlin.Int operator=LAMBDA
                FUN local final fun <anonymous>(/*0*/ a: kotlin.Int): kotlin.Int
                  BLOCK_BODY
                    RETURN type=kotlin.Nothing from=<anonymous>
                      GET_VAR a type=kotlin.Int operator=null
                CALLABLE_REFERENCE <anonymous> type=(kotlin.Int) -> kotlin.Int operator=LAMBDA
      FUN public final fun bar(): kotlin.String
        BLOCK_BODY
          VAR val a: Outer.Nested
            CALL .<init> type=Outer.Nested operator=null
          RETURN type=kotlin.Nothing from=bar
            CONST String type=kotlin.String value='OK'
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        RETURN type=kotlin.Nothing from=box
          CALL .bar type=kotlin.String operator=null
            $this: CALL .<init> type=Outer operator=null
