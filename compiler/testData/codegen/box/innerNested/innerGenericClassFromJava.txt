MODULE <test-module>
  FILE /Kotlin.kt
    CLASS CLASS Outer
      CONSTRUCTOR public constructor Outer</*0*/ E>(/*0*/ x: E)
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          SET_BACKING_FIELD x type=kotlin.Unit operator=null
            receiver: THIS public final class Outer</*0*/ E> type=Outer<E>
            value: GET_VAR x type=E operator=INITIALIZE_PROPERTY_FROM_PARAMETER
          INSTANCE_INITIALIZER_CALL classDescriptor=Outer
      PROPERTY public final val x: E
        EXPRESSION_BODY
          GET_VAR x type=E operator=INITIALIZE_PROPERTY_FROM_PARAMETER
      CLASS CLASS Inner
        CONSTRUCTOR public constructor Inner</*0*/ F>(/*0*/ y: F)
          BLOCK_BODY
            DELEGATING_CONSTRUCTOR_CALL Any
            SET_BACKING_FIELD y type=kotlin.Unit operator=null
              receiver: THIS public final inner class Inner</*0*/ F> /*captured type parameters: /*1*/ E*/ type=Outer<E>.Inner<F>
              value: GET_VAR y type=F operator=INITIALIZE_PROPERTY_FROM_PARAMETER
            INSTANCE_INITIALIZER_CALL classDescriptor=Inner
        PROPERTY public final val y: F
          EXPRESSION_BODY
            GET_VAR y type=F operator=INITIALIZE_PROPERTY_FROM_PARAMETER
        FUN public final fun foo(): kotlin.String
          BLOCK_BODY
            RETURN type=kotlin.Nothing from=foo
              CALL .plus type=kotlin.String operator=PLUS
                $this: CALL .toString type=kotlin.String operator=null
                  $receiver: CALL .<get-x> type=E operator=GET_PROPERTY
                    $this: THIS public final class Outer</*0*/ E> type=Outer<E>
                other: CALL .toString type=kotlin.String operator=null
                  $receiver: CALL .<get-y> type=F operator=GET_PROPERTY
                    $this: THIS public final inner class Inner</*0*/ F> /*captured type parameters: /*1*/ E*/ type=Outer<E>.Inner<F>
    CLASS OBJECT Test
      CONSTRUCTOR private constructor Test()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          INSTANCE_INITIALIZER_CALL classDescriptor=Test
      FUN public final fun foo(/*0*/ x: Outer<kotlin.String>.Inner<java.lang.Integer>): kotlin.String
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=foo
            CALL .foo type=kotlin.String operator=null
              $this: GET_VAR x type=Outer<kotlin.String>.Inner<java.lang.Integer> operator=null
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        VAR val result: kotlin.String!
          CALL .test type=kotlin.String! operator=null
        WHEN type=kotlin.Unit operator=IF
          if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
              arg0: GET_VAR result type=kotlin.String! operator=null
              arg1: CONST String type=kotlin.String value='OK1'
          then: RETURN type=kotlin.Nothing from=box
            STRING_CONCATENATION type=kotlin.String
              CONST String type=kotlin.String value='Fail: '
              GET_VAR result type=kotlin.String! operator=null
        RETURN type=kotlin.Nothing from=box
          CONST String type=kotlin.String value='OK'
