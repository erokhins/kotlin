MODULE <test-module>
  FILE /kt769.kt
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        VAR var i: kotlin.Int
          CONST Int type=kotlin.Int value='0'
        BLOCK type=kotlin.Any operator=WHEN
          VAR val tmp0_subject: kotlin.Int
            GET_VAR i type=kotlin.Int operator=null
          WHEN type=kotlin.Any operator=WHEN
            if: CALL .EQEQ type=kotlin.Boolean operator=EQEQ
              arg0: GET_VAR tmp0_subject type=kotlin.Int operator=null
              arg1: CONST Int type=kotlin.Int value='1'
            then: BLOCK type=kotlin.Int operator=POSTFIX_DECR
              VAR val tmp1: kotlin.Int
                GET_VAR i type=kotlin.Int operator=POSTFIX_DECR
              SET_VAR i type=kotlin.Unit operator=POSTFIX_DECR
                CALL .dec type=kotlin.Int operator=POSTFIX_DECR
                  $this: GET_VAR tmp1 type=kotlin.Int operator=null
              GET_VAR tmp1 type=kotlin.Int operator=null
            else: BLOCK type=kotlin.Unit operator=null
              SET_VAR i type=kotlin.Unit operator=EQ
                CONST Int type=kotlin.Int value='2'
        BLOCK type=kotlin.Unit? operator=SAFE_CALL
          VAR val tmp2_safe_receiver: java.io.PrintStream!
            GET_BACKING_FIELD out type=java.io.PrintStream! operator=GET_PROPERTY
          WHEN type=kotlin.Unit? operator=SAFE_CALL
            if: CALL .EQEQ type=kotlin.Boolean operator=EQEQ
              arg0: GET_VAR tmp2_safe_receiver type=java.io.PrintStream! operator=null
              arg1: CONST Null type=kotlin.Nothing? value='null'
            then: CONST Null type=kotlin.Nothing? value='null'
            else: CALL .println type=kotlin.Unit operator=null
              $this: TYPE_OP operator=IMPLICIT_NOTNULL typeOperand=java.io.PrintStream
                GET_VAR tmp2_safe_receiver type=java.io.PrintStream! operator=null
              p0: GET_VAR i type=kotlin.Int operator=null
        RETURN type=kotlin.Nothing from=box
          CONST String type=kotlin.String value='OK'
