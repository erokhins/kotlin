MODULE <test-module>
  FILE /complexChain.kt
    FUN public fun cleanup(): kotlin.Unit
      BLOCK_BODY
    FUN public inline fun concat(/*0*/ x: kotlin.String, /*1*/ y: kotlin.String): kotlin.String
      BLOCK_BODY
        RETURN type=kotlin.Nothing from=concat
          CALL .plus type=kotlin.String operator=PLUS
            $this: GET_VAR x type=kotlin.String operator=null
            other: GET_VAR y type=kotlin.String operator=null
    FUN public inline fun throws(): kotlin.Unit
      BLOCK_BODY
        TRY_CATCH type=kotlin.Nothing
          try: BLOCK type=kotlin.Nothing operator=null
            THROW type=kotlin.Nothing
              CALL .<init> type=java.lang.Exception operator=null
          finally: BLOCK type=kotlin.Unit operator=null
            CALL .cleanup type=kotlin.Unit operator=null
    FUN public inline fun first(/*0*/ x: kotlin.String, /*1*/ y: kotlin.String): kotlin.String
      BLOCK_BODY
        RETURN type=kotlin.Nothing from=first
          GET_VAR x type=kotlin.String operator=null
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        RETURN type=kotlin.Nothing from=box
          CALL .plus type=kotlin.String operator=PLUS
            $this: CONST String type=kotlin.String value=''
            other: CALL .concat type=kotlin.String operator=null
              x: TRY_CATCH type=kotlin.String
                try: BLOCK type=kotlin.String operator=null
                  CONST String type=kotlin.String value=''
                finally: BLOCK type=kotlin.String operator=null
                  CONST String type=kotlin.String value='0'
              y: CALL .plus type=kotlin.String operator=PLUS
                $this: CONST String type=kotlin.String value=''
                other: CALL .concat type=kotlin.String operator=null
                  x: CALL .first type=kotlin.String operator=null
                    x: TRY_CATCH type=kotlin.String
                      try: BLOCK type=kotlin.String operator=null
                        TRY_CATCH type=kotlin.String
                          try: BLOCK type=kotlin.String operator=null
                            CONST String type=kotlin.String value='O'
                          finally: BLOCK type=kotlin.String operator=null
                            CONST String type=kotlin.String value='1'
                      catch e: BLOCK type=kotlin.Nothing operator=null
                        THROW type=kotlin.Nothing
                          GET_VAR e type=kotlin.Exception /* = java.lang.Exception */ operator=null
                      finally: BLOCK type=kotlin.Unit operator=null
                        CALL .cleanup type=kotlin.Unit operator=null
                    y: CONST String type=kotlin.String value='2'
                  y: CALL .first type=kotlin.String operator=null
                    x: TRY_CATCH type=kotlin.String
                      try: BLOCK type=kotlin.String operator=null
                        CALL .throws type=kotlin.Unit operator=null
                        THROW type=kotlin.Nothing
                          CALL .<init> type=java.lang.Exception operator=null
                        CONST String type=kotlin.String value='3'
                      catch e: BLOCK type=kotlin.String operator=null
                        CONST String type=kotlin.String value='K'
                      finally: BLOCK type=kotlin.Unit operator=null
                        CALL .cleanup type=kotlin.Unit operator=null
                    y: CONST String type=kotlin.String value='4'
