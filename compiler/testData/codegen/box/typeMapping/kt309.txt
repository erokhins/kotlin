MODULE <test-module>
  FILE /kt309.kt
    CLASS CLASS N
      CONSTRUCTOR public constructor N()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          INSTANCE_INITIALIZER_CALL classDescriptor=N
      FUN public final fun foo(): kotlin.Nothing?
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=foo
            CONST Null type=kotlin.Nothing? value='null'
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        VAR val method: java.lang.reflect.Method!
          CALL .getDeclaredMethod type=java.lang.reflect.Method! operator=null
            $this: CALL .<get-java> type=java.lang.Class<N> operator=GET_PROPERTY
              $receiver: CLASS_REFERENCE N type=kotlin.reflect.KClass<N>
            p0: CONST String type=kotlin.String value='foo'
        WHEN type=kotlin.Unit operator=IF
          if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
              arg0: CALL .<get-name> type=kotlin.String! operator=GET_PROPERTY
                $receiver: TYPE_OP operator=IMPLICIT_NOTNULL typeOperand=java.lang.Class<*>
                  CALL .<get-returnType> type=java.lang.Class<*>! operator=GET_PROPERTY
                    $receiver: TYPE_OP operator=IMPLICIT_NOTNULL typeOperand=java.lang.reflect.Method
                      GET_VAR method type=java.lang.reflect.Method! operator=null
              arg1: CONST String type=kotlin.String value='java.lang.Void'
          then: RETURN type=kotlin.Nothing from=box
            CONST String type=kotlin.String value='Fail: Nothing should be mapped to Void'
        RETURN type=kotlin.Nothing from=box
          CONST String type=kotlin.String value='OK'
