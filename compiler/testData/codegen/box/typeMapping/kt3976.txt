MODULE <test-module>
  FILE /kt3976.kt
    PROPERTY public var currentAccountId: kotlin.Int?
      delegate: PROPERTY val `currentAccountId$delegate`: SessionAccessor<kotlin.Int?>
        EXPRESSION_BODY
          CALL .<init> type=SessionAccessor<kotlin.Int?> operator=null
      PROPERTY_GETTER public fun <get-currentAccountId>(): kotlin.Int?
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=<get-currentAccountId>
            CALL .getValue type=kotlin.Int? operator=null
              $this: GET_BACKING_FIELD currentAccountId$delegate type=SessionAccessor<kotlin.Int?> operator=null
              o: CONST Null type=kotlin.Nothing? value='null'
              desc: CALLABLE_REFERENCE currentAccountId type=kotlin.reflect.KMutableProperty0<kotlin.Int?> operator=PROPERTY_REFERENCE_FOR_DELEGATE
      PROPERTY_SETTER public fun <set-currentAccountId>(/*0*/ <set-?>: kotlin.Int?): kotlin.Unit
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=<set-currentAccountId>
            CALL .setValue type=kotlin.Unit operator=null
              $this: GET_BACKING_FIELD currentAccountId$delegate type=SessionAccessor<kotlin.Int?> operator=null
              o: CONST Null type=kotlin.Nothing? value='null'
              desc: CALLABLE_REFERENCE currentAccountId type=kotlin.reflect.KMutableProperty0<kotlin.Int?> operator=PROPERTY_REFERENCE_FOR_DELEGATE
              value: GET_VAR <set-?> type=kotlin.Int? operator=null
    CLASS CLASS SessionAccessor
      CONSTRUCTOR public constructor SessionAccessor</*0*/ T>()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          INSTANCE_INITIALIZER_CALL classDescriptor=SessionAccessor
      FUN public final operator fun getValue(/*0*/ o: kotlin.Nothing?, /*1*/ desc: kotlin.reflect.KProperty<*>): T
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=getValue
            TYPE_OP operator=CAST typeOperand=T
              CONST Null type=kotlin.Nothing? value='null'
      FUN public final operator fun setValue(/*0*/ o: kotlin.Nothing?, /*1*/ desc: kotlin.reflect.KProperty<*>, /*2*/ value: T): kotlin.Unit
        BLOCK_BODY
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        CALL .<set-currentAccountId> type=kotlin.Unit operator=EQ
          <set-?>: CONST Int type=kotlin.Int value='1'
        WHEN type=kotlin.Unit operator=IF
          if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
              arg0: CALL .<get-currentAccountId> type=kotlin.Int? operator=GET_PROPERTY
              arg1: CONST Null type=kotlin.Nothing? value='null'
          then: RETURN type=kotlin.Nothing from=box
            CONST String type=kotlin.String value='Fail'
        RETURN type=kotlin.Nothing from=box
          CONST String type=kotlin.String value='OK'
