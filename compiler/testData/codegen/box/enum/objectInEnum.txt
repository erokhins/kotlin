MODULE <test-module>
  FILE /objectInEnum.kt
    CLASS ENUM_CLASS E
      CONSTRUCTOR private constructor E()
        BLOCK_BODY
          ENUM_CONSTRUCTOR_CALL Enum super
          INSTANCE_INITIALIZER_CALL classDescriptor=E
      ENUM_ENTRY enum entry ENTRY
        init: ENUM_CONSTRUCTOR_CALL E ENTRY
      ENUM_ENTRY enum entry SUBCLASS
        init: ENUM_CONSTRUCTOR_CALL SUBCLASS SUBCLASS
        class: CLASS ENUM_ENTRY SUBCLASS
          CONSTRUCTOR private constructor SUBCLASS()
            BLOCK_BODY
              ENUM_CONSTRUCTOR_CALL E super
              INSTANCE_INITIALIZER_CALL classDescriptor=SUBCLASS
          CLASS OBJECT O
            CONSTRUCTOR private constructor O()
              BLOCK_BODY
                DELEGATING_CONSTRUCTOR_CALL Any
                INSTANCE_INITIALIZER_CALL classDescriptor=O
            FUN public final fun foo(): kotlin.Int
              BLOCK_BODY
                RETURN type=kotlin.Nothing from=foo
                  CONST Int type=kotlin.Int value='2'
          FUN public open override /*1*/ fun bar(): kotlin.Int
            BLOCK_BODY
              RETURN type=kotlin.Nothing from=bar
                CALL .foo type=kotlin.Int operator=null
                  $this: GET_OBJECT O type=E.SUBCLASS.O
      CLASS OBJECT O
        CONSTRUCTOR private constructor O()
          BLOCK_BODY
            DELEGATING_CONSTRUCTOR_CALL Any
            INSTANCE_INITIALIZER_CALL classDescriptor=O
        FUN public final fun foo(): kotlin.Int
          BLOCK_BODY
            RETURN type=kotlin.Nothing from=foo
              CONST Int type=kotlin.Int value='1'
      FUN public open fun bar(): kotlin.Int
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=bar
            CALL .foo type=kotlin.Int operator=null
              $this: GET_OBJECT O type=E.O
      FUN public final /*synthesized*/ fun values(): kotlin.Array<E>
        SYNTHETIC_BODY kind=ENUM_VALUES
      FUN public final /*synthesized*/ fun valueOf(/*0*/ value: kotlin.String): E
        SYNTHETIC_BODY kind=ENUM_VALUEOF
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        WHEN type=kotlin.Unit operator=IF
          if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
              arg0: CALL .bar type=kotlin.Int operator=null
                $this: GET_ENUM_VALUE ENTRY type=E
              arg1: CONST Int type=kotlin.Int value='1'
          then: RETURN type=kotlin.Nothing from=box
            CONST String type=kotlin.String value='Fail 1'
        WHEN type=kotlin.Unit operator=IF
          if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
              arg0: CALL .bar type=kotlin.Int operator=null
                $this: GET_ENUM_VALUE SUBCLASS type=E
              arg1: CONST Int type=kotlin.Int value='2'
          then: RETURN type=kotlin.Nothing from=box
            CONST String type=kotlin.String value='Fail 2'
        RETURN type=kotlin.Nothing from=box
          CONST String type=kotlin.String value='OK'
