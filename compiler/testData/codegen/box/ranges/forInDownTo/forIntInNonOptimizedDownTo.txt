MODULE <test-module>
  FILE /forIntInNonOptimizedDownTo.kt
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        VAR var sum: kotlin.Int
          CONST Int type=kotlin.Int value='0'
        VAR val dt: kotlin.ranges.IntProgression
          CALL .downTo type=kotlin.ranges.IntProgression operator=null
            $receiver: CONST Int type=kotlin.Int value='4'
            to: CONST Int type=kotlin.Int value='1'
        BLOCK type=kotlin.Unit operator=FOR_LOOP
          VAR val tmp0_iterator: kotlin.collections.IntIterator
            CALL .iterator type=kotlin.collections.IntIterator operator=FOR_LOOP_ITERATOR
              $this: GET_VAR dt type=kotlin.ranges.IntProgression operator=null
          WHILE label=null operator=FOR_LOOP_INNER_WHILE
            condition: CALL .hasNext type=kotlin.Boolean operator=FOR_LOOP_HAS_NEXT
              $this: GET_VAR tmp0_iterator type=kotlin.collections.IntIterator operator=null
            body: BLOCK type=kotlin.Unit operator=FOR_LOOP_INNER_WHILE
              VAR val i: kotlin.Int
                CALL .next type=kotlin.Int operator=FOR_LOOP_NEXT
                  $this: GET_VAR tmp0_iterator type=kotlin.collections.IntIterator operator=null
              BLOCK type=kotlin.Unit operator=null
                SET_VAR sum type=kotlin.Unit operator=EQ
                  CALL .plus type=kotlin.Int operator=PLUS
                    $this: CALL .times type=kotlin.Int operator=MUL
                      $this: GET_VAR sum type=kotlin.Int operator=null
                      other: CONST Int type=kotlin.Int value='10'
                    other: GET_VAR i type=kotlin.Int operator=null
        CALL .assertEquals type=kotlin.Unit operator=null
          expected: CONST Int type=kotlin.Int value='4321'
          actual: GET_VAR sum type=kotlin.Int operator=null
        RETURN type=kotlin.Nothing from=box
          CONST String type=kotlin.String value='OK'
