MODULE <test-module>
  FILE /forByteProgressionWithIntIncrement.kt
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        BLOCK type=kotlin.Unit operator=FOR_LOOP
          VAR val tmp0_iterator: kotlin.collections.IntIterator
            CALL .iterator type=kotlin.collections.IntIterator operator=FOR_LOOP_ITERATOR
              $this: CALL .step type=kotlin.ranges.IntProgression operator=null
                $receiver: CALL .rangeTo type=kotlin.ranges.IntRange operator=RANGE
                  $this: CALL .toByte type=kotlin.Byte operator=null
                    $this: CONST Int type=kotlin.Int value='5'
                  other: CALL .toByte type=kotlin.Byte operator=null
                    $this: CONST Int type=kotlin.Int value='1'
                step: CONST Int type=kotlin.Int value='255'
          WHILE label=null operator=FOR_LOOP_INNER_WHILE
            condition: CALL .hasNext type=kotlin.Boolean operator=FOR_LOOP_HAS_NEXT
              $this: GET_VAR tmp0_iterator type=kotlin.collections.IntIterator operator=null
            body: BLOCK type=kotlin.Unit operator=FOR_LOOP_INNER_WHILE
              VAR val element: kotlin.Int
                CALL .next type=kotlin.Int operator=FOR_LOOP_NEXT
                  $this: GET_VAR tmp0_iterator type=kotlin.collections.IntIterator operator=null
              BLOCK type=kotlin.Nothing operator=null
                RETURN type=kotlin.Nothing from=box
                  STRING_CONCATENATION type=kotlin.String
                    CONST String type=kotlin.String value='Fail: iterating over an empty progression, element: '
                    GET_VAR element type=kotlin.Int operator=null
        RETURN type=kotlin.Nothing from=box
          CONST String type=kotlin.String value='OK'
