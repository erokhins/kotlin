MODULE <test-module>
  FILE /localDataClass.kt
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        VAR val capturedInConstructor: kotlin.Int = 1
          CONST Int type=kotlin.Int value='1'
        CLASS CLASS A
          CONSTRUCTOR public constructor A(/*0*/ x: kotlin.Int)
            BLOCK_BODY
              DELEGATING_CONSTRUCTOR_CALL Any
              SET_BACKING_FIELD x type=kotlin.Unit operator=null
                receiver: THIS local final data class A type=box.A
                value: GET_VAR x type=kotlin.Int operator=INITIALIZE_PROPERTY_FROM_PARAMETER
              INSTANCE_INITIALIZER_CALL classDescriptor=A
          PROPERTY public final var x: kotlin.Int
            EXPRESSION_BODY
              GET_VAR x type=kotlin.Int operator=INITIALIZE_PROPERTY_FROM_PARAMETER
          PROPERTY public final var y: kotlin.Int
            EXPRESSION_BODY
              CONST Int type=kotlin.Int value='0'
          ANONYMOUS_INITIALIZER A
            BLOCK_BODY
              BLOCK type=kotlin.Unit operator=PLUSEQ
                VAR val tmp0_this: box.A
                  THIS local final data class A type=box.A
                CALL .<set-y> type=kotlin.Unit operator=PLUSEQ
                  $this: GET_VAR tmp0_this type=box.A operator=null
                  <set-?>: CALL .plus type=kotlin.Int operator=PLUSEQ
                    $this: CALL .<get-y> type=kotlin.Int operator=PLUSEQ
                      $this: GET_VAR tmp0_this type=box.A operator=null
                    other: CALL .plus type=kotlin.Int operator=PLUS
                      $this: CALL .<get-x> type=kotlin.Int operator=GET_PROPERTY
                        $this: THIS local final data class A type=box.A
                      other: GET_VAR capturedInConstructor type=kotlin.Int operator=null
          FUN public final operator /*synthesized*/ fun component1(): kotlin.Int
            BLOCK_BODY
              RETURN type=kotlin.Nothing from=component1
                CALL .<get-x> type=kotlin.Int operator=GET_PROPERTY
                  $this: THIS local final data class A type=box.A
          FUN public final /*synthesized*/ fun copy(/*0*/ x: kotlin.Int = ...): box.A
            BLOCK_BODY
              RETURN type=kotlin.Nothing from=copy
                CALL .<init> type=box.A operator=null
                  x: GET_VAR x type=kotlin.Int operator=null
          FUN public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
            BLOCK_BODY
              RETURN type=kotlin.Nothing from=toString
                STRING_CONCATENATION type=kotlin.String
                  CONST String type=kotlin.String value='A('
                  CONST String type=kotlin.String value='x='
                  CALL .<get-x> type=kotlin.Int operator=GET_PROPERTY
                    $this: THIS local final data class A type=box.A
                  CONST String type=kotlin.String value=')'
          FUN public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
            BLOCK_BODY
              VAR val tmp0_result: kotlin.Int
                CONST Int type=kotlin.Int value='0'
              SET_VAR tmp0_result type=kotlin.Unit operator=EQ
                CALL .hashCode type=kotlin.Int operator=null
                  $this: CALL .<get-x> type=kotlin.Int operator=GET_PROPERTY
                    $this: THIS local final data class A type=box.A
              RETURN type=kotlin.Nothing from=hashCode
                GET_VAR tmp0_result type=kotlin.Int operator=null
          FUN public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
            BLOCK_BODY
              WHEN type=kotlin.Unit operator=null
                if: CALL .EQEQEQ type=kotlin.Boolean operator=EQEQEQ
                  arg0: THIS local final data class A type=box.A
                  arg1: GET_VAR other type=kotlin.Any? operator=null
                then: RETURN type=kotlin.Nothing from=equals
                  CONST Boolean type=kotlin.Boolean value='true'
              WHEN type=kotlin.Unit operator=null
                if: TYPE_OP operator=NOT_INSTANCEOF typeOperand=box.A
                  GET_VAR other type=kotlin.Any? operator=null
                then: RETURN type=kotlin.Nothing from=equals
                  CONST Boolean type=kotlin.Boolean value='false'
              VAR val tmp0_other_with_cast: box.A
                TYPE_OP operator=CAST typeOperand=box.A
                  GET_VAR other type=kotlin.Any? operator=null
              WHEN type=kotlin.Unit operator=null
                if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
                  arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
                    arg0: CALL .<get-x> type=kotlin.Int operator=GET_PROPERTY
                      $this: THIS local final data class A type=box.A
                    arg1: CALL .<get-x> type=kotlin.Int operator=GET_PROPERTY
                      $this: GET_VAR tmp0_other_with_cast type=box.A operator=null
                then: RETURN type=kotlin.Nothing from=equals
                  CONST Boolean type=kotlin.Boolean value='false'
              RETURN type=kotlin.Nothing from=equals
                CONST Boolean type=kotlin.Boolean value='true'
        VAR val a: box.A
          CALL .copy type=box.A operator=null
            $this: CALL .<init> type=box.A operator=null
              x: CONST Int type=kotlin.Int value='100'
        WHEN type=kotlin.Unit operator=IF
          if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
              arg0: CALL .<get-y> type=kotlin.Int operator=GET_PROPERTY
                $this: GET_VAR a type=box.A operator=null
              arg1: CONST Int type=kotlin.Int value='101'
          then: RETURN type=kotlin.Nothing from=box
            STRING_CONCATENATION type=kotlin.String
              CONST String type=kotlin.String value='fail1a: '
              CALL .<get-y> type=kotlin.Int operator=GET_PROPERTY
                $this: GET_VAR a type=box.A operator=null
        WHEN type=kotlin.Unit operator=IF
          if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
              arg0: CALL .<get-x> type=kotlin.Int operator=GET_PROPERTY
                $this: GET_VAR a type=box.A operator=null
              arg1: CONST Int type=kotlin.Int value='100'
          then: RETURN type=kotlin.Nothing from=box
            STRING_CONCATENATION type=kotlin.String
              CONST String type=kotlin.String value='fail1b: '
              CALL .<get-x> type=kotlin.Int operator=GET_PROPERTY
                $this: GET_VAR a type=box.A operator=null
        RETURN type=kotlin.Nothing from=box
          CONST String type=kotlin.String value='OK'
