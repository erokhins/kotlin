MODULE <test-module>
  FILE /kt4138.kt
    CLASS CLASS Delegate
      CONSTRUCTOR public constructor Delegate</*0*/ T>(/*0*/ inner: T)
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          SET_BACKING_FIELD inner type=kotlin.Unit operator=null
            receiver: THIS public final class Delegate</*0*/ T> type=Delegate<T>
            value: GET_VAR inner type=T operator=INITIALIZE_PROPERTY_FROM_PARAMETER
          INSTANCE_INITIALIZER_CALL classDescriptor=Delegate
      PROPERTY public final var inner: T
        EXPRESSION_BODY
          GET_VAR inner type=T operator=INITIALIZE_PROPERTY_FROM_PARAMETER
      FUN public final operator fun getValue(/*0*/ t: kotlin.Any?, /*1*/ p: kotlin.reflect.KProperty<*>): T
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=getValue
            CALL .<get-inner> type=T operator=GET_PROPERTY
              $this: THIS public final class Delegate</*0*/ T> type=Delegate<T>
      FUN public final operator fun setValue(/*0*/ t: kotlin.Any?, /*1*/ p: kotlin.reflect.KProperty<*>, /*2*/ i: T): kotlin.Unit
        BLOCK_BODY
          CALL .<set-inner> type=kotlin.Unit operator=EQ
            $this: THIS public final class Delegate</*0*/ T> type=Delegate<T>
            <set-?>: GET_VAR i type=T operator=null
    CLASS CLASS Foo
      CONSTRUCTOR public constructor Foo(/*0*/ f: kotlin.Int)
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          SET_BACKING_FIELD f type=kotlin.Unit operator=null
            receiver: THIS public final class Foo type=Foo
            value: GET_VAR f type=kotlin.Int operator=INITIALIZE_PROPERTY_FROM_PARAMETER
          INSTANCE_INITIALIZER_CALL classDescriptor=Foo
      PROPERTY public final val f: kotlin.Int
        EXPRESSION_BODY
          GET_VAR f type=kotlin.Int operator=INITIALIZE_PROPERTY_FROM_PARAMETER
      CLASS OBJECT Companion
        CONSTRUCTOR private constructor Companion()
          BLOCK_BODY
            DELEGATING_CONSTRUCTOR_CALL Any
            INSTANCE_INITIALIZER_CALL classDescriptor=Companion
        PROPERTY public final val A: Foo
          delegate: PROPERTY val `A$delegate`: Delegate<Foo>
            EXPRESSION_BODY
              CALL .<init> type=Delegate<Foo> operator=null
                inner: CALL .<init> type=Foo operator=null
                  f: CONST Int type=kotlin.Int value='11'
          PROPERTY_GETTER public final fun <get-A>(): Foo
            BLOCK_BODY
              RETURN type=kotlin.Nothing from=<get-A>
                CALL .getValue type=Foo operator=null
                  $this: GET_BACKING_FIELD A$delegate type=Delegate<Foo> operator=null
                    receiver: THIS public companion object Companion type=Foo.Companion
                  t: THIS public companion object Companion type=Foo.Companion
                  p: CALLABLE_REFERENCE A type=kotlin.reflect.KProperty1<Foo.Companion, Foo> operator=PROPERTY_REFERENCE_FOR_DELEGATE
        PROPERTY public final var B: Foo
          delegate: PROPERTY val `B$delegate`: Delegate<Foo>
            EXPRESSION_BODY
              CALL .<init> type=Delegate<Foo> operator=null
                inner: CALL .<init> type=Foo operator=null
                  f: CONST Int type=kotlin.Int value='11'
          PROPERTY_GETTER public final fun <get-B>(): Foo
            BLOCK_BODY
              RETURN type=kotlin.Nothing from=<get-B>
                CALL .getValue type=Foo operator=null
                  $this: GET_BACKING_FIELD B$delegate type=Delegate<Foo> operator=null
                    receiver: THIS public companion object Companion type=Foo.Companion
                  t: THIS public companion object Companion type=Foo.Companion
                  p: CALLABLE_REFERENCE B type=kotlin.reflect.KMutableProperty1<Foo.Companion, Foo> operator=PROPERTY_REFERENCE_FOR_DELEGATE
          PROPERTY_SETTER public final fun <set-B>(/*0*/ <set-?>: Foo): kotlin.Unit
            BLOCK_BODY
              RETURN type=kotlin.Nothing from=<set-B>
                CALL .setValue type=kotlin.Unit operator=null
                  $this: GET_BACKING_FIELD B$delegate type=Delegate<Foo> operator=null
                    receiver: THIS public companion object Companion type=Foo.Companion
                  t: THIS public companion object Companion type=Foo.Companion
                  p: CALLABLE_REFERENCE B type=kotlin.reflect.KMutableProperty1<Foo.Companion, Foo> operator=PROPERTY_REFERENCE_FOR_DELEGATE
                  i: GET_VAR <set-?> type=Foo operator=null
    CLASS INTERFACE FooTrait
      CLASS OBJECT Companion
        CONSTRUCTOR private constructor Companion()
          BLOCK_BODY
            DELEGATING_CONSTRUCTOR_CALL Any
            INSTANCE_INITIALIZER_CALL classDescriptor=Companion
        PROPERTY public final val A: Foo
          delegate: PROPERTY val `A$delegate`: Delegate<Foo>
            EXPRESSION_BODY
              CALL .<init> type=Delegate<Foo> operator=null
                inner: CALL .<init> type=Foo operator=null
                  f: CONST Int type=kotlin.Int value='11'
          PROPERTY_GETTER public final fun <get-A>(): Foo
            BLOCK_BODY
              RETURN type=kotlin.Nothing from=<get-A>
                CALL .getValue type=Foo operator=null
                  $this: GET_BACKING_FIELD A$delegate type=Delegate<Foo> operator=null
                    receiver: THIS public companion object Companion type=FooTrait.Companion
                  t: THIS public companion object Companion type=FooTrait.Companion
                  p: CALLABLE_REFERENCE A type=kotlin.reflect.KProperty1<FooTrait.Companion, Foo> operator=PROPERTY_REFERENCE_FOR_DELEGATE
        PROPERTY public final var B: Foo
          delegate: PROPERTY val `B$delegate`: Delegate<Foo>
            EXPRESSION_BODY
              CALL .<init> type=Delegate<Foo> operator=null
                inner: CALL .<init> type=Foo operator=null
                  f: CONST Int type=kotlin.Int value='11'
          PROPERTY_GETTER public final fun <get-B>(): Foo
            BLOCK_BODY
              RETURN type=kotlin.Nothing from=<get-B>
                CALL .getValue type=Foo operator=null
                  $this: GET_BACKING_FIELD B$delegate type=Delegate<Foo> operator=null
                    receiver: THIS public companion object Companion type=FooTrait.Companion
                  t: THIS public companion object Companion type=FooTrait.Companion
                  p: CALLABLE_REFERENCE B type=kotlin.reflect.KMutableProperty1<FooTrait.Companion, Foo> operator=PROPERTY_REFERENCE_FOR_DELEGATE
          PROPERTY_SETTER public final fun <set-B>(/*0*/ <set-?>: Foo): kotlin.Unit
            BLOCK_BODY
              RETURN type=kotlin.Nothing from=<set-B>
                CALL .setValue type=kotlin.Unit operator=null
                  $this: GET_BACKING_FIELD B$delegate type=Delegate<Foo> operator=null
                    receiver: THIS public companion object Companion type=FooTrait.Companion
                  t: THIS public companion object Companion type=FooTrait.Companion
                  p: CALLABLE_REFERENCE B type=kotlin.reflect.KMutableProperty1<FooTrait.Companion, Foo> operator=PROPERTY_REFERENCE_FOR_DELEGATE
                  i: GET_VAR <set-?> type=Foo operator=null
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        WHEN type=kotlin.Unit operator=IF
          if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
              arg0: CALL .<get-f> type=kotlin.Int operator=GET_PROPERTY
                $this: CALL .<get-A> type=Foo operator=GET_PROPERTY
                  $this: GET_OBJECT Companion type=Foo.Companion
              arg1: CONST Int type=kotlin.Int value='11'
          then: RETURN type=kotlin.Nothing from=box
            CONST String type=kotlin.String value='fail 1'
        WHEN type=kotlin.Unit operator=IF
          if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
              arg0: CALL .<get-f> type=kotlin.Int operator=GET_PROPERTY
                $this: CALL .<get-B> type=Foo operator=GET_PROPERTY
                  $this: GET_OBJECT Companion type=Foo.Companion
              arg1: CONST Int type=kotlin.Int value='11'
          then: RETURN type=kotlin.Nothing from=box
            CONST String type=kotlin.String value='fail 2'
        CALL .<set-B> type=kotlin.Unit operator=EQ
          $this: GET_OBJECT Companion type=Foo.Companion
          <set-?>: CALL .<init> type=Foo operator=null
            f: CONST Int type=kotlin.Int value='12'
        WHEN type=kotlin.Unit operator=IF
          if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
              arg0: CALL .<get-f> type=kotlin.Int operator=GET_PROPERTY
                $this: CALL .<get-B> type=Foo operator=GET_PROPERTY
                  $this: GET_OBJECT Companion type=Foo.Companion
              arg1: CONST Int type=kotlin.Int value='12'
          then: RETURN type=kotlin.Nothing from=box
            CONST String type=kotlin.String value='fail 3'
        WHEN type=kotlin.Unit operator=IF
          if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
              arg0: CALL .<get-f> type=kotlin.Int operator=GET_PROPERTY
                $this: CALL .<get-A> type=Foo operator=GET_PROPERTY
                  $this: GET_OBJECT Companion type=FooTrait.Companion
              arg1: CONST Int type=kotlin.Int value='11'
          then: RETURN type=kotlin.Nothing from=box
            CONST String type=kotlin.String value='fail 4'
        WHEN type=kotlin.Unit operator=IF
          if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
              arg0: CALL .<get-f> type=kotlin.Int operator=GET_PROPERTY
                $this: CALL .<get-B> type=Foo operator=GET_PROPERTY
                  $this: GET_OBJECT Companion type=FooTrait.Companion
              arg1: CONST Int type=kotlin.Int value='11'
          then: RETURN type=kotlin.Nothing from=box
            CONST String type=kotlin.String value='fail 5'
        CALL .<set-B> type=kotlin.Unit operator=EQ
          $this: GET_OBJECT Companion type=FooTrait.Companion
          <set-?>: CALL .<init> type=Foo operator=null
            f: CONST Int type=kotlin.Int value='12'
        WHEN type=kotlin.Unit operator=IF
          if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
              arg0: CALL .<get-f> type=kotlin.Int operator=GET_PROPERTY
                $this: CALL .<get-B> type=Foo operator=GET_PROPERTY
                  $this: GET_OBJECT Companion type=FooTrait.Companion
              arg1: CONST Int type=kotlin.Int value='12'
          then: RETURN type=kotlin.Nothing from=box
            CONST String type=kotlin.String value='fail 6'
        RETURN type=kotlin.Nothing from=box
          CONST String type=kotlin.String value='OK'
