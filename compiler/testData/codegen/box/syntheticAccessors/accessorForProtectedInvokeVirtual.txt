MODULE <test-module>
  FILE /1.kt
    CLASS CLASS B
      CONSTRUCTOR public constructor B()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL A
          INSTANCE_INITIALIZER_CALL classDescriptor=B
      FUN public final fun box(): kotlin.String
        BLOCK_BODY
          VAR val overriddenMethod: () -> kotlin.String
            BLOCK type=() -> kotlin.String operator=LAMBDA
              FUN local final fun <anonymous>(): kotlin.String
                BLOCK_BODY
                  RETURN type=kotlin.Nothing from=<anonymous>
                    CALL .method type=kotlin.String operator=null
                      $this: THIS public open class B : test.A type=B
              CALLABLE_REFERENCE <anonymous> type=() -> kotlin.String operator=LAMBDA
          CALL .assertEquals type=kotlin.Unit operator=null
            expected: CONST String type=kotlin.String value='C.method'
            actual: CALL .invoke type=kotlin.String operator=INVOKE
              $this: GET_VAR overriddenMethod type=() -> kotlin.String operator=VARIABLE_AS_FUNCTION
          VAR val superMethod: () -> kotlin.String
            BLOCK type=() -> kotlin.String operator=LAMBDA
              FUN local final fun <anonymous>(): kotlin.String
                BLOCK_BODY
                  RETURN type=kotlin.Nothing from=<anonymous>
                    CALL .method superQualifier=A type=kotlin.String operator=null
                      $this: THIS public open class B : test.A type=test.A
              CALLABLE_REFERENCE <anonymous> type=() -> kotlin.String operator=LAMBDA
          CALL .assertEquals type=kotlin.Unit operator=null
            expected: CONST String type=kotlin.String value='A.method'
            actual: CALL .invoke type=kotlin.String operator=INVOKE
              $this: GET_VAR superMethod type=() -> kotlin.String operator=VARIABLE_AS_FUNCTION
          VAR val overriddenPropertyGetter: () -> kotlin.String
            BLOCK type=() -> kotlin.String operator=LAMBDA
              FUN local final fun <anonymous>(): kotlin.String
                BLOCK_BODY
                  RETURN type=kotlin.Nothing from=<anonymous>
                    CALL .<get-property> type=kotlin.String operator=GET_PROPERTY
                      $this: THIS public open class B : test.A type=B
              CALLABLE_REFERENCE <anonymous> type=() -> kotlin.String operator=LAMBDA
          CALL .assertEquals type=kotlin.Unit operator=null
            expected: CONST String type=kotlin.String value='C.property'
            actual: CALL .invoke type=kotlin.String operator=INVOKE
              $this: GET_VAR overriddenPropertyGetter type=() -> kotlin.String operator=VARIABLE_AS_FUNCTION
          VAR val superPropertyGetter: () -> kotlin.String
            BLOCK type=() -> kotlin.String operator=LAMBDA
              FUN local final fun <anonymous>(): kotlin.String
                BLOCK_BODY
                  RETURN type=kotlin.Nothing from=<anonymous>
                    CALL .<get-property> superQualifier=A type=kotlin.String operator=GET_PROPERTY
                      $this: THIS public open class B : test.A type=test.A
              CALLABLE_REFERENCE <anonymous> type=() -> kotlin.String operator=LAMBDA
          CALL .assertEquals type=kotlin.Unit operator=null
            expected: CONST String type=kotlin.String value='A.property'
            actual: CALL .invoke type=kotlin.String operator=INVOKE
              $this: GET_VAR superPropertyGetter type=() -> kotlin.String operator=VARIABLE_AS_FUNCTION
          VAR val overriddenPropertySetter: () -> kotlin.Unit
            BLOCK type=() -> kotlin.Unit operator=LAMBDA
              FUN local final fun <anonymous>(): kotlin.Unit
                BLOCK_BODY
                  RETURN type=kotlin.Nothing from=<anonymous>
                    CALL .<set-property> type=kotlin.Unit operator=EQ
                      $this: THIS public open class B : test.A type=B
                      value: CONST String type=kotlin.String value=''
              CALLABLE_REFERENCE <anonymous> type=() -> kotlin.Unit operator=LAMBDA
          CALL .invoke type=kotlin.Unit operator=INVOKE
            $this: GET_VAR overriddenPropertySetter type=() -> kotlin.Unit operator=VARIABLE_AS_FUNCTION
          VAR val superPropertySetter: () -> kotlin.Unit
            BLOCK type=() -> kotlin.Unit operator=LAMBDA
              FUN local final fun <anonymous>(): kotlin.Unit
                BLOCK_BODY
                  RETURN type=kotlin.Nothing from=<anonymous>
                    CALL .<set-property> superQualifier=A type=kotlin.Unit operator=EQ
                      $this: THIS public open class B : test.A type=test.A
                      value: CONST String type=kotlin.String value=''
              CALLABLE_REFERENCE <anonymous> type=() -> kotlin.Unit operator=LAMBDA
          CALL .invoke type=kotlin.Unit operator=INVOKE
            $this: GET_VAR superPropertySetter type=() -> kotlin.Unit operator=VARIABLE_AS_FUNCTION
          CALL .assertEquals type=kotlin.Unit operator=null
            expected: CONST String type=kotlin.String value='C.property;A.property;'
            actual: CALL .<get-state> type=kotlin.String operator=GET_PROPERTY
              $this: THIS public open class B : test.A type=B
          RETURN type=kotlin.Nothing from=box
            CONST String type=kotlin.String value='OK'
    CLASS CLASS C
      CONSTRUCTOR public constructor C()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL B
          INSTANCE_INITIALIZER_CALL classDescriptor=C
      FUN protected open override /*1*/ fun method(): kotlin.String
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=method
            CONST String type=kotlin.String value='C.method'
      PROPERTY protected open override /*1*/ var property: kotlin.String
        PROPERTY_GETTER protected open override /*1*/ fun <get-property>(): kotlin.String
          BLOCK_BODY
            RETURN type=kotlin.Nothing from=<get-property>
              CONST String type=kotlin.String value='C.property'
        PROPERTY_SETTER protected open override /*1*/ fun <set-property>(/*0*/ value: kotlin.String): kotlin.Unit
          BLOCK_BODY
            BLOCK type=kotlin.Unit operator=PLUSEQ
              VAR val tmp0_this: C
                THIS public final class C : B type=C
              CALL .<set-state> type=kotlin.Unit operator=PLUSEQ
                $this: GET_VAR tmp0_this type=C operator=null
                <set-?>: CALL .plus type=kotlin.String operator=PLUSEQ
                  $this: CALL .<get-state> type=kotlin.String operator=PLUSEQ
                    $this: GET_VAR tmp0_this type=C operator=null
                  other: CONST String type=kotlin.String value='C.property;'
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        RETURN type=kotlin.Nothing from=box
          CALL .box type=kotlin.String operator=null
            $this: CALL .<init> type=C operator=null
  FILE /2.kt
    CLASS CLASS A
      CONSTRUCTOR public constructor A()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          INSTANCE_INITIALIZER_CALL classDescriptor=A
      PROPERTY public final var state: kotlin.String
        EXPRESSION_BODY
          CONST String type=kotlin.String value=''
      FUN protected open fun method(): kotlin.String
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=method
            CONST String type=kotlin.String value='A.method'
      PROPERTY protected open var property: kotlin.String
        PROPERTY_GETTER protected open fun <get-property>(): kotlin.String
          BLOCK_BODY
            RETURN type=kotlin.Nothing from=<get-property>
              CONST String type=kotlin.String value='A.property'
        PROPERTY_SETTER protected open fun <set-property>(/*0*/ value: kotlin.String): kotlin.Unit
          BLOCK_BODY
            BLOCK type=kotlin.Unit operator=PLUSEQ
              VAR val tmp0_this: test.A
                THIS public abstract class A type=test.A
              CALL .<set-state> type=kotlin.Unit operator=PLUSEQ
                $this: GET_VAR tmp0_this type=test.A operator=null
                <set-?>: CALL .plus type=kotlin.String operator=PLUSEQ
                  $this: CALL .<get-state> type=kotlin.String operator=PLUSEQ
                    $this: GET_VAR tmp0_this type=test.A operator=null
                  other: CONST String type=kotlin.String value='A.property;'
