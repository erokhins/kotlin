MODULE <test-module>
  FILE /foldRange.kt
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        VAR val result: kotlin.Int
          CALL .fold type=kotlin.Int operator=null
            $receiver: CALL .rangeTo type=kotlin.ranges.IntRange operator=RANGE
              $this: CONST Int type=kotlin.Int value='1'
              other: CONST Int type=kotlin.Int value='5'
            initial: CONST Int type=kotlin.Int value='0'
            operation: BLOCK type=(kotlin.Int, kotlin.Int) -> kotlin.Int operator=LAMBDA
              FUN local final fun <anonymous>(/*0*/ x: kotlin.Int, /*1*/ y: kotlin.Int): kotlin.Int
                BLOCK_BODY
                  RETURN type=kotlin.Nothing from=<anonymous>
                    CALL .plus type=kotlin.Int operator=PLUS
                      $this: GET_VAR x type=kotlin.Int operator=null
                      other: GET_VAR y type=kotlin.Int operator=null
              CALLABLE_REFERENCE <anonymous> type=(kotlin.Int, kotlin.Int) -> kotlin.Int operator=LAMBDA
        CALL .assertEquals type=kotlin.Unit operator=null
          expected: CONST Int type=kotlin.Int value='15'
          actual: GET_VAR result type=kotlin.Int operator=null
        RETURN type=kotlin.Nothing from=box
          CONST String type=kotlin.String value='OK'
