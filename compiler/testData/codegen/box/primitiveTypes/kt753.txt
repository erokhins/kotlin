MODULE <test-module>
  FILE /kt753.kt
    FUN public fun kotlin.Long?.shl(/*0*/ bits: kotlin.Int?): kotlin.Long
      BLOCK_BODY
        RETURN type=kotlin.Nothing from=shl
          CALL .shl type=kotlin.Long operator=null
            $this: BLOCK type=kotlin.Long operator=EXCLEXCL
              VAR val tmp0_notnull: kotlin.Long?
                $RECEIVER of: shl type=kotlin.Long?
              WHEN type=kotlin.Long operator=null
                if: CALL .EQEQ type=kotlin.Boolean operator=EQEQ
                  arg0: GET_VAR tmp0_notnull type=kotlin.Long? operator=null
                  arg1: CONST Null type=kotlin.Nothing? value='null'
                then: CALL .THROW_NPE type=kotlin.Nothing operator=EXCLEXCL
                else: GET_VAR tmp0_notnull type=kotlin.Long? operator=null
            bitCount: BLOCK type=kotlin.Int operator=EXCLEXCL
              VAR val tmp1_notnull: kotlin.Int?
                GET_VAR bits type=kotlin.Int? operator=null
              WHEN type=kotlin.Int operator=null
                if: CALL .EQEQ type=kotlin.Boolean operator=EQEQ
                  arg0: GET_VAR tmp1_notnull type=kotlin.Int? operator=null
                  arg1: CONST Null type=kotlin.Nothing? value='null'
                then: CALL .THROW_NPE type=kotlin.Nothing operator=EXCLEXCL
                else: GET_VAR tmp1_notnull type=kotlin.Int? operator=null
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        VAR val x: kotlin.Long? = 10.toLong()
          CONST Long type=kotlin.Long value='10'
        VAR val y: kotlin.Int? = 12
          CONST Int type=kotlin.Int value='12'
        BLOCK type=kotlin.Unit? operator=SAFE_CALL
          VAR val tmp0_safe_receiver: java.io.PrintStream!
            GET_BACKING_FIELD out type=java.io.PrintStream! operator=GET_PROPERTY
          WHEN type=kotlin.Unit? operator=SAFE_CALL
            if: CALL .EQEQ type=kotlin.Boolean operator=EQEQ
              arg0: GET_VAR tmp0_safe_receiver type=java.io.PrintStream! operator=null
              arg1: CONST Null type=kotlin.Nothing? value='null'
            then: CONST Null type=kotlin.Nothing? value='null'
            else: CALL .println type=kotlin.Unit operator=null
              $this: TYPE_OP operator=IMPLICIT_NOTNULL typeOperand=java.io.PrintStream
                GET_VAR tmp0_safe_receiver type=java.io.PrintStream! operator=null
              p0: CALL .shl type=kotlin.Long operator=null
                $receiver: GET_VAR x type=kotlin.Long? operator=null
                bits: GET_VAR y type=kotlin.Int? operator=null
        RETURN type=kotlin.Nothing from=box
          CONST String type=kotlin.String value='OK'
