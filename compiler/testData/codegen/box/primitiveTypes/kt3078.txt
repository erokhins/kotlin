MODULE <test-module>
  FILE /kt3078.kt
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        WHEN type=kotlin.Unit operator=IF
          if: CALL .GTEQ0 type=kotlin.Boolean operator=GTEQ
            arg0: CALL .compareTo type=kotlin.Int operator=GTEQ
              $this: CONST Int type=kotlin.Int value='1'
              other: CONST Double type=kotlin.Double value='1.9'
          then: RETURN type=kotlin.Nothing from=box
            CONST String type=kotlin.String value='Fail #1'
        WHEN type=kotlin.Unit operator=IF
          if: CALL .GTEQ0 type=kotlin.Boolean operator=GTEQ
            arg0: CALL .compareTo type=kotlin.Int operator=GTEQ
              $this: CALL .compareTo type=kotlin.Int operator=null
                $this: CONST Int type=kotlin.Int value='1'
                other: CONST Double type=kotlin.Double value='1.1'
              other: CONST Int type=kotlin.Int value='0'
          then: RETURN type=kotlin.Nothing from=box
            CONST String type=kotlin.String value='Fail #2'
        WHEN type=kotlin.Unit operator=IF
          if: CALL .LTEQ0 type=kotlin.Boolean operator=LTEQ
            arg0: CALL .compareTo type=kotlin.Int operator=LTEQ
              $this: CONST Double type=kotlin.Double value='1.9'
              other: CONST Int type=kotlin.Int value='1'
          then: RETURN type=kotlin.Nothing from=box
            CONST String type=kotlin.String value='Fail #3'
        WHEN type=kotlin.Unit operator=IF
          if: CALL .LTEQ0 type=kotlin.Boolean operator=LTEQ
            arg0: CALL .compareTo type=kotlin.Int operator=LTEQ
              $this: CALL .compareTo type=kotlin.Int operator=null
                $this: CONST Double type=kotlin.Double value='1.1'
                other: CONST Int type=kotlin.Int value='1'
              other: CONST Int type=kotlin.Int value='0'
          then: RETURN type=kotlin.Nothing from=box
            CONST String type=kotlin.String value='Fail #4'
        RETURN type=kotlin.Nothing from=box
          CONST String type=kotlin.String value='OK'
