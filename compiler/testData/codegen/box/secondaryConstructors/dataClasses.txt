MODULE <test-module>
  FILE /dataClasses.kt
    CLASS CLASS A1
      CONSTRUCTOR public constructor A1(/*0*/ prop1: kotlin.String)
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          SET_BACKING_FIELD prop1 type=kotlin.Unit operator=null
            receiver: THIS internal final data class A1 type=A1
            value: GET_VAR prop1 type=kotlin.String operator=INITIALIZE_PROPERTY_FROM_PARAMETER
          INSTANCE_INITIALIZER_CALL classDescriptor=A1
      PROPERTY public final val prop1: kotlin.String
        EXPRESSION_BODY
          GET_VAR prop1 type=kotlin.String operator=INITIALIZE_PROPERTY_FROM_PARAMETER
      PROPERTY public final val prop2: kotlin.String = "const2"
        EXPRESSION_BODY
          CONST String type=kotlin.String value='const2'
      PROPERTY public final var prop3: kotlin.String
        EXPRESSION_BODY
          CONST String type=kotlin.String value=''
      CONSTRUCTOR public constructor A1()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL A1
            prop1: CONST String type=kotlin.String value='default'
          CALL .<set-prop3> type=kotlin.Unit operator=EQ
            $this: THIS internal final data class A1 type=A1
            <set-?>: CONST String type=kotlin.String value='empty'
      CONSTRUCTOR public constructor A1(/*0*/ x: kotlin.Int)
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL A1
            prop1: CALL .toString type=kotlin.String operator=null
              $this: GET_VAR x type=kotlin.Int operator=null
          CALL .<set-prop3> type=kotlin.Unit operator=EQ
            $this: THIS internal final data class A1 type=A1
            <set-?>: CONST String type=kotlin.String value='int'
      FUN public final fun f(): kotlin.String
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=f
            STRING_CONCATENATION type=kotlin.String
              CALL .<get-prop1> type=kotlin.String operator=GET_PROPERTY
                $this: THIS internal final data class A1 type=A1
              CONST String type=kotlin.String value='#'
              CALL .<get-prop2> type=kotlin.String operator=GET_PROPERTY
                $this: THIS internal final data class A1 type=A1
              CONST String type=kotlin.String value='#'
              CALL .<get-prop3> type=kotlin.String operator=GET_PROPERTY
                $this: THIS internal final data class A1 type=A1
      FUN public final operator /*synthesized*/ fun component1(): kotlin.String
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=component1
            CALL .<get-prop1> type=kotlin.String operator=GET_PROPERTY
              $this: THIS internal final data class A1 type=A1
      FUN public final /*synthesized*/ fun copy(/*0*/ prop1: kotlin.String = ...): A1
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=copy
            CALL .<init> type=A1 operator=null
              prop1: GET_VAR prop1 type=kotlin.String operator=null
      FUN public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=toString
            STRING_CONCATENATION type=kotlin.String
              CONST String type=kotlin.String value='A1('
              CONST String type=kotlin.String value='prop1='
              CALL .<get-prop1> type=kotlin.String operator=GET_PROPERTY
                $this: THIS internal final data class A1 type=A1
              CONST String type=kotlin.String value=')'
      FUN public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        BLOCK_BODY
          VAR val tmp0_result: kotlin.Int
            CONST Int type=kotlin.Int value='0'
          SET_VAR tmp0_result type=kotlin.Unit operator=EQ
            CALL .hashCode type=kotlin.Int operator=null
              $this: CALL .<get-prop1> type=kotlin.String operator=GET_PROPERTY
                $this: THIS internal final data class A1 type=A1
          RETURN type=kotlin.Nothing from=hashCode
            GET_VAR tmp0_result type=kotlin.Int operator=null
      FUN public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        BLOCK_BODY
          WHEN type=kotlin.Unit operator=null
            if: CALL .EQEQEQ type=kotlin.Boolean operator=EQEQEQ
              arg0: THIS internal final data class A1 type=A1
              arg1: GET_VAR other type=kotlin.Any? operator=null
            then: RETURN type=kotlin.Nothing from=equals
              CONST Boolean type=kotlin.Boolean value='true'
          WHEN type=kotlin.Unit operator=null
            if: TYPE_OP operator=NOT_INSTANCEOF typeOperand=A1
              GET_VAR other type=kotlin.Any? operator=null
            then: RETURN type=kotlin.Nothing from=equals
              CONST Boolean type=kotlin.Boolean value='false'
          VAR val tmp0_other_with_cast: A1
            TYPE_OP operator=CAST typeOperand=A1
              GET_VAR other type=kotlin.Any? operator=null
          WHEN type=kotlin.Unit operator=null
            if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
              arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
                arg0: CALL .<get-prop1> type=kotlin.String operator=GET_PROPERTY
                  $this: THIS internal final data class A1 type=A1
                arg1: CALL .<get-prop1> type=kotlin.String operator=GET_PROPERTY
                  $this: GET_VAR tmp0_other_with_cast type=A1 operator=null
            then: RETURN type=kotlin.Nothing from=equals
              CONST Boolean type=kotlin.Boolean value='false'
          RETURN type=kotlin.Nothing from=equals
            CONST Boolean type=kotlin.Boolean value='true'
    CLASS CLASS A2
      CONSTRUCTOR private constructor A2()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          INSTANCE_INITIALIZER_CALL classDescriptor=A2
      PROPERTY public final var prop1: kotlin.String
        EXPRESSION_BODY
          CONST String type=kotlin.String value=''
      PROPERTY public final var prop2: kotlin.String
        EXPRESSION_BODY
          CONST String type=kotlin.String value='const2'
      PROPERTY public final var prop3: kotlin.String
        EXPRESSION_BODY
          CONST String type=kotlin.String value=''
      CONSTRUCTOR public constructor A2(/*0*/ arg: kotlin.String)
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL A2
          CALL .<set-prop1> type=kotlin.Unit operator=EQ
            $this: THIS internal final class A2 type=A2
            <set-?>: GET_VAR arg type=kotlin.String operator=null
      CONSTRUCTOR public constructor A2(/*0*/ x: kotlin.Double)
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL A2
          CALL .<set-prop1> type=kotlin.Unit operator=EQ
            $this: THIS internal final class A2 type=A2
            <set-?>: CONST String type=kotlin.String value='default'
          CALL .<set-prop3> type=kotlin.Unit operator=EQ
            $this: THIS internal final class A2 type=A2
            <set-?>: CONST String type=kotlin.String value='empty'
      CONSTRUCTOR public constructor A2(/*0*/ x: kotlin.Int)
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL A2
            arg: CALL .toString type=kotlin.String operator=null
              $this: GET_VAR x type=kotlin.Int operator=null
          CALL .<set-prop3> type=kotlin.Unit operator=EQ
            $this: THIS internal final class A2 type=A2
            <set-?>: CONST String type=kotlin.String value='int'
      FUN public final fun f(): kotlin.String
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=f
            STRING_CONCATENATION type=kotlin.String
              CALL .<get-prop1> type=kotlin.String operator=GET_PROPERTY
                $this: THIS internal final class A2 type=A2
              CONST String type=kotlin.String value='#'
              CALL .<get-prop2> type=kotlin.String operator=GET_PROPERTY
                $this: THIS internal final class A2 type=A2
              CONST String type=kotlin.String value='#'
              CALL .<get-prop3> type=kotlin.String operator=GET_PROPERTY
                $this: THIS internal final class A2 type=A2
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        VAR val a1x: A1
          CALL .<init> type=A1 operator=null
            prop1: CONST String type=kotlin.String value='asd'
        WHEN type=kotlin.Unit operator=IF
          if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
              arg0: CALL .f type=kotlin.String operator=null
                $this: GET_VAR a1x type=A1 operator=null
              arg1: CONST String type=kotlin.String value='asd#const2#'
          then: RETURN type=kotlin.Nothing from=box
            STRING_CONCATENATION type=kotlin.String
              CONST String type=kotlin.String value='fail1: '
              CALL .f type=kotlin.String operator=null
                $this: GET_VAR a1x type=A1 operator=null
        WHEN type=kotlin.Unit operator=IF
          if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
              arg0: CALL .toString type=kotlin.String operator=null
                $this: GET_VAR a1x type=A1 operator=null
              arg1: CONST String type=kotlin.String value='A1(prop1=asd)'
          then: RETURN type=kotlin.Nothing from=box
            STRING_CONCATENATION type=kotlin.String
              CONST String type=kotlin.String value='fail1s: '
              CALL .toString type=kotlin.String operator=null
                $this: GET_VAR a1x type=A1 operator=null
        VAR val a1y: A1
          CALL .<init> type=A1 operator=null
        WHEN type=kotlin.Unit operator=IF
          if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
              arg0: CALL .f type=kotlin.String operator=null
                $this: GET_VAR a1y type=A1 operator=null
              arg1: CONST String type=kotlin.String value='default#const2#empty'
          then: RETURN type=kotlin.Nothing from=box
            STRING_CONCATENATION type=kotlin.String
              CONST String type=kotlin.String value='fail2: '
              CALL .f type=kotlin.String operator=null
                $this: GET_VAR a1y type=A1 operator=null
        WHEN type=kotlin.Unit operator=IF
          if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
              arg0: CALL .toString type=kotlin.String operator=null
                $this: GET_VAR a1y type=A1 operator=null
              arg1: CONST String type=kotlin.String value='A1(prop1=default)'
          then: RETURN type=kotlin.Nothing from=box
            STRING_CONCATENATION type=kotlin.String
              CONST String type=kotlin.String value='fail2s: '
              CALL .toString type=kotlin.String operator=null
                $this: GET_VAR a1y type=A1 operator=null
        VAR val a1z: A1
          CALL .<init> type=A1 operator=null
            x: CONST Int type=kotlin.Int value='5'
        WHEN type=kotlin.Unit operator=IF
          if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
              arg0: CALL .f type=kotlin.String operator=null
                $this: GET_VAR a1z type=A1 operator=null
              arg1: CONST String type=kotlin.String value='5#const2#int'
          then: RETURN type=kotlin.Nothing from=box
            STRING_CONCATENATION type=kotlin.String
              CONST String type=kotlin.String value='fail3: '
              CALL .f type=kotlin.String operator=null
                $this: GET_VAR a1z type=A1 operator=null
        WHEN type=kotlin.Unit operator=IF
          if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
              arg0: CALL .toString type=kotlin.String operator=null
                $this: GET_VAR a1z type=A1 operator=null
              arg1: CONST String type=kotlin.String value='A1(prop1=5)'
          then: RETURN type=kotlin.Nothing from=box
            STRING_CONCATENATION type=kotlin.String
              CONST String type=kotlin.String value='fail3s: '
              CALL .toString type=kotlin.String operator=null
                $this: GET_VAR a1z type=A1 operator=null
        VAR val a2x: A2
          CALL .<init> type=A2 operator=null
            arg: CONST String type=kotlin.String value='asd'
        WHEN type=kotlin.Unit operator=IF
          if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
              arg0: CALL .f type=kotlin.String operator=null
                $this: GET_VAR a2x type=A2 operator=null
              arg1: CONST String type=kotlin.String value='asd#const2#'
          then: RETURN type=kotlin.Nothing from=box
            STRING_CONCATENATION type=kotlin.String
              CONST String type=kotlin.String value='fail4: '
              CALL .f type=kotlin.String operator=null
                $this: GET_VAR a2x type=A2 operator=null
        VAR val a2y: A2
          CALL .<init> type=A2 operator=null
            x: CONST Double type=kotlin.Double value='123.0'
        WHEN type=kotlin.Unit operator=IF
          if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
              arg0: CALL .f type=kotlin.String operator=null
                $this: GET_VAR a2y type=A2 operator=null
              arg1: CONST String type=kotlin.String value='default#const2#empty'
          then: RETURN type=kotlin.Nothing from=box
            STRING_CONCATENATION type=kotlin.String
              CONST String type=kotlin.String value='fail5: '
              CALL .f type=kotlin.String operator=null
                $this: GET_VAR a2y type=A2 operator=null
        VAR val a2z: A2
          CALL .<init> type=A2 operator=null
            x: CONST Int type=kotlin.Int value='5'
        WHEN type=kotlin.Unit operator=IF
          if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
              arg0: CALL .f type=kotlin.String operator=null
                $this: GET_VAR a2z type=A2 operator=null
              arg1: CONST String type=kotlin.String value='5#const2#int'
          then: RETURN type=kotlin.Nothing from=box
            STRING_CONCATENATION type=kotlin.String
              CONST String type=kotlin.String value='fail6: '
              CALL .f type=kotlin.String operator=null
                $this: GET_VAR a2z type=A2 operator=null
        RETURN type=kotlin.Nothing from=box
          CONST String type=kotlin.String value='OK'
