MODULE <test-module>
  FILE /delegatedThisWithLambda.kt
    CLASS CLASS A
      CONSTRUCTOR public constructor A(/*0*/ f: () -> kotlin.Int)
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          SET_BACKING_FIELD f type=kotlin.Unit operator=null
            receiver: THIS public final class A type=A
            value: GET_VAR f type=() -> kotlin.Int operator=INITIALIZE_PROPERTY_FROM_PARAMETER
          INSTANCE_INITIALIZER_CALL classDescriptor=A
      PROPERTY public final val f: () -> kotlin.Int
        EXPRESSION_BODY
          GET_VAR f type=() -> kotlin.Int operator=INITIALIZE_PROPERTY_FROM_PARAMETER
      CONSTRUCTOR public constructor A()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL A
            f: BLOCK type=() -> kotlin.Int operator=LAMBDA
              FUN local final fun <anonymous>(): kotlin.Int
                BLOCK_BODY
                  RETURN type=kotlin.Nothing from=<anonymous>
                    CONST Int type=kotlin.Int value='23'
              CALLABLE_REFERENCE <anonymous> type=() -> kotlin.Int operator=LAMBDA
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        VAR val result: kotlin.Int
          CALL .invoke type=kotlin.Int operator=INVOKE
            $this: CALL .<get-f> type=() -> kotlin.Int operator=GET_PROPERTY
              $this: CALL .<init> type=A operator=null
        WHEN type=kotlin.Unit operator=IF
          if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
              arg0: GET_VAR result type=kotlin.Int operator=null
              arg1: CONST Int type=kotlin.Int value='23'
          then: RETURN type=kotlin.Nothing from=box
            STRING_CONCATENATION type=kotlin.String
              CONST String type=kotlin.String value='fail: '
              GET_VAR result type=kotlin.Int operator=null
        RETURN type=kotlin.Nothing from=box
          CONST String type=kotlin.String value='OK'
