MODULE <test-module>
  FILE /objectWithSuperclassAndTrait.kt
    CLASS CLASS A
      CONSTRUCTOR public constructor A()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          INSTANCE_INITIALIZER_CALL classDescriptor=A
      FUN public open fun foo(): kotlin.Int
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=foo
            CONST Int type=kotlin.Int value='2'
    CLASS INTERFACE T
      FUN public open fun foo(): kotlin.Int
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=foo
            CONST Int type=kotlin.Int value='3'
    CLASS OBJECT O
      CONSTRUCTOR private constructor O()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL A
          INSTANCE_INITIALIZER_CALL classDescriptor=O
      FUN public open override /*2*/ fun foo(): kotlin.Int
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=foo
            CALL .plus type=kotlin.Int operator=PLUS
              $this: CALL .foo superQualifier=A type=kotlin.Int operator=null
                $this: THIS public object O : A, T type=A
              other: CALL .foo superQualifier=T type=kotlin.Int operator=null
                $this: THIS public object O : A, T type=T
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        RETURN type=kotlin.Nothing from=box
          WHEN type=kotlin.String operator=IF
            if: CALL .EQEQ type=kotlin.Boolean operator=EQEQ
              arg0: CALL .foo type=kotlin.Int operator=null
                $this: GET_OBJECT O type=O
              arg1: CONST Int type=kotlin.Int value='5'
            then: CONST String type=kotlin.String value='OK'
            else: CONST String type=kotlin.String value='fail'
