MODULE <test-module>
  FILE /kt1047.kt
    CLASS CLASS Test
      CONSTRUCTOR public constructor Test()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          INSTANCE_INITIALIZER_CALL classDescriptor=Test
      FUN public open fun test(): kotlin.Unit
        BLOCK_BODY
          BLOCK type=kotlin.Unit? operator=SAFE_CALL
            VAR val tmp0_safe_receiver: java.io.PrintStream!
              GET_BACKING_FIELD out type=java.io.PrintStream! operator=GET_PROPERTY
            WHEN type=kotlin.Unit? operator=SAFE_CALL
              if: CALL .EQEQ type=kotlin.Boolean operator=EQEQ
                arg0: GET_VAR tmp0_safe_receiver type=java.io.PrintStream! operator=null
                arg1: CONST Null type=kotlin.Nothing? value='null'
              then: CONST Null type=kotlin.Nothing? value='null'
              else: CALL .println type=kotlin.Unit operator=null
                $this: TYPE_OP operator=IMPLICIT_NOTNULL typeOperand=java.io.PrintStream
                  GET_VAR tmp0_safe_receiver type=java.io.PrintStream! operator=null
                p0: CALL .<get-hello> type=kotlin.String? operator=GET_PROPERTY
                  $this: THIS public companion object Companion type=Test.Companion
      CLASS OBJECT Companion
        CONSTRUCTOR private constructor Companion()
          BLOCK_BODY
            DELEGATING_CONSTRUCTOR_CALL Any
            INSTANCE_INITIALIZER_CALL classDescriptor=Companion
        PROPERTY private final val hello: kotlin.String? = "Hello"
          EXPRESSION_BODY
            CONST String type=kotlin.String value='Hello'
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        CALL .test type=kotlin.Unit operator=null
          $this: CALL .<init> type=Test operator=null
        RETURN type=kotlin.Nothing from=box
          CONST String type=kotlin.String value='OK'
