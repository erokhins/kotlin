MODULE <test-module>
  FILE /smartCastInsideIf.kt
    CLASS CLASS A
      CONSTRUCTOR public constructor A(/*0*/ s: kotlin.String = ...)
        s: EXPRESSION_BODY
          CONST String type=kotlin.String value='FAIL'
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          SET_BACKING_FIELD s type=kotlin.Unit operator=null
            receiver: THIS public final class A type=A
            value: GET_VAR s type=kotlin.String operator=INITIALIZE_PROPERTY_FROM_PARAMETER
          INSTANCE_INITIALIZER_CALL classDescriptor=A
      PROPERTY public final val s: kotlin.String
        EXPRESSION_BODY
          GET_VAR s type=kotlin.String operator=INITIALIZE_PROPERTY_FROM_PARAMETER
    FUN private fun foo(/*0*/ a: A?, /*1*/ aOther: A?): A
      BLOCK_BODY
        RETURN type=kotlin.Nothing from=foo
          WHEN type=A operator=IF
            if: CALL .EQEQ type=kotlin.Boolean operator=EQEQ
              arg0: GET_VAR a type=A? operator=null
              arg1: CONST Null type=kotlin.Nothing? value='null'
            then: BLOCK type=A operator=null
              CALL .<init> type=A operator=null
            else: BLOCK type=A? operator=null
              WHEN type=kotlin.Unit operator=IF
                if: CALL .EQEQ type=kotlin.Boolean operator=EQEQ
                  arg0: GET_VAR aOther type=A? operator=null
                  arg1: CONST Null type=kotlin.Nothing? value='null'
                then: BLOCK type=kotlin.Nothing operator=null
                  RETURN type=kotlin.Nothing from=foo
                    CALL .<init> type=A operator=null
              GET_VAR aOther type=A? operator=null
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        RETURN type=kotlin.Nothing from=box
          CALL .<get-s> type=kotlin.String operator=GET_PROPERTY
            $this: CALL .foo type=A operator=null
              a: CALL .<init> type=A operator=null
                s: CONST String type=kotlin.String value='???'
              aOther: CALL .<init> type=A operator=null
                s: CONST String type=kotlin.String value='OK'
