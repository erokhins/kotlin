MODULE <test-module>
  FILE /annotation.kt
    CLASS ANNOTATION_CLASS A
      CONSTRUCTOR public constructor A(/*0*/ a: kotlin.Int = ...)
        a: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='0'
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          SET_BACKING_FIELD a type=kotlin.Unit operator=null
            receiver: THIS public final annotation class A : kotlin.Annotation type=A
            value: GET_VAR a type=kotlin.Int operator=INITIALIZE_PROPERTY_FROM_PARAMETER
          INSTANCE_INITIALIZER_CALL classDescriptor=A
      PROPERTY public final val a: kotlin.Int
        EXPRESSION_BODY
          GET_VAR a type=kotlin.Int operator=INITIALIZE_PROPERTY_FROM_PARAMETER
    FUN @A() public fun test1(): kotlin.Int
      BLOCK_BODY
        RETURN type=kotlin.Nothing from=test1
          CONST Int type=kotlin.Int value='1'
    FUN @A(a = 2) public fun test2(): kotlin.Int
      BLOCK_BODY
        RETURN type=kotlin.Nothing from=test2
          CONST Int type=kotlin.Int value='1'
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        WHEN type=kotlin.Unit operator=IF
          if: CALL .EQEQ type=kotlin.Boolean operator=EQEQ
            arg0: CALL .plus type=kotlin.Int operator=PLUS
              $this: CALL .test1 type=kotlin.Int operator=null
              other: CALL .test2 type=kotlin.Int operator=null
            arg1: CONST Int type=kotlin.Int value='2'
          then: BLOCK type=kotlin.Nothing operator=null
            RETURN type=kotlin.Nothing from=box
              CONST String type=kotlin.String value='OK'
        RETURN type=kotlin.Nothing from=box
          CONST String type=kotlin.String value='fail'
