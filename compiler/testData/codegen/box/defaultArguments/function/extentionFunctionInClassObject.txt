MODULE <test-module>
  FILE /extentionFunctionInClassObject.kt
    CLASS CLASS A
      CONSTRUCTOR public constructor A()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          INSTANCE_INITIALIZER_CALL classDescriptor=A
      CLASS OBJECT Companion
        CONSTRUCTOR private constructor Companion()
          BLOCK_BODY
            DELEGATING_CONSTRUCTOR_CALL Any
            INSTANCE_INITIALIZER_CALL classDescriptor=Companion
        FUN public final fun kotlin.Int.foo(/*0*/ a: kotlin.Int = ...): kotlin.Int
          a: EXPRESSION_BODY
            CONST Int type=kotlin.Int value='1'
          BLOCK_BODY
            RETURN type=kotlin.Nothing from=foo
              GET_VAR a type=kotlin.Int operator=null
        FUN public final fun test(): kotlin.String
          BLOCK_BODY
            WHEN type=kotlin.Unit operator=IF
              if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
                arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
                  arg0: CALL .foo type=kotlin.Int operator=null
                    $this: THIS public companion object Companion type=A.Companion
                    $receiver: CONST Int type=kotlin.Int value='1'
                  arg1: CONST Int type=kotlin.Int value='1'
              then: RETURN type=kotlin.Nothing from=test
                CONST String type=kotlin.String value='fail'
            WHEN type=kotlin.Unit operator=IF
              if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
                arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
                  arg0: CALL .foo type=kotlin.Int operator=null
                    $this: THIS public companion object Companion type=A.Companion
                    $receiver: CONST Int type=kotlin.Int value='1'
                    a: CONST Int type=kotlin.Int value='2'
                  arg1: CONST Int type=kotlin.Int value='2'
              then: RETURN type=kotlin.Nothing from=test
                CONST String type=kotlin.String value='fail'
            RETURN type=kotlin.Nothing from=test
              CONST String type=kotlin.String value='OK'
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        RETURN type=kotlin.Nothing from=box
          CALL .test type=kotlin.String operator=null
            $this: GET_OBJECT Companion type=A.Companion
