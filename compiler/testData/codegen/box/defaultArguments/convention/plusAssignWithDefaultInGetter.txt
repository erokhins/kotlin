MODULE <test-module>
  FILE /plusAssignWithDefaultInGetter.kt
    CLASS CLASS X
      CONSTRUCTOR public constructor X()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          INSTANCE_INITIALIZER_CALL classDescriptor=X
      PROPERTY public final var result: kotlin.String
        EXPRESSION_BODY
          CONST String type=kotlin.String value='fail'
      FUN public final operator fun get(/*0*/ name: kotlin.String, /*1*/ type: kotlin.String = ...): kotlin.String
        type: EXPRESSION_BODY
          CONST String type=kotlin.String value='none'
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=get
            CALL .plus type=kotlin.String operator=PLUS
              $this: GET_VAR name type=kotlin.String operator=null
              other: GET_VAR type type=kotlin.String operator=null
      FUN public final operator fun set(/*0*/ name: kotlin.String, /*1*/ s: kotlin.String): kotlin.Unit
        BLOCK_BODY
          CALL .<set-result> type=kotlin.Unit operator=EQ
            $this: THIS public final class X type=X
            <set-?>: CALL .plus type=kotlin.String operator=PLUS
              $this: GET_VAR name type=kotlin.String operator=null
              other: GET_VAR s type=kotlin.String operator=null
    CLASS CLASS Y
      CONSTRUCTOR public constructor Y()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          INSTANCE_INITIALIZER_CALL classDescriptor=Y
      PROPERTY public final var result: kotlin.String
        EXPRESSION_BODY
          CONST String type=kotlin.String value='fail'
      FUN public final operator fun get(/*0*/ name: kotlin.String, /*1*/ type: kotlin.String = ..., /*2*/ type2: kotlin.String = ...): kotlin.String
        type: EXPRESSION_BODY
          CONST String type=kotlin.String value='no'
        type2: EXPRESSION_BODY
          CONST String type=kotlin.String value='ne'
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=get
            CALL .plus type=kotlin.String operator=PLUS
              $this: CALL .plus type=kotlin.String operator=PLUS
                $this: GET_VAR name type=kotlin.String operator=null
                other: GET_VAR type type=kotlin.String operator=null
              other: GET_VAR type2 type=kotlin.String operator=null
      FUN public final operator fun set(/*0*/ name: kotlin.String, /*1*/ s: kotlin.String): kotlin.Unit
        BLOCK_BODY
          CALL .<set-result> type=kotlin.Unit operator=EQ
            $this: THIS public final class Y type=Y
            <set-?>: CALL .plus type=kotlin.String operator=PLUS
              $this: GET_VAR name type=kotlin.String operator=null
              other: GET_VAR s type=kotlin.String operator=null
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        VAR var x: X
          CALL .<init> type=X operator=null
        BLOCK type=kotlin.Unit operator=PLUSEQ
          VAR val tmp0_array: X
            GET_VAR x type=X operator=null
          VAR val tmp1_index0: kotlin.String
            CONST String type=kotlin.String value='a'
          CALL .set type=kotlin.Unit operator=PLUSEQ
            $this: GET_VAR tmp0_array type=X operator=null
            name: GET_VAR tmp1_index0 type=kotlin.String operator=null
            s: CALL .plus type=kotlin.String operator=PLUSEQ
              $this: CALL .get type=kotlin.String operator=PLUSEQ
                $this: GET_VAR tmp0_array type=X operator=null
                name: GET_VAR tmp1_index0 type=kotlin.String operator=null
              other: CONST String type=kotlin.String value='OK'
        WHEN type=kotlin.Unit operator=IF
          if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
              arg0: CALL .<get-result> type=kotlin.String operator=GET_PROPERTY
                $this: GET_VAR x type=X operator=null
              arg1: CONST String type=kotlin.String value='aanoneOK'
          then: RETURN type=kotlin.Nothing from=box
            STRING_CONCATENATION type=kotlin.String
              CONST String type=kotlin.String value='fail: '
              CALL .<get-result> type=kotlin.String operator=GET_PROPERTY
                $this: GET_VAR x type=X operator=null
        VAR var y: Y
          CALL .<init> type=Y operator=null
        BLOCK type=kotlin.Unit operator=PLUSEQ
          VAR val tmp2_array: Y
            GET_VAR y type=Y operator=null
          VAR val tmp3_index0: kotlin.String
            CONST String type=kotlin.String value='a'
          CALL .set type=kotlin.Unit operator=PLUSEQ
            $this: GET_VAR tmp2_array type=Y operator=null
            name: GET_VAR tmp3_index0 type=kotlin.String operator=null
            s: CALL .plus type=kotlin.String operator=PLUSEQ
              $this: CALL .get type=kotlin.String operator=PLUSEQ
                $this: GET_VAR tmp2_array type=Y operator=null
                name: GET_VAR tmp3_index0 type=kotlin.String operator=null
              other: CONST String type=kotlin.String value='OK'
        WHEN type=kotlin.Unit operator=IF
          if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
              arg0: CALL .<get-result> type=kotlin.String operator=GET_PROPERTY
                $this: GET_VAR y type=Y operator=null
              arg1: CONST String type=kotlin.String value='aanoneOK'
          then: RETURN type=kotlin.Nothing from=box
            STRING_CONCATENATION type=kotlin.String
              CONST String type=kotlin.String value='fail: '
              CALL .<get-result> type=kotlin.String operator=GET_PROPERTY
                $this: GET_VAR y type=Y operator=null
        RETURN type=kotlin.Nothing from=box
          CONST String type=kotlin.String value='OK'
