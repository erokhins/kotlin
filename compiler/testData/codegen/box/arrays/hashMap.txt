MODULE <test-module>
  FILE /hashMap.kt
    FUN public operator fun java.util.HashMap<kotlin.String, kotlin.Int?>.set(/*0*/ index: kotlin.String, /*1*/ elem: kotlin.Int?): kotlin.Unit
      BLOCK_BODY
        CALL .put type=kotlin.Int? operator=null
          $this: $RECEIVER of: set type=java.util.HashMap<kotlin.String, kotlin.Int?>
          key: GET_VAR index type=kotlin.String operator=null
          value: GET_VAR elem type=kotlin.Int? operator=null
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        VAR val s: java.util.HashMap<kotlin.String, kotlin.Int?>
          CALL .<init> type=java.util.HashMap<kotlin.String, kotlin.Int?> operator=null
        CALL .set type=kotlin.Unit operator=EQ
          $receiver: GET_VAR s type=java.util.HashMap<kotlin.String, kotlin.Int?> operator=null
          index: CONST String type=kotlin.String value='239'
          elem: CONST Int type=kotlin.Int value='239'
        RETURN type=kotlin.Nothing from=box
          WHEN type=kotlin.String operator=IF
            if: CALL .EQEQ type=kotlin.Boolean operator=EQEQ
              arg0: CALL .get type=kotlin.Int? operator=GET_ARRAY_ELEMENT
                $this: GET_VAR s type=java.util.HashMap<kotlin.String, kotlin.Int?> operator=null
                key: CONST String type=kotlin.String value='239'
              arg1: CONST Int type=kotlin.Int value='239'
            then: CONST String type=kotlin.String value='OK'
            else: CONST String type=kotlin.String value='Fail'
