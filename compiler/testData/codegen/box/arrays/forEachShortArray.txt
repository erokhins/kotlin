MODULE <test-module>
  FILE /forEachShortArray.kt
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        BLOCK type=kotlin.Unit operator=FOR_LOOP
          VAR val tmp0_iterator: kotlin.collections.ShortIterator
            CALL .iterator type=kotlin.collections.ShortIterator operator=FOR_LOOP_ITERATOR
              $this: CALL .<init> type=kotlin.ShortArray operator=null
                size: CONST Int type=kotlin.Int value='5'
          WHILE label=null operator=FOR_LOOP_INNER_WHILE
            condition: CALL .hasNext type=kotlin.Boolean operator=FOR_LOOP_HAS_NEXT
              $this: GET_VAR tmp0_iterator type=kotlin.collections.ShortIterator operator=null
            body: BLOCK type=kotlin.Unit operator=FOR_LOOP_INNER_WHILE
              VAR val x: kotlin.Short
                CALL .next type=kotlin.Short operator=FOR_LOOP_NEXT
                  $this: GET_VAR tmp0_iterator type=kotlin.collections.ShortIterator operator=null
              BLOCK type=kotlin.Unit operator=null
                WHEN type=kotlin.Unit operator=IF
                  if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
                    arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
                      arg0: GET_VAR x type=kotlin.Short operator=null
                      arg1: CALL .toShort type=kotlin.Short operator=null
                        $this: CONST Int type=kotlin.Int value='0'
                  then: RETURN type=kotlin.Nothing from=box
                    STRING_CONCATENATION type=kotlin.String
                      CONST String type=kotlin.String value='Fail '
                      GET_VAR x type=kotlin.Short operator=null
        RETURN type=kotlin.Nothing from=box
          CONST String type=kotlin.String value='OK'
