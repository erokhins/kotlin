MODULE <test-module>
  FILE /nullableEnum.kt
    CLASS ENUM_CLASS E
      CONSTRUCTOR private constructor E()
        BLOCK_BODY
          ENUM_CONSTRUCTOR_CALL Enum super
          INSTANCE_INITIALIZER_CALL classDescriptor=E
      ENUM_ENTRY enum entry A
        init: ENUM_CONSTRUCTOR_CALL E A
      ENUM_ENTRY enum entry B
        init: ENUM_CONSTRUCTOR_CALL E B
      FUN public final /*synthesized*/ fun values(): kotlin.Array<E>
        SYNTHETIC_BODY kind=ENUM_VALUES
      FUN public final /*synthesized*/ fun valueOf(/*0*/ value: kotlin.String): E
        SYNTHETIC_BODY kind=ENUM_VALUEOF
    FUN public fun test(/*0*/ e: E?): kotlin.String
      BLOCK_BODY
        RETURN type=kotlin.Nothing from=test
          BLOCK type=kotlin.String operator=WHEN
            VAR val tmp0_subject: E?
              GET_VAR e type=E? operator=null
            WHEN type=kotlin.String operator=WHEN
              if: CALL .EQEQ type=kotlin.Boolean operator=EQEQ
                arg0: GET_VAR tmp0_subject type=E? operator=null
                arg1: GET_ENUM_VALUE A type=E
              then: CONST String type=kotlin.String value='Fail A'
              if: CALL .EQEQ type=kotlin.Boolean operator=EQEQ
                arg0: GET_VAR tmp0_subject type=E? operator=null
                arg1: CONST Null type=kotlin.Nothing? value='null'
              then: CONST String type=kotlin.String value='OK'
              if: CALL .EQEQ type=kotlin.Boolean operator=EQEQ
                arg0: GET_VAR tmp0_subject type=E? operator=null
                arg1: GET_ENUM_VALUE B type=E
              then: CONST String type=kotlin.String value='Fail B'
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        RETURN type=kotlin.Nothing from=box
          CALL .test type=kotlin.String operator=null
            e: CONST Null type=kotlin.Nothing? value='null'
