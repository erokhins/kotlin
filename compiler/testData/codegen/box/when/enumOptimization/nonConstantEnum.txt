MODULE <test-module>
  FILE /nonConstantEnum.kt
    CLASS ENUM_CLASS Season
      CONSTRUCTOR private constructor Season()
        BLOCK_BODY
          ENUM_CONSTRUCTOR_CALL Enum super
          INSTANCE_INITIALIZER_CALL classDescriptor=Season
      ENUM_ENTRY enum entry WINTER
        init: ENUM_CONSTRUCTOR_CALL Season WINTER
      ENUM_ENTRY enum entry SPRING
        init: ENUM_CONSTRUCTOR_CALL Season SPRING
      ENUM_ENTRY enum entry SUMMER
        init: ENUM_CONSTRUCTOR_CALL Season SUMMER
      ENUM_ENTRY enum entry AUTUMN
        init: ENUM_CONSTRUCTOR_CALL Season AUTUMN
      FUN public final /*synthesized*/ fun values(): kotlin.Array<Season>
        SYNTHETIC_BODY kind=ENUM_VALUES
      FUN public final /*synthesized*/ fun valueOf(/*0*/ value: kotlin.String): Season
        SYNTHETIC_BODY kind=ENUM_VALUEOF
    FUN public fun foo(): Season
      BLOCK_BODY
        RETURN type=kotlin.Nothing from=foo
          GET_ENUM_VALUE SPRING type=Season
    FUN public fun bar(): Season
      BLOCK_BODY
        RETURN type=kotlin.Nothing from=bar
          GET_ENUM_VALUE SPRING type=Season
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        BLOCK type=kotlin.Nothing operator=WHEN
          VAR val tmp0_subject: Season
            CALL .foo type=Season operator=null
          WHEN type=kotlin.Nothing operator=WHEN
            if: CALL .EQEQ type=kotlin.Boolean operator=EQEQ
              arg0: GET_VAR tmp0_subject type=Season operator=null
              arg1: CALL .bar type=Season operator=null
            then: RETURN type=kotlin.Nothing from=box
              CONST String type=kotlin.String value='OK'
            else: RETURN type=kotlin.Nothing from=box
              CONST String type=kotlin.String value='fail'
