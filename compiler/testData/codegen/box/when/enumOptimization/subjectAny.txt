MODULE <test-module>
  FILE /subjectAny.kt
    CLASS ENUM_CLASS Season
      CONSTRUCTOR private constructor Season()
        BLOCK_BODY
          ENUM_CONSTRUCTOR_CALL Enum super
          INSTANCE_INITIALIZER_CALL classDescriptor=Season
      ENUM_ENTRY enum entry WINTER
        init: ENUM_CONSTRUCTOR_CALL Season WINTER
      ENUM_ENTRY enum entry SPRING
        init: ENUM_CONSTRUCTOR_CALL Season SPRING
      ENUM_ENTRY enum entry SUMMER
        init: ENUM_CONSTRUCTOR_CALL Season SUMMER
      ENUM_ENTRY enum entry AUTUMN
        init: ENUM_CONSTRUCTOR_CALL Season AUTUMN
      FUN public final /*synthesized*/ fun values(): kotlin.Array<Season>
        SYNTHETIC_BODY kind=ENUM_VALUES
      FUN public final /*synthesized*/ fun valueOf(/*0*/ value: kotlin.String): Season
        SYNTHETIC_BODY kind=ENUM_VALUEOF
    FUN public fun foo(/*0*/ x: kotlin.Any): kotlin.String
      BLOCK_BODY
        RETURN type=kotlin.Nothing from=foo
          BLOCK type=kotlin.String operator=WHEN
            VAR val tmp0_subject: kotlin.Any
              GET_VAR x type=kotlin.Any operator=null
            WHEN type=kotlin.String operator=WHEN
              if: CALL .EQEQ type=kotlin.Boolean operator=EQEQ
                arg0: GET_VAR tmp0_subject type=kotlin.Any operator=null
                arg1: GET_ENUM_VALUE WINTER type=Season
              then: CONST String type=kotlin.String value='winter'
              if: CALL .EQEQ type=kotlin.Boolean operator=EQEQ
                arg0: GET_VAR tmp0_subject type=kotlin.Any operator=null
                arg1: GET_ENUM_VALUE SPRING type=Season
              then: CONST String type=kotlin.String value='spring'
              if: CALL .EQEQ type=kotlin.Boolean operator=EQEQ
                arg0: GET_VAR tmp0_subject type=kotlin.Any operator=null
                arg1: GET_ENUM_VALUE SUMMER type=Season
              then: CONST String type=kotlin.String value='summer'
              else: CONST String type=kotlin.String value='other'
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        CALL .assertEquals type=kotlin.Unit operator=null
          expected: CONST String type=kotlin.String value='winter'
          actual: CALL .foo type=kotlin.String operator=null
            x: GET_ENUM_VALUE WINTER type=Season
        CALL .assertEquals type=kotlin.Unit operator=null
          expected: CONST String type=kotlin.String value='spring'
          actual: CALL .foo type=kotlin.String operator=null
            x: GET_ENUM_VALUE SPRING type=Season
        CALL .assertEquals type=kotlin.Unit operator=null
          expected: CONST String type=kotlin.String value='summer'
          actual: CALL .foo type=kotlin.String operator=null
            x: GET_ENUM_VALUE SUMMER type=Season
        CALL .assertEquals type=kotlin.Unit operator=null
          expected: CONST String type=kotlin.String value='other'
          actual: CALL .foo type=kotlin.String operator=null
            x: GET_ENUM_VALUE AUTUMN type=Season
        CALL .assertEquals type=kotlin.Unit operator=null
          expected: CONST String type=kotlin.String value='other'
          actual: CALL .foo type=kotlin.String operator=null
            x: CONST Int type=kotlin.Int value='123'
        RETURN type=kotlin.Nothing from=box
          CONST String type=kotlin.String value='OK'
