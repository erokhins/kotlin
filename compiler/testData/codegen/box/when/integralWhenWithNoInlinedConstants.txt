MODULE <test-module>
  FILE /integralWhenWithNoInlinedConstants.kt
    FUN public fun foo1(/*0*/ x: kotlin.Int): kotlin.Boolean
      BLOCK_BODY
        BLOCK type=kotlin.Nothing operator=WHEN
          VAR val tmp0_subject: kotlin.Int
            GET_VAR x type=kotlin.Int operator=null
          WHEN type=kotlin.Nothing operator=WHEN
            if: CALL .EQEQ type=kotlin.Boolean operator=EQEQ
              arg0: GET_VAR tmp0_subject type=kotlin.Int operator=null
              arg1: CALL .plus type=kotlin.Int operator=PLUS
                $this: CONST Int type=kotlin.Int value='2'
                other: CONST Int type=kotlin.Int value='2'
            then: RETURN type=kotlin.Nothing from=foo1
              CONST Boolean type=kotlin.Boolean value='true'
            else: RETURN type=kotlin.Nothing from=foo1
              CONST Boolean type=kotlin.Boolean value='false'
    FUN public fun foo2(/*0*/ x: kotlin.Int): kotlin.Boolean
      BLOCK_BODY
        BLOCK type=kotlin.Nothing operator=WHEN
          VAR val tmp0_subject: kotlin.Int
            GET_VAR x type=kotlin.Int operator=null
          WHEN type=kotlin.Nothing operator=WHEN
            if: CALL .EQEQ type=kotlin.Boolean operator=EQEQ
              arg0: GET_VAR tmp0_subject type=kotlin.Int operator=null
              arg1: GET_BACKING_FIELD MAX_VALUE type=kotlin.Int operator=GET_PROPERTY
            then: RETURN type=kotlin.Nothing from=foo2
              CONST Boolean type=kotlin.Boolean value='true'
            else: RETURN type=kotlin.Nothing from=foo2
              CONST Boolean type=kotlin.Boolean value='false'
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        CALL .assert type=kotlin.Unit operator=null
          value: CALL .foo1 type=kotlin.Boolean operator=null
            x: CONST Int type=kotlin.Int value='4'
        CALL .assert type=kotlin.Unit operator=null
          value: CALL .not type=kotlin.Boolean operator=EXCL
            $this: CALL .foo1 type=kotlin.Boolean operator=null
              x: CONST Int type=kotlin.Int value='1'
        CALL .assert type=kotlin.Unit operator=null
          value: CALL .foo2 type=kotlin.Boolean operator=null
            x: GET_BACKING_FIELD MAX_VALUE type=kotlin.Int operator=GET_PROPERTY
        CALL .assert type=kotlin.Unit operator=null
          value: CALL .not type=kotlin.Boolean operator=EXCL
            $this: CALL .foo2 type=kotlin.Boolean operator=null
              x: CONST Int type=kotlin.Int value='1'
        RETURN type=kotlin.Nothing from=box
          CONST String type=kotlin.String value='OK'
