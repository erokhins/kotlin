MODULE <test-module>
  FILE /constructorAndClassObject.kt
    CLASS CLASS Test
      CONSTRUCTOR public constructor Test(/*0*/ prop: kotlin.String)
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          SET_BACKING_FIELD prop type=kotlin.Unit operator=null
            receiver: THIS public final class Test type=Test
            value: GET_VAR prop type=kotlin.String operator=INITIALIZE_PROPERTY_FROM_PARAMETER
          INSTANCE_INITIALIZER_CALL classDescriptor=Test
      PROPERTY public final val prop: kotlin.String
        EXPRESSION_BODY
          GET_VAR prop type=kotlin.String operator=INITIALIZE_PROPERTY_FROM_PARAMETER
      CLASS OBJECT Companion
        CONSTRUCTOR private constructor Companion()
          BLOCK_BODY
            DELEGATING_CONSTRUCTOR_CALL Any
            INSTANCE_INITIALIZER_CALL classDescriptor=Companion
        PROPERTY public final val prop: kotlin.String = "CO"
          EXPRESSION_BODY
            CONST String type=kotlin.String value='CO'
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        VAR val obj: Test
          CALL .<init> type=Test operator=null
            prop: CONST String type=kotlin.String value='OK'
        WHEN type=kotlin.Unit operator=IF
          if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
              arg0: CALL .<get-prop> type=kotlin.String operator=GET_PROPERTY
                $this: GET_OBJECT Companion type=Test.Companion
              arg1: CONST String type=kotlin.String value='CO'
          then: RETURN type=kotlin.Nothing from=box
            CONST String type=kotlin.String value='fail1'
        RETURN type=kotlin.Nothing from=box
          CALL .<get-prop> type=kotlin.String operator=GET_PROPERTY
            $this: GET_VAR obj type=Test operator=null
