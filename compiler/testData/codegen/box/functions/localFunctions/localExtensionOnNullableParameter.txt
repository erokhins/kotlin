MODULE <test-module>
  FILE /localExtensionOnNullableParameter.kt
    CLASS CLASS T
      CONSTRUCTOR public constructor T(/*0*/ value: kotlin.Int)
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          SET_BACKING_FIELD value type=kotlin.Unit operator=null
            receiver: THIS public open class T type=T
            value: GET_VAR value type=kotlin.Int operator=INITIALIZE_PROPERTY_FROM_PARAMETER
          INSTANCE_INITIALIZER_CALL classDescriptor=T
      PROPERTY public final var value: kotlin.Int
        EXPRESSION_BODY
          GET_VAR value type=kotlin.Int operator=INITIALIZE_PROPERTY_FROM_PARAMETER
    FUN public fun localExtensionOnNullableParameter(): T
      BLOCK_BODY
        FUN local final fun T.local(/*0*/ s: kotlin.Int): kotlin.Unit
          BLOCK_BODY
            BLOCK type=kotlin.Unit operator=PLUSEQ
              VAR val tmp0_this: T
                $RECEIVER of: local type=T
              CALL .<set-value> type=kotlin.Unit operator=PLUSEQ
                $this: GET_VAR tmp0_this type=T operator=null
                <set-?>: CALL .plus type=kotlin.Int operator=PLUSEQ
                  $this: CALL .<get-value> type=kotlin.Int operator=PLUSEQ
                    $this: GET_VAR tmp0_this type=T operator=null
                  other: GET_VAR s type=kotlin.Int operator=null
        VAR var t: T?
          CALL .<init> type=T operator=null
            value: CONST Int type=kotlin.Int value='1'
        BLOCK type=kotlin.Unit? operator=SAFE_CALL
          VAR val tmp0_safe_receiver: T?
            GET_VAR t type=T? operator=null
          WHEN type=kotlin.Unit? operator=SAFE_CALL
            if: CALL .EQEQ type=kotlin.Boolean operator=EQEQ
              arg0: GET_VAR tmp0_safe_receiver type=T? operator=null
              arg1: CONST Null type=kotlin.Nothing? value='null'
            then: CONST Null type=kotlin.Nothing? value='null'
            else: CALL .local type=kotlin.Unit operator=null
              $this: GET_VAR tmp0_safe_receiver type=T? operator=null
              s: CONST Int type=kotlin.Int value='2'
        RETURN type=kotlin.Nothing from=localExtensionOnNullableParameter
          BLOCK type=T operator=EXCLEXCL
            VAR val tmp1_notnull: T?
              GET_VAR t type=T? operator=null
            WHEN type=T operator=null
              if: CALL .EQEQ type=kotlin.Boolean operator=EQEQ
                arg0: GET_VAR tmp1_notnull type=T? operator=null
                arg1: CONST Null type=kotlin.Nothing? value='null'
              then: CALL .THROW_NPE type=kotlin.Nothing operator=EXCLEXCL
              else: GET_VAR tmp1_notnull type=T? operator=null
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        VAR val result: kotlin.Int
          CALL .<get-value> type=kotlin.Int operator=GET_PROPERTY
            $this: CALL .localExtensionOnNullableParameter type=T operator=null
        WHEN type=kotlin.Unit operator=IF
          if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
              arg0: GET_VAR result type=kotlin.Int operator=null
              arg1: CONST Int type=kotlin.Int value='3'
          then: RETURN type=kotlin.Nothing from=box
            STRING_CONCATENATION type=kotlin.String
              CONST String type=kotlin.String value='fail 2: '
              GET_VAR result type=kotlin.Int operator=null
        RETURN type=kotlin.Nothing from=box
          CONST String type=kotlin.String value='OK'
