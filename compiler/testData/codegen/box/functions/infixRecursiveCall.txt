MODULE <test-module>
  FILE /infixRecursiveCall.kt
    FUN public infix fun kotlin.Int.test(/*0*/ x: kotlin.Int): kotlin.Int
      BLOCK_BODY
        WHEN type=kotlin.Unit operator=IF
          if: CALL .GT0 type=kotlin.Boolean operator=GT
            arg0: CALL .compareTo type=kotlin.Int operator=GT
              $this: $RECEIVER of: test type=kotlin.Int
              other: CONST Int type=kotlin.Int value='1'
          then: BLOCK type=kotlin.Nothing operator=null
            RETURN type=kotlin.Nothing from=test
              CALL .test type=kotlin.Int operator=null
                $receiver: CALL .minus type=kotlin.Int operator=MINUS
                  $this: $RECEIVER of: test type=kotlin.Int
                  other: CONST Int type=kotlin.Int value='1'
                x: GET_VAR x type=kotlin.Int operator=null
        RETURN type=kotlin.Nothing from=test
          $RECEIVER of: test type=kotlin.Int
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        RETURN type=kotlin.Nothing from=box
          WHEN type=kotlin.String operator=IF
            if: CALL .EQEQ type=kotlin.Boolean operator=EQEQ
              arg0: CALL .test type=kotlin.Int operator=null
                $receiver: CONST Int type=kotlin.Int value='10'
                x: CONST Int type=kotlin.Int value='10'
              arg1: CONST Int type=kotlin.Int value='1'
            then: CONST String type=kotlin.String value='OK'
            else: CONST String type=kotlin.String value='FAIL'
