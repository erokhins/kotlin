MODULE <test-module>
  FILE /defaultargs7.kt
    CLASS CLASS A
      CONSTRUCTOR public constructor A(/*0*/ expected: kotlin.Int)
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          SET_BACKING_FIELD expected type=kotlin.Unit operator=null
            receiver: THIS public final class A type=A
            value: GET_VAR expected type=kotlin.Int operator=INITIALIZE_PROPERTY_FROM_PARAMETER
          INSTANCE_INITIALIZER_CALL classDescriptor=A
      PROPERTY public final val expected: kotlin.Int
        EXPRESSION_BODY
          GET_VAR expected type=kotlin.Int operator=INITIALIZE_PROPERTY_FROM_PARAMETER
      FUN public final fun foo(/*0*/ x: kotlin.Int, /*1*/ y: kotlin.Int = ..., /*2*/ z: kotlin.Int = ...): kotlin.Boolean
        y: EXPRESSION_BODY
          CALL .plus type=kotlin.Int operator=PLUS
            $this: GET_VAR x type=kotlin.Int operator=null
            other: CONST Int type=kotlin.Int value='20'
        z: EXPRESSION_BODY
          CALL .times type=kotlin.Int operator=MUL
            $this: GET_VAR y type=kotlin.Int operator=null
            other: CONST Int type=kotlin.Int value='2'
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=foo
            CALL .EQEQ type=kotlin.Boolean operator=EQEQ
              arg0: GET_VAR z type=kotlin.Int operator=null
              arg1: CALL .<get-expected> type=kotlin.Int operator=GET_PROPERTY
                $this: THIS public final class A type=A
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        RETURN type=kotlin.Nothing from=box
          WHEN type=kotlin.String operator=IF
            if: CALL .foo type=kotlin.Boolean operator=null
              $this: CALL .<init> type=A operator=null
                expected: CONST Int type=kotlin.Int value='42'
              x: CONST Int type=kotlin.Int value='1'
            then: CONST String type=kotlin.String value='OK'
            else: CONST String type=kotlin.String value='Fail'
