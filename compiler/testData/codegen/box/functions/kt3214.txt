MODULE <test-module>
  FILE /kt3214.kt
    CLASS CLASS A
      CONSTRUCTOR public constructor A()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          INSTANCE_INITIALIZER_CALL classDescriptor=A
      FUN public final fun get(/*0*/ vararg x: kotlin.Int /*kotlin.IntArray*/): kotlin.Int
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=get
            CALL .<get-size> type=kotlin.Int operator=GET_PROPERTY
              $this: GET_VAR x type=kotlin.IntArray operator=null
    CLASS CLASS B
      CONSTRUCTOR public constructor B()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          INSTANCE_INITIALIZER_CALL classDescriptor=B
      FUN public final fun get(/*0*/ vararg x: kotlin.Unit /*kotlin.Array<out kotlin.Unit>*/): kotlin.Int
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=get
            CALL .<get-size> type=kotlin.Int operator=GET_PROPERTY
              $this: GET_VAR x type=kotlin.Array<out kotlin.Unit> operator=null
    FUN public fun test1(/*0*/ a: A): kotlin.Int
      BLOCK_BODY
        RETURN type=kotlin.Nothing from=test1
          CALL .get type=kotlin.Int operator=null
            $this: GET_VAR a type=A operator=null
            x: VARARG type=IntArray varargElementType=Int
              CONST Int type=kotlin.Int value='1'
    FUN public fun test2(/*0*/ a: A): kotlin.Int
      BLOCK_BODY
        RETURN type=kotlin.Nothing from=test2
          CALL .get type=kotlin.Int operator=null
            $this: GET_VAR a type=A operator=null
            x: VARARG type=IntArray varargElementType=Int
              CONST Int type=kotlin.Int value='1'
              CONST Int type=kotlin.Int value='2'
    FUN public fun test3(/*0*/ b: B): kotlin.Int
      BLOCK_BODY
        RETURN type=kotlin.Nothing from=test3
          CALL .get type=kotlin.Int operator=null
            $this: GET_VAR b type=B operator=null
            x: VARARG type=Array<out Unit> varargElementType=Unit
              GET_OBJECT Unit type=kotlin.Unit
              GET_OBJECT Unit type=kotlin.Unit
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        VAR var result: kotlin.Int
          CALL .test1 type=kotlin.Int operator=null
            a: CALL .<init> type=A operator=null
        WHEN type=kotlin.Unit operator=IF
          if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
              arg0: GET_VAR result type=kotlin.Int operator=null
              arg1: CONST Int type=kotlin.Int value='1'
          then: RETURN type=kotlin.Nothing from=box
            STRING_CONCATENATION type=kotlin.String
              CONST String type=kotlin.String value='fail1: '
              GET_VAR result type=kotlin.Int operator=null
        SET_VAR result type=kotlin.Unit operator=EQ
          CALL .test2 type=kotlin.Int operator=null
            a: CALL .<init> type=A operator=null
        WHEN type=kotlin.Unit operator=IF
          if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
              arg0: GET_VAR result type=kotlin.Int operator=null
              arg1: CONST Int type=kotlin.Int value='2'
          then: RETURN type=kotlin.Nothing from=box
            STRING_CONCATENATION type=kotlin.String
              CONST String type=kotlin.String value='fail2: '
              GET_VAR result type=kotlin.Int operator=null
        SET_VAR result type=kotlin.Unit operator=EQ
          CALL .test3 type=kotlin.Int operator=null
            b: CALL .<init> type=B operator=null
        WHEN type=kotlin.Unit operator=IF
          if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
              arg0: GET_VAR result type=kotlin.Int operator=null
              arg1: CONST Int type=kotlin.Int value='2'
          then: RETURN type=kotlin.Nothing from=box
            STRING_CONCATENATION type=kotlin.String
              CONST String type=kotlin.String value='fail3: '
              GET_VAR result type=kotlin.Int operator=null
        RETURN type=kotlin.Nothing from=box
          CONST String type=kotlin.String value='OK'
