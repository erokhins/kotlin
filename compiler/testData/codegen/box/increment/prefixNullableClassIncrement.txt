MODULE <test-module>
  FILE /prefixNullableClassIncrement.kt
    CLASS CLASS MyClass
      CONSTRUCTOR public constructor MyClass()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          INSTANCE_INITIALIZER_CALL classDescriptor=MyClass
    FUN public operator fun MyClass?.inc(): MyClass?
      BLOCK_BODY
        RETURN type=kotlin.Nothing from=inc
          CONST Null type=kotlin.Nothing? value='null'
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        VAR var i: MyClass?
        SET_VAR i type=kotlin.Unit operator=EQ
          CALL .<init> type=MyClass operator=null
        VAR val j: MyClass?
          BLOCK type=MyClass? operator=PREFIX_INCR
            VAR val tmp0: MyClass?
              CALL .inc type=MyClass? operator=PREFIX_INCR
                $receiver: GET_VAR i type=MyClass? operator=PREFIX_INCR
            SET_VAR i type=kotlin.Unit operator=PREFIX_INCR
              GET_VAR tmp0 type=MyClass? operator=null
            GET_VAR tmp0 type=MyClass? operator=null
        RETURN type=kotlin.Nothing from=box
          WHEN type=kotlin.String operator=IF
            if: WHEN type=kotlin.Boolean operator=ANDAND
              if: CALL .EQEQ type=kotlin.Boolean operator=EQEQ
                arg0: GET_VAR j type=MyClass? operator=null
                arg1: CONST Null type=kotlin.Nothing? value='null'
              then: CALL .EQEQ type=kotlin.Boolean operator=EQEQ
                arg0: CONST Null type=kotlin.Nothing? value='null'
                arg1: GET_VAR i type=MyClass? operator=null
              else: CONST Boolean type=kotlin.Boolean value='false'
            then: CONST String type=kotlin.String value='OK'
            else: STRING_CONCATENATION type=kotlin.String
              CONST String type=kotlin.String value='fail i = '
              GET_VAR i type=MyClass? operator=null
              CONST String type=kotlin.String value=' j = '
              GET_VAR j type=MyClass? operator=null
