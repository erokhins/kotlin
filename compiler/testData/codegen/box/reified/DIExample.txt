MODULE <test-module>
  FILE /DIExample.kt
    CLASS CLASS Project
      CONSTRUCTOR public constructor Project()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          INSTANCE_INITIALIZER_CALL classDescriptor=Project
      FUN public final fun </*0*/ T> getInstance(/*0*/ cls: java.lang.Class<T>): T
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=getInstance
            BLOCK type=T operator=WHEN
              VAR val tmp0_subject: kotlin.String!
                CALL .getName type=kotlin.String! operator=null
                  $this: GET_VAR cls type=java.lang.Class<T> operator=null
              WHEN type=T operator=WHEN
                if: CALL .EQEQ type=kotlin.Boolean operator=EQEQ
                  arg0: GET_VAR tmp0_subject type=kotlin.String! operator=null
                  arg1: CONST String type=kotlin.String value='java.lang.Integer'
                then: TYPE_OP operator=CAST typeOperand=T
                  CONST Int type=kotlin.Int value='1'
                if: CALL .EQEQ type=kotlin.Boolean operator=EQEQ
                  arg0: GET_VAR tmp0_subject type=kotlin.String! operator=null
                  arg1: CONST String type=kotlin.String value='java.lang.String'
                then: TYPE_OP operator=CAST typeOperand=T
                  CONST String type=kotlin.String value='OK'
                else: BLOCK type=kotlin.Nothing operator=EXCLEXCL
                  VAR val tmp1_notnull: kotlin.Nothing?
                    CONST Null type=kotlin.Nothing? value='null'
                  WHEN type=kotlin.Nothing operator=null
                    if: CALL .EQEQ type=kotlin.Boolean operator=EQEQ
                      arg0: GET_VAR tmp1_notnull type=kotlin.Nothing? operator=null
                      arg1: CONST Null type=kotlin.Nothing? value='null'
                    then: CALL .THROW_NPE type=kotlin.Nothing operator=EXCLEXCL
                    else: GET_VAR tmp1_notnull type=kotlin.Nothing? operator=null
    FUN public operator inline fun </*0*/ reified T : kotlin.Any> Project.getValue(/*0*/ t: kotlin.Any?, /*1*/ p: kotlin.reflect.KProperty<*>): T
      BLOCK_BODY
        RETURN type=kotlin.Nothing from=getValue
          CALL .getInstance type=T operator=null
            $this: $RECEIVER of: getValue type=Project
            cls: CALL .<get-java> type=java.lang.Class<T> operator=GET_PROPERTY
              $receiver: CLASS_REFERENCE T type=kotlin.reflect.KClass<T>
    PROPERTY public val project: Project
      EXPRESSION_BODY
        CALL .<init> type=Project operator=null
    PROPERTY public val x1: kotlin.Int
      delegate: PROPERTY val `x1$delegate`: Project
        EXPRESSION_BODY
          CALL .<get-project> type=Project operator=GET_PROPERTY
      PROPERTY_GETTER public fun <get-x1>(): kotlin.Int
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=<get-x1>
            CALL .getValue type=kotlin.Int operator=null
              $receiver: GET_BACKING_FIELD x1$delegate type=Project operator=null
              t: CONST Null type=kotlin.Nothing? value='null'
              p: CALLABLE_REFERENCE x1 type=kotlin.reflect.KProperty0<kotlin.Int> operator=PROPERTY_REFERENCE_FOR_DELEGATE
    PROPERTY public val x2: kotlin.String
      delegate: PROPERTY val `x2$delegate`: Project
        EXPRESSION_BODY
          CALL .<get-project> type=Project operator=GET_PROPERTY
      PROPERTY_GETTER public fun <get-x2>(): kotlin.String
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=<get-x2>
            CALL .getValue type=kotlin.String operator=null
              $receiver: GET_BACKING_FIELD x2$delegate type=Project operator=null
              t: CONST Null type=kotlin.Nothing? value='null'
              p: CALLABLE_REFERENCE x2 type=kotlin.reflect.KProperty0<kotlin.String> operator=PROPERTY_REFERENCE_FOR_DELEGATE
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        CALL .assertEquals type=kotlin.Unit operator=null
          expected: CONST Int type=kotlin.Int value='1'
          actual: CALL .<get-x1> type=kotlin.Int operator=GET_PROPERTY
        CALL .assertEquals type=kotlin.Unit operator=null
          expected: CONST String type=kotlin.String value='OK'
          actual: CALL .<get-x2> type=kotlin.String operator=GET_PROPERTY
        RETURN type=kotlin.Nothing from=box
          CONST String type=kotlin.String value='OK'
