MODULE <test-module>
  FILE /kotlin.kt
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        VAR val nullStr: kotlin.String!
          CALL .nullString type=kotlin.String! operator=null
        VAR val nonnullStr: kotlin.String!
          CALL .nonnullString type=kotlin.String! operator=null
        WHEN type=kotlin.Unit operator=IF
          if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
              arg0: CALL .foo type=kotlin.String! operator=null
                $receiver: GET_VAR nullStr type=kotlin.String! operator=null
              arg1: CONST Null type=kotlin.Nothing? value='null'
          then: RETURN type=kotlin.Nothing from=box
            CONST String type=kotlin.String value='fail 1'
        WHEN type=kotlin.Unit operator=IF
          if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
              arg0: CALL .foo type=kotlin.String! operator=null
                $receiver: GET_VAR nonnullStr type=kotlin.String! operator=null
              arg1: GET_VAR nonnullStr type=kotlin.String! operator=null
          then: RETURN type=kotlin.Nothing from=box
            CONST String type=kotlin.String value='fail 2'
        WHEN type=kotlin.Unit operator=IF
          if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
              arg0: CALL .fooN type=kotlin.String? operator=null
                $receiver: GET_VAR nullStr type=kotlin.String! operator=null
              arg1: CONST Null type=kotlin.Nothing? value='null'
          then: RETURN type=kotlin.Nothing from=box
            CONST String type=kotlin.String value='fail 3'
        WHEN type=kotlin.Unit operator=IF
          if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
              arg0: CALL .fooN type=kotlin.String? operator=null
                $receiver: GET_VAR nonnullStr type=kotlin.String! operator=null
              arg1: GET_VAR nonnullStr type=kotlin.String! operator=null
          then: RETURN type=kotlin.Nothing from=box
            CONST String type=kotlin.String value='fail 4'
        RETURN type=kotlin.Nothing from=box
          CONST String type=kotlin.String value='OK'
    FUN public inline fun </*0*/ reified T> T.foo(): T
      BLOCK_BODY
        RETURN type=kotlin.Nothing from=foo
          TYPE_OP operator=CAST typeOperand=T
            $RECEIVER of: foo type=T
    FUN public inline fun </*0*/ reified T> T.fooN(): T?
      BLOCK_BODY
        RETURN type=kotlin.Nothing from=fooN
          TYPE_OP operator=CAST typeOperand=T?
            $RECEIVER of: fooN type=T
