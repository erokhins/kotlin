MODULE <test-module>
  FILE /rangeTo.kt
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        VAR val l: java.util.ArrayList<kotlin.Int>
          CALL .<init> type=java.util.ArrayList<kotlin.Int> operator=null
        CALL .add type=kotlin.Boolean operator=null
          $this: GET_VAR l type=java.util.ArrayList<kotlin.Int> operator=null
          element: CONST Int type=kotlin.Int value='2'
        VAR val sb: java.lang.StringBuilder
          CALL .<init> type=java.lang.StringBuilder operator=null
        BLOCK type=kotlin.Unit operator=FOR_LOOP
          VAR val tmp0_iterator: kotlin.collections.IntIterator
            CALL .iterator type=kotlin.collections.IntIterator operator=FOR_LOOP_ITERATOR
              $this: CALL .rangeTo type=kotlin.ranges.IntRange operator=RANGE
                $this: CALL .get type=kotlin.Int operator=GET_ARRAY_ELEMENT
                  $this: GET_VAR l type=java.util.ArrayList<kotlin.Int> operator=null
                  index: CONST Int type=kotlin.Int value='0'
                other: CONST Int type=kotlin.Int value='3'
          WHILE label=null operator=FOR_LOOP_INNER_WHILE
            condition: CALL .hasNext type=kotlin.Boolean operator=FOR_LOOP_HAS_NEXT
              $this: GET_VAR tmp0_iterator type=kotlin.collections.IntIterator operator=null
            body: BLOCK type=kotlin.Unit operator=FOR_LOOP_INNER_WHILE
              VAR val i: kotlin.Int
                CALL .next type=kotlin.Int operator=FOR_LOOP_NEXT
                  $this: GET_VAR tmp0_iterator type=kotlin.collections.IntIterator operator=null
              BLOCK type=java.lang.StringBuilder! operator=null
                CALL .append type=java.lang.StringBuilder! operator=null
                  $this: GET_VAR sb type=java.lang.StringBuilder operator=null
                  p0: GET_VAR i type=kotlin.Int operator=null
        WHEN type=kotlin.Unit operator=IF
          if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
              arg0: CALL .toString type=kotlin.String operator=null
                $this: GET_VAR sb type=java.lang.StringBuilder operator=null
              arg1: CONST String type=kotlin.String value='23'
          then: RETURN type=kotlin.Nothing from=box
            STRING_CONCATENATION type=kotlin.String
              CONST String type=kotlin.String value='Fail: '
              GET_VAR sb type=java.lang.StringBuilder operator=null
              CONST String type=kotlin.String value='}'
        RETURN type=kotlin.Nothing from=box
          CONST String type=kotlin.String value='OK'
