MODULE <test-module>
  FILE /reifiedSafeAsWithMutable.kt
    CLASS CLASS Itr
      CONSTRUCTOR public constructor Itr()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          INSTANCE_INITIALIZER_CALL classDescriptor=Itr
      PROPERTY val `Itr$Iterator$delegate`: kotlin.collections.MutableIterator<kotlin.String>
        EXPRESSION_BODY
          CALL .iterator type=kotlin.collections.MutableIterator<kotlin.String> operator=null
            $this: CALL .<init> type=java.util.ArrayList<kotlin.String> operator=null
      FUN public open override /*1*/ /*delegation*/ fun hasNext(): kotlin.Boolean
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=hasNext
            CALL .hasNext type=kotlin.Boolean operator=null
              $this: GET_VAR Itr$Iterator$delegate type=kotlin.collections.MutableIterator<kotlin.String> operator=null
      FUN public open override /*1*/ /*delegation*/ fun next(): kotlin.String
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=next
            CALL .next type=kotlin.String operator=null
              $this: GET_VAR Itr$Iterator$delegate type=kotlin.collections.MutableIterator<kotlin.String> operator=null
    CLASS CLASS MItr
      CONSTRUCTOR public constructor MItr()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          INSTANCE_INITIALIZER_CALL classDescriptor=MItr
      PROPERTY val `MItr$MutableIterator$delegate`: kotlin.collections.MutableIterator<kotlin.String>
        EXPRESSION_BODY
          CALL .iterator type=kotlin.collections.MutableIterator<kotlin.String> operator=null
            $this: CALL .<init> type=java.util.ArrayList<kotlin.String> operator=null
      FUN public open override /*1*/ /*delegation*/ fun hasNext(): kotlin.Boolean
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=hasNext
            CALL .hasNext type=kotlin.Boolean operator=null
              $this: GET_VAR MItr$MutableIterator$delegate type=kotlin.collections.MutableIterator<kotlin.String> operator=null
      FUN public open override /*1*/ /*delegation*/ fun next(): kotlin.String
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=next
            CALL .next type=kotlin.String operator=null
              $this: GET_VAR MItr$MutableIterator$delegate type=kotlin.collections.MutableIterator<kotlin.String> operator=null
      FUN public open override /*1*/ /*delegation*/ fun remove(): kotlin.Unit
        BLOCK_BODY
          CALL .remove type=kotlin.Unit operator=null
            $this: GET_VAR MItr$MutableIterator$delegate type=kotlin.collections.MutableIterator<kotlin.String> operator=null
    CLASS CLASS LItr
      CONSTRUCTOR public constructor LItr()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          INSTANCE_INITIALIZER_CALL classDescriptor=LItr
      PROPERTY val `LItr$ListIterator$delegate`: kotlin.collections.MutableListIterator<kotlin.String>
        EXPRESSION_BODY
          CALL .listIterator type=kotlin.collections.MutableListIterator<kotlin.String> operator=null
            $this: CALL .<init> type=java.util.ArrayList<kotlin.String> operator=null
      FUN public open override /*1*/ /*delegation*/ fun hasNext(): kotlin.Boolean
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=hasNext
            CALL .hasNext type=kotlin.Boolean operator=null
              $this: GET_VAR LItr$ListIterator$delegate type=kotlin.collections.MutableListIterator<kotlin.String> operator=null
      FUN public open override /*1*/ /*delegation*/ fun hasPrevious(): kotlin.Boolean
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=hasPrevious
            CALL .hasPrevious type=kotlin.Boolean operator=null
              $this: GET_VAR LItr$ListIterator$delegate type=kotlin.collections.MutableListIterator<kotlin.String> operator=null
      FUN public open override /*1*/ /*delegation*/ fun next(): kotlin.String
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=next
            CALL .next type=kotlin.String operator=null
              $this: GET_VAR LItr$ListIterator$delegate type=kotlin.collections.MutableListIterator<kotlin.String> operator=null
      FUN public open override /*1*/ /*delegation*/ fun nextIndex(): kotlin.Int
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=nextIndex
            CALL .nextIndex type=kotlin.Int operator=null
              $this: GET_VAR LItr$ListIterator$delegate type=kotlin.collections.MutableListIterator<kotlin.String> operator=null
      FUN public open override /*1*/ /*delegation*/ fun previous(): kotlin.String
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=previous
            CALL .previous type=kotlin.String operator=null
              $this: GET_VAR LItr$ListIterator$delegate type=kotlin.collections.MutableListIterator<kotlin.String> operator=null
      FUN public open override /*1*/ /*delegation*/ fun previousIndex(): kotlin.Int
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=previousIndex
            CALL .previousIndex type=kotlin.Int operator=null
              $this: GET_VAR LItr$ListIterator$delegate type=kotlin.collections.MutableListIterator<kotlin.String> operator=null
    CLASS CLASS MLItr
      CONSTRUCTOR public constructor MLItr()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          INSTANCE_INITIALIZER_CALL classDescriptor=MLItr
      PROPERTY val `MLItr$MutableListIterator$delegate`: kotlin.collections.MutableListIterator<kotlin.String>
        EXPRESSION_BODY
          CALL .listIterator type=kotlin.collections.MutableListIterator<kotlin.String> operator=null
            $this: CALL .<init> type=java.util.ArrayList<kotlin.String> operator=null
      FUN public open override /*1*/ /*delegation*/ fun add(/*0*/ element: kotlin.String): kotlin.Unit
        BLOCK_BODY
          CALL .add type=kotlin.Unit operator=null
            $this: GET_VAR MLItr$MutableListIterator$delegate type=kotlin.collections.MutableListIterator<kotlin.String> operator=null
            element: GET_VAR element type=kotlin.String operator=null
      FUN public open override /*1*/ /*delegation*/ fun hasNext(): kotlin.Boolean
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=hasNext
            CALL .hasNext type=kotlin.Boolean operator=null
              $this: GET_VAR MLItr$MutableListIterator$delegate type=kotlin.collections.MutableListIterator<kotlin.String> operator=null
      FUN public open override /*1*/ /*delegation*/ fun hasPrevious(): kotlin.Boolean
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=hasPrevious
            CALL .hasPrevious type=kotlin.Boolean operator=null
              $this: GET_VAR MLItr$MutableListIterator$delegate type=kotlin.collections.MutableListIterator<kotlin.String> operator=null
      FUN public open override /*1*/ /*delegation*/ fun next(): kotlin.String
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=next
            CALL .next type=kotlin.String operator=null
              $this: GET_VAR MLItr$MutableListIterator$delegate type=kotlin.collections.MutableListIterator<kotlin.String> operator=null
      FUN public open override /*1*/ /*delegation*/ fun nextIndex(): kotlin.Int
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=nextIndex
            CALL .nextIndex type=kotlin.Int operator=null
              $this: GET_VAR MLItr$MutableListIterator$delegate type=kotlin.collections.MutableListIterator<kotlin.String> operator=null
      FUN public open override /*1*/ /*delegation*/ fun previous(): kotlin.String
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=previous
            CALL .previous type=kotlin.String operator=null
              $this: GET_VAR MLItr$MutableListIterator$delegate type=kotlin.collections.MutableListIterator<kotlin.String> operator=null
      FUN public open override /*1*/ /*delegation*/ fun previousIndex(): kotlin.Int
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=previousIndex
            CALL .previousIndex type=kotlin.Int operator=null
              $this: GET_VAR MLItr$MutableListIterator$delegate type=kotlin.collections.MutableListIterator<kotlin.String> operator=null
      FUN public open override /*1*/ /*delegation*/ fun remove(): kotlin.Unit
        BLOCK_BODY
          CALL .remove type=kotlin.Unit operator=null
            $this: GET_VAR MLItr$MutableListIterator$delegate type=kotlin.collections.MutableListIterator<kotlin.String> operator=null
      FUN public open override /*1*/ /*delegation*/ fun set(/*0*/ element: kotlin.String): kotlin.Unit
        BLOCK_BODY
          CALL .set type=kotlin.Unit operator=null
            $this: GET_VAR MLItr$MutableListIterator$delegate type=kotlin.collections.MutableListIterator<kotlin.String> operator=null
            element: GET_VAR element type=kotlin.String operator=null
    CLASS CLASS It
      CONSTRUCTOR public constructor It()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          INSTANCE_INITIALIZER_CALL classDescriptor=It
      PROPERTY val `It$Iterable$delegate`: java.util.ArrayList<kotlin.String>
        EXPRESSION_BODY
          CALL .<init> type=java.util.ArrayList<kotlin.String> operator=null
      FUN public open override /*1*/ /*delegation*/ fun iterator(): kotlin.collections.Iterator<kotlin.String>
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=iterator
            CALL .iterator type=kotlin.collections.Iterator<kotlin.String> operator=null
              $this: GET_VAR It$Iterable$delegate type=java.util.ArrayList<kotlin.String> operator=null
    CLASS CLASS MIt
      CONSTRUCTOR public constructor MIt()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          INSTANCE_INITIALIZER_CALL classDescriptor=MIt
      PROPERTY val `MIt$MutableIterable$delegate`: java.util.ArrayList<kotlin.String>
        EXPRESSION_BODY
          CALL .<init> type=java.util.ArrayList<kotlin.String> operator=null
      FUN public open override /*1*/ /*delegation*/ fun iterator(): kotlin.collections.MutableIterator<kotlin.String>
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=iterator
            CALL .iterator type=kotlin.collections.MutableIterator<kotlin.String> operator=null
              $this: GET_VAR MIt$MutableIterable$delegate type=java.util.ArrayList<kotlin.String> operator=null
    CLASS CLASS C
      CONSTRUCTOR public constructor C()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          INSTANCE_INITIALIZER_CALL classDescriptor=C
      PROPERTY val `C$Collection$delegate`: java.util.ArrayList<kotlin.String>
        EXPRESSION_BODY
          CALL .<init> type=java.util.ArrayList<kotlin.String> operator=null
      FUN public open override /*1*/ /*delegation*/ fun contains(/*0*/ element: kotlin.String): kotlin.Boolean
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=contains
            CALL .contains type=kotlin.Boolean operator=null
              $this: GET_VAR C$Collection$delegate type=java.util.ArrayList<kotlin.String> operator=null
              element: GET_VAR element type=kotlin.String operator=null
      FUN public open override /*1*/ /*delegation*/ fun containsAll(/*0*/ elements: kotlin.collections.Collection<kotlin.String>): kotlin.Boolean
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=containsAll
            CALL .containsAll type=kotlin.Boolean operator=null
              $this: GET_VAR C$Collection$delegate type=java.util.ArrayList<kotlin.String> operator=null
              elements: GET_VAR elements type=kotlin.collections.Collection<kotlin.String> operator=null
      FUN public open override /*1*/ /*delegation*/ fun isEmpty(): kotlin.Boolean
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=isEmpty
            CALL .isEmpty type=kotlin.Boolean operator=null
              $this: GET_VAR C$Collection$delegate type=java.util.ArrayList<kotlin.String> operator=null
      FUN public open override /*1*/ /*delegation*/ fun iterator(): kotlin.collections.Iterator<kotlin.String>
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=iterator
            CALL .iterator type=kotlin.collections.Iterator<kotlin.String> operator=null
              $this: GET_VAR C$Collection$delegate type=java.util.ArrayList<kotlin.String> operator=null
      PROPERTY public open override /*1*/ /*delegation*/ val size: kotlin.Int
        PROPERTY_GETTER public open override /*1*/ /*delegation*/ fun <get-size>(): kotlin.Int
          BLOCK_BODY
            RETURN type=kotlin.Nothing from=<get-size>
              CALL .<get-size> type=kotlin.Int operator=null
                $this: GET_VAR C$Collection$delegate type=java.util.ArrayList<kotlin.String> operator=null
    CLASS CLASS MC
      CONSTRUCTOR public constructor MC()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          INSTANCE_INITIALIZER_CALL classDescriptor=MC
      PROPERTY val `MC$MutableCollection$delegate`: java.util.ArrayList<kotlin.String>
        EXPRESSION_BODY
          CALL .<init> type=java.util.ArrayList<kotlin.String> operator=null
      FUN public open override /*1*/ /*delegation*/ fun add(/*0*/ element: kotlin.String): kotlin.Boolean
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=add
            CALL .add type=kotlin.Boolean operator=null
              $this: GET_VAR MC$MutableCollection$delegate type=java.util.ArrayList<kotlin.String> operator=null
              element: GET_VAR element type=kotlin.String operator=null
      FUN public open override /*1*/ /*delegation*/ fun addAll(/*0*/ elements: kotlin.collections.Collection<kotlin.String>): kotlin.Boolean
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=addAll
            CALL .addAll type=kotlin.Boolean operator=null
              $this: GET_VAR MC$MutableCollection$delegate type=java.util.ArrayList<kotlin.String> operator=null
              elements: GET_VAR elements type=kotlin.collections.Collection<kotlin.String> operator=null
      FUN public open override /*1*/ /*delegation*/ fun clear(): kotlin.Unit
        BLOCK_BODY
          CALL .clear type=kotlin.Unit operator=null
            $this: GET_VAR MC$MutableCollection$delegate type=java.util.ArrayList<kotlin.String> operator=null
      FUN public open override /*1*/ /*delegation*/ fun contains(/*0*/ element: kotlin.String): kotlin.Boolean
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=contains
            CALL .contains type=kotlin.Boolean operator=null
              $this: GET_VAR MC$MutableCollection$delegate type=java.util.ArrayList<kotlin.String> operator=null
              element: GET_VAR element type=kotlin.String operator=null
      FUN public open override /*1*/ /*delegation*/ fun containsAll(/*0*/ elements: kotlin.collections.Collection<kotlin.String>): kotlin.Boolean
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=containsAll
            CALL .containsAll type=kotlin.Boolean operator=null
              $this: GET_VAR MC$MutableCollection$delegate type=java.util.ArrayList<kotlin.String> operator=null
              elements: GET_VAR elements type=kotlin.collections.Collection<kotlin.String> operator=null
      FUN public open override /*1*/ /*delegation*/ fun isEmpty(): kotlin.Boolean
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=isEmpty
            CALL .isEmpty type=kotlin.Boolean operator=null
              $this: GET_VAR MC$MutableCollection$delegate type=java.util.ArrayList<kotlin.String> operator=null
      FUN public open override /*1*/ /*delegation*/ fun iterator(): kotlin.collections.MutableIterator<kotlin.String>
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=iterator
            CALL .iterator type=kotlin.collections.MutableIterator<kotlin.String> operator=null
              $this: GET_VAR MC$MutableCollection$delegate type=java.util.ArrayList<kotlin.String> operator=null
      FUN public open override /*1*/ /*delegation*/ fun remove(/*0*/ element: kotlin.String): kotlin.Boolean
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=remove
            CALL .remove type=kotlin.Boolean operator=null
              $this: GET_VAR MC$MutableCollection$delegate type=java.util.ArrayList<kotlin.String> operator=null
              element: GET_VAR element type=kotlin.String operator=null
      FUN public open override /*1*/ /*delegation*/ fun removeAll(/*0*/ elements: kotlin.collections.Collection<kotlin.String>): kotlin.Boolean
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=removeAll
            CALL .removeAll type=kotlin.Boolean operator=null
              $this: GET_VAR MC$MutableCollection$delegate type=java.util.ArrayList<kotlin.String> operator=null
              elements: GET_VAR elements type=kotlin.collections.Collection<kotlin.String> operator=null
      FUN public open override /*1*/ /*delegation*/ fun retainAll(/*0*/ elements: kotlin.collections.Collection<kotlin.String>): kotlin.Boolean
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=retainAll
            CALL .retainAll type=kotlin.Boolean operator=null
              $this: GET_VAR MC$MutableCollection$delegate type=java.util.ArrayList<kotlin.String> operator=null
              elements: GET_VAR elements type=kotlin.collections.Collection<kotlin.String> operator=null
      PROPERTY public open override /*1*/ /*delegation*/ val size: kotlin.Int
        PROPERTY_GETTER public open override /*1*/ /*delegation*/ fun <get-size>(): kotlin.Int
          BLOCK_BODY
            RETURN type=kotlin.Nothing from=<get-size>
              CALL .<get-size> type=kotlin.Int operator=null
                $this: GET_VAR MC$MutableCollection$delegate type=java.util.ArrayList<kotlin.String> operator=null
    CLASS CLASS L
      CONSTRUCTOR public constructor L()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          INSTANCE_INITIALIZER_CALL classDescriptor=L
      PROPERTY val `L$List$delegate`: java.util.ArrayList<kotlin.String>
        EXPRESSION_BODY
          CALL .<init> type=java.util.ArrayList<kotlin.String> operator=null
      FUN public open override /*1*/ /*delegation*/ fun contains(/*0*/ element: kotlin.String): kotlin.Boolean
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=contains
            CALL .contains type=kotlin.Boolean operator=null
              $this: GET_VAR L$List$delegate type=java.util.ArrayList<kotlin.String> operator=null
              element: GET_VAR element type=kotlin.String operator=null
      FUN public open override /*1*/ /*delegation*/ fun containsAll(/*0*/ elements: kotlin.collections.Collection<kotlin.String>): kotlin.Boolean
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=containsAll
            CALL .containsAll type=kotlin.Boolean operator=null
              $this: GET_VAR L$List$delegate type=java.util.ArrayList<kotlin.String> operator=null
              elements: GET_VAR elements type=kotlin.collections.Collection<kotlin.String> operator=null
      FUN public open override /*1*/ /*delegation*/ fun get(/*0*/ index: kotlin.Int): kotlin.String
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=get
            CALL .get type=kotlin.String operator=null
              $this: GET_VAR L$List$delegate type=java.util.ArrayList<kotlin.String> operator=null
              index: GET_VAR index type=kotlin.Int operator=null
      FUN public open override /*1*/ /*delegation*/ fun indexOf(/*0*/ element: kotlin.String): kotlin.Int
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=indexOf
            CALL .indexOf type=kotlin.Int operator=null
              $this: GET_VAR L$List$delegate type=java.util.ArrayList<kotlin.String> operator=null
              element: GET_VAR element type=kotlin.String operator=null
      FUN public open override /*1*/ /*delegation*/ fun isEmpty(): kotlin.Boolean
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=isEmpty
            CALL .isEmpty type=kotlin.Boolean operator=null
              $this: GET_VAR L$List$delegate type=java.util.ArrayList<kotlin.String> operator=null
      FUN public open override /*1*/ /*delegation*/ fun iterator(): kotlin.collections.Iterator<kotlin.String>
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=iterator
            CALL .iterator type=kotlin.collections.Iterator<kotlin.String> operator=null
              $this: GET_VAR L$List$delegate type=java.util.ArrayList<kotlin.String> operator=null
      FUN public open override /*1*/ /*delegation*/ fun lastIndexOf(/*0*/ element: kotlin.String): kotlin.Int
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=lastIndexOf
            CALL .lastIndexOf type=kotlin.Int operator=null
              $this: GET_VAR L$List$delegate type=java.util.ArrayList<kotlin.String> operator=null
              element: GET_VAR element type=kotlin.String operator=null
      FUN public open override /*1*/ /*delegation*/ fun listIterator(): kotlin.collections.ListIterator<kotlin.String>
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=listIterator
            CALL .listIterator type=kotlin.collections.ListIterator<kotlin.String> operator=null
              $this: GET_VAR L$List$delegate type=java.util.ArrayList<kotlin.String> operator=null
      FUN public open override /*1*/ /*delegation*/ fun listIterator(/*0*/ index: kotlin.Int): kotlin.collections.ListIterator<kotlin.String>
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=listIterator
            CALL .listIterator type=kotlin.collections.ListIterator<kotlin.String> operator=null
              $this: GET_VAR L$List$delegate type=java.util.ArrayList<kotlin.String> operator=null
              index: GET_VAR index type=kotlin.Int operator=null
      FUN public open override /*1*/ /*delegation*/ fun subList(/*0*/ fromIndex: kotlin.Int, /*1*/ toIndex: kotlin.Int): kotlin.collections.List<kotlin.String>
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=subList
            CALL .subList type=kotlin.collections.List<kotlin.String> operator=null
              $this: GET_VAR L$List$delegate type=java.util.ArrayList<kotlin.String> operator=null
              fromIndex: GET_VAR fromIndex type=kotlin.Int operator=null
              toIndex: GET_VAR toIndex type=kotlin.Int operator=null
      PROPERTY public open override /*1*/ /*delegation*/ val size: kotlin.Int
        PROPERTY_GETTER public open override /*1*/ /*delegation*/ fun <get-size>(): kotlin.Int
          BLOCK_BODY
            RETURN type=kotlin.Nothing from=<get-size>
              CALL .<get-size> type=kotlin.Int operator=null
                $this: GET_VAR L$List$delegate type=java.util.ArrayList<kotlin.String> operator=null
    CLASS CLASS ML
      CONSTRUCTOR public constructor ML()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          INSTANCE_INITIALIZER_CALL classDescriptor=ML
      PROPERTY val `ML$MutableList$delegate`: java.util.ArrayList<kotlin.String>
        EXPRESSION_BODY
          CALL .<init> type=java.util.ArrayList<kotlin.String> operator=null
      FUN public open override /*1*/ /*delegation*/ fun add(/*0*/ element: kotlin.String): kotlin.Boolean
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=add
            CALL .add type=kotlin.Boolean operator=null
              $this: GET_VAR ML$MutableList$delegate type=java.util.ArrayList<kotlin.String> operator=null
              element: GET_VAR element type=kotlin.String operator=null
      FUN public open override /*1*/ /*delegation*/ fun add(/*0*/ index: kotlin.Int, /*1*/ element: kotlin.String): kotlin.Unit
        BLOCK_BODY
          CALL .add type=kotlin.Unit operator=null
            $this: GET_VAR ML$MutableList$delegate type=java.util.ArrayList<kotlin.String> operator=null
            index: GET_VAR index type=kotlin.Int operator=null
            element: GET_VAR element type=kotlin.String operator=null
      FUN public open override /*1*/ /*delegation*/ fun addAll(/*0*/ elements: kotlin.collections.Collection<kotlin.String>): kotlin.Boolean
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=addAll
            CALL .addAll type=kotlin.Boolean operator=null
              $this: GET_VAR ML$MutableList$delegate type=java.util.ArrayList<kotlin.String> operator=null
              elements: GET_VAR elements type=kotlin.collections.Collection<kotlin.String> operator=null
      FUN public open override /*1*/ /*delegation*/ fun addAll(/*0*/ index: kotlin.Int, /*1*/ elements: kotlin.collections.Collection<kotlin.String>): kotlin.Boolean
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=addAll
            CALL .addAll type=kotlin.Boolean operator=null
              $this: GET_VAR ML$MutableList$delegate type=java.util.ArrayList<kotlin.String> operator=null
              index: GET_VAR index type=kotlin.Int operator=null
              elements: GET_VAR elements type=kotlin.collections.Collection<kotlin.String> operator=null
      FUN public open override /*1*/ /*delegation*/ fun clear(): kotlin.Unit
        BLOCK_BODY
          CALL .clear type=kotlin.Unit operator=null
            $this: GET_VAR ML$MutableList$delegate type=java.util.ArrayList<kotlin.String> operator=null
      FUN public open override /*1*/ /*delegation*/ fun contains(/*0*/ element: kotlin.String): kotlin.Boolean
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=contains
            CALL .contains type=kotlin.Boolean operator=null
              $this: GET_VAR ML$MutableList$delegate type=java.util.ArrayList<kotlin.String> operator=null
              element: GET_VAR element type=kotlin.String operator=null
      FUN public open override /*1*/ /*delegation*/ fun containsAll(/*0*/ elements: kotlin.collections.Collection<kotlin.String>): kotlin.Boolean
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=containsAll
            CALL .containsAll type=kotlin.Boolean operator=null
              $this: GET_VAR ML$MutableList$delegate type=java.util.ArrayList<kotlin.String> operator=null
              elements: GET_VAR elements type=kotlin.collections.Collection<kotlin.String> operator=null
      FUN public open override /*1*/ /*delegation*/ fun get(/*0*/ index: kotlin.Int): kotlin.String
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=get
            CALL .get type=kotlin.String operator=null
              $this: GET_VAR ML$MutableList$delegate type=java.util.ArrayList<kotlin.String> operator=null
              index: GET_VAR index type=kotlin.Int operator=null
      FUN public open override /*1*/ /*delegation*/ fun indexOf(/*0*/ element: kotlin.String): kotlin.Int
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=indexOf
            CALL .indexOf type=kotlin.Int operator=null
              $this: GET_VAR ML$MutableList$delegate type=java.util.ArrayList<kotlin.String> operator=null
              element: GET_VAR element type=kotlin.String operator=null
      FUN public open override /*1*/ /*delegation*/ fun isEmpty(): kotlin.Boolean
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=isEmpty
            CALL .isEmpty type=kotlin.Boolean operator=null
              $this: GET_VAR ML$MutableList$delegate type=java.util.ArrayList<kotlin.String> operator=null
      FUN public open override /*1*/ /*delegation*/ fun iterator(): kotlin.collections.MutableIterator<kotlin.String>
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=iterator
            CALL .iterator type=kotlin.collections.MutableIterator<kotlin.String> operator=null
              $this: GET_VAR ML$MutableList$delegate type=java.util.ArrayList<kotlin.String> operator=null
      FUN public open override /*1*/ /*delegation*/ fun lastIndexOf(/*0*/ element: kotlin.String): kotlin.Int
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=lastIndexOf
            CALL .lastIndexOf type=kotlin.Int operator=null
              $this: GET_VAR ML$MutableList$delegate type=java.util.ArrayList<kotlin.String> operator=null
              element: GET_VAR element type=kotlin.String operator=null
      FUN public open override /*1*/ /*delegation*/ fun listIterator(): kotlin.collections.MutableListIterator<kotlin.String>
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=listIterator
            CALL .listIterator type=kotlin.collections.MutableListIterator<kotlin.String> operator=null
              $this: GET_VAR ML$MutableList$delegate type=java.util.ArrayList<kotlin.String> operator=null
      FUN public open override /*1*/ /*delegation*/ fun listIterator(/*0*/ index: kotlin.Int): kotlin.collections.MutableListIterator<kotlin.String>
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=listIterator
            CALL .listIterator type=kotlin.collections.MutableListIterator<kotlin.String> operator=null
              $this: GET_VAR ML$MutableList$delegate type=java.util.ArrayList<kotlin.String> operator=null
              index: GET_VAR index type=kotlin.Int operator=null
      FUN public open override /*1*/ /*delegation*/ fun remove(/*0*/ element: kotlin.String): kotlin.Boolean
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=remove
            CALL .remove type=kotlin.Boolean operator=null
              $this: GET_VAR ML$MutableList$delegate type=java.util.ArrayList<kotlin.String> operator=null
              element: GET_VAR element type=kotlin.String operator=null
      FUN public open override /*1*/ /*delegation*/ fun removeAll(/*0*/ elements: kotlin.collections.Collection<kotlin.String>): kotlin.Boolean
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=removeAll
            CALL .removeAll type=kotlin.Boolean operator=null
              $this: GET_VAR ML$MutableList$delegate type=java.util.ArrayList<kotlin.String> operator=null
              elements: GET_VAR elements type=kotlin.collections.Collection<kotlin.String> operator=null
      FUN public open override /*1*/ /*delegation*/ fun removeAt(/*0*/ index: kotlin.Int): kotlin.String
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=removeAt
            CALL .removeAt type=kotlin.String operator=null
              $this: GET_VAR ML$MutableList$delegate type=java.util.ArrayList<kotlin.String> operator=null
              index: GET_VAR index type=kotlin.Int operator=null
      FUN public open override /*1*/ /*delegation*/ fun retainAll(/*0*/ elements: kotlin.collections.Collection<kotlin.String>): kotlin.Boolean
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=retainAll
            CALL .retainAll type=kotlin.Boolean operator=null
              $this: GET_VAR ML$MutableList$delegate type=java.util.ArrayList<kotlin.String> operator=null
              elements: GET_VAR elements type=kotlin.collections.Collection<kotlin.String> operator=null
      FUN public open override /*1*/ /*delegation*/ fun set(/*0*/ index: kotlin.Int, /*1*/ element: kotlin.String): kotlin.String
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=set
            CALL .set type=kotlin.String operator=null
              $this: GET_VAR ML$MutableList$delegate type=java.util.ArrayList<kotlin.String> operator=null
              index: GET_VAR index type=kotlin.Int operator=null
              element: GET_VAR element type=kotlin.String operator=null
      FUN public open override /*1*/ /*delegation*/ fun subList(/*0*/ fromIndex: kotlin.Int, /*1*/ toIndex: kotlin.Int): kotlin.collections.MutableList<kotlin.String>
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=subList
            CALL .subList type=kotlin.collections.MutableList<kotlin.String> operator=null
              $this: GET_VAR ML$MutableList$delegate type=java.util.ArrayList<kotlin.String> operator=null
              fromIndex: GET_VAR fromIndex type=kotlin.Int operator=null
              toIndex: GET_VAR toIndex type=kotlin.Int operator=null
      PROPERTY public open override /*1*/ /*delegation*/ val size: kotlin.Int
        PROPERTY_GETTER public open override /*1*/ /*delegation*/ fun <get-size>(): kotlin.Int
          BLOCK_BODY
            RETURN type=kotlin.Nothing from=<get-size>
              CALL .<get-size> type=kotlin.Int operator=null
                $this: GET_VAR ML$MutableList$delegate type=java.util.ArrayList<kotlin.String> operator=null
    CLASS CLASS S
      CONSTRUCTOR public constructor S()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          INSTANCE_INITIALIZER_CALL classDescriptor=S
      PROPERTY val `S$Set$delegate`: java.util.HashSet<kotlin.String>
        EXPRESSION_BODY
          CALL .<init> type=java.util.HashSet<kotlin.String> operator=null
      FUN public open override /*1*/ /*delegation*/ fun contains(/*0*/ element: kotlin.String): kotlin.Boolean
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=contains
            CALL .contains type=kotlin.Boolean operator=null
              $this: GET_VAR S$Set$delegate type=java.util.HashSet<kotlin.String> operator=null
              element: GET_VAR element type=kotlin.String operator=null
      FUN public open override /*1*/ /*delegation*/ fun containsAll(/*0*/ elements: kotlin.collections.Collection<kotlin.String>): kotlin.Boolean
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=containsAll
            CALL .containsAll type=kotlin.Boolean operator=null
              $this: GET_VAR S$Set$delegate type=java.util.HashSet<kotlin.String> operator=null
              elements: GET_VAR elements type=kotlin.collections.Collection<kotlin.String> operator=null
      FUN public open override /*1*/ /*delegation*/ fun isEmpty(): kotlin.Boolean
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=isEmpty
            CALL .isEmpty type=kotlin.Boolean operator=null
              $this: GET_VAR S$Set$delegate type=java.util.HashSet<kotlin.String> operator=null
      FUN public open override /*1*/ /*delegation*/ fun iterator(): kotlin.collections.Iterator<kotlin.String>
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=iterator
            CALL .iterator type=kotlin.collections.Iterator<kotlin.String> operator=null
              $this: GET_VAR S$Set$delegate type=java.util.HashSet<kotlin.String> operator=null
      PROPERTY public open override /*1*/ /*delegation*/ val size: kotlin.Int
        PROPERTY_GETTER public open override /*1*/ /*delegation*/ fun <get-size>(): kotlin.Int
          BLOCK_BODY
            RETURN type=kotlin.Nothing from=<get-size>
              CALL .<get-size> type=kotlin.Int operator=null
                $this: GET_VAR S$Set$delegate type=java.util.HashSet<kotlin.String> operator=null
    CLASS CLASS MS
      CONSTRUCTOR public constructor MS()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          INSTANCE_INITIALIZER_CALL classDescriptor=MS
      PROPERTY val `MS$MutableSet$delegate`: java.util.HashSet<kotlin.String>
        EXPRESSION_BODY
          CALL .<init> type=java.util.HashSet<kotlin.String> operator=null
      FUN public open override /*1*/ /*delegation*/ fun add(/*0*/ element: kotlin.String): kotlin.Boolean
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=add
            CALL .add type=kotlin.Boolean operator=null
              $this: GET_VAR MS$MutableSet$delegate type=java.util.HashSet<kotlin.String> operator=null
              element: GET_VAR element type=kotlin.String operator=null
      FUN public open override /*1*/ /*delegation*/ fun addAll(/*0*/ elements: kotlin.collections.Collection<kotlin.String>): kotlin.Boolean
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=addAll
            CALL .addAll type=kotlin.Boolean operator=null
              $this: GET_VAR MS$MutableSet$delegate type=java.util.HashSet<kotlin.String> operator=null
              elements: GET_VAR elements type=kotlin.collections.Collection<kotlin.String> operator=null
      FUN public open override /*1*/ /*delegation*/ fun clear(): kotlin.Unit
        BLOCK_BODY
          CALL .clear type=kotlin.Unit operator=null
            $this: GET_VAR MS$MutableSet$delegate type=java.util.HashSet<kotlin.String> operator=null
      FUN public open override /*1*/ /*delegation*/ fun contains(/*0*/ element: kotlin.String): kotlin.Boolean
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=contains
            CALL .contains type=kotlin.Boolean operator=null
              $this: GET_VAR MS$MutableSet$delegate type=java.util.HashSet<kotlin.String> operator=null
              element: GET_VAR element type=kotlin.String operator=null
      FUN public open override /*1*/ /*delegation*/ fun containsAll(/*0*/ elements: kotlin.collections.Collection<kotlin.String>): kotlin.Boolean
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=containsAll
            CALL .containsAll type=kotlin.Boolean operator=null
              $this: GET_VAR MS$MutableSet$delegate type=java.util.HashSet<kotlin.String> operator=null
              elements: GET_VAR elements type=kotlin.collections.Collection<kotlin.String> operator=null
      FUN public open override /*1*/ /*delegation*/ fun isEmpty(): kotlin.Boolean
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=isEmpty
            CALL .isEmpty type=kotlin.Boolean operator=null
              $this: GET_VAR MS$MutableSet$delegate type=java.util.HashSet<kotlin.String> operator=null
      FUN public open override /*1*/ /*delegation*/ fun iterator(): kotlin.collections.MutableIterator<kotlin.String>
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=iterator
            CALL .iterator type=kotlin.collections.MutableIterator<kotlin.String> operator=null
              $this: GET_VAR MS$MutableSet$delegate type=java.util.HashSet<kotlin.String> operator=null
      FUN public open override /*1*/ /*delegation*/ fun remove(/*0*/ element: kotlin.String): kotlin.Boolean
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=remove
            CALL .remove type=kotlin.Boolean operator=null
              $this: GET_VAR MS$MutableSet$delegate type=java.util.HashSet<kotlin.String> operator=null
              element: GET_VAR element type=kotlin.String operator=null
      FUN public open override /*1*/ /*delegation*/ fun removeAll(/*0*/ elements: kotlin.collections.Collection<kotlin.String>): kotlin.Boolean
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=removeAll
            CALL .removeAll type=kotlin.Boolean operator=null
              $this: GET_VAR MS$MutableSet$delegate type=java.util.HashSet<kotlin.String> operator=null
              elements: GET_VAR elements type=kotlin.collections.Collection<kotlin.String> operator=null
      FUN public open override /*1*/ /*delegation*/ fun retainAll(/*0*/ elements: kotlin.collections.Collection<kotlin.String>): kotlin.Boolean
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=retainAll
            CALL .retainAll type=kotlin.Boolean operator=null
              $this: GET_VAR MS$MutableSet$delegate type=java.util.HashSet<kotlin.String> operator=null
              elements: GET_VAR elements type=kotlin.collections.Collection<kotlin.String> operator=null
      PROPERTY public open override /*1*/ /*delegation*/ val size: kotlin.Int
        PROPERTY_GETTER public open override /*1*/ /*delegation*/ fun <get-size>(): kotlin.Int
          BLOCK_BODY
            RETURN type=kotlin.Nothing from=<get-size>
              CALL .<get-size> type=kotlin.Int operator=null
                $this: GET_VAR MS$MutableSet$delegate type=java.util.HashSet<kotlin.String> operator=null
    CLASS CLASS M
      CONSTRUCTOR public constructor M()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          INSTANCE_INITIALIZER_CALL classDescriptor=M
      PROPERTY val `M$Map$delegate`: java.util.HashMap<kotlin.String, kotlin.String>
        EXPRESSION_BODY
          CALL .<init> type=java.util.HashMap<kotlin.String, kotlin.String> operator=null
      FUN public open override /*1*/ /*delegation*/ fun containsKey(/*0*/ key: kotlin.String): kotlin.Boolean
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=containsKey
            CALL .containsKey type=kotlin.Boolean operator=null
              $this: GET_VAR M$Map$delegate type=java.util.HashMap<kotlin.String, kotlin.String> operator=null
              key: GET_VAR key type=kotlin.String operator=null
      FUN public open override /*1*/ /*delegation*/ fun containsValue(/*0*/ value: kotlin.String): kotlin.Boolean
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=containsValue
            CALL .containsValue type=kotlin.Boolean operator=null
              $this: GET_VAR M$Map$delegate type=java.util.HashMap<kotlin.String, kotlin.String> operator=null
              value: GET_VAR value type=kotlin.String operator=null
      FUN public open override /*1*/ /*delegation*/ fun get(/*0*/ key: kotlin.String): kotlin.String?
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=get
            CALL .get type=kotlin.String? operator=null
              $this: GET_VAR M$Map$delegate type=java.util.HashMap<kotlin.String, kotlin.String> operator=null
              key: GET_VAR key type=kotlin.String operator=null
      FUN public open override /*1*/ /*delegation*/ fun isEmpty(): kotlin.Boolean
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=isEmpty
            CALL .isEmpty type=kotlin.Boolean operator=null
              $this: GET_VAR M$Map$delegate type=java.util.HashMap<kotlin.String, kotlin.String> operator=null
      PROPERTY public open override /*1*/ /*delegation*/ val entries: kotlin.collections.Set<kotlin.collections.Map.Entry<kotlin.String, kotlin.String>>
        PROPERTY_GETTER public open override /*1*/ /*delegation*/ fun <get-entries>(): kotlin.collections.Set<kotlin.collections.Map.Entry<kotlin.String, kotlin.String>>
          BLOCK_BODY
            RETURN type=kotlin.Nothing from=<get-entries>
              CALL .<get-entries> type=kotlin.collections.Set<kotlin.collections.Map.Entry<kotlin.String, kotlin.String>> operator=null
                $this: GET_VAR M$Map$delegate type=java.util.HashMap<kotlin.String, kotlin.String> operator=null
      PROPERTY public open override /*1*/ /*delegation*/ val keys: kotlin.collections.Set<kotlin.String>
        PROPERTY_GETTER public open override /*1*/ /*delegation*/ fun <get-keys>(): kotlin.collections.Set<kotlin.String>
          BLOCK_BODY
            RETURN type=kotlin.Nothing from=<get-keys>
              CALL .<get-keys> type=kotlin.collections.Set<kotlin.String> operator=null
                $this: GET_VAR M$Map$delegate type=java.util.HashMap<kotlin.String, kotlin.String> operator=null
      PROPERTY public open override /*1*/ /*delegation*/ val size: kotlin.Int
        PROPERTY_GETTER public open override /*1*/ /*delegation*/ fun <get-size>(): kotlin.Int
          BLOCK_BODY
            RETURN type=kotlin.Nothing from=<get-size>
              CALL .<get-size> type=kotlin.Int operator=null
                $this: GET_VAR M$Map$delegate type=java.util.HashMap<kotlin.String, kotlin.String> operator=null
      PROPERTY public open override /*1*/ /*delegation*/ val values: kotlin.collections.Collection<kotlin.String>
        PROPERTY_GETTER public open override /*1*/ /*delegation*/ fun <get-values>(): kotlin.collections.Collection<kotlin.String>
          BLOCK_BODY
            RETURN type=kotlin.Nothing from=<get-values>
              CALL .<get-values> type=kotlin.collections.Collection<kotlin.String> operator=null
                $this: GET_VAR M$Map$delegate type=java.util.HashMap<kotlin.String, kotlin.String> operator=null
    CLASS CLASS MM
      CONSTRUCTOR public constructor MM()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          INSTANCE_INITIALIZER_CALL classDescriptor=MM
      PROPERTY val `MM$MutableMap$delegate`: java.util.HashMap<kotlin.String, kotlin.String>
        EXPRESSION_BODY
          CALL .<init> type=java.util.HashMap<kotlin.String, kotlin.String> operator=null
      FUN public open override /*1*/ /*delegation*/ fun clear(): kotlin.Unit
        BLOCK_BODY
          CALL .clear type=kotlin.Unit operator=null
            $this: GET_VAR MM$MutableMap$delegate type=java.util.HashMap<kotlin.String, kotlin.String> operator=null
      FUN public open override /*1*/ /*delegation*/ fun containsKey(/*0*/ key: kotlin.String): kotlin.Boolean
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=containsKey
            CALL .containsKey type=kotlin.Boolean operator=null
              $this: GET_VAR MM$MutableMap$delegate type=java.util.HashMap<kotlin.String, kotlin.String> operator=null
              key: GET_VAR key type=kotlin.String operator=null
      FUN public open override /*1*/ /*delegation*/ fun containsValue(/*0*/ value: kotlin.String): kotlin.Boolean
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=containsValue
            CALL .containsValue type=kotlin.Boolean operator=null
              $this: GET_VAR MM$MutableMap$delegate type=java.util.HashMap<kotlin.String, kotlin.String> operator=null
              value: GET_VAR value type=kotlin.String operator=null
      FUN public open override /*1*/ /*delegation*/ fun get(/*0*/ key: kotlin.String): kotlin.String?
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=get
            CALL .get type=kotlin.String? operator=null
              $this: GET_VAR MM$MutableMap$delegate type=java.util.HashMap<kotlin.String, kotlin.String> operator=null
              key: GET_VAR key type=kotlin.String operator=null
      FUN public open override /*1*/ /*delegation*/ fun isEmpty(): kotlin.Boolean
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=isEmpty
            CALL .isEmpty type=kotlin.Boolean operator=null
              $this: GET_VAR MM$MutableMap$delegate type=java.util.HashMap<kotlin.String, kotlin.String> operator=null
      FUN public open override /*1*/ /*delegation*/ fun put(/*0*/ key: kotlin.String, /*1*/ value: kotlin.String): kotlin.String?
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=put
            CALL .put type=kotlin.String? operator=null
              $this: GET_VAR MM$MutableMap$delegate type=java.util.HashMap<kotlin.String, kotlin.String> operator=null
              key: GET_VAR key type=kotlin.String operator=null
              value: GET_VAR value type=kotlin.String operator=null
      FUN public open override /*1*/ /*delegation*/ fun putAll(/*0*/ from: kotlin.collections.Map<out kotlin.String, kotlin.String>): kotlin.Unit
        BLOCK_BODY
          CALL .putAll type=kotlin.Unit operator=null
            $this: GET_VAR MM$MutableMap$delegate type=java.util.HashMap<kotlin.String, kotlin.String> operator=null
            from: GET_VAR from type=kotlin.collections.Map<out kotlin.String, kotlin.String> operator=null
      FUN public open override /*1*/ /*delegation*/ fun remove(/*0*/ key: kotlin.String): kotlin.String?
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=remove
            CALL .remove type=kotlin.String? operator=null
              $this: GET_VAR MM$MutableMap$delegate type=java.util.HashMap<kotlin.String, kotlin.String> operator=null
              key: GET_VAR key type=kotlin.String operator=null
      PROPERTY public open override /*1*/ /*delegation*/ val entries: kotlin.collections.MutableSet<kotlin.collections.MutableMap.MutableEntry<kotlin.String, kotlin.String>>
        PROPERTY_GETTER public open override /*1*/ /*delegation*/ fun <get-entries>(): kotlin.collections.MutableSet<kotlin.collections.MutableMap.MutableEntry<kotlin.String, kotlin.String>>
          BLOCK_BODY
            RETURN type=kotlin.Nothing from=<get-entries>
              CALL .<get-entries> type=kotlin.collections.MutableSet<kotlin.collections.MutableMap.MutableEntry<kotlin.String, kotlin.String>> operator=null
                $this: GET_VAR MM$MutableMap$delegate type=java.util.HashMap<kotlin.String, kotlin.String> operator=null
      PROPERTY public open override /*1*/ /*delegation*/ val keys: kotlin.collections.MutableSet<kotlin.String>
        PROPERTY_GETTER public open override /*1*/ /*delegation*/ fun <get-keys>(): kotlin.collections.MutableSet<kotlin.String>
          BLOCK_BODY
            RETURN type=kotlin.Nothing from=<get-keys>
              CALL .<get-keys> type=kotlin.collections.MutableSet<kotlin.String> operator=null
                $this: GET_VAR MM$MutableMap$delegate type=java.util.HashMap<kotlin.String, kotlin.String> operator=null
      PROPERTY public open override /*1*/ /*delegation*/ val size: kotlin.Int
        PROPERTY_GETTER public open override /*1*/ /*delegation*/ fun <get-size>(): kotlin.Int
          BLOCK_BODY
            RETURN type=kotlin.Nothing from=<get-size>
              CALL .<get-size> type=kotlin.Int operator=null
                $this: GET_VAR MM$MutableMap$delegate type=java.util.HashMap<kotlin.String, kotlin.String> operator=null
      PROPERTY public open override /*1*/ /*delegation*/ val values: kotlin.collections.MutableCollection<kotlin.String>
        PROPERTY_GETTER public open override /*1*/ /*delegation*/ fun <get-values>(): kotlin.collections.MutableCollection<kotlin.String>
          BLOCK_BODY
            RETURN type=kotlin.Nothing from=<get-values>
              CALL .<get-values> type=kotlin.collections.MutableCollection<kotlin.String> operator=null
                $this: GET_VAR MM$MutableMap$delegate type=java.util.HashMap<kotlin.String, kotlin.String> operator=null
    CLASS CLASS ME
      CONSTRUCTOR public constructor ME()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          INSTANCE_INITIALIZER_CALL classDescriptor=ME
      PROPERTY public open override /*1*/ val key: kotlin.String
        PROPERTY_GETTER public open override /*1*/ fun <get-key>(): kotlin.String
          BLOCK_BODY
            THROW type=kotlin.Nothing
              CALL .<init> type=java.lang.UnsupportedOperationException operator=null
      PROPERTY public open override /*1*/ val value: kotlin.String
        PROPERTY_GETTER public open override /*1*/ fun <get-value>(): kotlin.String
          BLOCK_BODY
            THROW type=kotlin.Nothing
              CALL .<init> type=java.lang.UnsupportedOperationException operator=null
    CLASS CLASS MME
      CONSTRUCTOR public constructor MME()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          INSTANCE_INITIALIZER_CALL classDescriptor=MME
      PROPERTY public open override /*1*/ val key: kotlin.String
        PROPERTY_GETTER public open override /*1*/ fun <get-key>(): kotlin.String
          BLOCK_BODY
            THROW type=kotlin.Nothing
              CALL .<init> type=java.lang.UnsupportedOperationException operator=null
      PROPERTY public open override /*1*/ val value: kotlin.String
        PROPERTY_GETTER public open override /*1*/ fun <get-value>(): kotlin.String
          BLOCK_BODY
            THROW type=kotlin.Nothing
              CALL .<init> type=java.lang.UnsupportedOperationException operator=null
      FUN public open override /*1*/ fun setValue(/*0*/ value: kotlin.String): kotlin.String
        BLOCK_BODY
          THROW type=kotlin.Nothing
            CALL .<init> type=java.lang.UnsupportedOperationException operator=null
    FUN public inline fun </*0*/ reified T> reifiedSafeAsReturnsNonNull(/*0*/ x: kotlin.Any?, /*1*/ operation: kotlin.String): kotlin.Unit
      BLOCK_BODY
        VAR val y: T?
          TRY_CATCH type=T?
            try: BLOCK type=T? operator=null
              TYPE_OP operator=SAFE_CAST typeOperand=T
                GET_VAR x type=kotlin.Any? operator=null
            catch e: BLOCK type=kotlin.Nothing operator=null
              THROW type=kotlin.Nothing
                CALL .<init> type=java.lang.AssertionError operator=null
                  p0: STRING_CONCATENATION type=kotlin.String
                    GET_VAR operation type=kotlin.String operator=null
                    CONST String type=kotlin.String value=': should not throw exceptions, got '
                    GET_VAR e type=kotlin.Throwable operator=null
        WHEN type=kotlin.Unit operator=IF
          if: CALL .EQEQ type=kotlin.Boolean operator=EQEQ
            arg0: GET_VAR y type=T? operator=null
            arg1: CONST Null type=kotlin.Nothing? value='null'
          then: BLOCK type=kotlin.Nothing operator=null
            THROW type=kotlin.Nothing
              CALL .<init> type=java.lang.AssertionError operator=null
                p0: STRING_CONCATENATION type=kotlin.String
                  GET_VAR operation type=kotlin.String operator=null
                  CONST String type=kotlin.String value=': should return non-null, got null'
    FUN public inline fun </*0*/ reified T> reifiedSafeAsReturnsNull(/*0*/ x: kotlin.Any?, /*1*/ operation: kotlin.String): kotlin.Unit
      BLOCK_BODY
        VAR val y: T?
          TRY_CATCH type=T?
            try: BLOCK type=T? operator=null
              TYPE_OP operator=SAFE_CAST typeOperand=T
                GET_VAR x type=kotlin.Any? operator=null
            catch e: BLOCK type=kotlin.Nothing operator=null
              THROW type=kotlin.Nothing
                CALL .<init> type=java.lang.AssertionError operator=null
                  p0: STRING_CONCATENATION type=kotlin.String
                    GET_VAR operation type=kotlin.String operator=null
                    CONST String type=kotlin.String value=': should not throw exceptions, got '
                    GET_VAR e type=kotlin.Throwable operator=null
        WHEN type=kotlin.Unit operator=IF
          if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
              arg0: GET_VAR y type=T? operator=null
              arg1: CONST Null type=kotlin.Nothing? value='null'
          then: BLOCK type=kotlin.Nothing operator=null
            THROW type=kotlin.Nothing
              CALL .<init> type=java.lang.AssertionError operator=null
                p0: STRING_CONCATENATION type=kotlin.String
                  GET_VAR operation type=kotlin.String operator=null
                  CONST String type=kotlin.String value=': should return null, got '
                  GET_VAR y type=T? operator=null
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        VAR val itr: kotlin.Any
          TYPE_OP operator=CAST typeOperand=kotlin.Any
            CALL .<init> type=Itr operator=null
        VAR val mitr: MItr
          CALL .<init> type=MItr operator=null
        CALL .reifiedSafeAsReturnsNull type=kotlin.Unit operator=null
          x: GET_VAR itr type=kotlin.Any operator=null
          operation: CONST String type=kotlin.String value='reifiedSafeAs<MutableIterator<*>>(itr)'
        CALL .reifiedSafeAsReturnsNonNull type=kotlin.Unit operator=null
          x: GET_VAR mitr type=MItr operator=null
          operation: CONST String type=kotlin.String value='reifiedSafeAs<MutableIterator<*>>(mitr)'
        VAR val litr: kotlin.Any
          TYPE_OP operator=CAST typeOperand=kotlin.Any
            CALL .<init> type=LItr operator=null
        VAR val mlitr: MLItr
          CALL .<init> type=MLItr operator=null
        CALL .reifiedSafeAsReturnsNull type=kotlin.Unit operator=null
          x: GET_VAR litr type=kotlin.Any operator=null
          operation: CONST String type=kotlin.String value='reifiedSafeAs<MutableIterator<*>>(litr)'
        CALL .reifiedSafeAsReturnsNull type=kotlin.Unit operator=null
          x: GET_VAR litr type=kotlin.Any operator=null
          operation: CONST String type=kotlin.String value='reifiedSafeAs<MutableListIterator<*>>(litr)'
        CALL .reifiedSafeAsReturnsNonNull type=kotlin.Unit operator=null
          x: GET_VAR mlitr type=MLItr operator=null
          operation: CONST String type=kotlin.String value='reifiedSafeAs<MutableListIterator<*>>(mlitr)'
        VAR val it: kotlin.Any
          TYPE_OP operator=CAST typeOperand=kotlin.Any
            CALL .<init> type=It operator=null
        VAR val mit: MIt
          CALL .<init> type=MIt operator=null
        VAR val arrayList: java.util.ArrayList<kotlin.String>
          CALL .<init> type=java.util.ArrayList<kotlin.String> operator=null
        CALL .reifiedSafeAsReturnsNull type=kotlin.Unit operator=null
          x: GET_VAR it type=kotlin.Any operator=null
          operation: CONST String type=kotlin.String value='reifiedSafeAs<MutableIterable<*>>(it)'
        CALL .reifiedSafeAsReturnsNonNull type=kotlin.Unit operator=null
          x: GET_VAR mit type=MIt operator=null
          operation: CONST String type=kotlin.String value='reifiedSafeAs<MutableIterable<*>>(mit)'
        CALL .reifiedSafeAsReturnsNonNull type=kotlin.Unit operator=null
          x: GET_VAR arrayList type=java.util.ArrayList<kotlin.String> operator=null
          operation: CONST String type=kotlin.String value='reifiedSafeAs<MutableIterable<*>>(arrayList)'
        VAR val coll: kotlin.Any
          TYPE_OP operator=CAST typeOperand=kotlin.Any
            CALL .<init> type=C operator=null
        VAR val mcoll: MC
          CALL .<init> type=MC operator=null
        CALL .reifiedSafeAsReturnsNull type=kotlin.Unit operator=null
          x: GET_VAR coll type=kotlin.Any operator=null
          operation: CONST String type=kotlin.String value='reifiedSafeAs<MutableCollection<*>>(coll)'
        CALL .reifiedSafeAsReturnsNull type=kotlin.Unit operator=null
          x: GET_VAR coll type=kotlin.Any operator=null
          operation: CONST String type=kotlin.String value='reifiedSafeAs<MutableIterable<*>>(coll)'
        CALL .reifiedSafeAsReturnsNonNull type=kotlin.Unit operator=null
          x: GET_VAR mcoll type=MC operator=null
          operation: CONST String type=kotlin.String value='reifiedSafeAs<MutableCollection<*>>(mcoll)'
        CALL .reifiedSafeAsReturnsNonNull type=kotlin.Unit operator=null
          x: GET_VAR mcoll type=MC operator=null
          operation: CONST String type=kotlin.String value='reifiedSafeAs<MutableIterable<*>>(mcoll)'
        CALL .reifiedSafeAsReturnsNonNull type=kotlin.Unit operator=null
          x: GET_VAR arrayList type=java.util.ArrayList<kotlin.String> operator=null
          operation: CONST String type=kotlin.String value='reifiedSafeAs<MutableCollection<*>>(arrayList)'
        VAR val list: kotlin.Any
          TYPE_OP operator=CAST typeOperand=kotlin.Any
            CALL .<init> type=L operator=null
        VAR val mlist: ML
          CALL .<init> type=ML operator=null
        CALL .reifiedSafeAsReturnsNull type=kotlin.Unit operator=null
          x: GET_VAR list type=kotlin.Any operator=null
          operation: CONST String type=kotlin.String value='reifiedSafeAs<MutableList<*>>(list)'
        CALL .reifiedSafeAsReturnsNull type=kotlin.Unit operator=null
          x: GET_VAR list type=kotlin.Any operator=null
          operation: CONST String type=kotlin.String value='reifiedSafeAs<MutableCollection<*>>(list)'
        CALL .reifiedSafeAsReturnsNull type=kotlin.Unit operator=null
          x: GET_VAR list type=kotlin.Any operator=null
          operation: CONST String type=kotlin.String value='reifiedSafeAs<MutableIterable<*>>(list)'
        CALL .reifiedSafeAsReturnsNonNull type=kotlin.Unit operator=null
          x: GET_VAR mlist type=ML operator=null
          operation: CONST String type=kotlin.String value='reifiedSafeAs<MutableList<*>>(mlist)'
        CALL .reifiedSafeAsReturnsNonNull type=kotlin.Unit operator=null
          x: GET_VAR mlist type=ML operator=null
          operation: CONST String type=kotlin.String value='reifiedSafeAs<MutableCollection<*>>(mlist)'
        CALL .reifiedSafeAsReturnsNonNull type=kotlin.Unit operator=null
          x: GET_VAR mlist type=ML operator=null
          operation: CONST String type=kotlin.String value='reifiedSafeAs<MutableIterable<*>>(mlist)'
        CALL .reifiedSafeAsReturnsNonNull type=kotlin.Unit operator=null
          x: GET_VAR arrayList type=java.util.ArrayList<kotlin.String> operator=null
          operation: CONST String type=kotlin.String value='reifiedSafeAs<MutableList<*>>(arrayList)'
        VAR val set: kotlin.Any
          TYPE_OP operator=CAST typeOperand=kotlin.Any
            CALL .<init> type=S operator=null
        VAR val mset: MS
          CALL .<init> type=MS operator=null
        VAR val hashSet: java.util.HashSet<kotlin.String>
          CALL .<init> type=java.util.HashSet<kotlin.String> operator=null
        CALL .reifiedSafeAsReturnsNull type=kotlin.Unit operator=null
          x: GET_VAR set type=kotlin.Any operator=null
          operation: CONST String type=kotlin.String value='reifiedSafeAs<MutableSet<*>>(set)'
        CALL .reifiedSafeAsReturnsNull type=kotlin.Unit operator=null
          x: GET_VAR set type=kotlin.Any operator=null
          operation: CONST String type=kotlin.String value='reifiedSafeAs<MutableCollection<*>>(set)'
        CALL .reifiedSafeAsReturnsNull type=kotlin.Unit operator=null
          x: GET_VAR set type=kotlin.Any operator=null
          operation: CONST String type=kotlin.String value='reifiedSafeAs<MutableIterable<*>>(set)'
        CALL .reifiedSafeAsReturnsNonNull type=kotlin.Unit operator=null
          x: GET_VAR mset type=MS operator=null
          operation: CONST String type=kotlin.String value='reifiedSafeAs<MutableSet<*>>(mset)'
        CALL .reifiedSafeAsReturnsNonNull type=kotlin.Unit operator=null
          x: GET_VAR mset type=MS operator=null
          operation: CONST String type=kotlin.String value='reifiedSafeAs<MutableCollection<*>>(mset)'
        CALL .reifiedSafeAsReturnsNonNull type=kotlin.Unit operator=null
          x: GET_VAR mset type=MS operator=null
          operation: CONST String type=kotlin.String value='reifiedSafeAs<MutableIterable<*>>(mset)'
        CALL .reifiedSafeAsReturnsNonNull type=kotlin.Unit operator=null
          x: GET_VAR hashSet type=java.util.HashSet<kotlin.String> operator=null
          operation: CONST String type=kotlin.String value='reifiedSafeAs<MutableSet<*>>(hashSet)'
        CALL .reifiedSafeAsReturnsNonNull type=kotlin.Unit operator=null
          x: GET_VAR hashSet type=java.util.HashSet<kotlin.String> operator=null
          operation: CONST String type=kotlin.String value='reifiedSafeAs<MutableCollection<*>>(hashSet)'
        CALL .reifiedSafeAsReturnsNonNull type=kotlin.Unit operator=null
          x: GET_VAR hashSet type=java.util.HashSet<kotlin.String> operator=null
          operation: CONST String type=kotlin.String value='reifiedSafeAs<MutableIterable<*>>(hashSet)'
        VAR val map: kotlin.Any
          TYPE_OP operator=CAST typeOperand=kotlin.Any
            CALL .<init> type=M operator=null
        VAR val mmap: MM
          CALL .<init> type=MM operator=null
        VAR val hashMap: java.util.HashMap<kotlin.String, kotlin.String>
          CALL .<init> type=java.util.HashMap<kotlin.String, kotlin.String> operator=null
        CALL .reifiedSafeAsReturnsNull type=kotlin.Unit operator=null
          x: GET_VAR map type=kotlin.Any operator=null
          operation: CONST String type=kotlin.String value='reifiedSafeAs<MutableMap<*, *>>(map)'
        CALL .reifiedSafeAsReturnsNonNull type=kotlin.Unit operator=null
          x: GET_VAR mmap type=MM operator=null
          operation: CONST String type=kotlin.String value='reifiedSafeAs<MutableMap<*, *>>(mmap)'
        CALL .reifiedSafeAsReturnsNonNull type=kotlin.Unit operator=null
          x: GET_VAR hashMap type=java.util.HashMap<kotlin.String, kotlin.String> operator=null
          operation: CONST String type=kotlin.String value='reifiedSafeAs<MutableMap<*, *>>(hashMap)'
        VAR val entry: kotlin.Any
          TYPE_OP operator=CAST typeOperand=kotlin.Any
            CALL .<init> type=ME operator=null
        VAR val mentry: MME
          CALL .<init> type=MME operator=null
        CALL .set type=kotlin.Unit operator=EQ
          $receiver: GET_VAR hashMap type=java.util.HashMap<kotlin.String, kotlin.String> operator=null
          key: CONST String type=kotlin.String value=''
          value: CONST String type=kotlin.String value=''
        VAR val hashMapEntry: kotlin.collections.MutableMap.MutableEntry<kotlin.String, kotlin.String>
          CALL .first type=kotlin.collections.MutableMap.MutableEntry<kotlin.String, kotlin.String> operator=null
            $receiver: CALL .<get-entries> type=kotlin.collections.MutableSet<kotlin.collections.MutableMap.MutableEntry<kotlin.String, kotlin.String>> operator=GET_PROPERTY
              $this: GET_VAR hashMap type=java.util.HashMap<kotlin.String, kotlin.String> operator=null
        CALL .reifiedSafeAsReturnsNull type=kotlin.Unit operator=null
          x: GET_VAR entry type=kotlin.Any operator=null
          operation: CONST String type=kotlin.String value='reifiedSafeAs<MutableMap.MutableEntry<*, *>>(entry)'
        CALL .reifiedSafeAsReturnsNonNull type=kotlin.Unit operator=null
          x: GET_VAR mentry type=MME operator=null
          operation: CONST String type=kotlin.String value='reifiedSafeAs<MutableMap.MutableEntry<*, *>>(mentry)'
        CALL .reifiedSafeAsReturnsNonNull type=kotlin.Unit operator=null
          x: GET_VAR hashMapEntry type=kotlin.collections.MutableMap.MutableEntry<kotlin.String, kotlin.String> operator=null
          operation: CONST String type=kotlin.String value='reifiedSafeAs<MutableMap.MutableEntry<*, *>>(hashMapEntry)'
        CALL .reifiedSafeAsReturnsNull type=kotlin.Unit operator=null
          x: CONST Null type=kotlin.Nothing? value='null'
          operation: CONST String type=kotlin.String value='reifiedSafeAs<MutableIterator<*>>(null)'
        CALL .reifiedSafeAsReturnsNull type=kotlin.Unit operator=null
          x: CONST Null type=kotlin.Nothing? value='null'
          operation: CONST String type=kotlin.String value='reifiedSafeAs<MutableListIterator<*>>(null)'
        CALL .reifiedSafeAsReturnsNull type=kotlin.Unit operator=null
          x: CONST Null type=kotlin.Nothing? value='null'
          operation: CONST String type=kotlin.String value='reifiedSafeAs<MutableIterable<*>>(null)'
        CALL .reifiedSafeAsReturnsNull type=kotlin.Unit operator=null
          x: CONST Null type=kotlin.Nothing? value='null'
          operation: CONST String type=kotlin.String value='reifiedSafeAs<MutableCollection<*>>(null)'
        CALL .reifiedSafeAsReturnsNull type=kotlin.Unit operator=null
          x: CONST Null type=kotlin.Nothing? value='null'
          operation: CONST String type=kotlin.String value='reifiedSafeAs<MutableList<*>>(null)'
        CALL .reifiedSafeAsReturnsNull type=kotlin.Unit operator=null
          x: CONST Null type=kotlin.Nothing? value='null'
          operation: CONST String type=kotlin.String value='reifiedSafeAs<MutableSet<*>>(null)'
        CALL .reifiedSafeAsReturnsNull type=kotlin.Unit operator=null
          x: CONST Null type=kotlin.Nothing? value='null'
          operation: CONST String type=kotlin.String value='reifiedSafeAs<MutableMap<*, *>>(null)'
        CALL .reifiedSafeAsReturnsNull type=kotlin.Unit operator=null
          x: CONST Null type=kotlin.Nothing? value='null'
          operation: CONST String type=kotlin.String value='reifiedSafeAs<MutableMap.MutableEntry<*, *>>(null)'
        RETURN type=kotlin.Nothing from=box
          CONST String type=kotlin.String value='OK'
