MODULE <test-module>
  FILE /asSafe.kt
    FUN public fun foo(/*0*/ x: kotlin.Any): java.lang.Runnable?
      BLOCK_BODY
        RETURN type=kotlin.Nothing from=foo
          TYPE_OP operator=SAFE_CAST typeOperand=java.lang.Runnable
            GET_VAR x type=kotlin.Any operator=null
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        VAR val r: box.<no name provided>
          BLOCK type=box.<no name provided> operator=OBJECT_LITERAL
            CLASS CLASS <no name provided>
              CONSTRUCTOR public constructor <no name provided>()
                BLOCK_BODY
                  DELEGATING_CONSTRUCTOR_CALL Any
                  INSTANCE_INITIALIZER_CALL classDescriptor=<no name provided>
              FUN public open override /*1*/ fun run(): kotlin.Unit
                BLOCK_BODY
            CALL .<init> type=box.<no name provided> operator=OBJECT_LITERAL
        RETURN type=kotlin.Nothing from=box
          WHEN type=kotlin.String operator=IF
            if: CALL .EQEQEQ type=kotlin.Boolean operator=EQEQEQ
              arg0: CALL .foo type=java.lang.Runnable? operator=null
                x: GET_VAR r type=box.<no name provided> operator=null
              arg1: GET_VAR r type=box.<no name provided> operator=null
            then: CONST String type=kotlin.String value='OK'
            else: CONST String type=kotlin.String value='Fail'
