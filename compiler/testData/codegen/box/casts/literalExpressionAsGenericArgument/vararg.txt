MODULE <test-module>
  FILE /vararg.kt
    CLASS CLASS Box
      CONSTRUCTOR public constructor Box</*0*/ T>(/*0*/ value: T)
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          SET_BACKING_FIELD value type=kotlin.Unit operator=null
            receiver: THIS public final class Box</*0*/ T> type=Box<T>
            value: GET_VAR value type=T operator=INITIALIZE_PROPERTY_FROM_PARAMETER
          INSTANCE_INITIALIZER_CALL classDescriptor=Box
      PROPERTY public final val value: T
        EXPRESSION_BODY
          GET_VAR value type=T operator=INITIALIZE_PROPERTY_FROM_PARAMETER
    FUN public fun </*0*/ T> run(/*0*/ vararg z: T /*kotlin.Array<out T>*/): Box<T>
      BLOCK_BODY
        RETURN type=kotlin.Nothing from=run
          CALL .<init> type=Box<T> operator=null
            value: CALL .get type=T operator=GET_ARRAY_ELEMENT
              $this: GET_VAR z type=kotlin.Array<out T> operator=null
              index: CONST Int type=kotlin.Int value='0'
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        VAR val b: Box<kotlin.Long>
          CALL .run type=Box<kotlin.Long> operator=null
            z: VARARG type=Array<out Long> varargElementType=Long
              CONST Long type=kotlin.Long value='-1'
              CONST Long type=kotlin.Long value='-1'
              CONST Long type=kotlin.Long value='-1'
        VAR val expected: kotlin.Long? = -1.toLong()
          CONST Long type=kotlin.Long value='-1'
        RETURN type=kotlin.Nothing from=box
          WHEN type=kotlin.String operator=IF
            if: CALL .EQEQ type=kotlin.Boolean operator=EQEQ
              arg0: CALL .<get-value> type=kotlin.Long operator=GET_PROPERTY
                $this: GET_VAR b type=Box<kotlin.Long> operator=null
              arg1: GET_VAR expected type=kotlin.Long? operator=null
            then: CONST String type=kotlin.String value='OK'
            else: CONST String type=kotlin.String value='fail'
