MODULE <test-module>
  FILE /javaCollectionsStaticMethod.kt
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        VAR val numbers: java.util.ArrayList<kotlin.Int>
          CALL .<init> type=java.util.ArrayList<kotlin.Int> operator=null
        CALL .add type=kotlin.Boolean operator=null
          $this: GET_VAR numbers type=java.util.ArrayList<kotlin.Int> operator=null
          element: CONST Int type=kotlin.Int value='1'
        CALL .add type=kotlin.Boolean operator=null
          $this: GET_VAR numbers type=java.util.ArrayList<kotlin.Int> operator=null
          element: CONST Int type=kotlin.Int value='2'
        CALL .add type=kotlin.Boolean operator=null
          $this: GET_VAR numbers type=java.util.ArrayList<kotlin.Int> operator=null
          element: CONST Int type=kotlin.Int value='3'
        CALL .invoke type=kotlin.Unit operator=null
          $this: CALLABLE_REFERENCE rotate type=kotlin.reflect.KFunction2<kotlin.collections.(Mutable)List<*>!, kotlin.Int, kotlin.Unit> operator=null
          p1: GET_VAR numbers type=java.util.ArrayList<kotlin.Int> operator=null
          p2: CONST Int type=kotlin.Int value='1'
        RETURN type=kotlin.Nothing from=box
          WHEN type=kotlin.String operator=IF
            if: CALL .EQEQ type=kotlin.Boolean operator=EQEQ
              arg0: GET_VAR numbers type=java.util.ArrayList<kotlin.Int> operator=null
              arg1: CONST String type=kotlin.String value='[3, 1, 2]'
            then: CONST String type=kotlin.String value='OK'
            else: STRING_CONCATENATION type=kotlin.String
              CONST String type=kotlin.String value='Fail '
              GET_VAR numbers type=java.util.ArrayList<kotlin.Int> operator=null
