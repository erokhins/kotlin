MODULE <test-module>
  FILE /topLevelFromExtension.kt
    FUN public fun foo(/*0*/ o: kotlin.Int, /*1*/ k: kotlin.Int): kotlin.Int
      BLOCK_BODY
        RETURN type=kotlin.Nothing from=foo
          CALL .plus type=kotlin.Int operator=PLUS
            $this: GET_VAR o type=kotlin.Int operator=null
            other: GET_VAR k type=kotlin.Int operator=null
    CLASS CLASS A
      CONSTRUCTOR public constructor A()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          INSTANCE_INITIALIZER_CALL classDescriptor=A
    FUN public fun A.bar(): kotlin.Int
      BLOCK_BODY
        RETURN type=kotlin.Nothing from=bar
          CALL .invoke type=kotlin.Int operator=null
            $this: CALLABLE_REFERENCE foo type=kotlin.reflect.KFunction2<kotlin.Int, kotlin.Int, kotlin.Int> operator=null
            p1: CONST Int type=kotlin.Int value='111'
            p2: CONST Int type=kotlin.Int value='222'
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        VAR val result: kotlin.Int
          CALL .bar type=kotlin.Int operator=null
            $receiver: CALL .<init> type=A operator=null
        WHEN type=kotlin.Unit operator=IF
          if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
              arg0: GET_VAR result type=kotlin.Int operator=null
              arg1: CONST Int type=kotlin.Int value='333'
          then: RETURN type=kotlin.Nothing from=box
            STRING_CONCATENATION type=kotlin.String
              CONST String type=kotlin.String value='Fail '
              GET_VAR result type=kotlin.Int operator=null
        RETURN type=kotlin.Nothing from=box
          CONST String type=kotlin.String value='OK'
