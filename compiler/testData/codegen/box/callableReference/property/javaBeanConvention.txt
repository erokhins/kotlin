MODULE <test-module>
  FILE /javaBeanConvention.kt
    PROPERTY public var aBcde: kotlin.Int
      EXPRESSION_BODY
        CONST Int type=kotlin.Int value='239'
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        VAR val x: kotlin.Int
          CALL .get type=kotlin.Int operator=null
            $this: CALLABLE_REFERENCE aBcde type=kotlin.reflect.KMutableProperty0<kotlin.Int> operator=null
        WHEN type=kotlin.Unit operator=IF
          if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
              arg0: GET_VAR x type=kotlin.Int operator=null
              arg1: CONST Int type=kotlin.Int value='239'
          then: RETURN type=kotlin.Nothing from=box
            STRING_CONCATENATION type=kotlin.String
              CONST String type=kotlin.String value='Fail x: '
              GET_VAR x type=kotlin.Int operator=null
        CALL .set type=kotlin.Unit operator=null
          $this: CALLABLE_REFERENCE aBcde type=kotlin.reflect.KMutableProperty0<kotlin.Int> operator=null
          value: CONST Int type=kotlin.Int value='42'
        VAR val y: kotlin.Int
          CALL .get type=kotlin.Int operator=null
            $this: CALLABLE_REFERENCE aBcde type=kotlin.reflect.KMutableProperty0<kotlin.Int> operator=null
        WHEN type=kotlin.Unit operator=IF
          if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
              arg0: GET_VAR y type=kotlin.Int operator=null
              arg1: CONST Int type=kotlin.Int value='42'
          then: RETURN type=kotlin.Nothing from=box
            STRING_CONCATENATION type=kotlin.String
              CONST String type=kotlin.String value='Fail y: '
              GET_VAR y type=kotlin.Int operator=null
        RETURN type=kotlin.Nothing from=box
          CONST String type=kotlin.String value='OK'
