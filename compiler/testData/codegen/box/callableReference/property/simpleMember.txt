MODULE <test-module>
  FILE /simpleMember.kt
    CLASS CLASS A
      CONSTRUCTOR public constructor A(/*0*/ x: kotlin.Int)
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          SET_BACKING_FIELD x type=kotlin.Unit operator=null
            receiver: THIS public final class A type=A
            value: GET_VAR x type=kotlin.Int operator=INITIALIZE_PROPERTY_FROM_PARAMETER
          INSTANCE_INITIALIZER_CALL classDescriptor=A
      PROPERTY public final val x: kotlin.Int
        EXPRESSION_BODY
          GET_VAR x type=kotlin.Int operator=INITIALIZE_PROPERTY_FROM_PARAMETER
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        VAR val p: kotlin.reflect.KProperty1<A, kotlin.Int>
          CALLABLE_REFERENCE x type=kotlin.reflect.KProperty1<A, kotlin.Int> operator=null
        WHEN type=kotlin.Unit operator=IF
          if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
              arg0: CALL .get type=kotlin.Int operator=null
                $this: GET_VAR p type=kotlin.reflect.KProperty1<A, kotlin.Int> operator=null
                receiver: CALL .<init> type=A operator=null
                  x: CONST Int type=kotlin.Int value='42'
              arg1: CONST Int type=kotlin.Int value='42'
          then: RETURN type=kotlin.Nothing from=box
            CONST String type=kotlin.String value='Fail 1'
        WHEN type=kotlin.Unit operator=IF
          if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
              arg0: CALL .get type=kotlin.Int operator=null
                $this: GET_VAR p type=kotlin.reflect.KProperty1<A, kotlin.Int> operator=null
                receiver: CALL .<init> type=A operator=null
                  x: CONST Int type=kotlin.Int value='-1'
              arg1: CONST Int type=kotlin.Int value='-1'
          then: RETURN type=kotlin.Nothing from=box
            CONST String type=kotlin.String value='Fail 2'
        WHEN type=kotlin.Unit operator=IF
          if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
              arg0: CALL .<get-name> type=kotlin.String operator=GET_PROPERTY
                $this: GET_VAR p type=kotlin.reflect.KProperty1<A, kotlin.Int> operator=null
              arg1: CONST String type=kotlin.String value='x'
          then: RETURN type=kotlin.Nothing from=box
            CONST String type=kotlin.String value='Fail 3'
        RETURN type=kotlin.Nothing from=box
          CONST String type=kotlin.String value='OK'
