MODULE <test-module>
  FILE /delegatedMutable.kt
    PROPERTY public var result: kotlin.String
      delegate: PROPERTY val `result$delegate`: Delegate
        EXPRESSION_BODY
          GET_OBJECT Delegate type=Delegate
      PROPERTY_GETTER public fun <get-result>(): kotlin.String
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=<get-result>
            CALL .getValue type=kotlin.String operator=null
              $this: GET_BACKING_FIELD result$delegate type=Delegate operator=null
              instance: CONST Null type=kotlin.Nothing? value='null'
              data: CALLABLE_REFERENCE result type=kotlin.reflect.KMutableProperty0<kotlin.String> operator=PROPERTY_REFERENCE_FOR_DELEGATE
      PROPERTY_SETTER public fun <set-result>(/*0*/ <set-?>: kotlin.String): kotlin.Unit
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=<set-result>
            CALL .setValue type=kotlin.Unit operator=null
              $this: GET_BACKING_FIELD result$delegate type=Delegate operator=null
              instance: CONST Null type=kotlin.Nothing? value='null'
              data: CALLABLE_REFERENCE result type=kotlin.reflect.KMutableProperty0<kotlin.String> operator=PROPERTY_REFERENCE_FOR_DELEGATE
              newValue: GET_VAR <set-?> type=kotlin.String operator=null
    CLASS OBJECT Delegate
      CONSTRUCTOR private constructor Delegate()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          INSTANCE_INITIALIZER_CALL classDescriptor=Delegate
      PROPERTY public final var value: kotlin.String
        EXPRESSION_BODY
          CONST String type=kotlin.String value='lol'
      FUN public final operator fun getValue(/*0*/ instance: kotlin.Any?, /*1*/ data: kotlin.reflect.KProperty<*>): kotlin.String
        BLOCK_BODY
          RETURN type=kotlin.Nothing from=getValue
            CALL .<get-value> type=kotlin.String operator=GET_PROPERTY
              $this: THIS public object Delegate type=Delegate
      FUN public final operator fun setValue(/*0*/ instance: kotlin.Any?, /*1*/ data: kotlin.reflect.KProperty<*>, /*2*/ newValue: kotlin.String): kotlin.Unit
        BLOCK_BODY
          CALL .<set-value> type=kotlin.Unit operator=EQ
            $this: THIS public object Delegate type=Delegate
            <set-?>: GET_VAR newValue type=kotlin.String operator=null
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        VAR val f: kotlin.reflect.KMutableProperty0<kotlin.String>
          CALLABLE_REFERENCE result type=kotlin.reflect.KMutableProperty0<kotlin.String> operator=null
        WHEN type=kotlin.Unit operator=IF
          if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
              arg0: CALL .get type=kotlin.String operator=null
                $this: GET_VAR f type=kotlin.reflect.KMutableProperty0<kotlin.String> operator=null
              arg1: CONST String type=kotlin.String value='lol'
          then: RETURN type=kotlin.Nothing from=box
            STRING_CONCATENATION type=kotlin.String
              CONST String type=kotlin.String value='Fail 1: {'
              GET_VAR f type=kotlin.reflect.KMutableProperty0<kotlin.String> operator=null
              CONST String type=kotlin.String value='.get()}'
        CALL .<set-value> type=kotlin.Unit operator=EQ
          $this: GET_OBJECT Delegate type=Delegate
          <set-?>: CONST String type=kotlin.String value='rofl'
        WHEN type=kotlin.Unit operator=IF
          if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
              arg0: CALL .get type=kotlin.String operator=null
                $this: GET_VAR f type=kotlin.reflect.KMutableProperty0<kotlin.String> operator=null
              arg1: CONST String type=kotlin.String value='rofl'
          then: RETURN type=kotlin.Nothing from=box
            STRING_CONCATENATION type=kotlin.String
              CONST String type=kotlin.String value='Fail 2: {'
              GET_VAR f type=kotlin.reflect.KMutableProperty0<kotlin.String> operator=null
              CONST String type=kotlin.String value='.get()}'
        CALL .set type=kotlin.Unit operator=null
          $this: GET_VAR f type=kotlin.reflect.KMutableProperty0<kotlin.String> operator=null
          value: CONST String type=kotlin.String value='OK'
        RETURN type=kotlin.Nothing from=box
          CALL .get type=kotlin.String operator=null
            $this: GET_VAR f type=kotlin.reflect.KMutableProperty0<kotlin.String> operator=null
