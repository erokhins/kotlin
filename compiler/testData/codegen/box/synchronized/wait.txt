MODULE <test-module>
  FILE /wait.kt
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        VAR val obj: java.lang.Object
          TYPE_OP operator=CAST typeOperand=java.lang.Object
            CONST String type=kotlin.String value=''
        TRY_CATCH type=kotlin.Unit
          try: BLOCK type=kotlin.Nothing operator=null
            CALL .wait type=kotlin.Unit operator=null
              $this: GET_VAR obj type=java.lang.Object operator=null
              p0: CONST Long type=kotlin.Long value='1'
            RETURN type=kotlin.Nothing from=box
              CONST String type=kotlin.String value='Fail: exception should have been thrown'
          catch e: BLOCK type=kotlin.Unit operator=null
        CALL .synchronized type=kotlin.Unit operator=null
          lock: GET_VAR obj type=java.lang.Object operator=null
          block: BLOCK type=() -> kotlin.Unit operator=LAMBDA
            FUN local final fun <anonymous>(): kotlin.Unit
              BLOCK_BODY
                RETURN type=kotlin.Nothing from=<anonymous>
                  CALL .wait type=kotlin.Unit operator=null
                    $this: GET_VAR obj type=java.lang.Object operator=null
                    p0: CONST Long type=kotlin.Long value='1'
            CALLABLE_REFERENCE <anonymous> type=() -> kotlin.Unit operator=LAMBDA
        RETURN type=kotlin.Nothing from=box
          CONST String type=kotlin.String value='OK'
