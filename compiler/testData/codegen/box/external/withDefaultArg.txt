MODULE <test-module>
  FILE /withDefaultArg.kt
    CLASS OBJECT ObjWithNative
      CONSTRUCTOR private constructor ObjWithNative()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          INSTANCE_INITIALIZER_CALL classDescriptor=ObjWithNative
      FUN public final external fun foo(/*0*/ x: kotlin.Int = ...): kotlin.Double
        x: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='1'
      FUN @kotlin.jvm.JvmStatic() public final external fun bar(/*0*/ l: kotlin.Long, /*1*/ s: kotlin.String = ...): kotlin.Double
        s: EXPRESSION_BODY
          CONST String type=kotlin.String value=''
    FUN public external fun topLevel(/*0*/ x: kotlin.Int = ...): kotlin.Double
      x: EXPRESSION_BODY
        CONST Int type=kotlin.Int value='1'
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        VAR var d: kotlin.Double
          CONST Double type=kotlin.Double value='0.0'
        TRY_CATCH type=kotlin.Unit
          try: BLOCK type=kotlin.Nothing operator=null
            SET_VAR d type=kotlin.Unit operator=EQ
              CALL .bar type=kotlin.Double operator=null
                $this: GET_OBJECT ObjWithNative type=foo.ObjWithNative
                l: CONST Long type=kotlin.Long value='1'
            RETURN type=kotlin.Nothing from=box
              CONST String type=kotlin.String value='Link error expected on object'
          catch e: BLOCK type=kotlin.Unit operator=null
            WHEN type=kotlin.Unit operator=IF
              if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
                arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
                  arg0: CALL .<get-message> type=kotlin.String? operator=GET_PROPERTY
                    $this: GET_VAR e type=java.lang.UnsatisfiedLinkError operator=null
                  arg1: CONST String type=kotlin.String value='foo.ObjWithNative.bar(JLjava/lang/String;)D'
              then: RETURN type=kotlin.Nothing from=box
                CALL .plus type=kotlin.String operator=PLUS
                  $this: CONST String type=kotlin.String value='Fail 1: '
                  other: CALL .<get-message> type=kotlin.String? operator=GET_PROPERTY
                    $this: GET_VAR e type=java.lang.UnsatisfiedLinkError operator=null
        TRY_CATCH type=kotlin.Unit
          try: BLOCK type=kotlin.Nothing operator=null
            SET_VAR d type=kotlin.Unit operator=EQ
              CALL .foo type=kotlin.Double operator=null
                $this: GET_OBJECT ObjWithNative type=foo.ObjWithNative
            RETURN type=kotlin.Nothing from=box
              CONST String type=kotlin.String value='Link error expected on object'
          catch e: BLOCK type=kotlin.Unit operator=null
            WHEN type=kotlin.Unit operator=IF
              if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
                arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
                  arg0: CALL .<get-message> type=kotlin.String? operator=GET_PROPERTY
                    $this: GET_VAR e type=java.lang.UnsatisfiedLinkError operator=null
                  arg1: CONST String type=kotlin.String value='foo.ObjWithNative.foo(I)D'
              then: RETURN type=kotlin.Nothing from=box
                CALL .plus type=kotlin.String operator=PLUS
                  $this: CONST String type=kotlin.String value='Fail 2: '
                  other: CALL .<get-message> type=kotlin.String? operator=GET_PROPERTY
                    $this: GET_VAR e type=java.lang.UnsatisfiedLinkError operator=null
        TRY_CATCH type=kotlin.Unit
          try: BLOCK type=kotlin.Nothing operator=null
            SET_VAR d type=kotlin.Unit operator=EQ
              CALL .topLevel type=kotlin.Double operator=null
            RETURN type=kotlin.Nothing from=box
              CONST String type=kotlin.String value='Link error expected on object'
          catch e: BLOCK type=kotlin.Unit operator=null
            WHEN type=kotlin.Unit operator=IF
              if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
                arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
                  arg0: CALL .<get-message> type=kotlin.String? operator=GET_PROPERTY
                    $this: GET_VAR e type=java.lang.UnsatisfiedLinkError operator=null
                  arg1: CONST String type=kotlin.String value='foo.WithDefaultArgKt.topLevel(I)D'
              then: RETURN type=kotlin.Nothing from=box
                CALL .plus type=kotlin.String operator=PLUS
                  $this: CONST String type=kotlin.String value='Fail 3: '
                  other: CALL .<get-message> type=kotlin.String? operator=GET_PROPERTY
                    $this: GET_VAR e type=java.lang.UnsatisfiedLinkError operator=null
        RETURN type=kotlin.Nothing from=box
          CONST String type=kotlin.String value='OK'
