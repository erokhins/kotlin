MODULE <test-module>
  FILE /kt864.kt
    FUN public fun sample(): java.io.Reader
      BLOCK_BODY
        RETURN type=kotlin.Nothing from=sample
          CALL .<init> type=java.io.StringReader operator=null
            p0: STRING_CONCATENATION type=kotlin.String
              CONST String type=kotlin.String value='Hello'
              CONST String type=kotlin.String value='
'
              CONST String type=kotlin.String value='World'
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        VAR val list1: kotlin.collections.List<kotlin.String>
          CALL .useLines type=kotlin.collections.List<kotlin.String> operator=null
            $receiver: CALL .sample type=java.io.Reader operator=null
            block: BLOCK type=(kotlin.sequences.Sequence<kotlin.String>) -> kotlin.collections.List<kotlin.String> operator=LAMBDA
              FUN local final fun <anonymous>(/*0*/ it: kotlin.sequences.Sequence<kotlin.String>): kotlin.collections.List<kotlin.String>
                BLOCK_BODY
                  RETURN type=kotlin.Nothing from=<anonymous>
                    CALL .toList type=kotlin.collections.List<kotlin.String> operator=null
                      $receiver: GET_VAR it type=kotlin.sequences.Sequence<kotlin.String> operator=null
              CALLABLE_REFERENCE <anonymous> type=(kotlin.sequences.Sequence<kotlin.String>) -> kotlin.collections.List<kotlin.String> operator=LAMBDA
        VAR val list2: java.util.ArrayList<kotlin.String>
          CALL .useLines type=java.util.ArrayList<kotlin.String> operator=null
            $receiver: CALL .sample type=java.io.Reader operator=null
            block: BLOCK type=(kotlin.sequences.Sequence<kotlin.String>) -> java.util.ArrayList<kotlin.String> operator=LAMBDA
              FUN local final fun <anonymous>(/*0*/ it: kotlin.sequences.Sequence<kotlin.String>): java.util.ArrayList<kotlin.String>
                BLOCK_BODY
                  RETURN type=kotlin.Nothing from=<anonymous>
                    CALL .toCollection type=java.util.ArrayList<kotlin.String> operator=null
                      $receiver: GET_VAR it type=kotlin.sequences.Sequence<kotlin.String> operator=null
                      destination: CALL .arrayListOf type=java.util.ArrayList<kotlin.String> operator=null
              CALLABLE_REFERENCE <anonymous> type=(kotlin.sequences.Sequence<kotlin.String>) -> java.util.ArrayList<kotlin.String> operator=LAMBDA
        WHEN type=kotlin.Unit operator=IF
          if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
              arg0: CALL .arrayListOf type=java.util.ArrayList<kotlin.String> operator=null
                elements: VARARG type=Array<out String> varargElementType=String
                  CONST String type=kotlin.String value='Hello'
                  CONST String type=kotlin.String value='World'
              arg1: GET_VAR list1 type=kotlin.collections.List<kotlin.String> operator=null
          then: RETURN type=kotlin.Nothing from=box
            CONST String type=kotlin.String value='fail'
        WHEN type=kotlin.Unit operator=IF
          if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
              arg0: CALL .arrayListOf type=java.util.ArrayList<kotlin.String> operator=null
                elements: VARARG type=Array<out String> varargElementType=String
                  CONST String type=kotlin.String value='Hello'
                  CONST String type=kotlin.String value='World'
              arg1: GET_VAR list2 type=java.util.ArrayList<kotlin.String> operator=null
          then: RETURN type=kotlin.Nothing from=box
            CONST String type=kotlin.String value='fail'
        RETURN type=kotlin.Nothing from=box
          CONST String type=kotlin.String value='OK'
