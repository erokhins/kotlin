MODULE <test-module>
  FILE /kt715.kt
    FUN @kotlin.Suppress(names = {"REIFIED_TYPE_PARAMETER_NO_INLINE"}) public inline fun </*0*/ reified T : kotlin.Any> javaClass(): java.lang.Class<T>
      BLOCK_BODY
        RETURN type=kotlin.Nothing from=javaClass
          CALL .<get-java> type=java.lang.Class<T> operator=GET_PROPERTY
            $receiver: CLASS_REFERENCE T type=kotlin.reflect.KClass<T>
    PROPERTY public val test: java.lang.Class<kotlin.String>
      EXPRESSION_BODY
        CALL .<get-javaClass> type=java.lang.Class<kotlin.String> operator=GET_PROPERTY
          $receiver: CONST String type=kotlin.String value='lala'
    PROPERTY public val test2: java.lang.Class<kotlin.collections.Iterator<kotlin.Int>>
      EXPRESSION_BODY
        CALL .javaClass type=java.lang.Class<kotlin.collections.Iterator<kotlin.Int>> operator=null
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        WHEN type=kotlin.Unit operator=IF
          if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
              arg0: CALL .getCanonicalName type=kotlin.String! operator=null
                $this: CALL .<get-test> type=java.lang.Class<kotlin.String> operator=GET_PROPERTY
              arg1: CONST String type=kotlin.String value='java.lang.String'
          then: RETURN type=kotlin.Nothing from=box
            CONST String type=kotlin.String value='fail'
        WHEN type=kotlin.Unit operator=IF
          if: CALL .NOT type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL .EQEQ type=kotlin.Boolean operator=EXCLEQ
              arg0: CALL .getCanonicalName type=kotlin.String! operator=null
                $this: CALL .<get-test2> type=java.lang.Class<kotlin.collections.Iterator<kotlin.Int>> operator=GET_PROPERTY
              arg1: CONST String type=kotlin.String value='java.util.Iterator'
          then: RETURN type=kotlin.Nothing from=box
            CONST String type=kotlin.String value='fail'
        RETURN type=kotlin.Nothing from=box
          CONST String type=kotlin.String value='OK'
