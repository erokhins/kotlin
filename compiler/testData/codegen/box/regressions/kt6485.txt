MODULE <test-module>
  FILE /kt6485.kt
    CLASS CLASS TypeLiteral
      CONSTRUCTOR public constructor TypeLiteral</*0*/ T>()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL Any
          INSTANCE_INITIALIZER_CALL classDescriptor=TypeLiteral
      PROPERTY public final val type: java.lang.reflect.Type
        PROPERTY_GETTER public final fun <get-type>(): java.lang.reflect.Type
          BLOCK_BODY
            RETURN type=kotlin.Nothing from=<get-type>
              TYPE_OP operator=IMPLICIT_NOTNULL typeOperand=java.lang.reflect.Type
                CALL .get type=java.lang.reflect.Type! operator=GET_ARRAY_ELEMENT
                  $this: TYPE_OP operator=IMPLICIT_CAST typeOperand=kotlin.Array<java.lang.reflect.Type!>
                    TYPE_OP operator=IMPLICIT_NOTNULL typeOperand=kotlin.Array<out java.lang.reflect.Type!>
                      CALL .getActualTypeArguments type=kotlin.Array<(out) java.lang.reflect.Type!>! operator=null
                        $this: TYPE_OP operator=CAST typeOperand=java.lang.reflect.ParameterizedType
                          CALL .getGenericSuperclass type=java.lang.reflect.Type! operator=null
                            $this: CALL .<get-javaClass> type=java.lang.Class<TypeLiteral<T>> operator=GET_PROPERTY
                              $receiver: THIS public open class TypeLiteral</*0*/ T> type=TypeLiteral<T>
                  index: CONST Int type=kotlin.Int value='0'
    FUN public inline fun </*0*/ reified T> typeLiteral(): TypeLiteral<T>
      BLOCK_BODY
        RETURN type=kotlin.Nothing from=typeLiteral
          BLOCK type=typeLiteral.<no name provided><T> operator=OBJECT_LITERAL
            CLASS CLASS <no name provided>
              CONSTRUCTOR public constructor <no name provided>()
                BLOCK_BODY
                  DELEGATING_CONSTRUCTOR_CALL TypeLiteral
                  INSTANCE_INITIALIZER_CALL classDescriptor=<no name provided>
            CALL .<init> type=typeLiteral.<no name provided><T> operator=OBJECT_LITERAL
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        CALL .assertEquals type=kotlin.Unit operator=null
          expected: CONST String type=kotlin.String value='class java.lang.String'
          actual: CALL .toString type=kotlin.String operator=null
            $this: CALL .<get-type> type=java.lang.reflect.Type operator=GET_PROPERTY
              $this: CALL .typeLiteral type=TypeLiteral<kotlin.String> operator=null
        CALL .assertEquals type=kotlin.Unit operator=null
          expected: CONST String type=kotlin.String value='java.util.List<?>'
          actual: CALL .toString type=kotlin.String operator=null
            $this: CALL .<get-type> type=java.lang.reflect.Type operator=GET_PROPERTY
              $this: CALL .typeLiteral type=TypeLiteral<kotlin.collections.List<*>> operator=null
        CALL .assertEquals type=kotlin.Unit operator=null
          expected: CONST String type=kotlin.String value='java.lang.String[]'
          actual: CALL .toString type=kotlin.String operator=null
            $this: CALL .<get-type> type=java.lang.reflect.Type operator=GET_PROPERTY
              $this: CALL .typeLiteral type=TypeLiteral<kotlin.Array<kotlin.String>> operator=null
        CALL .assertEquals type=kotlin.Unit operator=null
          expected: CONST String type=kotlin.String value='java.lang.Integer[]'
          actual: CALL .toString type=kotlin.String operator=null
            $this: CALL .<get-type> type=java.lang.reflect.Type operator=GET_PROPERTY
              $this: CALL .typeLiteral type=TypeLiteral<kotlin.Array<kotlin.Int>> operator=null
        CALL .assertEquals type=kotlin.Unit operator=null
          expected: CONST String type=kotlin.String value='java.lang.String[][]'
          actual: CALL .toString type=kotlin.String operator=null
            $this: CALL .<get-type> type=java.lang.reflect.Type operator=GET_PROPERTY
              $this: CALL .typeLiteral type=TypeLiteral<kotlin.Array<kotlin.Array<kotlin.String>>> operator=null
        RETURN type=kotlin.Nothing from=box
          CONST String type=kotlin.String value='OK'
