EnumEntrySyntheticClassDescriptor@0['<class-object-for-ENTRY>'] {
    defaultType = JetTypeImpl@1['enum entry']
}

EnumEntrySyntheticClassDescriptor@2['ENTRY'] {
    defaultType = JetTypeImpl@3['enum entry']
}

LazyJavaClassDescriptor@4['A'] {
    defaultType = JetTypeImpl@5['A']
    enumEntryIndex = LinkedHashMap@6 // through LazyJavaClassMemberScope@7
    functions('s': Name@8) = ArrayList@9[1] { JavaMethodDescriptor@10['s'] } // through LazyJavaClassMemberScope@7
    memberIndex = computeMemberIndex$1@11 // through LazyJavaClassMemberScope@7
    memberIndex = computeMemberIndex$1@12 // through LazyJavaStaticClassScope@13
    nestedClassIndex = LinkedHashMap@14 // through LazyJavaClassMemberScope@7
    nestedClasses('ENTRY': Name@15) = EnumEntrySyntheticClassDescriptor@2['ENTRY'] // through LazyJavaClassMemberScope@7
    nestedClasses('s': Name@8) = null // through LazyJavaClassMemberScope@7
    properties('ENTRY': Name@15) = EmptyList@16[empty] // through LazyJavaClassMemberScope@7
    properties('ENTRY': Name@15) = EmptyList@16[empty] // through LazyJavaStaticClassScope@13
    thisAsReceiverParameter = LazyClassReceiverParameterDescriptor@17['<this>']
    typeConstructor = LazyJavaClassTypeConstructor@18['A']
}

LazyJavaClassTypeConstructor@18['A'] {
    parameters = ArrayList@19[empty]
    supertypes = ArrayList@20[1] { LazyJavaClassifierType@21['Enum<A>'] }
}

LazyJavaClassifierType@22['A'] {
    arguments = ArrayList@23[empty]
    classifier = JavaClassImpl@24['A']
    nullable = 'false': Boolean@25
    typeConstructor = LazyJavaClassTypeConstructor@18['A']
}

LazyJavaClassifierType@26['A'] {
    arguments = ArrayList@27[empty]
    classifier = JavaClassImpl@24['A']
    nullable = 'true': Boolean@28
    typeConstructor = LazyJavaClassTypeConstructor@18['A']
}

LazyJavaClassifierType@21['Enum<A>'] {
    arguments = ArrayList@29[1] { TypeProjectionImpl@30 }
    classifier = JavaClassImpl@31['Enum']
    memberScope = SubstitutingScope@32
    typeConstructor = DeserializedClassTypeConstructor@33
}

LazyJavaClassifierType@34['String'] {
    arguments = ArrayList@35[empty]
    classifier = JavaClassImpl@36['String']
    nullable = 'false': Boolean@25
    typeConstructor = DeserializedClassTypeConstructor@37
}

LazyJavaClassifierType@38['String'] {
    arguments = ArrayList@39[empty]
    classifier = JavaClassImpl@36['String']
    nullable = 'true': Boolean@28
    typeConstructor = DeserializedClassTypeConstructor@37
}

LazyJavaPackageFragmentProvider@40 {
    packageFragments('<root>': FqName@41) = LazyJavaPackageFragment@42['<root>']
    packageFragments('A': FqName@43) = null
    packageFragments('java': FqName@44) = LazyJavaPackageFragment@45['java']
    packageFragments('java.lang': FqName@46) = LazyJavaPackageFragment@47['lang']
    packageFragments('java.lang.A': FqName@48) = null
    packageFragments('kotlin': FqName@49) = null
    packageFragments('kotlin.A': FqName@50) = null
    packageFragments('kotlin.io': FqName@51) = null
    packageFragments('kotlin.jvm': FqName@52) = null
    topLevelClasses(JavaClassImpl@53['A']) = LazyJavaClassDescriptor@4['A']
}

LazyJavaPackageFragment@42['<root>'] {
    classes('A': Name@54) = LazyJavaClassDescriptor@4['A'] // through LazyPackageFragmentScopeForJavaPackage@55
    deserializedPackageScope = Empty@56 // through LazyPackageFragmentScopeForJavaPackage@55
}

LazyJavaPackageFragment@45['java'] {
    classes('lang': Name@57) = null // through LazyPackageFragmentScopeForJavaPackage@58
    deserializedPackageScope = Empty@56 // through LazyPackageFragmentScopeForJavaPackage@58
    functions('lang': Name@59) = EmptyList@16[empty] // through LazyPackageFragmentScopeForJavaPackage@58
    memberIndex = computeMemberIndex$1@60 // through LazyPackageFragmentScopeForJavaPackage@58
}

LazyJavaPackageFragment@47['lang'] {
    deserializedPackageScope = Empty@56 // through LazyPackageFragmentScopeForJavaPackage@61
}

ResolutionTaskHolder@62 {
    <name not found> = ArrayList@63[1] { ResolutionCandidate@64 }
    <name not found> = ArrayList@65[1] { ResolutionCandidate@64 }
    <name not found> = EmptyList@16[empty]
    <name not found> = EmptyList@16[empty]
}

ResolutionTaskHolder@66 {
    <name not found> = ArrayList@67[1] { ResolutionCandidate@68 }
    <name not found> = ArrayList@69[1] { ResolutionCandidate@68 }
}

ResolutionTaskHolder@70 {
    <name not found> = ArrayList@71[1] { ResolutionCandidate@72 }
    <name not found> = ArrayList@73[1] { ResolutionCandidate@72 }
}

ResolutionTaskHolder@74 {
    <name not found> = EmptyList@16[empty]
    <name not found> = EmptyList@16[empty]
    <name not found> = EmptyList@16[empty]
    <name not found> = EmptyList@16[empty]
    <name not found> = EmptyList@16[empty]
    <name not found> = EmptyList@16[empty]
    <name not found> = EmptyList@16[empty]
    <name not found> = EmptyList@16[empty]
    <name not found> = EmptyList@16[empty]
    <name not found> = EmptyList@16[empty]
}
