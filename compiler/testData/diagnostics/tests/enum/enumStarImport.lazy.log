LazyJavaClassDescriptor@0['Exception'] {
    typeConstructor = LazyJavaClassTypeConstructor@1['Exception']
}

LazyJavaClassDescriptor@2['RuntimeException'] {
    typeConstructor = LazyJavaClassTypeConstructor@3['RuntimeException']
}

LazyJavaClassDescriptor@4['UnsupportedOperationException'] {
    constructors = ArrayList@5[4] { JavaConstructorDescriptor@6['<init>'], JavaConstructorDescriptor@7['<init>'], JavaConstructorDescriptor@8['<init>'], ... } // through LazyJavaClassMemberScope@9
    defaultType = JetTypeImpl@10['UnsupportedOperationException']
    functionTypeForSamInterface = null
    typeConstructor = LazyJavaClassTypeConstructor@11['UnsupportedOperationException']
}

LazyJavaClassTypeConstructor@1['Exception'] {
    parameters = ArrayList@12[empty]
    supertypes = ArrayList@13[1] { LazyJavaClassifierType@14['Throwable'] }
}

LazyJavaClassTypeConstructor@3['RuntimeException'] {
    parameters = ArrayList@15[empty]
    supertypes = ArrayList@16[1] { LazyJavaClassifierType@17['Exception'] }
}

LazyJavaClassTypeConstructor@11['UnsupportedOperationException'] {
    parameters = ArrayList@18[empty]
    supertypes = ArrayList@19[1] { LazyJavaClassifierType@20['RuntimeException'] }
}

LazyJavaClassifierType@17['Exception'] {
    arguments = ArrayList@21[empty]
    classifier = JavaClassImpl@22['Exception']
    typeConstructor = LazyJavaClassTypeConstructor@1['Exception']
}

LazyJavaClassifierType@20['RuntimeException'] {
    arguments = ArrayList@23[empty]
    classifier = JavaClassImpl@24['RuntimeException']
    typeConstructor = LazyJavaClassTypeConstructor@3['RuntimeException']
}

LazyJavaClassifierType@25['String'] {
    arguments = ArrayList@26[empty]
    classifier = JavaClassImpl@27['String']
    nullable = 'false': Boolean@28
    typeConstructor = DeserializedClassTypeConstructor@29
}

LazyJavaClassifierType@30['String'] {
    arguments = ArrayList@31[empty]
    classifier = JavaClassImpl@32['String']
    nullable = 'false': Boolean@28
    typeConstructor = DeserializedClassTypeConstructor@29
}

LazyJavaClassifierType@33['String'] {
    arguments = ArrayList@34[empty]
    classifier = JavaClassImpl@27['String']
    nullable = 'true': Boolean@35
    typeConstructor = DeserializedClassTypeConstructor@29
}

LazyJavaClassifierType@36['String'] {
    arguments = ArrayList@37[empty]
    classifier = JavaClassImpl@32['String']
    nullable = 'true': Boolean@35
    typeConstructor = DeserializedClassTypeConstructor@29
}

LazyJavaClassifierType@38['Throwable'] {
    arguments = ArrayList@39[empty]
    classifier = JavaClassImpl@40['Throwable']
    nullable = 'false': Boolean@28
    typeConstructor = DeserializedClassTypeConstructor@41
}

LazyJavaClassifierType@42['Throwable'] {
    arguments = ArrayList@43[empty]
    classifier = JavaClassImpl@44['Throwable']
    nullable = 'false': Boolean@28
    typeConstructor = DeserializedClassTypeConstructor@41
}

LazyJavaClassifierType@45['Throwable'] {
    arguments = ArrayList@46[empty]
    classifier = JavaClassImpl@44['Throwable']
    nullable = 'true': Boolean@35
    typeConstructor = DeserializedClassTypeConstructor@41
}

LazyJavaClassifierType@47['Throwable'] {
    arguments = ArrayList@48[empty]
    classifier = JavaClassImpl@40['Throwable']
    nullable = 'true': Boolean@35
    typeConstructor = DeserializedClassTypeConstructor@41
}

LazyJavaClassifierType@14['Throwable'] {
    arguments = ArrayList@49[empty]
    classifier = JavaClassImpl@50['Throwable']
    typeConstructor = DeserializedClassTypeConstructor@41
}

LazyJavaPackageFragmentProvider@51 {
    packageFragments('<root>': FqName@52) = LazyJavaPackageFragment@53['<root>']
    packageFragments('HappyEnum': FqName@54) = null
    packageFragments('enum': FqName@55) = null
    packageFragments('enum.HappyEnum': FqName@56) = null
    packageFragments('java': FqName@57) = LazyJavaPackageFragment@58['java']
    packageFragments('java.lang': FqName@59) = LazyJavaPackageFragment@60['lang']
    packageFragments('java.lang.HappyEnum': FqName@61) = null
    packageFragments('kotlin': FqName@62) = null
    packageFragments('kotlin.HappyEnum': FqName@63) = null
    packageFragments('kotlin.io': FqName@64) = null
    packageFragments('kotlin.jvm': FqName@65) = null
    topLevelClasses(JavaClassImpl@22['Exception']) = LazyJavaClassDescriptor@0['Exception']
    topLevelClasses(JavaClassImpl@24['RuntimeException']) = LazyJavaClassDescriptor@2['RuntimeException']
    topLevelClasses(JavaClassImpl@66['UnsupportedOperationException']) = LazyJavaClassDescriptor@4['UnsupportedOperationException']
}

LazyJavaPackageFragment@53['<root>'] {
    classes('CASE1': Name@67) = null // through LazyPackageFragmentScopeForJavaPackage@68
    classes('CASE2': Name@69) = null // through LazyPackageFragmentScopeForJavaPackage@68
    classes('HappyEnum': Name@70) = null // through LazyPackageFragmentScopeForJavaPackage@68
    classes('UnsupportedOperationException': Name@71) = null // through LazyPackageFragmentScopeForJavaPackage@68
    classes('enum': Name@72) = null // through LazyPackageFragmentScopeForJavaPackage@68
    deserializedPackageScope = Empty@73 // through LazyPackageFragmentScopeForJavaPackage@68
    functions('UnsupportedOperationException': Name@71) = EmptyList@74[empty] // through LazyPackageFragmentScopeForJavaPackage@68
    functions('enum': Name@75) = EmptyList@74[empty] // through LazyPackageFragmentScopeForJavaPackage@68
    memberIndex = computeMemberIndex$1@76 // through LazyPackageFragmentScopeForJavaPackage@68
}

LazyJavaPackageFragment@58['java'] {
    classes('lang': Name@77) = null // through LazyPackageFragmentScopeForJavaPackage@78
    deserializedPackageScope = Empty@73 // through LazyPackageFragmentScopeForJavaPackage@78
    functions('lang': Name@79) = EmptyList@74[empty] // through LazyPackageFragmentScopeForJavaPackage@78
    memberIndex = computeMemberIndex$1@80 // through LazyPackageFragmentScopeForJavaPackage@78
}

LazyJavaPackageFragment@60['lang'] {
    classes('UnsupportedOperationException': Name@71) = LazyJavaClassDescriptor@4['UnsupportedOperationException'] // through LazyPackageFragmentScopeForJavaPackage@81
    deserializedPackageScope = Empty@73 // through LazyPackageFragmentScopeForJavaPackage@81
    functions('UnsupportedOperationException': Name@71) = EmptyList@74[empty] // through LazyPackageFragmentScopeForJavaPackage@81
    memberIndex = computeMemberIndex$1@82 // through LazyPackageFragmentScopeForJavaPackage@81
}

ResolutionTaskHolder@83 {
    <name not found> = ArrayList@84[1] { ResolutionCandidate@85 }
    <name not found> = ArrayList@86[1] { ResolutionCandidate@85 }
    <name not found> = EmptyList@74[empty]
    <name not found> = EmptyList@74[empty]
}

ResolutionTaskHolder@87 {
    <name not found> = ArrayList@88[1] { ResolutionCandidate@89 }
    <name not found> = ArrayList@90[1] { ResolutionCandidate@89 }
    <name not found> = EmptyList@74[empty]
    <name not found> = EmptyList@74[empty]
}

ResolutionTaskHolder@91 {
    <name not found> = ArrayList@92[1] { ResolutionCandidate@93 }
    <name not found> = ArrayList@94[1] { ResolutionCandidate@93 }
}

ResolutionTaskHolder@95 {
    <name not found> = ArrayList@96[4] { ResolutionCandidate@97, ResolutionCandidate@98, ResolutionCandidate@99, ... }
    <name not found> = ArrayList@100[4] { ResolutionCandidate@97, ResolutionCandidate@98, ResolutionCandidate@99, ... }
    <name not found> = EmptyList@74[empty]
    <name not found> = EmptyList@74[empty]
    <name not found> = EmptyList@74[empty]
    <name not found> = EmptyList@74[empty]
}

ResolutionTaskHolder@101 {
    <name not found> = ArrayList@102[4] { ResolutionCandidate@103, ResolutionCandidate@104, ResolutionCandidate@105, ... }
    <name not found> = ArrayList@106[4] { ResolutionCandidate@103, ResolutionCandidate@104, ResolutionCandidate@105, ... }
    <name not found> = EmptyList@74[empty]
    <name not found> = EmptyList@74[empty]
    <name not found> = EmptyList@74[empty]
    <name not found> = EmptyList@74[empty]
}
