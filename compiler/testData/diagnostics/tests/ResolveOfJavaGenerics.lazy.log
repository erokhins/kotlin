LazyJavaClassDescriptor@0['ArrayList'] {
    typeConstructor = LazyJavaClassTypeConstructor@1['ArrayList']
}

LazyJavaClassDescriptor@2['Class'] {
    typeConstructor = LazyJavaClassTypeConstructor@3['Class']
}

LazyJavaClassDescriptor@4['Collections'] {
    enumEntryIndex = LinkedHashMap@5 // through LazyJavaClassMemberScope@6
    functions('emptyList': Name@7) = ArrayList@8[1] { JavaMethodDescriptor@9['emptyList'] } // through LazyJavaStaticClassScope@10
    functions('emptyList': Name@7) = EmptyList@11[empty] // through LazyJavaClassMemberScope@6
    memberIndex = computeMemberIndex$1@12 // through LazyJavaClassMemberScope@6
    memberIndex = computeMemberIndex$1@13 // through LazyJavaStaticClassScope@10
    nestedClassIndex = LinkedHashMap@14 // through LazyJavaClassMemberScope@6
    nestedClasses('emptyList': Name@7) = null // through LazyJavaClassMemberScope@6
    properties('emptyList': Name@7) = EmptyList@11[empty] // through LazyJavaClassMemberScope@6
    properties('emptyList': Name@7) = EmptyList@11[empty] // through LazyJavaStaticClassScope@10
    typeConstructor = LazyJavaClassTypeConstructor@15['Collections']
}

LazyJavaClassDescriptor@16['Comparable'] {
    typeConstructor = LazyJavaClassTypeConstructor@17['Comparable']
}

LazyJavaClassDescriptor@18['RetentionPolicy'] {
    typeConstructor = LazyJavaClassTypeConstructor@19['RetentionPolicy']
}

LazyJavaClassTypeConstructor@1['ArrayList'] {
    parameters = ArrayList@20[1] { LazyJavaTypeParameterDescriptor@21['E'] }
}

LazyJavaClassTypeConstructor@3['Class'] {
    parameters = ArrayList@22[1] { LazyJavaTypeParameterDescriptor@23['T'] }
}

LazyJavaClassTypeConstructor@15['Collections'] {
    supertypes = ArrayList@24[1] { JetTypeImpl@25['Any'] }
}

LazyJavaClassTypeConstructor@17['Comparable'] {
    parameters = ArrayList@26[1] { LazyJavaTypeParameterDescriptor@27['T'] }
}

LazyJavaClassTypeConstructor@19['RetentionPolicy'] {
    parameters = ArrayList@28[empty]
}

LazyJavaClassifierType@29['List<T>'] {
    arguments = ArrayList@30[1] { TypeProjectionImpl@31 }
    classifier = JavaClassImpl@32['List']
    memberScope = SubstitutingScope@33
    nullable = 'false': Boolean@34
    typeConstructor = DeserializedClassTypeConstructor@35
}

LazyJavaClassifierType@36['List<T>'] {
    arguments = ArrayList@37[1] { TypeProjectionImpl@38 }
    classifier = JavaClassImpl@32['List']
    memberScope = SubstitutingScope@39
    nullable = 'true': Boolean@40
    typeConstructor = DeserializedClassTypeConstructor@41
}

LazyJavaClassifierType@42['Object'] {
    classifier = JavaClassImpl@43['Object']
    typeConstructor = DeserializedClassTypeConstructor@44
}

LazyJavaClassifierType@45['T'] {
    arguments = ArrayList@46[empty]
    classifier = JavaTypeParameterImpl@47['T']
    nullable = 'false': Boolean@34
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@48
}

LazyJavaClassifierType@49['T'] {
    arguments = ArrayList@50[empty]
    classifier = JavaTypeParameterImpl@51['T']
    nullable = 'false': Boolean@34
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@48
}

LazyJavaClassifierType@52['T'] {
    arguments = ArrayList@53[empty]
    classifier = JavaTypeParameterImpl@47['T']
    nullable = 'true': Boolean@40
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@48
}

LazyJavaClassifierType@54['T'] {
    arguments = ArrayList@55[empty]
    classifier = JavaTypeParameterImpl@51['T']
    nullable = 'true': Boolean@40
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@48
}

LazyJavaPackageFragmentProvider@56 {
    packageFragments('<root>': FqName@57) = LazyJavaPackageFragment@58['<root>']
    packageFragments('Collection': FqName@59) = null
    packageFragments('Int': FqName@60) = null
    packageFragments('String': FqName@61) = null
    packageFragments('annotation': FqName@62) = null
    packageFragments('java': FqName@63) = LazyJavaPackageFragment@64['java']
    packageFragments('java.lang': FqName@65) = LazyJavaPackageFragment@66['lang']
    packageFragments('java.lang.Class': FqName@67) = null
    packageFragments('java.lang.Collection': FqName@68) = null
    packageFragments('java.lang.Comparable': FqName@69) = null
    packageFragments('java.lang.Int': FqName@70) = null
    packageFragments('java.lang.String': FqName@71) = null
    packageFragments('java.lang.annotation': FqName@72) = LazyJavaPackageFragment@73['annotation']
    packageFragments('java.lang.annotation.RetentionPolicy': FqName@74) = null
    packageFragments('java.util': FqName@75) = LazyJavaPackageFragment@76['util']
    packageFragments('java.util.ArrayList': FqName@77) = null
    packageFragments('java.util.Collections': FqName@78) = null
    packageFragments('kotlin': FqName@79) = null
    packageFragments('kotlin.Collection': FqName@80) = null
    packageFragments('kotlin.Int': FqName@81) = null
    packageFragments('kotlin.String': FqName@82) = null
    packageFragments('kotlin.annotation': FqName@83) = null
    packageFragments('kotlin.io': FqName@84) = null
    packageFragments('kotlin.jvm': FqName@85) = null
    topLevelClasses(JavaClassImpl@86['ArrayList']) = LazyJavaClassDescriptor@0['ArrayList']
    topLevelClasses(JavaClassImpl@87['Class']) = LazyJavaClassDescriptor@2['Class']
    topLevelClasses(JavaClassImpl@88['Collections']) = LazyJavaClassDescriptor@4['Collections']
    topLevelClasses(JavaClassImpl@89['Comparable']) = LazyJavaClassDescriptor@16['Comparable']
    topLevelClasses(JavaClassImpl@90['RetentionPolicy']) = LazyJavaClassDescriptor@18['RetentionPolicy']
}

LazyJavaPackageFragment@58['<root>'] {
    classes('Collection': Name@91) = null // through LazyPackageFragmentScopeForJavaPackage@92
    classes('Int': Name@93) = null // through LazyPackageFragmentScopeForJavaPackage@92
    classes('String': Name@94) = null // through LazyPackageFragmentScopeForJavaPackage@92
    classes('annotation': Name@95) = null // through LazyPackageFragmentScopeForJavaPackage@92
    classes('java': Name@96) = null // through LazyPackageFragmentScopeForJavaPackage@92
    deserializedPackageScope = Empty@97 // through LazyPackageFragmentScopeForJavaPackage@92
}

LazyJavaPackageFragment@73['annotation'] {
    classes('RetentionPolicy': Name@98) = LazyJavaClassDescriptor@18['RetentionPolicy'] // through LazyPackageFragmentScopeForJavaPackage@99
}

LazyJavaPackageFragment@64['java'] {
    classes('lang': Name@100) = null // through LazyPackageFragmentScopeForJavaPackage@101
    classes('util': Name@102) = null // through LazyPackageFragmentScopeForJavaPackage@101
    deserializedPackageScope = Empty@97 // through LazyPackageFragmentScopeForJavaPackage@101
    functions('lang': Name@103) = EmptyList@11[empty] // through LazyPackageFragmentScopeForJavaPackage@101
    memberIndex = computeMemberIndex$1@104 // through LazyPackageFragmentScopeForJavaPackage@101
}

LazyJavaPackageFragment@66['lang'] {
    classes('Class': Name@105) = LazyJavaClassDescriptor@2['Class'] // through LazyPackageFragmentScopeForJavaPackage@106
    classes('Comparable': Name@107) = LazyJavaClassDescriptor@16['Comparable'] // through LazyPackageFragmentScopeForJavaPackage@106
    classes('annotation': Name@95) = null // through LazyPackageFragmentScopeForJavaPackage@106
    classes('java': Name@96) = null // through LazyPackageFragmentScopeForJavaPackage@106
    deserializedPackageScope = Empty@97 // through LazyPackageFragmentScopeForJavaPackage@106
}

LazyJavaPackageFragment@76['util'] {
    classes('ArrayList': Name@108) = LazyJavaClassDescriptor@0['ArrayList'] // through LazyPackageFragmentScopeForJavaPackage@109
    classes('Collections': Name@110) = LazyJavaClassDescriptor@4['Collections'] // through LazyPackageFragmentScopeForJavaPackage@109
    deserializedPackageScope = Empty@97 // through LazyPackageFragmentScopeForJavaPackage@109
}

LazyJavaTypeParameterDescriptor@21['E'] {
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@111
    upperBounds = LinkedHashSet@112[1] { NullableType@113 }
}

LazyJavaTypeParameterDescriptor@114['T'] {
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@48
    upperBounds = LinkedHashSet@115[1] { NullableType@116 }
    upperBoundsAsType = NullableType@116
}

LazyJavaTypeParameterDescriptor@27['T'] {
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@117
    upperBounds = LinkedHashSet@118[1] { NullableType@119 }
}

LazyJavaTypeParameterDescriptor@23['T'] {
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@120
    upperBounds = LinkedHashSet@121[1] { NullableType@122 }
}

LazyJavaTypeParameterResolver@123 {
    resolve(JavaTypeParameterImpl@124['E']) = LazyJavaTypeParameterDescriptor@21['E']
}

LazyJavaTypeParameterResolver@125 {
    resolve(JavaTypeParameterImpl@126['T']) = LazyJavaTypeParameterDescriptor@27['T']
}

LazyJavaTypeParameterResolver@127 {
    resolve(JavaTypeParameterImpl@128['T']) = LazyJavaTypeParameterDescriptor@23['T']
}

LazyJavaTypeParameterResolver@129 {
    resolve(JavaTypeParameterImpl@130['T']) = LazyJavaTypeParameterDescriptor@114['T']
}

ResolutionTaskHolder@131 {
    <name not found> = ArrayList@132[1] { ResolutionCandidate@133 }
    <name not found> = ArrayList@134[1] { ResolutionCandidate@133 }
    <name not found> = EmptyList@11[empty]
    <name not found> = EmptyList@11[empty]
    <name not found> = EmptyList@11[empty]
    <name not found> = EmptyList@11[empty]
}

ResolutionTaskHolder@135 {
    <name not found> = ArrayList@136[1] { ResolutionCandidate@137 }
    <name not found> = ArrayList@138[1] { ResolutionCandidate@137 }
    <name not found> = EmptyList@11[empty]
    <name not found> = EmptyList@11[empty]
    <name not found> = EmptyList@11[empty]
    <name not found> = EmptyList@11[empty]
}

ResolutionTaskHolder@139 {
    <name not found> = EmptyList@11[empty]
    <name not found> = EmptyList@11[empty]
    <name not found> = EmptyList@11[empty]
    <name not found> = EmptyList@11[empty]
    <name not found> = EmptyList@11[empty]
    <name not found> = EmptyList@11[empty]
    <name not found> = EmptyList@11[empty]
    <name not found> = EmptyList@11[empty]
    <name not found> = EmptyList@11[empty]
    <name not found> = EmptyList@11[empty]
}

ResolutionTaskHolder@140 {
    <name not found> = EmptyList@11[empty]
    <name not found> = EmptyList@11[empty]
    <name not found> = EmptyList@11[empty]
    <name not found> = EmptyList@11[empty]
    <name not found> = EmptyList@11[empty]
    <name not found> = EmptyList@11[empty]
    <name not found> = EmptyList@11[empty]
    <name not found> = EmptyList@11[empty]
    <name not found> = EmptyList@11[empty]
    <name not found> = EmptyList@11[empty]
}

ResolutionTaskHolder@141 {
    <name not found> = EmptyList@11[empty]
    <name not found> = EmptyList@11[empty]
    <name not found> = EmptyList@11[empty]
    <name not found> = EmptyList@11[empty]
    <name not found> = EmptyList@11[empty]
    <name not found> = EmptyList@11[empty]
    <name not found> = EmptyList@11[empty]
    <name not found> = EmptyList@11[empty]
    <name not found> = EmptyList@11[empty]
    <name not found> = EmptyList@11[empty]
}

ResolutionTaskHolder@142 {
    <name not found> = EmptyList@11[empty]
    <name not found> = EmptyList@11[empty]
    <name not found> = EmptyList@11[empty]
    <name not found> = EmptyList@11[empty]
    <name not found> = EmptyList@11[empty]
    <name not found> = EmptyList@11[empty]
    <name not found> = EmptyList@11[empty]
    <name not found> = EmptyList@11[empty]
    <name not found> = EmptyList@11[empty]
    <name not found> = EmptyList@11[empty]
}

ResolutionTaskHolder@143 {
    <name not found> = EmptyList@11[empty]
    <name not found> = EmptyList@11[empty]
    <name not found> = EmptyList@11[empty]
    <name not found> = EmptyList@11[empty]
    <name not found> = EmptyList@11[empty]
    <name not found> = EmptyList@11[empty]
    <name not found> = EmptyList@11[empty]
    <name not found> = EmptyList@11[empty]
    <name not found> = EmptyList@11[empty]
    <name not found> = EmptyList@11[empty]
}

ResolutionTaskHolder@144 {
    <name not found> = EmptyList@11[empty]
    <name not found> = EmptyList@11[empty]
    <name not found> = EmptyList@11[empty]
    <name not found> = EmptyList@11[empty]
    <name not found> = EmptyList@11[empty]
    <name not found> = EmptyList@11[empty]
    <name not found> = EmptyList@11[empty]
    <name not found> = EmptyList@11[empty]
    <name not found> = EmptyList@11[empty]
    <name not found> = EmptyList@11[empty]
}
