LazyJavaClassDescriptor@0['AbstractCollection'] {
    defaultType = JetTypeImpl@1['AbstractCollection<1>']
    functions('Itr': Name@2) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('ListItr': Name@5) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('SubList': Name@6) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('add': Name@7) = ArrayList@8[1] { JavaMethodDescriptor@9['add'] } // through LazyJavaClassMemberScope@4
    functions('addAll': Name@10) = ArrayList@11[1] { JavaMethodDescriptor@12['addAll'] } // through LazyJavaClassMemberScope@4
    functions('batchRemove': Name@13) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('clear': Name@14) = ArrayList@15[1] { JavaMethodDescriptor@16['clear'] } // through LazyJavaClassMemberScope@4
    functions('clone': Name@17) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('contains': Name@18) = ArrayList@19[1] { JavaMethodDescriptor@20['contains'] } // through LazyJavaClassMemberScope@4
    functions('containsAll': Name@21) = ArrayList@22[1] { JavaMethodDescriptor@23['containsAll'] } // through LazyJavaClassMemberScope@4
    functions('elementData': Name@24) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('ensureCapacity': Name@25) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('ensureCapacityInternal': Name@26) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('equals': Name@27) = ArrayList@28[1] { DeserializedSimpleFunctionDescriptor@29['equals'] } // through LazyJavaClassMemberScope@4
    functions('fastRemove': Name@30) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('finalize': Name@31) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('get': Name@32) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('getClass': Name@33) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('grow': Name@34) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('hashCode': Name@35) = ArrayList@36[1] { DeserializedSimpleFunctionDescriptor@37['hashCode'] } // through LazyJavaClassMemberScope@4
    functions('indexOf': Name@38) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('isEmpty': Name@39) = ArrayList@40[1] { JavaMethodDescriptor@41['isEmpty'] } // through LazyJavaClassMemberScope@4
    functions('iterator': Name@42) = ArrayList@43[1] { JavaMethodDescriptor@44['iterator'] } // through LazyJavaClassMemberScope@4
    functions('lastIndexOf': Name@45) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('listIterator': Name@46) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('notify': Name@47) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('notifyAll': Name@48) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('outOfBoundsMsg': Name@49) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('rangeCheck': Name@50) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('rangeCheckForAdd': Name@51) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('readObject': Name@52) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('remove': Name@53) = ArrayList@54[1] { JavaMethodDescriptor@55['remove'] } // through LazyJavaClassMemberScope@4
    functions('removeAll': Name@56) = ArrayList@57[1] { JavaMethodDescriptor@58['removeAll'] } // through LazyJavaClassMemberScope@4
    functions('removeRange': Name@59) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('retainAll': Name@60) = ArrayList@61[1] { JavaMethodDescriptor@62['retainAll'] } // through LazyJavaClassMemberScope@4
    functions('set': Name@63) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('size': Name@64) = ArrayList@65[1] { JavaMethodDescriptor@66['size'] } // through LazyJavaClassMemberScope@4
    functions('subList': Name@67) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('toArray': Name@68) = ArrayList@69[2] { JavaMethodDescriptor@70['toArray'], JavaMethodDescriptor@71['toArray'] } // through LazyJavaClassMemberScope@4
    functions('toString': Name@72) = ArrayList@73[1] { JavaMethodDescriptor@74['toString'] } // through LazyJavaClassMemberScope@4
    functions('trimToSize': Name@75) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('wait': Name@76) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('writeObject': Name@77) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    memberIndex = computeMemberIndex$1@78 // through LazyJavaClassMemberScope@4
    properties('elementData': Name@79) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    properties('modCount': Name@80) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    properties('size': Name@81) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    thisAsReceiverParameter = LazyClassReceiverParameterDescriptor@82['<this>']
    typeConstructor = LazyJavaClassTypeConstructor@83['AbstractCollection']
}

LazyJavaClassDescriptor@84['AbstractList'] {
    defaultType = JetTypeImpl@85['AbstractList<1>']
    functions('Itr': Name@2) = EmptyList@3[empty] // through LazyJavaClassMemberScope@86
    functions('ListItr': Name@5) = EmptyList@3[empty] // through LazyJavaClassMemberScope@86
    functions('SubList': Name@6) = EmptyList@3[empty] // through LazyJavaClassMemberScope@86
    functions('add': Name@87) = ArrayList@88[2] { JavaMethodDescriptor@89['add'], JavaMethodDescriptor@90['add'] } // through LazyJavaClassMemberScope@86
    functions('addAll': Name@91) = ArrayList@92[2] { JavaMethodDescriptor@93['addAll'], DeserializedSimpleFunctionDescriptor@94['addAll'] } // through LazyJavaClassMemberScope@86
    functions('batchRemove': Name@13) = EmptyList@3[empty] // through LazyJavaClassMemberScope@86
    functions('clear': Name@95) = ArrayList@96[1] { JavaMethodDescriptor@97['clear'] } // through LazyJavaClassMemberScope@86
    functions('clone': Name@17) = EmptyList@3[empty] // through LazyJavaClassMemberScope@86
    functions('contains': Name@18) = ArrayList@98[1] { DeserializedSimpleFunctionDescriptor@99['contains'] } // through LazyJavaClassMemberScope@86
    functions('containsAll': Name@21) = ArrayList@100[1] { DeserializedSimpleFunctionDescriptor@101['containsAll'] } // through LazyJavaClassMemberScope@86
    functions('elementData': Name@24) = EmptyList@3[empty] // through LazyJavaClassMemberScope@86
    functions('ensureCapacity': Name@25) = EmptyList@3[empty] // through LazyJavaClassMemberScope@86
    functions('ensureCapacityInternal': Name@26) = EmptyList@3[empty] // through LazyJavaClassMemberScope@86
    functions('equals': Name@102) = ArrayList@103[1] { JavaMethodDescriptor@104['equals'] } // through LazyJavaClassMemberScope@86
    functions('fastRemove': Name@30) = EmptyList@3[empty] // through LazyJavaClassMemberScope@86
    functions('finalize': Name@31) = EmptyList@3[empty] // through LazyJavaClassMemberScope@86
    functions('get': Name@105) = ArrayList@106[1] { JavaMethodDescriptor@107['get'] } // through LazyJavaClassMemberScope@86
    functions('getClass': Name@33) = EmptyList@3[empty] // through LazyJavaClassMemberScope@86
    functions('grow': Name@34) = EmptyList@3[empty] // through LazyJavaClassMemberScope@86
    functions('hashCode': Name@108) = ArrayList@109[1] { JavaMethodDescriptor@110['hashCode'] } // through LazyJavaClassMemberScope@86
    functions('indexOf': Name@111) = ArrayList@112[1] { JavaMethodDescriptor@113['indexOf'] } // through LazyJavaClassMemberScope@86
    functions('isEmpty': Name@39) = ArrayList@114[1] { DeserializedSimpleFunctionDescriptor@115['isEmpty'] } // through LazyJavaClassMemberScope@86
    functions('iterator': Name@116) = ArrayList@117[1] { JavaMethodDescriptor@118['iterator'] } // through LazyJavaClassMemberScope@86
    functions('lastIndexOf': Name@119) = ArrayList@120[1] { JavaMethodDescriptor@121['lastIndexOf'] } // through LazyJavaClassMemberScope@86
    functions('listIterator': Name@122) = ArrayList@123[2] { JavaMethodDescriptor@124['listIterator'], JavaMethodDescriptor@125['listIterator'] } // through LazyJavaClassMemberScope@86
    functions('notify': Name@47) = EmptyList@3[empty] // through LazyJavaClassMemberScope@86
    functions('notifyAll': Name@48) = EmptyList@3[empty] // through LazyJavaClassMemberScope@86
    functions('outOfBoundsMsg': Name@126) = ArrayList@127[1] { JavaMethodDescriptor@128['outOfBoundsMsg'] } // through LazyJavaClassMemberScope@86
    functions('rangeCheck': Name@50) = EmptyList@3[empty] // through LazyJavaClassMemberScope@86
    functions('rangeCheckForAdd': Name@129) = ArrayList@130[1] { JavaMethodDescriptor@131['rangeCheckForAdd'] } // through LazyJavaClassMemberScope@86
    functions('readObject': Name@52) = EmptyList@3[empty] // through LazyJavaClassMemberScope@86
    functions('remove': Name@132) = ArrayList@133[2] { JavaMethodDescriptor@134['remove'], DeserializedSimpleFunctionDescriptor@135['remove'] } // through LazyJavaClassMemberScope@86
    functions('removeAll': Name@56) = ArrayList@136[1] { DeserializedSimpleFunctionDescriptor@137['removeAll'] } // through LazyJavaClassMemberScope@86
    functions('removeRange': Name@138) = ArrayList@139[1] { JavaMethodDescriptor@140['removeRange'] } // through LazyJavaClassMemberScope@86
    functions('retainAll': Name@60) = ArrayList@141[1] { DeserializedSimpleFunctionDescriptor@142['retainAll'] } // through LazyJavaClassMemberScope@86
    functions('set': Name@143) = ArrayList@144[1] { JavaMethodDescriptor@145['set'] } // through LazyJavaClassMemberScope@86
    functions('size': Name@64) = ArrayList@146[1] { DeserializedSimpleFunctionDescriptor@147['size'] } // through LazyJavaClassMemberScope@86
    functions('subList': Name@148) = ArrayList@149[1] { JavaMethodDescriptor@150['subList'] } // through LazyJavaClassMemberScope@86
    functions('toArray': Name@68) = ArrayList@151[2] { JavaMethodDescriptor@152['toArray'], JavaMethodDescriptor@153['toArray'] } // through LazyJavaClassMemberScope@86
    functions('toString': Name@72) = ArrayList@154[1] { DeserializedSimpleFunctionDescriptor@155['toString'] } // through LazyJavaClassMemberScope@86
    functions('trimToSize': Name@75) = EmptyList@3[empty] // through LazyJavaClassMemberScope@86
    functions('wait': Name@76) = EmptyList@3[empty] // through LazyJavaClassMemberScope@86
    functions('writeObject': Name@77) = EmptyList@3[empty] // through LazyJavaClassMemberScope@86
    memberIndex = computeMemberIndex$1@156 // through LazyJavaClassMemberScope@86
    properties('elementData': Name@79) = EmptyList@3[empty] // through LazyJavaClassMemberScope@86
    properties('modCount': Name@80) = ArrayList@157[1] { JavaPropertyDescriptor@158['modCount'] } // through LazyJavaClassMemberScope@86
    properties('size': Name@81) = EmptyList@3[empty] // through LazyJavaClassMemberScope@86
    thisAsReceiverParameter = LazyClassReceiverParameterDescriptor@159['<this>']
    typeConstructor = LazyJavaClassTypeConstructor@160['AbstractList']
}

LazyJavaClassDescriptor@161['ArrayList'] {
    allDescriptors = ArrayList@162[46] { LazyJavaClassDescriptor@163['SubList'], LazyJavaClassDescriptor@164['ListItr'], LazyJavaClassDescriptor@165['Itr'], ... } // through LazyJavaClassMemberScope@166
    constructors = ArrayList@167[3] { JavaConstructorDescriptor@168['<init>'], JavaConstructorDescriptor@169['<init>'], JavaConstructorDescriptor@170['<init>'] } // through LazyJavaClassMemberScope@166
    defaultType = JetTypeImpl@171['ArrayList<1>']
    enumEntryIndex = LinkedHashMap@172 // through LazyJavaClassMemberScope@166
    functionTypeForSamInterface = null
    functions('Itr': Name@2) = EmptyList@3[empty] // through LazyJavaClassMemberScope@166
    functions('ListItr': Name@5) = EmptyList@3[empty] // through LazyJavaClassMemberScope@166
    functions('SubList': Name@6) = EmptyList@3[empty] // through LazyJavaClassMemberScope@166
    functions('add': Name@173) = ArrayList@174[2] { JavaMethodDescriptor@175['add'], JavaMethodDescriptor@176['add'] } // through LazyJavaClassMemberScope@166
    functions('addAll': Name@177) = ArrayList@178[2] { JavaMethodDescriptor@179['addAll'], JavaMethodDescriptor@180['addAll'] } // through LazyJavaClassMemberScope@166
    functions('batchRemove': Name@181) = ArrayList@182[1] { JavaMethodDescriptor@183['batchRemove'] } // through LazyJavaClassMemberScope@166
    functions('clear': Name@184) = ArrayList@185[1] { JavaMethodDescriptor@186['clear'] } // through LazyJavaClassMemberScope@166
    functions('clone': Name@187) = ArrayList@188[1] { JavaMethodDescriptor@189['clone'] } // through LazyJavaClassMemberScope@166
    functions('contains': Name@190) = ArrayList@191[1] { JavaMethodDescriptor@192['contains'] } // through LazyJavaClassMemberScope@166
    functions('containsAll': Name@21) = ArrayList@193[1] { DeserializedSimpleFunctionDescriptor@194['containsAll'] } // through LazyJavaClassMemberScope@166
    functions('elementData': Name@195) = ArrayList@196[1] { JavaMethodDescriptor@197['elementData'] } // through LazyJavaClassMemberScope@166
    functions('ensureCapacity': Name@198) = ArrayList@199[1] { JavaMethodDescriptor@200['ensureCapacity'] } // through LazyJavaClassMemberScope@166
    functions('ensureCapacityInternal': Name@201) = ArrayList@202[1] { JavaMethodDescriptor@203['ensureCapacityInternal'] } // through LazyJavaClassMemberScope@166
    functions('equals': Name@102) = ArrayList@204[1] { DeserializedSimpleFunctionDescriptor@205['equals'] } // through LazyJavaClassMemberScope@166
    functions('fastRemove': Name@206) = ArrayList@207[1] { JavaMethodDescriptor@208['fastRemove'] } // through LazyJavaClassMemberScope@166
    functions('finalize': Name@31) = EmptyList@3[empty] // through LazyJavaClassMemberScope@166
    functions('get': Name@209) = ArrayList@210[1] { JavaMethodDescriptor@211['get'] } // through LazyJavaClassMemberScope@166
    functions('getClass': Name@33) = EmptyList@3[empty] // through LazyJavaClassMemberScope@166
    functions('grow': Name@212) = ArrayList@213[1] { JavaMethodDescriptor@214['grow'] } // through LazyJavaClassMemberScope@166
    functions('hashCode': Name@108) = ArrayList@215[1] { DeserializedSimpleFunctionDescriptor@216['hashCode'] } // through LazyJavaClassMemberScope@166
    functions('indexOf': Name@217) = ArrayList@218[1] { JavaMethodDescriptor@219['indexOf'] } // through LazyJavaClassMemberScope@166
    functions('isEmpty': Name@220) = ArrayList@221[1] { JavaMethodDescriptor@222['isEmpty'] } // through LazyJavaClassMemberScope@166
    functions('iterator': Name@223) = ArrayList@224[1] { JavaMethodDescriptor@225['iterator'] } // through LazyJavaClassMemberScope@166
    functions('lastIndexOf': Name@226) = ArrayList@227[1] { JavaMethodDescriptor@228['lastIndexOf'] } // through LazyJavaClassMemberScope@166
    functions('listIterator': Name@229) = ArrayList@230[2] { JavaMethodDescriptor@231['listIterator'], JavaMethodDescriptor@232['listIterator'] } // through LazyJavaClassMemberScope@166
    functions('notify': Name@47) = EmptyList@3[empty] // through LazyJavaClassMemberScope@166
    functions('notifyAll': Name@48) = EmptyList@3[empty] // through LazyJavaClassMemberScope@166
    functions('outOfBoundsMsg': Name@233) = ArrayList@234[1] { JavaMethodDescriptor@235['outOfBoundsMsg'] } // through LazyJavaClassMemberScope@166
    functions('rangeCheck': Name@236) = ArrayList@237[1] { JavaMethodDescriptor@238['rangeCheck'] } // through LazyJavaClassMemberScope@166
    functions('rangeCheckForAdd': Name@239) = ArrayList@240[1] { JavaMethodDescriptor@241['rangeCheckForAdd'] } // through LazyJavaClassMemberScope@166
    functions('readObject': Name@242) = ArrayList@243[1] { JavaMethodDescriptor@244['readObject'] } // through LazyJavaClassMemberScope@166
    functions('remove': Name@245) = ArrayList@246[2] { JavaMethodDescriptor@247['remove'], JavaMethodDescriptor@248['remove'] } // through LazyJavaClassMemberScope@166
    functions('removeAll': Name@249) = ArrayList@250[1] { JavaMethodDescriptor@251['removeAll'] } // through LazyJavaClassMemberScope@166
    functions('removeRange': Name@252) = ArrayList@253[1] { JavaMethodDescriptor@254['removeRange'] } // through LazyJavaClassMemberScope@166
    functions('retainAll': Name@255) = ArrayList@256[1] { JavaMethodDescriptor@257['retainAll'] } // through LazyJavaClassMemberScope@166
    functions('set': Name@258) = ArrayList@259[1] { JavaMethodDescriptor@260['set'] } // through LazyJavaClassMemberScope@166
    functions('size': Name@261) = ArrayList@262[1] { JavaMethodDescriptor@263['size'] } // through LazyJavaClassMemberScope@166
    functions('subList': Name@264) = ArrayList@265[1] { JavaMethodDescriptor@266['subList'] } // through LazyJavaClassMemberScope@166
    functions('toArray': Name@267) = ArrayList@268[2] { JavaMethodDescriptor@269['toArray'], JavaMethodDescriptor@270['toArray'] } // through LazyJavaClassMemberScope@166
    functions('toString': Name@72) = ArrayList@271[1] { DeserializedSimpleFunctionDescriptor@272['toString'] } // through LazyJavaClassMemberScope@166
    functions('trimToSize': Name@273) = ArrayList@274[1] { JavaMethodDescriptor@275['trimToSize'] } // through LazyJavaClassMemberScope@166
    functions('wait': Name@76) = EmptyList@3[empty] // through LazyJavaClassMemberScope@166
    functions('writeObject': Name@276) = ArrayList@277[1] { JavaMethodDescriptor@278['writeObject'] } // through LazyJavaClassMemberScope@166
    memberIndex = computeMemberIndex$1@279 // through LazyJavaClassMemberScope@166
    nestedClassIndex = LinkedHashMap@280 // through LazyJavaClassMemberScope@166
    nestedClasses('Itr': Name@2) = LazyJavaClassDescriptor@165['Itr'] // through LazyJavaClassMemberScope@166
    nestedClasses('ListItr': Name@5) = LazyJavaClassDescriptor@164['ListItr'] // through LazyJavaClassMemberScope@166
    nestedClasses('SubList': Name@6) = LazyJavaClassDescriptor@163['SubList'] // through LazyJavaClassMemberScope@166
    properties('elementData': Name@79) = ArrayList@281[1] { JavaPropertyDescriptor@282['elementData'] } // through LazyJavaClassMemberScope@166
    properties('modCount': Name@80) = ArrayList@283[1] { PropertyDescriptorImpl@284['modCount'] } // through LazyJavaClassMemberScope@166
    properties('size': Name@81) = ArrayList@285[1] { JavaPropertyDescriptor@286['size'] } // through LazyJavaClassMemberScope@166
    thisAsReceiverParameter = LazyClassReceiverParameterDescriptor@287['<this>']
    typeConstructor = LazyJavaClassTypeConstructor@288['ArrayList']
}

LazyJavaClassDescriptor@289['ObjectInputStream'] {
    functionTypeForSamInterface = null
    typeConstructor = LazyJavaClassTypeConstructor@290['ObjectInputStream']
}

LazyJavaClassDescriptor@291['ObjectOutputStream'] {
    functionTypeForSamInterface = null
    typeConstructor = LazyJavaClassTypeConstructor@292['ObjectOutputStream']
}

LazyJavaClassDescriptor@293['RandomAccess'] {
    defaultType = JetTypeImpl@294['RandomAccess']
    functions('Itr': Name@2) = EmptyList@3[empty] // through LazyJavaClassMemberScope@295
    functions('ListItr': Name@5) = EmptyList@3[empty] // through LazyJavaClassMemberScope@295
    functions('SubList': Name@6) = EmptyList@3[empty] // through LazyJavaClassMemberScope@295
    functions('add': Name@87) = EmptyList@3[empty] // through LazyJavaClassMemberScope@295
    functions('addAll': Name@91) = EmptyList@3[empty] // through LazyJavaClassMemberScope@295
    functions('batchRemove': Name@13) = EmptyList@3[empty] // through LazyJavaClassMemberScope@295
    functions('clear': Name@95) = EmptyList@3[empty] // through LazyJavaClassMemberScope@295
    functions('clone': Name@17) = EmptyList@3[empty] // through LazyJavaClassMemberScope@295
    functions('contains': Name@18) = EmptyList@3[empty] // through LazyJavaClassMemberScope@295
    functions('containsAll': Name@21) = EmptyList@3[empty] // through LazyJavaClassMemberScope@295
    functions('elementData': Name@24) = EmptyList@3[empty] // through LazyJavaClassMemberScope@295
    functions('ensureCapacity': Name@25) = EmptyList@3[empty] // through LazyJavaClassMemberScope@295
    functions('ensureCapacityInternal': Name@26) = EmptyList@3[empty] // through LazyJavaClassMemberScope@295
    functions('equals': Name@102) = ArrayList@296[1] { DeserializedSimpleFunctionDescriptor@297['equals'] } // through LazyJavaClassMemberScope@295
    functions('fastRemove': Name@30) = EmptyList@3[empty] // through LazyJavaClassMemberScope@295
    functions('finalize': Name@31) = EmptyList@3[empty] // through LazyJavaClassMemberScope@295
    functions('get': Name@105) = EmptyList@3[empty] // through LazyJavaClassMemberScope@295
    functions('getClass': Name@33) = EmptyList@3[empty] // through LazyJavaClassMemberScope@295
    functions('grow': Name@34) = EmptyList@3[empty] // through LazyJavaClassMemberScope@295
    functions('hashCode': Name@108) = ArrayList@298[1] { DeserializedSimpleFunctionDescriptor@299['hashCode'] } // through LazyJavaClassMemberScope@295
    functions('indexOf': Name@111) = EmptyList@3[empty] // through LazyJavaClassMemberScope@295
    functions('isEmpty': Name@39) = EmptyList@3[empty] // through LazyJavaClassMemberScope@295
    functions('iterator': Name@116) = EmptyList@3[empty] // through LazyJavaClassMemberScope@295
    functions('lastIndexOf': Name@119) = EmptyList@3[empty] // through LazyJavaClassMemberScope@295
    functions('listIterator': Name@122) = EmptyList@3[empty] // through LazyJavaClassMemberScope@295
    functions('notify': Name@47) = EmptyList@3[empty] // through LazyJavaClassMemberScope@295
    functions('notifyAll': Name@48) = EmptyList@3[empty] // through LazyJavaClassMemberScope@295
    functions('outOfBoundsMsg': Name@126) = EmptyList@3[empty] // through LazyJavaClassMemberScope@295
    functions('rangeCheck': Name@50) = EmptyList@3[empty] // through LazyJavaClassMemberScope@295
    functions('rangeCheckForAdd': Name@129) = EmptyList@3[empty] // through LazyJavaClassMemberScope@295
    functions('readObject': Name@52) = EmptyList@3[empty] // through LazyJavaClassMemberScope@295
    functions('remove': Name@132) = EmptyList@3[empty] // through LazyJavaClassMemberScope@295
    functions('removeAll': Name@56) = EmptyList@3[empty] // through LazyJavaClassMemberScope@295
    functions('removeRange': Name@138) = EmptyList@3[empty] // through LazyJavaClassMemberScope@295
    functions('retainAll': Name@60) = EmptyList@3[empty] // through LazyJavaClassMemberScope@295
    functions('set': Name@143) = EmptyList@3[empty] // through LazyJavaClassMemberScope@295
    functions('size': Name@64) = EmptyList@3[empty] // through LazyJavaClassMemberScope@295
    functions('subList': Name@148) = EmptyList@3[empty] // through LazyJavaClassMemberScope@295
    functions('toArray': Name@68) = EmptyList@3[empty] // through LazyJavaClassMemberScope@295
    functions('toString': Name@72) = ArrayList@300[1] { DeserializedSimpleFunctionDescriptor@301['toString'] } // through LazyJavaClassMemberScope@295
    functions('trimToSize': Name@75) = EmptyList@3[empty] // through LazyJavaClassMemberScope@295
    functions('wait': Name@76) = EmptyList@3[empty] // through LazyJavaClassMemberScope@295
    functions('writeObject': Name@77) = EmptyList@3[empty] // through LazyJavaClassMemberScope@295
    memberIndex = computeMemberIndex$1@302 // through LazyJavaClassMemberScope@295
    properties('elementData': Name@79) = EmptyList@3[empty] // through LazyJavaClassMemberScope@295
    properties('modCount': Name@80) = EmptyList@3[empty] // through LazyJavaClassMemberScope@295
    properties('size': Name@81) = EmptyList@3[empty] // through LazyJavaClassMemberScope@295
    typeConstructor = LazyJavaClassTypeConstructor@303['RandomAccess']
}

LazyJavaClassDescriptor@304['Serializable'] {
    defaultType = JetTypeImpl@305['Serializable']
    functions('Itr': Name@2) = EmptyList@3[empty] // through LazyJavaClassMemberScope@306
    functions('ListItr': Name@5) = EmptyList@3[empty] // through LazyJavaClassMemberScope@306
    functions('SubList': Name@6) = EmptyList@3[empty] // through LazyJavaClassMemberScope@306
    functions('add': Name@87) = EmptyList@3[empty] // through LazyJavaClassMemberScope@306
    functions('addAll': Name@91) = EmptyList@3[empty] // through LazyJavaClassMemberScope@306
    functions('batchRemove': Name@13) = EmptyList@3[empty] // through LazyJavaClassMemberScope@306
    functions('clear': Name@95) = EmptyList@3[empty] // through LazyJavaClassMemberScope@306
    functions('clone': Name@17) = EmptyList@3[empty] // through LazyJavaClassMemberScope@306
    functions('contains': Name@18) = EmptyList@3[empty] // through LazyJavaClassMemberScope@306
    functions('containsAll': Name@21) = EmptyList@3[empty] // through LazyJavaClassMemberScope@306
    functions('elementData': Name@24) = EmptyList@3[empty] // through LazyJavaClassMemberScope@306
    functions('ensureCapacity': Name@25) = EmptyList@3[empty] // through LazyJavaClassMemberScope@306
    functions('ensureCapacityInternal': Name@26) = EmptyList@3[empty] // through LazyJavaClassMemberScope@306
    functions('equals': Name@102) = ArrayList@307[1] { DeserializedSimpleFunctionDescriptor@308['equals'] } // through LazyJavaClassMemberScope@306
    functions('fastRemove': Name@30) = EmptyList@3[empty] // through LazyJavaClassMemberScope@306
    functions('finalize': Name@31) = EmptyList@3[empty] // through LazyJavaClassMemberScope@306
    functions('get': Name@105) = EmptyList@3[empty] // through LazyJavaClassMemberScope@306
    functions('getClass': Name@33) = EmptyList@3[empty] // through LazyJavaClassMemberScope@306
    functions('grow': Name@34) = EmptyList@3[empty] // through LazyJavaClassMemberScope@306
    functions('hashCode': Name@108) = ArrayList@309[1] { DeserializedSimpleFunctionDescriptor@310['hashCode'] } // through LazyJavaClassMemberScope@306
    functions('indexOf': Name@111) = EmptyList@3[empty] // through LazyJavaClassMemberScope@306
    functions('isEmpty': Name@39) = EmptyList@3[empty] // through LazyJavaClassMemberScope@306
    functions('iterator': Name@116) = EmptyList@3[empty] // through LazyJavaClassMemberScope@306
    functions('lastIndexOf': Name@119) = EmptyList@3[empty] // through LazyJavaClassMemberScope@306
    functions('listIterator': Name@122) = EmptyList@3[empty] // through LazyJavaClassMemberScope@306
    functions('notify': Name@47) = EmptyList@3[empty] // through LazyJavaClassMemberScope@306
    functions('notifyAll': Name@48) = EmptyList@3[empty] // through LazyJavaClassMemberScope@306
    functions('outOfBoundsMsg': Name@126) = EmptyList@3[empty] // through LazyJavaClassMemberScope@306
    functions('rangeCheck': Name@50) = EmptyList@3[empty] // through LazyJavaClassMemberScope@306
    functions('rangeCheckForAdd': Name@129) = EmptyList@3[empty] // through LazyJavaClassMemberScope@306
    functions('readObject': Name@52) = EmptyList@3[empty] // through LazyJavaClassMemberScope@306
    functions('remove': Name@132) = EmptyList@3[empty] // through LazyJavaClassMemberScope@306
    functions('removeAll': Name@56) = EmptyList@3[empty] // through LazyJavaClassMemberScope@306
    functions('removeRange': Name@138) = EmptyList@3[empty] // through LazyJavaClassMemberScope@306
    functions('retainAll': Name@60) = EmptyList@3[empty] // through LazyJavaClassMemberScope@306
    functions('set': Name@143) = EmptyList@3[empty] // through LazyJavaClassMemberScope@306
    functions('size': Name@64) = EmptyList@3[empty] // through LazyJavaClassMemberScope@306
    functions('subList': Name@148) = EmptyList@3[empty] // through LazyJavaClassMemberScope@306
    functions('toArray': Name@68) = EmptyList@3[empty] // through LazyJavaClassMemberScope@306
    functions('toString': Name@72) = ArrayList@311[1] { DeserializedSimpleFunctionDescriptor@312['toString'] } // through LazyJavaClassMemberScope@306
    functions('trimToSize': Name@75) = EmptyList@3[empty] // through LazyJavaClassMemberScope@306
    functions('wait': Name@76) = EmptyList@3[empty] // through LazyJavaClassMemberScope@306
    functions('writeObject': Name@77) = EmptyList@3[empty] // through LazyJavaClassMemberScope@306
    memberIndex = computeMemberIndex$1@313 // through LazyJavaClassMemberScope@306
    properties('elementData': Name@79) = EmptyList@3[empty] // through LazyJavaClassMemberScope@306
    properties('modCount': Name@80) = EmptyList@3[empty] // through LazyJavaClassMemberScope@306
    properties('size': Name@81) = EmptyList@3[empty] // through LazyJavaClassMemberScope@306
    typeConstructor = LazyJavaClassTypeConstructor@314['Serializable']
}

LazyJavaClassTypeConstructor@83['AbstractCollection'] {
    parameters = ArrayList@315[1] { LazyJavaTypeParameterDescriptor@316['E'] }
    supertypes = ArrayList@317[1] { LazyJavaClassifierType@318['Collection<E>'] }
}

LazyJavaClassTypeConstructor@160['AbstractList'] {
    parameters = ArrayList@319[1] { LazyJavaTypeParameterDescriptor@320['E'] }
    supertypes = ArrayList@321[2] { LazyJavaClassifierType@322['AbstractCollection<E>'], LazyJavaClassifierType@323['List<E>'] }
}

LazyJavaClassTypeConstructor@288['ArrayList'] {
    parameters = ArrayList@324[1] { LazyJavaTypeParameterDescriptor@325['E'] }
    supertypes = ArrayList@326[5] { LazyJavaClassifierType@327['AbstractList<E>'], LazyJavaClassifierType@328['List<E>'], LazyJavaClassifierType@329['RandomAccess'], ... }
}

LazyJavaClassTypeConstructor@290['ObjectInputStream'] {
    parameters = ArrayList@330[empty]
}

LazyJavaClassTypeConstructor@292['ObjectOutputStream'] {
    parameters = ArrayList@331[empty]
}

LazyJavaClassTypeConstructor@303['RandomAccess'] {
    parameters = ArrayList@332[empty]
    supertypes = ArrayList@333[1] { JetTypeImpl@334['Any'] }
}

LazyJavaClassTypeConstructor@314['Serializable'] {
    parameters = ArrayList@335[empty]
    supertypes = ArrayList@336[1] { JetTypeImpl@334['Any'] }
}

LazyJavaClassifierType@322['AbstractCollection<E>'] {
    arguments = ArrayList@337[1] { TypeProjectionImpl@338 }
    classifier = JavaClassImpl@339['AbstractCollection']
    memberScope = SubstitutingScope@340
    nullable = 'false': Boolean@341
    typeConstructor = LazyJavaClassTypeConstructor@83['AbstractCollection']
}

LazyJavaClassifierType@327['AbstractList<E>'] {
    arguments = ArrayList@342[1] { TypeProjectionImpl@343 }
    classifier = JavaClassImpl@344['AbstractList']
    memberScope = SubstitutingScope@345
    nullable = 'false': Boolean@341
    typeConstructor = LazyJavaClassTypeConstructor@160['AbstractList']
}

LazyJavaClassifierType@346['Cloneable'] {
    arguments = ArrayList@347[empty]
    classifier = JavaClassImpl@348['Cloneable']
    memberScope = DeserializedClassMemberScope@349
    nullable = 'false': Boolean@341
    typeConstructor = DeserializedClassTypeConstructor@350
}

LazyJavaClassifierType@351['Collection<? extends E>'] {
    arguments = ArrayList@352[1] { TypeProjectionImpl@353 }
    classifier = JavaClassImpl@354['Collection']
    memberScope = SubstitutingScope@355
    nullable = 'false': Boolean@341
    typeConstructor = DeserializedClassTypeConstructor@356
}

LazyJavaClassifierType@357['Collection<? extends E>'] {
    arguments = ArrayList@358[1] { TypeProjectionImpl@359 }
    classifier = JavaClassImpl@360['Collection']
    memberScope = SubstitutingScope@361
    nullable = 'false': Boolean@341
    typeConstructor = DeserializedClassTypeConstructor@356
}

LazyJavaClassifierType@362['Collection<? extends E>'] {
    arguments = ArrayList@363[1] { TypeProjectionImpl@364 }
    classifier = JavaClassImpl@365['Collection']
    memberScope = SubstitutingScope@366
    nullable = 'false': Boolean@341
    typeConstructor = DeserializedClassTypeConstructor@356
}

LazyJavaClassifierType@367['Collection<? extends E>'] {
    arguments = ArrayList@368[1] { TypeProjectionImpl@369 }
    classifier = JavaClassImpl@370['Collection']
    memberScope = SubstitutingScope@371
    nullable = 'false': Boolean@341
    typeConstructor = DeserializedClassTypeConstructor@356
}

LazyJavaClassifierType@372['Collection<? extends E>'] {
    arguments = ArrayList@373[1] { TypeProjectionImpl@374 }
    classifier = JavaClassImpl@375['Collection']
    memberScope = SubstitutingScope@376
    nullable = 'false': Boolean@341
    typeConstructor = DeserializedClassTypeConstructor@356
}

LazyJavaClassifierType@377['Collection<? extends E>'] {
    arguments = ArrayList@378[1] { TypeProjectionImpl@379 }
    classifier = JavaClassImpl@375['Collection']
    memberScope = SubstitutingScope@380
    nullable = 'true': Boolean@381
    typeConstructor = DeserializedClassTypeConstructor@382
}

LazyJavaClassifierType@383['Collection<? extends E>'] {
    arguments = ArrayList@384[1] { TypeProjectionImpl@385 }
    classifier = JavaClassImpl@354['Collection']
    memberScope = SubstitutingScope@386
    nullable = 'true': Boolean@381
    typeConstructor = DeserializedClassTypeConstructor@382
}

LazyJavaClassifierType@387['Collection<? extends E>'] {
    arguments = ArrayList@388[1] { TypeProjectionImpl@389 }
    classifier = JavaClassImpl@365['Collection']
    memberScope = SubstitutingScope@390
    nullable = 'true': Boolean@381
    typeConstructor = DeserializedClassTypeConstructor@382
}

LazyJavaClassifierType@391['Collection<? extends E>'] {
    arguments = ArrayList@392[1] { TypeProjectionImpl@393 }
    classifier = JavaClassImpl@360['Collection']
    memberScope = SubstitutingScope@394
    nullable = 'true': Boolean@381
    typeConstructor = DeserializedClassTypeConstructor@382
}

LazyJavaClassifierType@395['Collection<? extends E>'] {
    arguments = ArrayList@396[1] { TypeProjectionImpl@397 }
    classifier = JavaClassImpl@370['Collection']
    memberScope = SubstitutingScope@398
    nullable = 'true': Boolean@381
    typeConstructor = DeserializedClassTypeConstructor@382
}

LazyJavaClassifierType@399['Collection<?>'] {
    arguments = ArrayList@400[1] { LazyStarProjection@401 }
    classifier = JavaClassImpl@402['Collection']
    memberScope = SubstitutingScope@403
    nullable = 'false': Boolean@341
    typeConstructor = DeserializedClassTypeConstructor@356
}

LazyJavaClassifierType@404['Collection<?>'] {
    arguments = ArrayList@405[1] { LazyStarProjection@406 }
    classifier = JavaClassImpl@407['Collection']
    memberScope = SubstitutingScope@408
    nullable = 'false': Boolean@341
    typeConstructor = DeserializedClassTypeConstructor@356
}

LazyJavaClassifierType@409['Collection<?>'] {
    arguments = ArrayList@410[1] { LazyStarProjection@411 }
    classifier = JavaClassImpl@412['Collection']
    memberScope = SubstitutingScope@413
    nullable = 'false': Boolean@341
    typeConstructor = DeserializedClassTypeConstructor@356
}

LazyJavaClassifierType@414['Collection<?>'] {
    arguments = ArrayList@415[1] { LazyStarProjection@416 }
    classifier = JavaClassImpl@417['Collection']
    memberScope = SubstitutingScope@418
    nullable = 'false': Boolean@341
    typeConstructor = DeserializedClassTypeConstructor@356
}

LazyJavaClassifierType@419['Collection<?>'] {
    arguments = ArrayList@420[1] { LazyStarProjection@421 }
    classifier = JavaClassImpl@422['Collection']
    memberScope = SubstitutingScope@423
    nullable = 'false': Boolean@341
    typeConstructor = DeserializedClassTypeConstructor@356
}

LazyJavaClassifierType@424['Collection<?>'] {
    arguments = ArrayList@425[1] { LazyStarProjection@426 }
    classifier = JavaClassImpl@427['Collection']
    memberScope = SubstitutingScope@428
    nullable = 'false': Boolean@341
    typeConstructor = DeserializedClassTypeConstructor@356
}

LazyJavaClassifierType@429['Collection<?>'] {
    arguments = ArrayList@430[1] { LazyStarProjection@431 }
    classifier = JavaClassImpl@422['Collection']
    memberScope = SubstitutingScope@432
    nullable = 'true': Boolean@381
    typeConstructor = DeserializedClassTypeConstructor@382
}

LazyJavaClassifierType@433['Collection<?>'] {
    arguments = ArrayList@434[1] { LazyStarProjection@435 }
    classifier = JavaClassImpl@407['Collection']
    memberScope = SubstitutingScope@436
    nullable = 'true': Boolean@381
    typeConstructor = DeserializedClassTypeConstructor@382
}

LazyJavaClassifierType@437['Collection<?>'] {
    arguments = ArrayList@438[1] { LazyStarProjection@439 }
    classifier = JavaClassImpl@417['Collection']
    memberScope = SubstitutingScope@440
    nullable = 'true': Boolean@381
    typeConstructor = DeserializedClassTypeConstructor@382
}

LazyJavaClassifierType@441['Collection<?>'] {
    arguments = ArrayList@442[1] { LazyStarProjection@443 }
    classifier = JavaClassImpl@402['Collection']
    memberScope = SubstitutingScope@444
    nullable = 'true': Boolean@381
    typeConstructor = DeserializedClassTypeConstructor@382
}

LazyJavaClassifierType@445['Collection<?>'] {
    arguments = ArrayList@446[1] { LazyStarProjection@447 }
    classifier = JavaClassImpl@427['Collection']
    memberScope = SubstitutingScope@448
    nullable = 'true': Boolean@381
    typeConstructor = DeserializedClassTypeConstructor@382
}

LazyJavaClassifierType@449['Collection<?>'] {
    arguments = ArrayList@450[1] { LazyStarProjection@451 }
    classifier = JavaClassImpl@412['Collection']
    memberScope = SubstitutingScope@452
    nullable = 'true': Boolean@381
    typeConstructor = DeserializedClassTypeConstructor@382
}

LazyJavaClassifierType@318['Collection<E>'] {
    arguments = ArrayList@453[1] { TypeProjectionImpl@454 }
    classifier = JavaClassImpl@455['Collection']
    memberScope = SubstitutingScope@456
    nullable = 'false': Boolean@341
    typeConstructor = DeserializedClassTypeConstructor@356
}

LazyJavaClassifierType@457['E'] {
    arguments = ArrayList@458[empty]
    classifier = JavaTypeParameterImpl@459['E']
    memberScope = LazyScopeAdapter@460
    nullable = 'false': Boolean@341
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@461
}

LazyJavaClassifierType@462['E'] {
    arguments = ArrayList@463[empty]
    classifier = JavaTypeParameterImpl@464['E']
    nullable = 'false': Boolean@341
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@465
}

LazyJavaClassifierType@466['E'] {
    arguments = ArrayList@467[empty]
    classifier = JavaTypeParameterImpl@468['E']
    nullable = 'false': Boolean@341
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@465
}

LazyJavaClassifierType@469['E'] {
    arguments = ArrayList@470[empty]
    classifier = JavaTypeParameterImpl@471['E']
    nullable = 'false': Boolean@341
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@461
}

LazyJavaClassifierType@472['E'] {
    arguments = ArrayList@473[empty]
    classifier = JavaTypeParameterImpl@474['E']
    nullable = 'false': Boolean@341
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@461
}

LazyJavaClassifierType@475['E'] {
    arguments = ArrayList@476[empty]
    classifier = JavaTypeParameterImpl@477['E']
    nullable = 'false': Boolean@341
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@461
}

LazyJavaClassifierType@478['E'] {
    arguments = ArrayList@479[empty]
    classifier = JavaTypeParameterImpl@480['E']
    nullable = 'false': Boolean@341
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@461
}

LazyJavaClassifierType@481['E'] {
    arguments = ArrayList@482[empty]
    classifier = JavaTypeParameterImpl@483['E']
    nullable = 'false': Boolean@341
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@465
}

LazyJavaClassifierType@484['E'] {
    arguments = ArrayList@485[empty]
    classifier = JavaTypeParameterImpl@486['E']
    nullable = 'false': Boolean@341
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@461
}

LazyJavaClassifierType@487['E'] {
    arguments = ArrayList@488[empty]
    classifier = JavaTypeParameterImpl@489['E']
    nullable = 'false': Boolean@341
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@465
}

LazyJavaClassifierType@490['E'] {
    arguments = ArrayList@491[empty]
    classifier = JavaTypeParameterImpl@492['E']
    nullable = 'false': Boolean@341
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@465
}

LazyJavaClassifierType@493['E'] {
    arguments = ArrayList@494[empty]
    classifier = JavaTypeParameterImpl@495['E']
    nullable = 'false': Boolean@341
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@465
}

LazyJavaClassifierType@496['E'] {
    arguments = ArrayList@497[empty]
    classifier = JavaTypeParameterImpl@498['E']
    nullable = 'false': Boolean@341
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@461
}

LazyJavaClassifierType@499['E'] {
    arguments = ArrayList@500[empty]
    classifier = JavaTypeParameterImpl@501['E']
    nullable = 'false': Boolean@341
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@465
}

LazyJavaClassifierType@502['E'] {
    arguments = ArrayList@503[empty]
    classifier = JavaTypeParameterImpl@504['E']
    nullable = 'false': Boolean@341
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@465
}

LazyJavaClassifierType@505['E'] {
    arguments = ArrayList@506[empty]
    classifier = JavaTypeParameterImpl@507['E']
    nullable = 'false': Boolean@341
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@508
}

LazyJavaClassifierType@509['E'] {
    arguments = ArrayList@510[empty]
    classifier = JavaTypeParameterImpl@511['E']
    nullable = 'false': Boolean@341
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@508
}

LazyJavaClassifierType@512['E'] {
    arguments = ArrayList@513[empty]
    classifier = JavaTypeParameterImpl@514['E']
    nullable = 'false': Boolean@341
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@465
}

LazyJavaClassifierType@515['E'] {
    arguments = ArrayList@516[empty]
    classifier = JavaTypeParameterImpl@517['E']
    nullable = 'false': Boolean@341
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@461
}

LazyJavaClassifierType@518['E'] {
    arguments = ArrayList@519[empty]
    classifier = JavaTypeParameterImpl@520['E']
    nullable = 'false': Boolean@341
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@508
}

LazyJavaClassifierType@521['E'] {
    arguments = ArrayList@522[empty]
    classifier = JavaTypeParameterImpl@523['E']
    nullable = 'false': Boolean@341
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@465
}

LazyJavaClassifierType@524['E'] {
    arguments = ArrayList@525[empty]
    classifier = JavaTypeParameterImpl@526['E']
    nullable = 'false': Boolean@341
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@465
}

LazyJavaClassifierType@527['E'] {
    arguments = ArrayList@528[empty]
    classifier = JavaTypeParameterImpl@529['E']
    nullable = 'false': Boolean@341
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@508
}

LazyJavaClassifierType@530['E'] {
    arguments = ArrayList@531[empty]
    classifier = JavaTypeParameterImpl@532['E']
    nullable = 'false': Boolean@341
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@465
}

LazyJavaClassifierType@533['E'] {
    arguments = ArrayList@534[empty]
    classifier = JavaTypeParameterImpl@535['E']
    nullable = 'false': Boolean@341
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@461
}

LazyJavaClassifierType@536['E'] {
    arguments = ArrayList@537[empty]
    classifier = JavaTypeParameterImpl@538['E']
    nullable = 'false': Boolean@341
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@461
}

LazyJavaClassifierType@539['E'] {
    arguments = ArrayList@540[empty]
    classifier = JavaTypeParameterImpl@541['E']
    nullable = 'false': Boolean@341
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@461
}

LazyJavaClassifierType@542['E'] {
    arguments = ArrayList@543[empty]
    classifier = JavaTypeParameterImpl@544['E']
    nullable = 'false': Boolean@341
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@461
}

LazyJavaClassifierType@545['E'] {
    arguments = ArrayList@546[empty]
    classifier = JavaTypeParameterImpl@547['E']
    nullable = 'false': Boolean@341
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@508
}

LazyJavaClassifierType@548['E'] {
    arguments = ArrayList@549[empty]
    classifier = JavaTypeParameterImpl@550['E']
    nullable = 'false': Boolean@341
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@465
}

LazyJavaClassifierType@551['E'] {
    arguments = ArrayList@552[empty]
    classifier = JavaTypeParameterImpl@553['E']
    nullable = 'false': Boolean@341
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@461
}

LazyJavaClassifierType@554['E'] {
    arguments = ArrayList@555[empty]
    classifier = JavaTypeParameterImpl@556['E']
    nullable = 'false': Boolean@341
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@465
}

LazyJavaClassifierType@557['E'] {
    arguments = ArrayList@558[empty]
    classifier = JavaTypeParameterImpl@559['E']
    nullable = 'false': Boolean@341
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@461
}

LazyJavaClassifierType@560['E'] {
    arguments = ArrayList@561[empty]
    classifier = JavaTypeParameterImpl@562['E']
    nullable = 'false': Boolean@341
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@465
}

LazyJavaClassifierType@563['E'] {
    arguments = ArrayList@564[empty]
    classifier = JavaTypeParameterImpl@565['E']
    nullable = 'false': Boolean@341
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@461
}

LazyJavaClassifierType@566['E'] {
    arguments = ArrayList@567[empty]
    classifier = JavaTypeParameterImpl@568['E']
    nullable = 'false': Boolean@341
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@465
}

LazyJavaClassifierType@569['E'] {
    arguments = ArrayList@570[empty]
    classifier = JavaTypeParameterImpl@571['E']
    nullable = 'false': Boolean@341
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@465
}

LazyJavaClassifierType@572['E'] {
    arguments = ArrayList@573[empty]
    classifier = JavaTypeParameterImpl@574['E']
    nullable = 'false': Boolean@341
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@508
}

LazyJavaClassifierType@575['E'] {
    arguments = ArrayList@576[empty]
    classifier = JavaTypeParameterImpl@577['E']
    nullable = 'false': Boolean@341
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@465
}

LazyJavaClassifierType@578['E'] {
    arguments = ArrayList@579[empty]
    classifier = JavaTypeParameterImpl@580['E']
    nullable = 'false': Boolean@341
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@461
}

LazyJavaClassifierType@581['E'] {
    arguments = ArrayList@582[empty]
    classifier = JavaTypeParameterImpl@583['E']
    nullable = 'false': Boolean@341
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@465
}

LazyJavaClassifierType@584['E'] {
    arguments = ArrayList@585[empty]
    classifier = JavaTypeParameterImpl@586['E']
    nullable = 'false': Boolean@341
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@465
}

LazyJavaClassifierType@587['E'] {
    arguments = ArrayList@588[empty]
    classifier = JavaTypeParameterImpl@589['E']
    nullable = 'false': Boolean@341
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@465
}

LazyJavaClassifierType@590['E'] {
    arguments = ArrayList@591[empty]
    classifier = JavaTypeParameterImpl@592['E']
    nullable = 'false': Boolean@341
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@461
}

LazyJavaClassifierType@593['E'] {
    arguments = ArrayList@594[empty]
    classifier = JavaTypeParameterImpl@595['E']
    nullable = 'false': Boolean@341
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@465
}

LazyJavaClassifierType@596['E'] {
    arguments = ArrayList@597[empty]
    classifier = JavaTypeParameterImpl@598['E']
    nullable = 'false': Boolean@341
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@465
}

LazyJavaClassifierType@599['E'] {
    arguments = ArrayList@600[empty]
    classifier = JavaTypeParameterImpl@601['E']
    nullable = 'false': Boolean@341
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@461
}

LazyJavaClassifierType@602['E'] {
    arguments = ArrayList@603[empty]
    classifier = JavaTypeParameterImpl@526['E']
    nullable = 'true': Boolean@381
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@465
}

LazyJavaClassifierType@604['E'] {
    arguments = ArrayList@605[empty]
    classifier = JavaTypeParameterImpl@589['E']
    nullable = 'true': Boolean@381
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@465
}

LazyJavaClassifierType@606['E'] {
    arguments = ArrayList@607[empty]
    classifier = JavaTypeParameterImpl@532['E']
    nullable = 'true': Boolean@381
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@465
}

LazyJavaClassifierType@608['E'] {
    arguments = ArrayList@609[empty]
    classifier = JavaTypeParameterImpl@468['E']
    nullable = 'true': Boolean@381
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@465
}

LazyJavaClassifierType@610['E'] {
    arguments = ArrayList@611[empty]
    classifier = JavaTypeParameterImpl@547['E']
    nullable = 'true': Boolean@381
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@508
}

LazyJavaClassifierType@612['E'] {
    arguments = ArrayList@613[empty]
    classifier = JavaTypeParameterImpl@535['E']
    nullable = 'true': Boolean@381
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@461
}

LazyJavaClassifierType@614['E'] {
    arguments = ArrayList@615[empty]
    classifier = JavaTypeParameterImpl@474['E']
    nullable = 'true': Boolean@381
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@461
}

LazyJavaClassifierType@616['E'] {
    arguments = ArrayList@617[empty]
    classifier = JavaTypeParameterImpl@489['E']
    nullable = 'true': Boolean@381
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@465
}

LazyJavaClassifierType@618['E'] {
    arguments = ArrayList@619[empty]
    classifier = JavaTypeParameterImpl@550['E']
    nullable = 'true': Boolean@381
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@465
}

LazyJavaClassifierType@620['E'] {
    arguments = ArrayList@621[empty]
    classifier = JavaTypeParameterImpl@517['E']
    nullable = 'true': Boolean@381
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@461
}

LazyJavaClassifierType@622['E'] {
    arguments = ArrayList@623[empty]
    classifier = JavaTypeParameterImpl@495['E']
    nullable = 'true': Boolean@381
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@465
}

LazyJavaClassifierType@624['E'] {
    arguments = ArrayList@625[empty]
    classifier = JavaTypeParameterImpl@586['E']
    nullable = 'true': Boolean@381
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@465
}

LazyJavaClassifierType@626['E'] {
    arguments = ArrayList@627[empty]
    classifier = JavaTypeParameterImpl@601['E']
    nullable = 'true': Boolean@381
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@461
}

LazyJavaClassifierType@628['E'] {
    arguments = ArrayList@629[empty]
    classifier = JavaTypeParameterImpl@592['E']
    nullable = 'true': Boolean@381
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@461
}

LazyJavaClassifierType@630['E'] {
    arguments = ArrayList@631[empty]
    classifier = JavaTypeParameterImpl@483['E']
    nullable = 'true': Boolean@381
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@465
}

LazyJavaClassifierType@632['E'] {
    arguments = ArrayList@633[empty]
    classifier = JavaTypeParameterImpl@511['E']
    nullable = 'true': Boolean@381
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@508
}

LazyJavaClassifierType@634['E'] {
    arguments = ArrayList@635[empty]
    classifier = JavaTypeParameterImpl@562['E']
    nullable = 'true': Boolean@381
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@465
}

LazyJavaClassifierType@636['E'] {
    arguments = ArrayList@637[empty]
    classifier = JavaTypeParameterImpl@565['E']
    nullable = 'true': Boolean@381
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@461
}

LazyJavaClassifierType@638['E'] {
    arguments = ArrayList@639[empty]
    classifier = JavaTypeParameterImpl@504['E']
    nullable = 'true': Boolean@381
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@465
}

LazyJavaClassifierType@640['E'] {
    arguments = ArrayList@641[empty]
    classifier = JavaTypeParameterImpl@492['E']
    nullable = 'true': Boolean@381
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@465
}

LazyJavaClassifierType@642['E'] {
    arguments = ArrayList@643[empty]
    classifier = JavaTypeParameterImpl@477['E']
    nullable = 'true': Boolean@381
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@461
}

LazyJavaClassifierType@644['E'] {
    arguments = ArrayList@645[empty]
    classifier = JavaTypeParameterImpl@571['E']
    nullable = 'true': Boolean@381
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@465
}

LazyJavaClassifierType@646['E'] {
    arguments = ArrayList@647[empty]
    classifier = JavaTypeParameterImpl@580['E']
    nullable = 'true': Boolean@381
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@461
}

LazyJavaClassifierType@648['E'] {
    arguments = ArrayList@649[empty]
    classifier = JavaTypeParameterImpl@598['E']
    nullable = 'true': Boolean@381
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@465
}

LazyJavaClassifierType@650['E'] {
    arguments = ArrayList@651[empty]
    classifier = JavaTypeParameterImpl@574['E']
    nullable = 'true': Boolean@381
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@508
}

LazyJavaClassifierType@652['E'] {
    arguments = ArrayList@653[empty]
    classifier = JavaTypeParameterImpl@520['E']
    nullable = 'true': Boolean@381
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@508
}

LazyJavaClassifierType@654['E'] {
    arguments = ArrayList@655[empty]
    classifier = JavaTypeParameterImpl@583['E']
    nullable = 'true': Boolean@381
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@465
}

LazyJavaClassifierType@656['E'] {
    arguments = ArrayList@657[empty]
    classifier = JavaTypeParameterImpl@471['E']
    nullable = 'true': Boolean@381
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@461
}

LazyJavaClassifierType@658['E'] {
    arguments = ArrayList@659[empty]
    classifier = JavaTypeParameterImpl@514['E']
    nullable = 'true': Boolean@381
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@465
}

LazyJavaClassifierType@660['E'] {
    arguments = ArrayList@661[empty]
    classifier = JavaTypeParameterImpl@544['E']
    nullable = 'true': Boolean@381
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@461
}

LazyJavaClassifierType@662['E'] {
    arguments = ArrayList@663[empty]
    classifier = JavaTypeParameterImpl@556['E']
    nullable = 'true': Boolean@381
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@465
}

LazyJavaClassifierType@664['E'] {
    arguments = ArrayList@665[empty]
    classifier = JavaTypeParameterImpl@480['E']
    nullable = 'true': Boolean@381
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@461
}

LazyJavaClassifierType@666['E'] {
    arguments = ArrayList@667[empty]
    classifier = JavaTypeParameterImpl@501['E']
    nullable = 'true': Boolean@381
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@465
}

LazyJavaClassifierType@668['E'] {
    arguments = ArrayList@669[empty]
    classifier = JavaTypeParameterImpl@464['E']
    nullable = 'true': Boolean@381
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@465
}

LazyJavaClassifierType@670['E'] {
    arguments = ArrayList@671[empty]
    classifier = JavaTypeParameterImpl@459['E']
    nullable = 'true': Boolean@381
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@461
}

LazyJavaClassifierType@672['E'] {
    arguments = ArrayList@673[empty]
    classifier = JavaTypeParameterImpl@568['E']
    nullable = 'true': Boolean@381
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@465
}

LazyJavaClassifierType@674['E'] {
    arguments = ArrayList@675[empty]
    classifier = JavaTypeParameterImpl@498['E']
    nullable = 'true': Boolean@381
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@461
}

LazyJavaClassifierType@676['E'] {
    arguments = ArrayList@677[empty]
    classifier = JavaTypeParameterImpl@577['E']
    nullable = 'true': Boolean@381
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@465
}

LazyJavaClassifierType@678['E'] {
    arguments = ArrayList@679[empty]
    classifier = JavaTypeParameterImpl@541['E']
    nullable = 'true': Boolean@381
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@461
}

LazyJavaClassifierType@680['E'] {
    arguments = ArrayList@681[empty]
    classifier = JavaTypeParameterImpl@553['E']
    nullable = 'true': Boolean@381
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@461
}

LazyJavaClassifierType@682['E'] {
    arguments = ArrayList@683[empty]
    classifier = JavaTypeParameterImpl@486['E']
    nullable = 'true': Boolean@381
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@461
}

LazyJavaClassifierType@684['E'] {
    arguments = ArrayList@685[empty]
    classifier = JavaTypeParameterImpl@595['E']
    nullable = 'true': Boolean@381
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@465
}

LazyJavaClassifierType@686['E'] {
    arguments = ArrayList@687[empty]
    classifier = JavaTypeParameterImpl@559['E']
    nullable = 'true': Boolean@381
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@461
}

LazyJavaClassifierType@688['E'] {
    arguments = ArrayList@689[empty]
    classifier = JavaTypeParameterImpl@507['E']
    nullable = 'true': Boolean@381
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@508
}

LazyJavaClassifierType@690['E'] {
    arguments = ArrayList@691[empty]
    classifier = JavaTypeParameterImpl@523['E']
    nullable = 'true': Boolean@381
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@465
}

LazyJavaClassifierType@692['E'] {
    arguments = ArrayList@693[empty]
    classifier = JavaTypeParameterImpl@529['E']
    nullable = 'true': Boolean@381
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@508
}

LazyJavaClassifierType@694['E'] {
    arguments = ArrayList@695[empty]
    classifier = JavaTypeParameterImpl@538['E']
    nullable = 'true': Boolean@381
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@461
}

LazyJavaClassifierType@696['Iterator<E>'] {
    arguments = ArrayList@697[1] { TypeProjectionImpl@698 }
    classifier = JavaClassImpl@699['Iterator']
    memberScope = SubstitutingScope@700
    nullable = 'false': Boolean@341
    typeConstructor = DeserializedClassTypeConstructor@701
}

LazyJavaClassifierType@702['Iterator<E>'] {
    arguments = ArrayList@703[1] { TypeProjectionImpl@704 }
    classifier = JavaClassImpl@705['Iterator']
    memberScope = SubstitutingScope@706
    nullable = 'false': Boolean@341
    typeConstructor = DeserializedClassTypeConstructor@701
}

LazyJavaClassifierType@707['Iterator<E>'] {
    arguments = ArrayList@708[1] { TypeProjectionImpl@709 }
    classifier = JavaClassImpl@710['Iterator']
    memberScope = SubstitutingScope@711
    nullable = 'false': Boolean@341
    typeConstructor = DeserializedClassTypeConstructor@701
}

LazyJavaClassifierType@712['Iterator<E>'] {
    arguments = ArrayList@713[1] { TypeProjectionImpl@714 }
    classifier = JavaClassImpl@699['Iterator']
    memberScope = SubstitutingScope@715
    nullable = 'true': Boolean@381
    typeConstructor = DeserializedClassTypeConstructor@716
}

LazyJavaClassifierType@717['Iterator<E>'] {
    arguments = ArrayList@718[1] { TypeProjectionImpl@719 }
    classifier = JavaClassImpl@710['Iterator']
    memberScope = SubstitutingScope@720
    nullable = 'true': Boolean@381
    typeConstructor = DeserializedClassTypeConstructor@716
}

LazyJavaClassifierType@721['Iterator<E>'] {
    arguments = ArrayList@722[1] { TypeProjectionImpl@723 }
    classifier = JavaClassImpl@705['Iterator']
    memberScope = SubstitutingScope@724
    nullable = 'true': Boolean@381
    typeConstructor = DeserializedClassTypeConstructor@716
}

LazyJavaClassifierType@323['List<E>'] {
    arguments = ArrayList@725[1] { TypeProjectionImpl@726 }
    classifier = JavaClassImpl@727['List']
    memberScope = SubstitutingScope@728
    nullable = 'false': Boolean@341
    typeConstructor = DeserializedClassTypeConstructor@729
}

LazyJavaClassifierType@730['List<E>'] {
    arguments = ArrayList@731[1] { TypeProjectionImpl@732 }
    classifier = JavaClassImpl@733['List']
    memberScope = SubstitutingScope@734
    nullable = 'false': Boolean@341
    typeConstructor = DeserializedClassTypeConstructor@729
}

LazyJavaClassifierType@735['List<E>'] {
    arguments = ArrayList@736[1] { TypeProjectionImpl@737 }
    classifier = JavaClassImpl@738['List']
    memberScope = SubstitutingScope@739
    nullable = 'false': Boolean@341
    typeConstructor = DeserializedClassTypeConstructor@729
}

LazyJavaClassifierType@328['List<E>'] {
    arguments = ArrayList@740[1] { TypeProjectionImpl@741 }
    classifier = JavaClassImpl@742['List']
    memberScope = SubstitutingScope@743
    nullable = 'false': Boolean@341
    typeConstructor = DeserializedClassTypeConstructor@729
}

LazyJavaClassifierType@744['List<E>'] {
    arguments = ArrayList@745[1] { TypeProjectionImpl@746 }
    classifier = JavaClassImpl@738['List']
    memberScope = SubstitutingScope@747
    nullable = 'true': Boolean@381
    typeConstructor = DeserializedClassTypeConstructor@748
}

LazyJavaClassifierType@749['List<E>'] {
    arguments = ArrayList@750[1] { TypeProjectionImpl@751 }
    classifier = JavaClassImpl@733['List']
    memberScope = SubstitutingScope@752
    nullable = 'true': Boolean@381
    typeConstructor = DeserializedClassTypeConstructor@748
}

LazyJavaClassifierType@753['ListIterator<E>'] {
    arguments = ArrayList@754[1] { TypeProjectionImpl@755 }
    classifier = JavaClassImpl@756['ListIterator']
    memberScope = SubstitutingScope@757
    nullable = 'false': Boolean@341
    typeConstructor = DeserializedClassTypeConstructor@758
}

LazyJavaClassifierType@759['ListIterator<E>'] {
    arguments = ArrayList@760[1] { TypeProjectionImpl@761 }
    classifier = JavaClassImpl@762['ListIterator']
    memberScope = SubstitutingScope@763
    nullable = 'false': Boolean@341
    typeConstructor = DeserializedClassTypeConstructor@758
}

LazyJavaClassifierType@764['ListIterator<E>'] {
    arguments = ArrayList@765[1] { TypeProjectionImpl@766 }
    classifier = JavaClassImpl@767['ListIterator']
    memberScope = SubstitutingScope@768
    nullable = 'false': Boolean@341
    typeConstructor = DeserializedClassTypeConstructor@758
}

LazyJavaClassifierType@769['ListIterator<E>'] {
    arguments = ArrayList@770[1] { TypeProjectionImpl@771 }
    classifier = JavaClassImpl@772['ListIterator']
    memberScope = SubstitutingScope@773
    nullable = 'false': Boolean@341
    typeConstructor = DeserializedClassTypeConstructor@758
}

LazyJavaClassifierType@774['ListIterator<E>'] {
    arguments = ArrayList@775[1] { TypeProjectionImpl@776 }
    classifier = JavaClassImpl@756['ListIterator']
    memberScope = SubstitutingScope@777
    nullable = 'true': Boolean@381
    typeConstructor = DeserializedClassTypeConstructor@778
}

LazyJavaClassifierType@779['ListIterator<E>'] {
    arguments = ArrayList@780[1] { TypeProjectionImpl@781 }
    classifier = JavaClassImpl@767['ListIterator']
    memberScope = SubstitutingScope@782
    nullable = 'true': Boolean@381
    typeConstructor = DeserializedClassTypeConstructor@778
}

LazyJavaClassifierType@783['ListIterator<E>'] {
    arguments = ArrayList@784[1] { TypeProjectionImpl@785 }
    classifier = JavaClassImpl@762['ListIterator']
    memberScope = SubstitutingScope@786
    nullable = 'true': Boolean@381
    typeConstructor = DeserializedClassTypeConstructor@778
}

LazyJavaClassifierType@787['ListIterator<E>'] {
    arguments = ArrayList@788[1] { TypeProjectionImpl@789 }
    classifier = JavaClassImpl@772['ListIterator']
    memberScope = SubstitutingScope@790
    nullable = 'true': Boolean@381
    typeConstructor = DeserializedClassTypeConstructor@778
}

LazyJavaClassifierType@791['Object'] {
    arguments = ArrayList@792[empty]
    classifier = JavaClassImpl@793['Object']
    memberScope = DeserializedClassMemberScope@794
    nullable = 'false': Boolean@341
    typeConstructor = DeserializedClassTypeConstructor@795
}

LazyJavaClassifierType@796['Object'] {
    arguments = ArrayList@797[empty]
    classifier = JavaClassImpl@798['Object']
    memberScope = DeserializedClassMemberScope@794
    nullable = 'false': Boolean@341
    typeConstructor = DeserializedClassTypeConstructor@795
}

LazyJavaClassifierType@799['Object'] {
    arguments = ArrayList@800[empty]
    classifier = JavaClassImpl@801['Object']
    memberScope = DeserializedClassMemberScope@794
    nullable = 'false': Boolean@341
    typeConstructor = DeserializedClassTypeConstructor@795
}

LazyJavaClassifierType@802['Object'] {
    arguments = ArrayList@803[empty]
    classifier = JavaClassImpl@804['Object']
    memberScope = DeserializedClassMemberScope@794
    nullable = 'false': Boolean@341
    typeConstructor = DeserializedClassTypeConstructor@795
}

LazyJavaClassifierType@805['Object'] {
    arguments = ArrayList@806[empty]
    classifier = JavaClassImpl@807['Object']
    memberScope = DeserializedClassMemberScope@794
    nullable = 'false': Boolean@341
    typeConstructor = DeserializedClassTypeConstructor@795
}

LazyJavaClassifierType@808['Object'] {
    arguments = ArrayList@809[empty]
    classifier = JavaClassImpl@810['Object']
    memberScope = DeserializedClassMemberScope@794
    nullable = 'false': Boolean@341
    typeConstructor = DeserializedClassTypeConstructor@795
}

LazyJavaClassifierType@811['Object'] {
    arguments = ArrayList@812[empty]
    classifier = JavaClassImpl@813['Object']
    memberScope = DeserializedClassMemberScope@794
    nullable = 'false': Boolean@341
    typeConstructor = DeserializedClassTypeConstructor@795
}

LazyJavaClassifierType@814['Object'] {
    arguments = ArrayList@815[empty]
    classifier = JavaClassImpl@816['Object']
    memberScope = DeserializedClassMemberScope@794
    nullable = 'false': Boolean@341
    typeConstructor = DeserializedClassTypeConstructor@795
}

LazyJavaClassifierType@817['Object'] {
    arguments = ArrayList@818[empty]
    classifier = JavaClassImpl@819['Object']
    memberScope = DeserializedClassMemberScope@794
    nullable = 'false': Boolean@341
    typeConstructor = DeserializedClassTypeConstructor@795
}

LazyJavaClassifierType@820['Object'] {
    arguments = ArrayList@821[empty]
    classifier = JavaClassImpl@822['Object']
    memberScope = DeserializedClassMemberScope@794
    nullable = 'false': Boolean@341
    typeConstructor = DeserializedClassTypeConstructor@795
}

LazyJavaClassifierType@823['Object'] {
    arguments = ArrayList@824[empty]
    classifier = JavaClassImpl@825['Object']
    memberScope = DeserializedClassMemberScope@794
    nullable = 'false': Boolean@341
    typeConstructor = DeserializedClassTypeConstructor@795
}

LazyJavaClassifierType@826['Object'] {
    arguments = ArrayList@827[empty]
    classifier = JavaClassImpl@828['Object']
    memberScope = DeserializedClassMemberScope@794
    nullable = 'false': Boolean@341
    typeConstructor = DeserializedClassTypeConstructor@795
}

LazyJavaClassifierType@829['Object'] {
    arguments = ArrayList@830[empty]
    classifier = JavaClassImpl@831['Object']
    memberScope = DeserializedClassMemberScope@794
    nullable = 'false': Boolean@341
    typeConstructor = DeserializedClassTypeConstructor@795
}

LazyJavaClassifierType@832['Object'] {
    arguments = ArrayList@833[empty]
    classifier = JavaClassImpl@798['Object']
    memberScope = DeserializedClassMemberScope@794
    nullable = 'true': Boolean@381
    typeConstructor = DeserializedClassTypeConstructor@795
}

LazyJavaClassifierType@834['Object'] {
    arguments = ArrayList@835[empty]
    classifier = JavaClassImpl@793['Object']
    memberScope = DeserializedClassMemberScope@794
    nullable = 'true': Boolean@381
    typeConstructor = DeserializedClassTypeConstructor@795
}

LazyJavaClassifierType@836['Object'] {
    arguments = ArrayList@837[empty]
    classifier = JavaClassImpl@813['Object']
    memberScope = DeserializedClassMemberScope@794
    nullable = 'true': Boolean@381
    typeConstructor = DeserializedClassTypeConstructor@795
}

LazyJavaClassifierType@838['Object'] {
    arguments = ArrayList@839[empty]
    classifier = JavaClassImpl@801['Object']
    memberScope = DeserializedClassMemberScope@794
    nullable = 'true': Boolean@381
    typeConstructor = DeserializedClassTypeConstructor@795
}

LazyJavaClassifierType@840['Object'] {
    arguments = ArrayList@841[empty]
    classifier = JavaClassImpl@822['Object']
    memberScope = DeserializedClassMemberScope@794
    nullable = 'true': Boolean@381
    typeConstructor = DeserializedClassTypeConstructor@795
}

LazyJavaClassifierType@842['Object'] {
    arguments = ArrayList@843[empty]
    classifier = JavaClassImpl@828['Object']
    memberScope = DeserializedClassMemberScope@794
    nullable = 'true': Boolean@381
    typeConstructor = DeserializedClassTypeConstructor@795
}

LazyJavaClassifierType@844['Object'] {
    arguments = ArrayList@845[empty]
    classifier = JavaClassImpl@807['Object']
    memberScope = DeserializedClassMemberScope@794
    nullable = 'true': Boolean@381
    typeConstructor = DeserializedClassTypeConstructor@795
}

LazyJavaClassifierType@846['Object'] {
    arguments = ArrayList@847[empty]
    classifier = JavaClassImpl@819['Object']
    memberScope = DeserializedClassMemberScope@794
    nullable = 'true': Boolean@381
    typeConstructor = DeserializedClassTypeConstructor@795
}

LazyJavaClassifierType@848['Object'] {
    arguments = ArrayList@849[empty]
    classifier = JavaClassImpl@810['Object']
    memberScope = DeserializedClassMemberScope@794
    nullable = 'true': Boolean@381
    typeConstructor = DeserializedClassTypeConstructor@795
}

LazyJavaClassifierType@850['Object'] {
    arguments = ArrayList@851[empty]
    classifier = JavaClassImpl@816['Object']
    memberScope = DeserializedClassMemberScope@794
    nullable = 'true': Boolean@381
    typeConstructor = DeserializedClassTypeConstructor@795
}

LazyJavaClassifierType@852['Object'] {
    arguments = ArrayList@853[empty]
    classifier = JavaClassImpl@831['Object']
    memberScope = DeserializedClassMemberScope@794
    nullable = 'true': Boolean@381
    typeConstructor = DeserializedClassTypeConstructor@795
}

LazyJavaClassifierType@854['Object'] {
    arguments = ArrayList@855[empty]
    classifier = JavaClassImpl@825['Object']
    memberScope = DeserializedClassMemberScope@794
    nullable = 'true': Boolean@381
    typeConstructor = DeserializedClassTypeConstructor@795
}

LazyJavaClassifierType@856['Object'] {
    arguments = ArrayList@857[empty]
    classifier = JavaClassImpl@804['Object']
    memberScope = DeserializedClassMemberScope@794
    nullable = 'true': Boolean@381
    typeConstructor = DeserializedClassTypeConstructor@795
}

LazyJavaClassifierType@858['Object'] {
    classifier = JavaClassImpl@859['Object']
    typeConstructor = DeserializedClassTypeConstructor@795
}

LazyJavaClassifierType@860['Object'] {
    classifier = JavaClassImpl@861['Object']
    typeConstructor = DeserializedClassTypeConstructor@795
}

LazyJavaClassifierType@862['Object'] {
    classifier = JavaClassImpl@863['Object']
    typeConstructor = DeserializedClassTypeConstructor@795
}

LazyJavaClassifierType@864['ObjectInputStream'] {
    arguments = ArrayList@865[empty]
    classifier = JavaClassImpl@866['ObjectInputStream']
    memberScope = LazyJavaClassMemberScope@867
    nullable = 'false': Boolean@341
    typeConstructor = LazyJavaClassTypeConstructor@290['ObjectInputStream']
}

LazyJavaClassifierType@868['ObjectInputStream'] {
    arguments = ArrayList@869[empty]
    classifier = JavaClassImpl@866['ObjectInputStream']
    memberScope = LazyJavaClassMemberScope@867
    nullable = 'true': Boolean@381
    typeConstructor = LazyJavaClassTypeConstructor@290['ObjectInputStream']
}

LazyJavaClassifierType@870['ObjectOutputStream'] {
    arguments = ArrayList@871[empty]
    classifier = JavaClassImpl@872['ObjectOutputStream']
    memberScope = LazyJavaClassMemberScope@873
    nullable = 'false': Boolean@341
    typeConstructor = LazyJavaClassTypeConstructor@292['ObjectOutputStream']
}

LazyJavaClassifierType@874['ObjectOutputStream'] {
    arguments = ArrayList@875[empty]
    classifier = JavaClassImpl@872['ObjectOutputStream']
    memberScope = LazyJavaClassMemberScope@873
    nullable = 'true': Boolean@381
    typeConstructor = LazyJavaClassTypeConstructor@292['ObjectOutputStream']
}

LazyJavaClassifierType@329['RandomAccess'] {
    arguments = ArrayList@876[empty]
    classifier = JavaClassImpl@877['RandomAccess']
    memberScope = LazyJavaClassMemberScope@295
    nullable = 'false': Boolean@341
    typeConstructor = LazyJavaClassTypeConstructor@303['RandomAccess']
}

LazyJavaClassifierType@878['Serializable'] {
    arguments = ArrayList@879[empty]
    classifier = JavaClassImpl@880['Serializable']
    memberScope = LazyJavaClassMemberScope@306
    nullable = 'false': Boolean@341
    typeConstructor = LazyJavaClassTypeConstructor@314['Serializable']
}

LazyJavaClassifierType@881['String'] {
    arguments = ArrayList@882[empty]
    classifier = JavaClassImpl@883['String']
    memberScope = DeserializedClassMemberScope@884
    nullable = 'false': Boolean@341
    typeConstructor = DeserializedClassTypeConstructor@885
}

LazyJavaClassifierType@886['String'] {
    arguments = ArrayList@887[empty]
    classifier = JavaClassImpl@888['String']
    memberScope = DeserializedClassMemberScope@884
    nullable = 'false': Boolean@341
    typeConstructor = DeserializedClassTypeConstructor@885
}

LazyJavaClassifierType@889['String'] {
    arguments = ArrayList@890[empty]
    classifier = JavaClassImpl@891['String']
    memberScope = DeserializedClassMemberScope@884
    nullable = 'false': Boolean@341
    typeConstructor = DeserializedClassTypeConstructor@885
}

LazyJavaClassifierType@892['String'] {
    arguments = ArrayList@893[empty]
    classifier = JavaClassImpl@891['String']
    memberScope = DeserializedClassMemberScope@884
    nullable = 'true': Boolean@381
    typeConstructor = DeserializedClassTypeConstructor@885
}

LazyJavaClassifierType@894['String'] {
    arguments = ArrayList@895[empty]
    classifier = JavaClassImpl@883['String']
    memberScope = DeserializedClassMemberScope@884
    nullable = 'true': Boolean@381
    typeConstructor = DeserializedClassTypeConstructor@885
}

LazyJavaClassifierType@896['String'] {
    arguments = ArrayList@897[empty]
    classifier = JavaClassImpl@888['String']
    memberScope = DeserializedClassMemberScope@884
    nullable = 'true': Boolean@381
    typeConstructor = DeserializedClassTypeConstructor@885
}

LazyJavaClassifierType@898['T'] {
    arguments = ArrayList@899[empty]
    classifier = JavaTypeParameterImpl@900['T']
    nullable = 'false': Boolean@341
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@901
}

LazyJavaClassifierType@902['T'] {
    arguments = ArrayList@903[empty]
    classifier = JavaTypeParameterImpl@904['T']
    nullable = 'false': Boolean@341
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@905
}

LazyJavaClassifierType@906['T'] {
    arguments = ArrayList@907[empty]
    classifier = JavaTypeParameterImpl@908['T']
    nullable = 'false': Boolean@341
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@905
}

LazyJavaClassifierType@909['T'] {
    arguments = ArrayList@910[empty]
    classifier = JavaTypeParameterImpl@911['T']
    nullable = 'false': Boolean@341
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@901
}

LazyJavaClassifierType@912['T'] {
    arguments = ArrayList@913[empty]
    classifier = JavaTypeParameterImpl@900['T']
    nullable = 'true': Boolean@381
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@901
}

LazyJavaClassifierType@914['T'] {
    arguments = ArrayList@915[empty]
    classifier = JavaTypeParameterImpl@911['T']
    nullable = 'true': Boolean@381
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@901
}

LazyJavaClassifierType@916['T'] {
    arguments = ArrayList@917[empty]
    classifier = JavaTypeParameterImpl@908['T']
    nullable = 'true': Boolean@381
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@905
}

LazyJavaClassifierType@918['T'] {
    arguments = ArrayList@919[empty]
    classifier = JavaTypeParameterImpl@904['T']
    nullable = 'true': Boolean@381
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@905
}

LazyJavaPackageFragmentProvider@920 {
    packageFragments('<root>': FqName@921) = LazyJavaPackageFragment@922['<root>']
    packageFragments('A': FqName@923) = null
    packageFragments('ArrayList': FqName@924) = null
    packageFragments('B': FqName@925) = null
    packageFragments('Int': FqName@926) = null
    packageFragments('MyListOfPairs': FqName@927) = null
    packageFragments('Pair': FqName@928) = null
    packageFragments('T': FqName@929) = null
    packageFragments('java': FqName@930) = LazyJavaPackageFragment@931['java']
    packageFragments('java.io': FqName@932) = LazyJavaPackageFragment@933['io']
    packageFragments('java.lang': FqName@934) = LazyJavaPackageFragment@935['lang']
    packageFragments('java.lang.A': FqName@936) = null
    packageFragments('java.lang.ArrayList': FqName@937) = null
    packageFragments('java.lang.B': FqName@938) = null
    packageFragments('java.lang.Int': FqName@939) = null
    packageFragments('java.lang.Pair': FqName@940) = null
    packageFragments('java.lang.T': FqName@941) = null
    packageFragments('java.util': FqName@942) = LazyJavaPackageFragment@943['util']
    packageFragments('java.util.ArrayList': FqName@944) = null
    packageFragments('kotlin': FqName@945) = null
    packageFragments('kotlin.A': FqName@946) = null
    packageFragments('kotlin.ArrayList': FqName@947) = null
    packageFragments('kotlin.B': FqName@948) = null
    packageFragments('kotlin.Int': FqName@949) = null
    packageFragments('kotlin.Pair': FqName@950) = null
    packageFragments('kotlin.T': FqName@951) = null
    packageFragments('kotlin.io': FqName@952) = null
    packageFragments('kotlin.jvm': FqName@953) = null
    topLevelClasses(JavaClassImpl@339['AbstractCollection']) = LazyJavaClassDescriptor@0['AbstractCollection']
    topLevelClasses(JavaClassImpl@344['AbstractList']) = LazyJavaClassDescriptor@84['AbstractList']
    topLevelClasses(JavaClassImpl@954['ArrayList']) = LazyJavaClassDescriptor@161['ArrayList']
    topLevelClasses(JavaClassImpl@866['ObjectInputStream']) = LazyJavaClassDescriptor@289['ObjectInputStream']
    topLevelClasses(JavaClassImpl@872['ObjectOutputStream']) = LazyJavaClassDescriptor@291['ObjectOutputStream']
    topLevelClasses(JavaClassImpl@877['RandomAccess']) = LazyJavaClassDescriptor@293['RandomAccess']
    topLevelClasses(JavaClassImpl@880['Serializable']) = LazyJavaClassDescriptor@304['Serializable']
}

LazyJavaPackageFragment@922['<root>'] {
    classes('ArrayList': Name@955) = null // through LazyPackageFragmentScopeForJavaPackage@956
    classes('Int': Name@957) = null // through LazyPackageFragmentScopeForJavaPackage@956
    classes('MyListOfPairs': Name@958) = null // through LazyPackageFragmentScopeForJavaPackage@956
    classes('java': Name@959) = null // through LazyPackageFragmentScopeForJavaPackage@956
    deserializedPackageScope = Empty@960 // through LazyPackageFragmentScopeForJavaPackage@956
    functions('MyListOfPairs': Name@958) = EmptyList@3[empty] // through LazyPackageFragmentScopeForJavaPackage@956
    functions('java': Name@961) = EmptyList@3[empty] // through LazyPackageFragmentScopeForJavaPackage@956
    memberIndex = computeMemberIndex$1@962 // through LazyPackageFragmentScopeForJavaPackage@956
}

LazyJavaPackageFragment@931['java'] {
    classes('lang': Name@963) = null // through LazyPackageFragmentScopeForJavaPackage@964
    classes('util': Name@965) = null // through LazyPackageFragmentScopeForJavaPackage@964
    deserializedPackageScope = Empty@960 // through LazyPackageFragmentScopeForJavaPackage@964
    functions('lang': Name@966) = EmptyList@3[empty] // through LazyPackageFragmentScopeForJavaPackage@964
    functions('util': Name@967) = EmptyList@3[empty] // through LazyPackageFragmentScopeForJavaPackage@964
    memberIndex = computeMemberIndex$1@968 // through LazyPackageFragmentScopeForJavaPackage@964
}

LazyJavaPackageFragment@935['lang'] {
    classes('MyListOfPairs': Name@958) = null // through LazyPackageFragmentScopeForJavaPackage@969
    deserializedPackageScope = Empty@960 // through LazyPackageFragmentScopeForJavaPackage@969
    functions('MyListOfPairs': Name@958) = EmptyList@3[empty] // through LazyPackageFragmentScopeForJavaPackage@969
    memberIndex = computeMemberIndex$1@970 // through LazyPackageFragmentScopeForJavaPackage@969
}

LazyJavaPackageFragment@943['util'] {
    classes('ArrayList': Name@971) = LazyJavaClassDescriptor@161['ArrayList'] // through LazyPackageFragmentScopeForJavaPackage@972
    deserializedPackageScope = Empty@960 // through LazyPackageFragmentScopeForJavaPackage@972
    functions('ArrayList': Name@973) = EmptyList@3[empty] // through LazyPackageFragmentScopeForJavaPackage@972
    memberIndex = computeMemberIndex$1@974 // through LazyPackageFragmentScopeForJavaPackage@972
}

LazyJavaTypeParameterDescriptor@316['E'] {
    defaultType = JetTypeImpl@975['E']
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@508
    upperBounds = LinkedHashSet@976[1] { NullableType@977 }
    upperBoundsAsType = NullableType@977
}

LazyJavaTypeParameterDescriptor@325['E'] {
    defaultType = JetTypeImpl@978['E']
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@465
    upperBounds = LinkedHashSet@979[1] { NullableType@980 }
    upperBoundsAsType = NullableType@980
}

LazyJavaTypeParameterDescriptor@320['E'] {
    defaultType = JetTypeImpl@981['E']
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@461
    upperBounds = LinkedHashSet@982[1] { NullableType@983 }
    upperBoundsAsType = NullableType@983
}

LazyJavaTypeParameterDescriptor@984['T'] {
    defaultType = JetTypeImpl@985['T']
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@901
    upperBounds = LinkedHashSet@986[1] { NullableType@987 }
    upperBoundsAsType = NullableType@987
}

LazyJavaTypeParameterDescriptor@988['T'] {
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@905
    upperBounds = LinkedHashSet@989[1] { NullableType@990 }
    upperBoundsAsType = NullableType@990
}

LazyJavaTypeParameterResolver@991 {
    resolve(JavaTypeParameterImpl@992['E']) = LazyJavaTypeParameterDescriptor@320['E']
}

LazyJavaTypeParameterResolver@993 {
    resolve(JavaTypeParameterImpl@994['E']) = LazyJavaTypeParameterDescriptor@325['E']
}

LazyJavaTypeParameterResolver@995 {
    resolve(JavaTypeParameterImpl@996['E']) = LazyJavaTypeParameterDescriptor@316['E']
}

LazyJavaTypeParameterResolver@997 {
    resolve(JavaTypeParameterImpl@586['E']) = null
}

LazyJavaTypeParameterResolver@998 {
    resolve(JavaTypeParameterImpl@559['E']) = null
}

LazyJavaTypeParameterResolver@999 {
    resolve(JavaTypeParameterImpl@511['E']) = null
}

LazyJavaTypeParameterResolver@1000 {
    resolve(JavaTypeParameterImpl@501['E']) = null
}

LazyJavaTypeParameterResolver@1001 {
    resolve(JavaTypeParameterImpl@498['E']) = null
}

LazyJavaTypeParameterResolver@1002 {
    resolve(JavaTypeParameterImpl@547['E']) = null
}

LazyJavaTypeParameterResolver@1003 {
    resolve(JavaTypeParameterImpl@577['E']) = null
}

LazyJavaTypeParameterResolver@1004 {
    resolve(JavaTypeParameterImpl@565['E']) = null
}

LazyJavaTypeParameterResolver@1005 {
    resolve(JavaTypeParameterImpl@574['E']) = null
}

LazyJavaTypeParameterResolver@1006 {
    resolve(JavaTypeParameterImpl@571['E']) = null
}

LazyJavaTypeParameterResolver@1007 {
    resolve(JavaTypeParameterImpl@474['E']) = null
}

LazyJavaTypeParameterResolver@1008 {
    resolve(JavaTypeParameterImpl@598['E']) = null
}

LazyJavaTypeParameterResolver@1009 {
    resolve(JavaTypeParameterImpl@568['E']) = null
}

LazyJavaTypeParameterResolver@1010 {
    resolve(JavaTypeParameterImpl@480['E']) = null
}

LazyJavaTypeParameterResolver@1011 {
    resolve(JavaTypeParameterImpl@468['E']) = null
}

LazyJavaTypeParameterResolver@1012 {
    resolve(JavaTypeParameterImpl@526['E']) = null
}

LazyJavaTypeParameterResolver@1013 {
    resolve(JavaTypeParameterImpl@535['E']) = null
}

LazyJavaTypeParameterResolver@1014 {
    resolve(JavaTypeParameterImpl@595['E']) = null
}

LazyJavaTypeParameterResolver@1015 {
    resolve(JavaTypeParameterImpl@589['E']) = null
}

LazyJavaTypeParameterResolver@1016 {
    resolve(JavaTypeParameterImpl@580['E']) = null
}

LazyJavaTypeParameterResolver@1017 {
    resolve(JavaTypeParameterImpl@464['E']) = null
}

LazyJavaTypeParameterResolver@1018 {
    resolve(JavaTypeParameterImpl@471['E']) = null
}

LazyJavaTypeParameterResolver@1019 {
    resolve(JavaTypeParameterImpl@517['E']) = null
}

LazyJavaTypeParameterResolver@1020 {
    resolve(JavaTypeParameterImpl@489['E']) = null
}

LazyJavaTypeParameterResolver@1021 {
    resolve(JavaTypeParameterImpl@601['E']) = null
}

LazyJavaTypeParameterResolver@1022 {
    resolve(JavaTypeParameterImpl@1023['T']) = LazyJavaTypeParameterDescriptor@988['T']
}

LazyJavaTypeParameterResolver@1024 {
    resolve(JavaTypeParameterImpl@1025['T']) = LazyJavaTypeParameterDescriptor@984['T']
}

ResolutionTaskHolder@1026 {
    <name not found> = ArrayList@1027[1] { ResolutionCandidate@1028 }
    <name not found> = ArrayList@1029[1] { ResolutionCandidate@1028 }
    <name not found> = EmptyList@3[empty]
    <name not found> = EmptyList@3[empty]
    <name not found> = EmptyList@3[empty]
    <name not found> = EmptyList@3[empty]
}

ResolutionTaskHolder@1030 {
    <name not found> = ArrayList@1031[3] { ResolutionCandidate@1032, ResolutionCandidate@1033, ResolutionCandidate@1034 }
    <name not found> = ArrayList@1035[3] { ResolutionCandidate@1032, ResolutionCandidate@1033, ResolutionCandidate@1034 }
}
