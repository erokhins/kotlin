DescriptorResolver@0 {
    <name not found> = JetTypeImpl@1['Int']
    <name not found> = JetTypeImpl@2['String']
}

LazyJavaClassDescriptor@3['Exception'] {
    constructors = ArrayList@4[5] { JavaConstructorDescriptor@5['<init>'], JavaConstructorDescriptor@6['<init>'], JavaConstructorDescriptor@7['<init>'], ... } // through LazyJavaClassMemberScope@8
    defaultType = JetTypeImpl@9['Exception']
    functionTypeForSamInterface = null
    typeConstructor = LazyJavaClassTypeConstructor@10['Exception']
}

LazyJavaClassTypeConstructor@10['Exception'] {
    parameters = ArrayList@11[empty]
    supertypes = ArrayList@12[1] { LazyJavaClassifierType@13['Throwable'] }
}

LazyJavaClassifierType@14['String'] {
    arguments = ArrayList@15[empty]
    classifier = JavaClassImpl@16['String']
    nullable = 'false': Boolean@17
    typeConstructor = DeserializedClassTypeConstructor@18
}

LazyJavaClassifierType@19['String'] {
    arguments = ArrayList@20[empty]
    classifier = JavaClassImpl@21['String']
    nullable = 'false': Boolean@17
    typeConstructor = DeserializedClassTypeConstructor@18
}

LazyJavaClassifierType@22['String'] {
    arguments = ArrayList@23[empty]
    classifier = JavaClassImpl@24['String']
    nullable = 'false': Boolean@17
    typeConstructor = DeserializedClassTypeConstructor@18
}

LazyJavaClassifierType@25['String'] {
    arguments = ArrayList@26[empty]
    classifier = JavaClassImpl@16['String']
    nullable = 'true': Boolean@27
    typeConstructor = DeserializedClassTypeConstructor@18
}

LazyJavaClassifierType@28['String'] {
    arguments = ArrayList@29[empty]
    classifier = JavaClassImpl@24['String']
    nullable = 'true': Boolean@27
    typeConstructor = DeserializedClassTypeConstructor@18
}

LazyJavaClassifierType@30['String'] {
    arguments = ArrayList@31[empty]
    classifier = JavaClassImpl@21['String']
    nullable = 'true': Boolean@27
    typeConstructor = DeserializedClassTypeConstructor@18
}

LazyJavaClassifierType@32['Throwable'] {
    arguments = ArrayList@33[empty]
    classifier = JavaClassImpl@34['Throwable']
    nullable = 'false': Boolean@17
    typeConstructor = DeserializedClassTypeConstructor@35
}

LazyJavaClassifierType@36['Throwable'] {
    arguments = ArrayList@37[empty]
    classifier = JavaClassImpl@38['Throwable']
    nullable = 'false': Boolean@17
    typeConstructor = DeserializedClassTypeConstructor@35
}

LazyJavaClassifierType@39['Throwable'] {
    arguments = ArrayList@40[empty]
    classifier = JavaClassImpl@41['Throwable']
    nullable = 'false': Boolean@17
    typeConstructor = DeserializedClassTypeConstructor@35
}

LazyJavaClassifierType@42['Throwable'] {
    arguments = ArrayList@43[empty]
    classifier = JavaClassImpl@34['Throwable']
    nullable = 'true': Boolean@27
    typeConstructor = DeserializedClassTypeConstructor@35
}

LazyJavaClassifierType@44['Throwable'] {
    arguments = ArrayList@45[empty]
    classifier = JavaClassImpl@38['Throwable']
    nullable = 'true': Boolean@27
    typeConstructor = DeserializedClassTypeConstructor@35
}

LazyJavaClassifierType@46['Throwable'] {
    arguments = ArrayList@47[empty]
    classifier = JavaClassImpl@41['Throwable']
    nullable = 'true': Boolean@27
    typeConstructor = DeserializedClassTypeConstructor@35
}

LazyJavaClassifierType@13['Throwable'] {
    arguments = ArrayList@48[empty]
    classifier = JavaClassImpl@49['Throwable']
    typeConstructor = DeserializedClassTypeConstructor@35
}

LazyJavaPackageFragmentProvider@50 {
    packageFragments('<root>': FqName@51) = LazyJavaPackageFragment@52['<root>']
    packageFragments('Int': FqName@53) = null
    packageFragments('List': FqName@54) = null
    packageFragments('String': FqName@55) = null
    packageFragments('T': FqName@56) = null
    packageFragments('h': FqName@57) = null
    packageFragments('h.Int': FqName@58) = null
    packageFragments('h.List': FqName@59) = null
    packageFragments('h.String': FqName@60) = null
    packageFragments('h.T': FqName@61) = null
    packageFragments('java': FqName@62) = LazyJavaPackageFragment@63['java']
    packageFragments('java.lang': FqName@64) = LazyJavaPackageFragment@65['lang']
    packageFragments('java.lang.Int': FqName@66) = null
    packageFragments('java.lang.List': FqName@67) = null
    packageFragments('java.lang.String': FqName@68) = null
    packageFragments('java.lang.T': FqName@69) = null
    packageFragments('kotlin': FqName@70) = null
    packageFragments('kotlin.Int': FqName@71) = null
    packageFragments('kotlin.List': FqName@72) = null
    packageFragments('kotlin.String': FqName@73) = null
    packageFragments('kotlin.T': FqName@74) = null
    packageFragments('kotlin.io': FqName@75) = null
    packageFragments('kotlin.jvm': FqName@76) = null
    topLevelClasses(JavaClassImpl@77['Exception']) = LazyJavaClassDescriptor@3['Exception']
}

LazyJavaPackageFragment@63['java'] {
    classes('lang': Name@78) = null // through LazyPackageFragmentScopeForJavaPackage@79
    deserializedPackageScope = Empty@80 // through LazyPackageFragmentScopeForJavaPackage@79
    functions('lang': Name@81) = EmptyList@82[empty] // through LazyPackageFragmentScopeForJavaPackage@79
    memberIndex = computeMemberIndex$1@83 // through LazyPackageFragmentScopeForJavaPackage@79
}

LazyJavaPackageFragment@65['lang'] {
    classes('Exception': Name@84) = LazyJavaClassDescriptor@3['Exception'] // through LazyPackageFragmentScopeForJavaPackage@85
    classes('emptyList': Name@86) = null // through LazyPackageFragmentScopeForJavaPackage@85
    classes('foo': Name@87) = null // through LazyPackageFragmentScopeForJavaPackage@85
    deserializedPackageScope = Empty@80 // through LazyPackageFragmentScopeForJavaPackage@85
    functions('Exception': Name@84) = EmptyList@82[empty] // through LazyPackageFragmentScopeForJavaPackage@85
    functions('emptyList': Name@86) = EmptyList@82[empty] // through LazyPackageFragmentScopeForJavaPackage@85
    functions('foo': Name@87) = EmptyList@82[empty] // through LazyPackageFragmentScopeForJavaPackage@85
    memberIndex = computeMemberIndex$1@88 // through LazyPackageFragmentScopeForJavaPackage@85
}

ResolutionTaskHolder@89 {
    <name not found> = ArrayList@90[1] { ResolutionCandidate@91 }
    <name not found> = ArrayList@92[1] { ResolutionCandidate@91 }
    <name not found> = EmptyList@82[empty]
    <name not found> = EmptyList@82[empty]
    <name not found> = EmptyList@82[empty]
    <name not found> = EmptyList@82[empty]
}

ResolutionTaskHolder@93 {
    <name not found> = ArrayList@94[1] { ResolutionCandidate@95 }
    <name not found> = ArrayList@96[1] { ResolutionCandidate@95 }
}

ResolutionTaskHolder@97 {
    <name not found> = ArrayList@98[1] { ResolutionCandidate@99 }
    <name not found> = ArrayList@100[1] { ResolutionCandidate@99 }
}

ResolutionTaskHolder@101 {
    <name not found> = ArrayList@102[2] { ResolutionCandidate@103, ResolutionCandidate@104 }
    <name not found> = ArrayList@105[2] { ResolutionCandidate@103, ResolutionCandidate@104 }
    <name not found> = EmptyList@82[empty]
    <name not found> = EmptyList@82[empty]
    <name not found> = EmptyList@82[empty]
    <name not found> = EmptyList@82[empty]
    <name not found> = EmptyList@82[empty]
    <name not found> = EmptyList@82[empty]
    <name not found> = EmptyList@82[empty]
    <name not found> = EmptyList@82[empty]
    <name not found> = EmptyList@82[empty]
    <name not found> = EmptyList@82[empty]
    <name not found> = EmptyList@82[empty]
    <name not found> = EmptyList@82[empty]
    <name not found> = EmptyList@82[empty]
    <name not found> = EmptyList@82[empty]
    <name not found> = EmptyList@82[empty]
    <name not found> = EmptyList@82[empty]
    <name not found> = EmptyList@82[empty]
    <name not found> = EmptyList@82[empty]
}

ResolutionTaskHolder@106 {
    <name not found> = ArrayList@107[4] { ResolutionCandidate@108, ResolutionCandidate@109, ResolutionCandidate@110, ... }
    <name not found> = ArrayList@111[5] { ResolutionCandidate@108, ResolutionCandidate@109, ResolutionCandidate@110, ... }
    <name not found> = EmptyList@82[empty]
    <name not found> = EmptyList@82[empty]
    <name not found> = EmptyList@82[empty]
    <name not found> = EmptyList@82[empty]
}
