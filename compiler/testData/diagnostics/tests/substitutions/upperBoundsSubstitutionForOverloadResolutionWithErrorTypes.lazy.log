LazyJavaClassDescriptor@0['Exception'] {
    constructors = ArrayList@1[5] { JavaConstructorDescriptor@2['<init>'], JavaConstructorDescriptor@3['<init>'], JavaConstructorDescriptor@4['<init>'], ... } // through LazyJavaClassMemberScope@5
    defaultType = JetTypeImpl@6['Exception']
    functionTypeForSamInterface = null
    typeConstructor = LazyJavaClassTypeConstructor@7['Exception']
}

LazyJavaClassTypeConstructor@7['Exception'] {
    parameters = ArrayList@8[empty]
    supertypes = ArrayList@9[1] { LazyJavaClassifierType@10['Throwable'] }
}

LazyJavaClassifierType@11['String'] {
    arguments = ArrayList@12[empty]
    classifier = JavaClassImpl@13['String']
    nullable = 'false': Boolean@14
    typeConstructor = DeserializedClassTypeConstructor@15
}

LazyJavaClassifierType@16['String'] {
    arguments = ArrayList@17[empty]
    classifier = JavaClassImpl@18['String']
    nullable = 'false': Boolean@14
    typeConstructor = DeserializedClassTypeConstructor@15
}

LazyJavaClassifierType@19['String'] {
    arguments = ArrayList@20[empty]
    classifier = JavaClassImpl@21['String']
    nullable = 'false': Boolean@14
    typeConstructor = DeserializedClassTypeConstructor@15
}

LazyJavaClassifierType@22['String'] {
    arguments = ArrayList@23[empty]
    classifier = JavaClassImpl@18['String']
    nullable = 'true': Boolean@24
    typeConstructor = DeserializedClassTypeConstructor@15
}

LazyJavaClassifierType@25['String'] {
    arguments = ArrayList@26[empty]
    classifier = JavaClassImpl@21['String']
    nullable = 'true': Boolean@24
    typeConstructor = DeserializedClassTypeConstructor@15
}

LazyJavaClassifierType@27['String'] {
    arguments = ArrayList@28[empty]
    classifier = JavaClassImpl@13['String']
    nullable = 'true': Boolean@24
    typeConstructor = DeserializedClassTypeConstructor@15
}

LazyJavaClassifierType@29['Throwable'] {
    arguments = ArrayList@30[empty]
    classifier = JavaClassImpl@31['Throwable']
    nullable = 'false': Boolean@14
    typeConstructor = DeserializedClassTypeConstructor@32
}

LazyJavaClassifierType@33['Throwable'] {
    arguments = ArrayList@34[empty]
    classifier = JavaClassImpl@35['Throwable']
    nullable = 'false': Boolean@14
    typeConstructor = DeserializedClassTypeConstructor@32
}

LazyJavaClassifierType@36['Throwable'] {
    arguments = ArrayList@37[empty]
    classifier = JavaClassImpl@38['Throwable']
    nullable = 'false': Boolean@14
    typeConstructor = DeserializedClassTypeConstructor@32
}

LazyJavaClassifierType@39['Throwable'] {
    arguments = ArrayList@40[empty]
    classifier = JavaClassImpl@35['Throwable']
    nullable = 'true': Boolean@24
    typeConstructor = DeserializedClassTypeConstructor@32
}

LazyJavaClassifierType@41['Throwable'] {
    arguments = ArrayList@42[empty]
    classifier = JavaClassImpl@38['Throwable']
    nullable = 'true': Boolean@24
    typeConstructor = DeserializedClassTypeConstructor@32
}

LazyJavaClassifierType@43['Throwable'] {
    arguments = ArrayList@44[empty]
    classifier = JavaClassImpl@31['Throwable']
    nullable = 'true': Boolean@24
    typeConstructor = DeserializedClassTypeConstructor@32
}

LazyJavaClassifierType@10['Throwable'] {
    arguments = ArrayList@45[empty]
    classifier = JavaClassImpl@46['Throwable']
    typeConstructor = DeserializedClassTypeConstructor@32
}

LazyJavaPackageFragmentProvider@47 {
    packageFragments('<root>': FqName@48) = LazyJavaPackageFragment@49['<root>']
    packageFragments('Collection': FqName@50) = null
    packageFragments('List': FqName@51) = null
    packageFragments('List1': FqName@52) = null
    packageFragments('List2': FqName@53) = null
    packageFragments('T': FqName@54) = null
    packageFragments('java': FqName@55) = LazyJavaPackageFragment@56['java']
    packageFragments('java.lang': FqName@57) = LazyJavaPackageFragment@58['lang']
    packageFragments('java.lang.Collection': FqName@59) = null
    packageFragments('java.lang.List': FqName@60) = null
    packageFragments('java.lang.List1': FqName@61) = null
    packageFragments('java.lang.List2': FqName@62) = null
    packageFragments('java.lang.T': FqName@63) = null
    packageFragments('kotlin': FqName@64) = null
    packageFragments('kotlin.Collection': FqName@65) = null
    packageFragments('kotlin.List': FqName@66) = null
    packageFragments('kotlin.List1': FqName@67) = null
    packageFragments('kotlin.List2': FqName@68) = null
    packageFragments('kotlin.T': FqName@69) = null
    packageFragments('kotlin.io': FqName@70) = null
    packageFragments('kotlin.jvm': FqName@71) = null
    topLevelClasses(JavaClassImpl@72['Exception']) = LazyJavaClassDescriptor@0['Exception']
}

LazyJavaPackageFragment@49['<root>'] {
    classes('Collection': Name@73) = null // through LazyPackageFragmentScopeForJavaPackage@74
    classes('Exception': Name@75) = null // through LazyPackageFragmentScopeForJavaPackage@74
    classes('List': Name@76) = null // through LazyPackageFragmentScopeForJavaPackage@74
    classes('List1': Name@77) = null // through LazyPackageFragmentScopeForJavaPackage@74
    classes('List2': Name@78) = null // through LazyPackageFragmentScopeForJavaPackage@74
    classes('f1': Name@79) = null // through LazyPackageFragmentScopeForJavaPackage@74
    deserializedPackageScope = Empty@80 // through LazyPackageFragmentScopeForJavaPackage@74
    functions('Exception': Name@75) = EmptyList@81[empty] // through LazyPackageFragmentScopeForJavaPackage@74
    functions('f1': Name@79) = EmptyList@81[empty] // through LazyPackageFragmentScopeForJavaPackage@74
    memberIndex = computeMemberIndex$1@82 // through LazyPackageFragmentScopeForJavaPackage@74
}

LazyJavaPackageFragment@56['java'] {
    classes('lang': Name@83) = null // through LazyPackageFragmentScopeForJavaPackage@84
    deserializedPackageScope = Empty@80 // through LazyPackageFragmentScopeForJavaPackage@84
    functions('lang': Name@85) = EmptyList@81[empty] // through LazyPackageFragmentScopeForJavaPackage@84
    memberIndex = computeMemberIndex$1@86 // through LazyPackageFragmentScopeForJavaPackage@84
}

LazyJavaPackageFragment@58['lang'] {
    classes('Exception': Name@75) = LazyJavaClassDescriptor@0['Exception'] // through LazyPackageFragmentScopeForJavaPackage@87
    classes('List1': Name@77) = null // through LazyPackageFragmentScopeForJavaPackage@87
    classes('List2': Name@78) = null // through LazyPackageFragmentScopeForJavaPackage@87
    classes('f1': Name@79) = null // through LazyPackageFragmentScopeForJavaPackage@87
    deserializedPackageScope = Empty@80 // through LazyPackageFragmentScopeForJavaPackage@87
    functions('Exception': Name@75) = EmptyList@81[empty] // through LazyPackageFragmentScopeForJavaPackage@87
    functions('f1': Name@79) = EmptyList@81[empty] // through LazyPackageFragmentScopeForJavaPackage@87
    memberIndex = computeMemberIndex$1@88 // through LazyPackageFragmentScopeForJavaPackage@87
}

ResolutionTaskHolder@89 {
    <name not found> = ArrayList@90[1] { ResolutionCandidate@91 }
    <name not found> = ArrayList@92[1] { ResolutionCandidate@91 }
}

ResolutionTaskHolder@93 {
    <name not found> = ArrayList@94[3] { ResolutionCandidate@95, ResolutionCandidate@96, ResolutionCandidate@97 }
    <name not found> = ArrayList@98[3] { ResolutionCandidate@95, ResolutionCandidate@96, ResolutionCandidate@97 }
    <name not found> = EmptyList@81[empty]
    <name not found> = EmptyList@81[empty]
    <name not found> = EmptyList@81[empty]
    <name not found> = EmptyList@81[empty]
}

ResolutionTaskHolder@99 {
    <name not found> = ArrayList@100[4] { ResolutionCandidate@101, ResolutionCandidate@102, ResolutionCandidate@103, ... }
    <name not found> = ArrayList@104[5] { ResolutionCandidate@101, ResolutionCandidate@102, ResolutionCandidate@103, ... }
    <name not found> = EmptyList@81[empty]
    <name not found> = EmptyList@81[empty]
    <name not found> = EmptyList@81[empty]
    <name not found> = EmptyList@81[empty]
}

ResolutionTaskHolder@105 {
    <name not found> = ArrayList@106[4] { ResolutionCandidate@107, ResolutionCandidate@108, ResolutionCandidate@109, ... }
    <name not found> = ArrayList@110[5] { ResolutionCandidate@107, ResolutionCandidate@108, ResolutionCandidate@109, ... }
    <name not found> = EmptyList@81[empty]
    <name not found> = EmptyList@81[empty]
    <name not found> = EmptyList@81[empty]
    <name not found> = EmptyList@81[empty]
}

ResolutionTaskHolder@111 {
    <name not found> = ArrayList@112[4] { ResolutionCandidate@113, ResolutionCandidate@114, ResolutionCandidate@115, ... }
    <name not found> = ArrayList@116[5] { ResolutionCandidate@113, ResolutionCandidate@114, ResolutionCandidate@115, ... }
    <name not found> = EmptyList@81[empty]
    <name not found> = EmptyList@81[empty]
    <name not found> = EmptyList@81[empty]
    <name not found> = EmptyList@81[empty]
}
