DescriptorResolver@0 {
    <name not found> = JetTypeImpl@1['Function0<1>']
    <name not found> = JetTypeImpl@2['Nothing']
    <name not found> = JetTypeImpl@3['Nothing']
}

LazyJavaClassDescriptor@4['Exception'] {
    constructors = ArrayList@5[5] { JavaConstructorDescriptor@6['<init>'], JavaConstructorDescriptor@7['<init>'], JavaConstructorDescriptor@8['<init>'], ... } // through LazyJavaClassMemberScope@9
    defaultType = JetTypeImpl@10['Exception']
    functionTypeForSamInterface = null
    typeConstructor = LazyJavaClassTypeConstructor@11['Exception']
}

LazyJavaClassTypeConstructor@11['Exception'] {
    parameters = ArrayList@12[empty]
    supertypes = ArrayList@13[1] { LazyJavaClassifierType@14['Throwable'] }
}

LazyJavaClassifierType@15['String'] {
    arguments = ArrayList@16[empty]
    classifier = JavaClassImpl@17['String']
    nullable = 'false': Boolean@18
    typeConstructor = DeserializedClassTypeConstructor@19
}

LazyJavaClassifierType@20['String'] {
    arguments = ArrayList@21[empty]
    classifier = JavaClassImpl@22['String']
    nullable = 'false': Boolean@18
    typeConstructor = DeserializedClassTypeConstructor@19
}

LazyJavaClassifierType@23['String'] {
    arguments = ArrayList@24[empty]
    classifier = JavaClassImpl@25['String']
    nullable = 'false': Boolean@18
    typeConstructor = DeserializedClassTypeConstructor@19
}

LazyJavaClassifierType@26['String'] {
    arguments = ArrayList@27[empty]
    classifier = JavaClassImpl@22['String']
    nullable = 'true': Boolean@28
    typeConstructor = DeserializedClassTypeConstructor@19
}

LazyJavaClassifierType@29['String'] {
    arguments = ArrayList@30[empty]
    classifier = JavaClassImpl@25['String']
    nullable = 'true': Boolean@28
    typeConstructor = DeserializedClassTypeConstructor@19
}

LazyJavaClassifierType@31['String'] {
    arguments = ArrayList@32[empty]
    classifier = JavaClassImpl@17['String']
    nullable = 'true': Boolean@28
    typeConstructor = DeserializedClassTypeConstructor@19
}

LazyJavaClassifierType@33['Throwable'] {
    arguments = ArrayList@34[empty]
    classifier = JavaClassImpl@35['Throwable']
    nullable = 'false': Boolean@18
    typeConstructor = DeserializedClassTypeConstructor@36
}

LazyJavaClassifierType@37['Throwable'] {
    arguments = ArrayList@38[empty]
    classifier = JavaClassImpl@39['Throwable']
    nullable = 'false': Boolean@18
    typeConstructor = DeserializedClassTypeConstructor@36
}

LazyJavaClassifierType@40['Throwable'] {
    arguments = ArrayList@41[empty]
    classifier = JavaClassImpl@42['Throwable']
    nullable = 'false': Boolean@18
    typeConstructor = DeserializedClassTypeConstructor@36
}

LazyJavaClassifierType@43['Throwable'] {
    arguments = ArrayList@44[empty]
    classifier = JavaClassImpl@39['Throwable']
    nullable = 'true': Boolean@28
    typeConstructor = DeserializedClassTypeConstructor@36
}

LazyJavaClassifierType@45['Throwable'] {
    arguments = ArrayList@46[empty]
    classifier = JavaClassImpl@42['Throwable']
    nullable = 'true': Boolean@28
    typeConstructor = DeserializedClassTypeConstructor@36
}

LazyJavaClassifierType@47['Throwable'] {
    arguments = ArrayList@48[empty]
    classifier = JavaClassImpl@35['Throwable']
    nullable = 'true': Boolean@28
    typeConstructor = DeserializedClassTypeConstructor@36
}

LazyJavaClassifierType@14['Throwable'] {
    arguments = ArrayList@49[empty]
    classifier = JavaClassImpl@50['Throwable']
    typeConstructor = DeserializedClassTypeConstructor@36
}

LazyJavaPackageFragmentProvider@51 {
    packageFragments('<root>': FqName@52) = LazyJavaPackageFragment@53['<root>']
    packageFragments('Int': FqName@54) = null
    packageFragments('Nothing': FqName@55) = null
    packageFragments('java': FqName@56) = LazyJavaPackageFragment@57['java']
    packageFragments('java.lang': FqName@58) = LazyJavaPackageFragment@59['lang']
    packageFragments('java.lang.Int': FqName@60) = null
    packageFragments('java.lang.Nothing': FqName@61) = null
    packageFragments('kotlin': FqName@62) = null
    packageFragments('kotlin.Int': FqName@63) = null
    packageFragments('kotlin.Nothing': FqName@64) = null
    packageFragments('kotlin.io': FqName@65) = null
    packageFragments('kotlin.jvm': FqName@66) = null
    topLevelClasses(JavaClassImpl@67['Exception']) = LazyJavaClassDescriptor@4['Exception']
}

LazyJavaPackageFragment@53['<root>'] {
    classes('Exception': Name@68) = null // through LazyPackageFragmentScopeForJavaPackage@69
    classes('Int': Name@70) = null // through LazyPackageFragmentScopeForJavaPackage@69
    classes('Nothing': Name@71) = null // through LazyPackageFragmentScopeForJavaPackage@69
    classes('invoke': Name@72) = null // through LazyPackageFragmentScopeForJavaPackage@69
    classes('todo': Name@73) = null // through LazyPackageFragmentScopeForJavaPackage@69
    deserializedPackageScope = Empty@74 // through LazyPackageFragmentScopeForJavaPackage@69
    functions('Exception': Name@68) = EmptyList@75[empty] // through LazyPackageFragmentScopeForJavaPackage@69
    functions('invoke': Name@72) = EmptyList@75[empty] // through LazyPackageFragmentScopeForJavaPackage@69
    functions('todo': Name@73) = EmptyList@75[empty] // through LazyPackageFragmentScopeForJavaPackage@69
    memberIndex = computeMemberIndex$1@76 // through LazyPackageFragmentScopeForJavaPackage@69
}

LazyJavaPackageFragment@57['java'] {
    classes('lang': Name@77) = null // through LazyPackageFragmentScopeForJavaPackage@78
    deserializedPackageScope = Empty@74 // through LazyPackageFragmentScopeForJavaPackage@78
    functions('lang': Name@79) = EmptyList@75[empty] // through LazyPackageFragmentScopeForJavaPackage@78
    memberIndex = computeMemberIndex$1@80 // through LazyPackageFragmentScopeForJavaPackage@78
}

LazyJavaPackageFragment@59['lang'] {
    classes('Exception': Name@68) = LazyJavaClassDescriptor@4['Exception'] // through LazyPackageFragmentScopeForJavaPackage@81
    classes('invoke': Name@72) = null // through LazyPackageFragmentScopeForJavaPackage@81
    classes('todo': Name@73) = null // through LazyPackageFragmentScopeForJavaPackage@81
    deserializedPackageScope = Empty@74 // through LazyPackageFragmentScopeForJavaPackage@81
    functions('Exception': Name@68) = EmptyList@75[empty] // through LazyPackageFragmentScopeForJavaPackage@81
    functions('invoke': Name@72) = EmptyList@75[empty] // through LazyPackageFragmentScopeForJavaPackage@81
    functions('todo': Name@73) = EmptyList@75[empty] // through LazyPackageFragmentScopeForJavaPackage@81
    memberIndex = computeMemberIndex$1@82 // through LazyPackageFragmentScopeForJavaPackage@81
}

ResolutionTaskHolder@83 {
    <name not found> = ArrayList@84[1] { ResolutionCandidate@85 }
    <name not found> = ArrayList@86[1] { ResolutionCandidate@85 }
    <name not found> = EmptyList@75[empty]
    <name not found> = EmptyList@75[empty]
    <name not found> = EmptyList@75[empty]
    <name not found> = EmptyList@75[empty]
}

ResolutionTaskHolder@87 {
    <name not found> = ArrayList@88[1] { ResolutionCandidate@89 }
    <name not found> = ArrayList@90[1] { ResolutionCandidate@89 }
    <name not found> = EmptyList@75[empty]
    <name not found> = EmptyList@75[empty]
    <name not found> = EmptyList@75[empty]
    <name not found> = EmptyList@75[empty]
}

ResolutionTaskHolder@91 {
    <name not found> = ArrayList@92[1] { ResolutionCandidate@93 }
    <name not found> = ArrayList@94[1] { ResolutionCandidate@93 }
    <name not found> = EmptyList@75[empty]
    <name not found> = EmptyList@75[empty]
}

ResolutionTaskHolder@95 {
    <name not found> = ArrayList@96[1] { ResolutionCandidate@97 }
    <name not found> = ArrayList@98[1] { ResolutionCandidate@97 }
    <name not found> = EmptyList@75[empty]
    <name not found> = EmptyList@75[empty]
}

ResolutionTaskHolder@99 {
    <name not found> = ArrayList@100[1] { ResolutionCandidate@101 }
    <name not found> = ArrayList@102[1] { ResolutionCandidate@101 }
}

ResolutionTaskHolder@103 {
    <name not found> = ArrayList@104[4] { ResolutionCandidate@105, ResolutionCandidate@106, ResolutionCandidate@107, ... }
    <name not found> = ArrayList@108[5] { ResolutionCandidate@105, ResolutionCandidate@106, ResolutionCandidate@107, ... }
    <name not found> = EmptyList@75[empty]
    <name not found> = EmptyList@75[empty]
    <name not found> = EmptyList@75[empty]
    <name not found> = EmptyList@75[empty]
}
