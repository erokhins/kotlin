DescriptorResolver@0 {
    <name not found> = JetTypeImpl@1['Nothing']
}

LazyJavaClassDescriptor@2['Exception'] {
    constructors = ArrayList@3[5] { JavaConstructorDescriptor@4['<init>'], JavaConstructorDescriptor@5['<init>'], JavaConstructorDescriptor@6['<init>'], ... } // through LazyJavaClassMemberScope@7
    defaultType = JetTypeImpl@8['Exception']
    functionTypeForSamInterface = null
    typeConstructor = LazyJavaClassTypeConstructor@9['Exception']
}

LazyJavaClassTypeConstructor@9['Exception'] {
    parameters = ArrayList@10[empty]
    supertypes = ArrayList@11[1] { LazyJavaClassifierType@12['Throwable'] }
}

LazyJavaClassifierType@13['String'] {
    arguments = ArrayList@14[empty]
    classifier = JavaClassImpl@15['String']
    nullable = 'false': Boolean@16
    typeConstructor = DeserializedClassTypeConstructor@17
}

LazyJavaClassifierType@18['String'] {
    arguments = ArrayList@19[empty]
    classifier = JavaClassImpl@20['String']
    nullable = 'false': Boolean@16
    typeConstructor = DeserializedClassTypeConstructor@17
}

LazyJavaClassifierType@21['String'] {
    arguments = ArrayList@22[empty]
    classifier = JavaClassImpl@23['String']
    nullable = 'false': Boolean@16
    typeConstructor = DeserializedClassTypeConstructor@17
}

LazyJavaClassifierType@24['String'] {
    arguments = ArrayList@25[empty]
    classifier = JavaClassImpl@15['String']
    nullable = 'true': Boolean@26
    typeConstructor = DeserializedClassTypeConstructor@17
}

LazyJavaClassifierType@27['String'] {
    arguments = ArrayList@28[empty]
    classifier = JavaClassImpl@23['String']
    nullable = 'true': Boolean@26
    typeConstructor = DeserializedClassTypeConstructor@17
}

LazyJavaClassifierType@29['String'] {
    arguments = ArrayList@30[empty]
    classifier = JavaClassImpl@20['String']
    nullable = 'true': Boolean@26
    typeConstructor = DeserializedClassTypeConstructor@17
}

LazyJavaClassifierType@31['Throwable'] {
    arguments = ArrayList@32[empty]
    classifier = JavaClassImpl@33['Throwable']
    nullable = 'false': Boolean@16
    typeConstructor = DeserializedClassTypeConstructor@34
}

LazyJavaClassifierType@35['Throwable'] {
    arguments = ArrayList@36[empty]
    classifier = JavaClassImpl@37['Throwable']
    nullable = 'false': Boolean@16
    typeConstructor = DeserializedClassTypeConstructor@34
}

LazyJavaClassifierType@38['Throwable'] {
    arguments = ArrayList@39[empty]
    classifier = JavaClassImpl@40['Throwable']
    nullable = 'false': Boolean@16
    typeConstructor = DeserializedClassTypeConstructor@34
}

LazyJavaClassifierType@41['Throwable'] {
    arguments = ArrayList@42[empty]
    classifier = JavaClassImpl@33['Throwable']
    nullable = 'true': Boolean@26
    typeConstructor = DeserializedClassTypeConstructor@34
}

LazyJavaClassifierType@43['Throwable'] {
    arguments = ArrayList@44[empty]
    classifier = JavaClassImpl@40['Throwable']
    nullable = 'true': Boolean@26
    typeConstructor = DeserializedClassTypeConstructor@34
}

LazyJavaClassifierType@45['Throwable'] {
    arguments = ArrayList@46[empty]
    classifier = JavaClassImpl@37['Throwable']
    nullable = 'true': Boolean@26
    typeConstructor = DeserializedClassTypeConstructor@34
}

LazyJavaClassifierType@12['Throwable'] {
    arguments = ArrayList@47[empty]
    classifier = JavaClassImpl@48['Throwable']
    typeConstructor = DeserializedClassTypeConstructor@34
}

LazyJavaPackageFragmentProvider@49 {
    packageFragments('<root>': FqName@50) = LazyJavaPackageFragment@51['<root>']
    packageFragments('A': FqName@52) = null
    packageFragments('Nothing': FqName@53) = null
    packageFragments('c': FqName@54) = null
    packageFragments('c.A': FqName@55) = null
    packageFragments('c.Nothing': FqName@56) = null
    packageFragments('java': FqName@57) = LazyJavaPackageFragment@58['java']
    packageFragments('java.lang': FqName@59) = LazyJavaPackageFragment@60['lang']
    packageFragments('java.lang.A': FqName@61) = null
    packageFragments('java.lang.Nothing': FqName@62) = null
    packageFragments('kotlin': FqName@63) = null
    packageFragments('kotlin.A': FqName@64) = null
    packageFragments('kotlin.Nothing': FqName@65) = null
    packageFragments('kotlin.io': FqName@66) = null
    packageFragments('kotlin.jvm': FqName@67) = null
    topLevelClasses(JavaClassImpl@68['Exception']) = LazyJavaClassDescriptor@2['Exception']
}

LazyJavaPackageFragment@58['java'] {
    classes('lang': Name@69) = null // through LazyPackageFragmentScopeForJavaPackage@70
    deserializedPackageScope = Empty@71 // through LazyPackageFragmentScopeForJavaPackage@70
    functions('lang': Name@72) = EmptyList@73[empty] // through LazyPackageFragmentScopeForJavaPackage@70
    memberIndex = computeMemberIndex$1@74 // through LazyPackageFragmentScopeForJavaPackage@70
}

LazyJavaPackageFragment@60['lang'] {
    classes('Exception': Name@75) = LazyJavaClassDescriptor@2['Exception'] // through LazyPackageFragmentScopeForJavaPackage@76
    classes('bar': Name@77) = null // through LazyPackageFragmentScopeForJavaPackage@76
    deserializedPackageScope = Empty@71 // through LazyPackageFragmentScopeForJavaPackage@76
    functions('Exception': Name@75) = EmptyList@73[empty] // through LazyPackageFragmentScopeForJavaPackage@76
    functions('bar': Name@77) = EmptyList@73[empty] // through LazyPackageFragmentScopeForJavaPackage@76
    memberIndex = computeMemberIndex$1@78 // through LazyPackageFragmentScopeForJavaPackage@76
}

ResolutionTaskHolder@79 {
    <name not found> = ArrayList@80[1] { ResolutionCandidate@81 }
    <name not found> = ArrayList@82[1] { ResolutionCandidate@81 }
    <name not found> = EmptyList@73[empty]
    <name not found> = EmptyList@73[empty]
    <name not found> = EmptyList@73[empty]
    <name not found> = EmptyList@73[empty]
}

ResolutionTaskHolder@83 {
    <name not found> = ArrayList@84[1] { ResolutionCandidate@85 }
    <name not found> = ArrayList@86[1] { ResolutionCandidate@85 }
    <name not found> = EmptyList@73[empty]
    <name not found> = EmptyList@73[empty]
    <name not found> = EmptyList@73[empty]
    <name not found> = EmptyList@73[empty]
}

ResolutionTaskHolder@87 {
    <name not found> = ArrayList@88[1] { ResolutionCandidate@89 }
    <name not found> = ArrayList@90[1] { ResolutionCandidate@89 }
}

ResolutionTaskHolder@91 {
    <name not found> = ArrayList@92[1] { ResolutionCandidate@93 }
    <name not found> = ArrayList@94[1] { ResolutionCandidate@93 }
}

ResolutionTaskHolder@95 {
    <name not found> = ArrayList@96[1] { ResolutionCandidate@97 }
    <name not found> = ArrayList@98[1] { ResolutionCandidate@97 }
}

ResolutionTaskHolder@99 {
    <name not found> = ArrayList@100[1] { ResolutionCandidate@101 }
    <name not found> = ArrayList@102[1] { ResolutionCandidate@101 }
}

ResolutionTaskHolder@103 {
    <name not found> = ArrayList@104[1] { ResolutionCandidate@105 }
    <name not found> = ArrayList@106[1] { ResolutionCandidate@105 }
}

ResolutionTaskHolder@107 {
    <name not found> = ArrayList@108[1] { ResolutionCandidate@109 }
    <name not found> = ArrayList@110[1] { ResolutionCandidate@109 }
}

ResolutionTaskHolder@111 {
    <name not found> = ArrayList@112[4] { ResolutionCandidate@113, ResolutionCandidate@114, ResolutionCandidate@115, ... }
    <name not found> = ArrayList@116[5] { ResolutionCandidate@113, ResolutionCandidate@114, ResolutionCandidate@115, ... }
    <name not found> = EmptyList@73[empty]
    <name not found> = EmptyList@73[empty]
    <name not found> = EmptyList@73[empty]
    <name not found> = EmptyList@73[empty]
    <name not found> = EmptyList@73[empty]
    <name not found> = EmptyList@73[empty]
    <name not found> = EmptyList@73[empty]
    <name not found> = EmptyList@73[empty]
    <name not found> = EmptyList@73[empty]
    <name not found> = EmptyList@73[empty]
    <name not found> = EmptyList@73[empty]
    <name not found> = EmptyList@73[empty]
    <name not found> = EmptyList@73[empty]
    <name not found> = EmptyList@73[empty]
    <name not found> = EmptyList@73[empty]
    <name not found> = EmptyList@73[empty]
}
