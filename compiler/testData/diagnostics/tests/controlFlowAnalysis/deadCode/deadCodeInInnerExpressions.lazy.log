DescriptorResolver@0 {
    <name not found> = JetTypeImpl@1['Nothing']
}

LazyJavaClassDescriptor@2['Exception'] {
    constructors = ArrayList@3[5] { JavaConstructorDescriptor@4['<init>'], JavaConstructorDescriptor@5['<init>'], JavaConstructorDescriptor@6['<init>'], ... } // through LazyJavaClassMemberScope@7
    defaultType = JetTypeImpl@8['Exception']
    functionTypeForSamInterface = null
    typeConstructor = LazyJavaClassTypeConstructor@9['Exception']
}

LazyJavaClassTypeConstructor@9['Exception'] {
    parameters = ArrayList@10[empty]
    supertypes = ArrayList@11[1] { LazyJavaClassifierType@12['Throwable'] }
}

LazyJavaClassifierType@13['String'] {
    arguments = ArrayList@14[empty]
    classifier = JavaClassImpl@15['String']
    nullable = 'false': Boolean@16
    typeConstructor = DeserializedClassTypeConstructor@17
}

LazyJavaClassifierType@18['String'] {
    arguments = ArrayList@19[empty]
    classifier = JavaClassImpl@20['String']
    nullable = 'false': Boolean@16
    typeConstructor = DeserializedClassTypeConstructor@17
}

LazyJavaClassifierType@21['String'] {
    arguments = ArrayList@22[empty]
    classifier = JavaClassImpl@23['String']
    nullable = 'false': Boolean@16
    typeConstructor = DeserializedClassTypeConstructor@17
}

LazyJavaClassifierType@24['String'] {
    arguments = ArrayList@25[empty]
    classifier = JavaClassImpl@23['String']
    nullable = 'true': Boolean@26
    typeConstructor = DeserializedClassTypeConstructor@17
}

LazyJavaClassifierType@27['String'] {
    arguments = ArrayList@28[empty]
    classifier = JavaClassImpl@20['String']
    nullable = 'true': Boolean@26
    typeConstructor = DeserializedClassTypeConstructor@17
}

LazyJavaClassifierType@29['String'] {
    arguments = ArrayList@30[empty]
    classifier = JavaClassImpl@15['String']
    nullable = 'true': Boolean@26
    typeConstructor = DeserializedClassTypeConstructor@17
}

LazyJavaClassifierType@31['Throwable'] {
    arguments = ArrayList@32[empty]
    classifier = JavaClassImpl@33['Throwable']
    nullable = 'false': Boolean@16
    typeConstructor = DeserializedClassTypeConstructor@34
}

LazyJavaClassifierType@35['Throwable'] {
    arguments = ArrayList@36[empty]
    classifier = JavaClassImpl@37['Throwable']
    nullable = 'false': Boolean@16
    typeConstructor = DeserializedClassTypeConstructor@34
}

LazyJavaClassifierType@38['Throwable'] {
    arguments = ArrayList@39[empty]
    classifier = JavaClassImpl@40['Throwable']
    nullable = 'false': Boolean@16
    typeConstructor = DeserializedClassTypeConstructor@34
}

LazyJavaClassifierType@41['Throwable'] {
    arguments = ArrayList@42[empty]
    classifier = JavaClassImpl@40['Throwable']
    nullable = 'true': Boolean@26
    typeConstructor = DeserializedClassTypeConstructor@34
}

LazyJavaClassifierType@43['Throwable'] {
    arguments = ArrayList@44[empty]
    classifier = JavaClassImpl@37['Throwable']
    nullable = 'true': Boolean@26
    typeConstructor = DeserializedClassTypeConstructor@34
}

LazyJavaClassifierType@45['Throwable'] {
    arguments = ArrayList@46[empty]
    classifier = JavaClassImpl@33['Throwable']
    nullable = 'true': Boolean@26
    typeConstructor = DeserializedClassTypeConstructor@34
}

LazyJavaClassifierType@12['Throwable'] {
    arguments = ArrayList@47[empty]
    classifier = JavaClassImpl@48['Throwable']
    typeConstructor = DeserializedClassTypeConstructor@34
}

LazyJavaPackageFragmentProvider@49 {
    packageFragments('<root>': FqName@50) = LazyJavaPackageFragment@51['<root>']
    packageFragments('Array': FqName@52) = null
    packageFragments('Int': FqName@53) = null
    packageFragments('Nothing': FqName@54) = null
    packageFragments('String': FqName@55) = null
    packageFragments('java': FqName@56) = LazyJavaPackageFragment@57['java']
    packageFragments('java.lang': FqName@58) = LazyJavaPackageFragment@59['lang']
    packageFragments('java.lang.Array': FqName@60) = null
    packageFragments('java.lang.Int': FqName@61) = null
    packageFragments('java.lang.Nothing': FqName@62) = null
    packageFragments('java.lang.String': FqName@63) = null
    packageFragments('kotlin': FqName@64) = null
    packageFragments('kotlin.Array': FqName@65) = null
    packageFragments('kotlin.Int': FqName@66) = null
    packageFragments('kotlin.Nothing': FqName@67) = null
    packageFragments('kotlin.String': FqName@68) = null
    packageFragments('kotlin.io': FqName@69) = null
    packageFragments('kotlin.jvm': FqName@70) = null
    topLevelClasses(JavaClassImpl@71['Exception']) = LazyJavaClassDescriptor@2['Exception']
}

LazyJavaPackageFragment@51['<root>'] {
    classes('Array': Name@72) = null // through LazyPackageFragmentScopeForJavaPackage@73
    classes('Exception': Name@74) = null // through LazyPackageFragmentScopeForJavaPackage@73
    classes('Int': Name@75) = null // through LazyPackageFragmentScopeForJavaPackage@73
    classes('Nothing': Name@76) = null // through LazyPackageFragmentScopeForJavaPackage@73
    classes('String': Name@77) = null // through LazyPackageFragmentScopeForJavaPackage@73
    classes('get': Name@78) = null // through LazyPackageFragmentScopeForJavaPackage@73
    classes('times': Name@79) = null // through LazyPackageFragmentScopeForJavaPackage@73
    classes('todo': Name@80) = null // through LazyPackageFragmentScopeForJavaPackage@73
    deserializedPackageScope = Empty@81 // through LazyPackageFragmentScopeForJavaPackage@73
    functions('Exception': Name@74) = EmptyList@82[empty] // through LazyPackageFragmentScopeForJavaPackage@73
    functions('get': Name@78) = EmptyList@82[empty] // through LazyPackageFragmentScopeForJavaPackage@73
    functions('times': Name@79) = EmptyList@82[empty] // through LazyPackageFragmentScopeForJavaPackage@73
    functions('todo': Name@80) = EmptyList@82[empty] // through LazyPackageFragmentScopeForJavaPackage@73
    memberIndex = computeMemberIndex$1@83 // through LazyPackageFragmentScopeForJavaPackage@73
}

LazyJavaPackageFragment@57['java'] {
    classes('lang': Name@84) = null // through LazyPackageFragmentScopeForJavaPackage@85
    deserializedPackageScope = Empty@81 // through LazyPackageFragmentScopeForJavaPackage@85
    functions('lang': Name@86) = EmptyList@82[empty] // through LazyPackageFragmentScopeForJavaPackage@85
    memberIndex = computeMemberIndex$1@87 // through LazyPackageFragmentScopeForJavaPackage@85
}

LazyJavaPackageFragment@59['lang'] {
    classes('Exception': Name@74) = LazyJavaClassDescriptor@2['Exception'] // through LazyPackageFragmentScopeForJavaPackage@88
    classes('get': Name@78) = null // through LazyPackageFragmentScopeForJavaPackage@88
    classes('times': Name@79) = null // through LazyPackageFragmentScopeForJavaPackage@88
    classes('todo': Name@80) = null // through LazyPackageFragmentScopeForJavaPackage@88
    deserializedPackageScope = Empty@81 // through LazyPackageFragmentScopeForJavaPackage@88
    functions('Exception': Name@74) = EmptyList@82[empty] // through LazyPackageFragmentScopeForJavaPackage@88
    functions('get': Name@78) = EmptyList@82[empty] // through LazyPackageFragmentScopeForJavaPackage@88
    functions('times': Name@79) = EmptyList@82[empty] // through LazyPackageFragmentScopeForJavaPackage@88
    functions('todo': Name@80) = EmptyList@82[empty] // through LazyPackageFragmentScopeForJavaPackage@88
    memberIndex = computeMemberIndex$1@89 // through LazyPackageFragmentScopeForJavaPackage@88
}

ResolutionTaskHolder@90 {
    <name not found> = ArrayList@91[1] { ResolutionCandidate@92 }
    <name not found> = ArrayList@93[1] { ResolutionCandidate@92 }
    <name not found> = EmptyList@82[empty]
    <name not found> = EmptyList@82[empty]
    <name not found> = EmptyList@82[empty]
    <name not found> = EmptyList@82[empty]
}

ResolutionTaskHolder@94 {
    <name not found> = ArrayList@95[1] { ResolutionCandidate@96 }
    <name not found> = ArrayList@97[1] { ResolutionCandidate@96 }
    <name not found> = EmptyList@82[empty]
    <name not found> = EmptyList@82[empty]
    <name not found> = EmptyList@82[empty]
    <name not found> = EmptyList@82[empty]
}

ResolutionTaskHolder@98 {
    <name not found> = ArrayList@99[1] { ResolutionCandidate@100 }
    <name not found> = ArrayList@101[1] { ResolutionCandidate@100 }
    <name not found> = EmptyList@82[empty]
    <name not found> = EmptyList@82[empty]
    <name not found> = EmptyList@82[empty]
    <name not found> = EmptyList@82[empty]
}

ResolutionTaskHolder@102 {
    <name not found> = ArrayList@103[1] { ResolutionCandidate@104 }
    <name not found> = ArrayList@105[1] { ResolutionCandidate@104 }
    <name not found> = EmptyList@82[empty]
    <name not found> = EmptyList@82[empty]
    <name not found> = EmptyList@82[empty]
    <name not found> = EmptyList@82[empty]
}

ResolutionTaskHolder@106 {
    <name not found> = ArrayList@107[1] { ResolutionCandidate@108 }
    <name not found> = ArrayList@109[1] { ResolutionCandidate@108 }
}

ResolutionTaskHolder@110 {
    <name not found> = ArrayList@111[1] { ResolutionCandidate@112 }
    <name not found> = ArrayList@113[1] { ResolutionCandidate@112 }
}

ResolutionTaskHolder@114 {
    <name not found> = ArrayList@115[4] { ResolutionCandidate@116, ResolutionCandidate@117, ResolutionCandidate@118, ... }
    <name not found> = ArrayList@119[5] { ResolutionCandidate@116, ResolutionCandidate@117, ResolutionCandidate@118, ... }
    <name not found> = EmptyList@82[empty]
    <name not found> = EmptyList@82[empty]
    <name not found> = EmptyList@82[empty]
    <name not found> = EmptyList@82[empty]
    <name not found> = EmptyList@82[empty]
    <name not found> = EmptyList@82[empty]
    <name not found> = EmptyList@82[empty]
    <name not found> = EmptyList@82[empty]
    <name not found> = EmptyList@82[empty]
    <name not found> = EmptyList@82[empty]
    <name not found> = EmptyList@82[empty]
    <name not found> = EmptyList@82[empty]
    <name not found> = EmptyList@82[empty]
    <name not found> = EmptyList@82[empty]
    <name not found> = EmptyList@82[empty]
    <name not found> = EmptyList@82[empty]
}

ResolutionTaskHolder@120 {
    <name not found> = ArrayList@121[4] { ResolutionCandidate@122, ResolutionCandidate@123, ResolutionCandidate@124, ... }
    <name not found> = ArrayList@125[5] { ResolutionCandidate@122, ResolutionCandidate@123, ResolutionCandidate@124, ... }
    <name not found> = EmptyList@82[empty]
    <name not found> = EmptyList@82[empty]
    <name not found> = EmptyList@82[empty]
    <name not found> = EmptyList@82[empty]
}
