DescriptorResolver@0 {
    <name not found> = JetTypeImpl@1['Nothing']
}

LazyJavaClassDescriptor@2['Exception'] {
    constructors = ArrayList@3[5] { JavaConstructorDescriptor@4['<init>'], JavaConstructorDescriptor@5['<init>'], JavaConstructorDescriptor@6['<init>'], ... } // through LazyJavaClassMemberScope@7
    defaultType = JetTypeImpl@8['Exception']
    functionTypeForSamInterface = null
    typeConstructor = LazyJavaClassTypeConstructor@9['Exception']
}

LazyJavaClassTypeConstructor@9['Exception'] {
    parameters = ArrayList@10[empty]
    supertypes = ArrayList@11[1] { LazyJavaClassifierType@12['Throwable'] }
}

LazyJavaClassifierType@13['String'] {
    arguments = ArrayList@14[empty]
    classifier = JavaClassImpl@15['String']
    nullable = 'false': Boolean@16
    typeConstructor = DeserializedClassTypeConstructor@17
}

LazyJavaClassifierType@18['String'] {
    arguments = ArrayList@19[empty]
    classifier = JavaClassImpl@20['String']
    nullable = 'false': Boolean@16
    typeConstructor = DeserializedClassTypeConstructor@17
}

LazyJavaClassifierType@21['String'] {
    arguments = ArrayList@22[empty]
    classifier = JavaClassImpl@23['String']
    nullable = 'false': Boolean@16
    typeConstructor = DeserializedClassTypeConstructor@17
}

LazyJavaClassifierType@24['String'] {
    arguments = ArrayList@25[empty]
    classifier = JavaClassImpl@15['String']
    nullable = 'true': Boolean@26
    typeConstructor = DeserializedClassTypeConstructor@17
}

LazyJavaClassifierType@27['String'] {
    arguments = ArrayList@28[empty]
    classifier = JavaClassImpl@20['String']
    nullable = 'true': Boolean@26
    typeConstructor = DeserializedClassTypeConstructor@17
}

LazyJavaClassifierType@29['String'] {
    arguments = ArrayList@30[empty]
    classifier = JavaClassImpl@23['String']
    nullable = 'true': Boolean@26
    typeConstructor = DeserializedClassTypeConstructor@17
}

LazyJavaClassifierType@31['Throwable'] {
    arguments = ArrayList@32[empty]
    classifier = JavaClassImpl@33['Throwable']
    nullable = 'false': Boolean@16
    typeConstructor = DeserializedClassTypeConstructor@34
}

LazyJavaClassifierType@35['Throwable'] {
    arguments = ArrayList@36[empty]
    classifier = JavaClassImpl@37['Throwable']
    nullable = 'false': Boolean@16
    typeConstructor = DeserializedClassTypeConstructor@34
}

LazyJavaClassifierType@38['Throwable'] {
    arguments = ArrayList@39[empty]
    classifier = JavaClassImpl@40['Throwable']
    nullable = 'false': Boolean@16
    typeConstructor = DeserializedClassTypeConstructor@34
}

LazyJavaClassifierType@41['Throwable'] {
    arguments = ArrayList@42[empty]
    classifier = JavaClassImpl@33['Throwable']
    nullable = 'true': Boolean@26
    typeConstructor = DeserializedClassTypeConstructor@34
}

LazyJavaClassifierType@43['Throwable'] {
    arguments = ArrayList@44[empty]
    classifier = JavaClassImpl@37['Throwable']
    nullable = 'true': Boolean@26
    typeConstructor = DeserializedClassTypeConstructor@34
}

LazyJavaClassifierType@45['Throwable'] {
    arguments = ArrayList@46[empty]
    classifier = JavaClassImpl@40['Throwable']
    nullable = 'true': Boolean@26
    typeConstructor = DeserializedClassTypeConstructor@34
}

LazyJavaClassifierType@12['Throwable'] {
    arguments = ArrayList@47[empty]
    classifier = JavaClassImpl@48['Throwable']
    typeConstructor = DeserializedClassTypeConstructor@34
}

LazyJavaPackageFragmentProvider@49 {
    packageFragments('<root>': FqName@50) = LazyJavaPackageFragment@51['<root>']
    packageFragments('Any': FqName@52) = null
    packageFragments('Nothing': FqName@53) = null
    packageFragments('java': FqName@54) = LazyJavaPackageFragment@55['java']
    packageFragments('java.lang': FqName@56) = LazyJavaPackageFragment@57['lang']
    packageFragments('java.lang.Any': FqName@58) = null
    packageFragments('java.lang.Nothing': FqName@59) = null
    packageFragments('kotlin': FqName@60) = null
    packageFragments('kotlin.Any': FqName@61) = null
    packageFragments('kotlin.Nothing': FqName@62) = null
    packageFragments('kotlin.io': FqName@63) = null
    packageFragments('kotlin.jvm': FqName@64) = null
    topLevelClasses(JavaClassImpl@65['Exception']) = LazyJavaClassDescriptor@2['Exception']
}

LazyJavaPackageFragment@51['<root>'] {
    classes('Any': Name@66) = null // through LazyPackageFragmentScopeForJavaPackage@67
    classes('Exception': Name@68) = null // through LazyPackageFragmentScopeForJavaPackage@67
    classes('Nothing': Name@69) = null // through LazyPackageFragmentScopeForJavaPackage@67
    classes('inc': Name@70) = null // through LazyPackageFragmentScopeForJavaPackage@67
    classes('not': Name@71) = null // through LazyPackageFragmentScopeForJavaPackage@67
    classes('todo': Name@72) = null // through LazyPackageFragmentScopeForJavaPackage@67
    deserializedPackageScope = Empty@73 // through LazyPackageFragmentScopeForJavaPackage@67
    functions('Exception': Name@68) = EmptyList@74[empty] // through LazyPackageFragmentScopeForJavaPackage@67
    functions('inc': Name@70) = EmptyList@74[empty] // through LazyPackageFragmentScopeForJavaPackage@67
    functions('not': Name@71) = EmptyList@74[empty] // through LazyPackageFragmentScopeForJavaPackage@67
    functions('todo': Name@72) = EmptyList@74[empty] // through LazyPackageFragmentScopeForJavaPackage@67
    memberIndex = computeMemberIndex$1@75 // through LazyPackageFragmentScopeForJavaPackage@67
}

LazyJavaPackageFragment@55['java'] {
    classes('lang': Name@76) = null // through LazyPackageFragmentScopeForJavaPackage@77
    deserializedPackageScope = Empty@73 // through LazyPackageFragmentScopeForJavaPackage@77
    functions('lang': Name@78) = EmptyList@74[empty] // through LazyPackageFragmentScopeForJavaPackage@77
    memberIndex = computeMemberIndex$1@79 // through LazyPackageFragmentScopeForJavaPackage@77
}

LazyJavaPackageFragment@57['lang'] {
    classes('Exception': Name@68) = LazyJavaClassDescriptor@2['Exception'] // through LazyPackageFragmentScopeForJavaPackage@80
    classes('inc': Name@70) = null // through LazyPackageFragmentScopeForJavaPackage@80
    classes('not': Name@71) = null // through LazyPackageFragmentScopeForJavaPackage@80
    classes('todo': Name@72) = null // through LazyPackageFragmentScopeForJavaPackage@80
    deserializedPackageScope = Empty@73 // through LazyPackageFragmentScopeForJavaPackage@80
    functions('Exception': Name@68) = EmptyList@74[empty] // through LazyPackageFragmentScopeForJavaPackage@80
    functions('inc': Name@70) = EmptyList@74[empty] // through LazyPackageFragmentScopeForJavaPackage@80
    functions('not': Name@71) = EmptyList@74[empty] // through LazyPackageFragmentScopeForJavaPackage@80
    functions('todo': Name@72) = EmptyList@74[empty] // through LazyPackageFragmentScopeForJavaPackage@80
    memberIndex = computeMemberIndex$1@81 // through LazyPackageFragmentScopeForJavaPackage@80
}

ResolutionTaskHolder@82 {
    <name not found> = ArrayList@83[1] { ResolutionCandidate@84 }
    <name not found> = ArrayList@85[1] { ResolutionCandidate@84 }
    <name not found> = EmptyList@74[empty]
    <name not found> = EmptyList@74[empty]
    <name not found> = EmptyList@74[empty]
    <name not found> = EmptyList@74[empty]
}

ResolutionTaskHolder@86 {
    <name not found> = ArrayList@87[1] { ResolutionCandidate@88 }
    <name not found> = ArrayList@89[1] { ResolutionCandidate@88 }
    <name not found> = EmptyList@74[empty]
    <name not found> = EmptyList@74[empty]
    <name not found> = EmptyList@74[empty]
    <name not found> = EmptyList@74[empty]
}

ResolutionTaskHolder@90 {
    <name not found> = ArrayList@91[1] { ResolutionCandidate@92 }
    <name not found> = ArrayList@93[1] { ResolutionCandidate@92 }
    <name not found> = EmptyList@74[empty]
    <name not found> = EmptyList@74[empty]
    <name not found> = EmptyList@74[empty]
    <name not found> = EmptyList@74[empty]
}

ResolutionTaskHolder@94 {
    <name not found> = ArrayList@95[1] { ResolutionCandidate@96 }
    <name not found> = ArrayList@97[1] { ResolutionCandidate@96 }
    <name not found> = EmptyList@74[empty]
    <name not found> = EmptyList@74[empty]
    <name not found> = EmptyList@74[empty]
    <name not found> = EmptyList@74[empty]
}

ResolutionTaskHolder@98 {
    <name not found> = ArrayList@99[1] { ResolutionCandidate@100 }
    <name not found> = ArrayList@101[1] { ResolutionCandidate@100 }
}

ResolutionTaskHolder@102 {
    <name not found> = ArrayList@103[1] { ResolutionCandidate@104 }
    <name not found> = ArrayList@105[1] { ResolutionCandidate@104 }
}

ResolutionTaskHolder@106 {
    <name not found> = ArrayList@107[4] { ResolutionCandidate@108, ResolutionCandidate@109, ResolutionCandidate@110, ... }
    <name not found> = ArrayList@111[5] { ResolutionCandidate@108, ResolutionCandidate@109, ResolutionCandidate@110, ... }
    <name not found> = EmptyList@74[empty]
    <name not found> = EmptyList@74[empty]
    <name not found> = EmptyList@74[empty]
    <name not found> = EmptyList@74[empty]
}
