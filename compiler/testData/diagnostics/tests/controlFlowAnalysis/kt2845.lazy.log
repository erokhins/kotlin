LazyJavaClassDescriptor@0['AbstractCollection'] {
    typeConstructor = LazyJavaClassTypeConstructor@1['AbstractCollection']
}

LazyJavaClassDescriptor@2['AbstractList'] {
    typeConstructor = LazyJavaClassTypeConstructor@3['AbstractList']
}

LazyJavaClassDescriptor@4['ArrayList'] {
    constructors = ArrayList@5[3] { JavaConstructorDescriptor@6['<init>'], JavaConstructorDescriptor@7['<init>'], JavaConstructorDescriptor@8['<init>'] } // through LazyJavaClassMemberScope@9
    defaultType = JetTypeImpl@10['ArrayList<1>']
    functionTypeForSamInterface = null
    typeConstructor = LazyJavaClassTypeConstructor@11['ArrayList']
}

LazyJavaClassDescriptor@12['RandomAccess'] {
    typeConstructor = LazyJavaClassTypeConstructor@13['RandomAccess']
}

LazyJavaClassDescriptor@14['Serializable'] {
    typeConstructor = LazyJavaClassTypeConstructor@15['Serializable']
}

LazyJavaClassTypeConstructor@1['AbstractCollection'] {
    supertypes = ArrayList@16[1] { LazyJavaClassifierType@17['Collection<E>'] }
}

LazyJavaClassTypeConstructor@3['AbstractList'] {
    parameters = ArrayList@18[1] { LazyJavaTypeParameterDescriptor@19['E'] }
    supertypes = ArrayList@20[2] { LazyJavaClassifierType@21['AbstractCollection<E>'], LazyJavaClassifierType@22['List<E>'] }
}

LazyJavaClassTypeConstructor@11['ArrayList'] {
    parameters = ArrayList@23[1] { LazyJavaTypeParameterDescriptor@24['E'] }
    supertypes = ArrayList@25[5] { LazyJavaClassifierType@26['AbstractList<E>'], LazyJavaClassifierType@27['List<E>'], LazyJavaClassifierType@28['RandomAccess'], ... }
}

LazyJavaClassTypeConstructor@13['RandomAccess'] {
    supertypes = ArrayList@29[1] { JetTypeImpl@30['Any'] }
}

LazyJavaClassTypeConstructor@15['Serializable'] {
    supertypes = ArrayList@31[1] { JetTypeImpl@30['Any'] }
}

LazyJavaClassifierType@21['AbstractCollection<E>'] {
    classifier = JavaClassImpl@32['AbstractCollection']
    typeConstructor = LazyJavaClassTypeConstructor@1['AbstractCollection']
}

LazyJavaClassifierType@26['AbstractList<E>'] {
    arguments = ArrayList@33[1] { TypeProjectionImpl@34 }
    classifier = JavaClassImpl@35['AbstractList']
    typeConstructor = LazyJavaClassTypeConstructor@3['AbstractList']
}

LazyJavaClassifierType@36['Cloneable'] {
    classifier = JavaClassImpl@37['Cloneable']
    typeConstructor = DeserializedClassTypeConstructor@38
}

LazyJavaClassifierType@39['Collection<? extends E>'] {
    arguments = ArrayList@40[1] { TypeProjectionImpl@41 }
    classifier = JavaClassImpl@42['Collection']
    memberScope = SubstitutingScope@43
    nullable = 'false': Boolean@44
    typeConstructor = DeserializedClassTypeConstructor@45
}

LazyJavaClassifierType@46['Collection<? extends E>'] {
    arguments = ArrayList@47[1] { TypeProjectionImpl@48 }
    classifier = JavaClassImpl@42['Collection']
    memberScope = SubstitutingScope@49
    nullable = 'true': Boolean@50
    typeConstructor = DeserializedClassTypeConstructor@51
}

LazyJavaClassifierType@17['Collection<E>'] {
    classifier = JavaClassImpl@52['Collection']
    typeConstructor = DeserializedClassTypeConstructor@45
}

LazyJavaClassifierType@53['E'] {
    arguments = ArrayList@54[empty]
    classifier = JavaTypeParameterImpl@55['E']
    nullable = 'false': Boolean@44
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@56
}

LazyJavaClassifierType@57['E'] {
    arguments = ArrayList@58[empty]
    classifier = JavaTypeParameterImpl@59['E']
    nullable = 'false': Boolean@44
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@60
}

LazyJavaClassifierType@61['E'] {
    arguments = ArrayList@62[empty]
    classifier = JavaTypeParameterImpl@63['E']
    nullable = 'false': Boolean@44
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@60
}

LazyJavaClassifierType@64['E'] {
    arguments = ArrayList@65[empty]
    classifier = JavaTypeParameterImpl@66['E']
    nullable = 'false': Boolean@44
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@60
}

LazyJavaClassifierType@67['E'] {
    arguments = ArrayList@68[empty]
    classifier = JavaTypeParameterImpl@63['E']
    nullable = 'true': Boolean@50
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@60
}

LazyJavaClassifierType@69['E'] {
    arguments = ArrayList@70[empty]
    classifier = JavaTypeParameterImpl@59['E']
    nullable = 'true': Boolean@50
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@60
}

LazyJavaClassifierType@71['E'] {
    arguments = ArrayList@72[empty]
    classifier = JavaTypeParameterImpl@55['E']
    nullable = 'true': Boolean@50
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@56
}

LazyJavaClassifierType@73['E'] {
    arguments = ArrayList@74[empty]
    classifier = JavaTypeParameterImpl@66['E']
    nullable = 'true': Boolean@50
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@60
}

LazyJavaClassifierType@22['List<E>'] {
    arguments = ArrayList@75[1] { TypeProjectionImpl@76 }
    classifier = JavaClassImpl@77['List']
    memberScope = SubstitutingScope@78
    nullable = 'false': Boolean@44
    typeConstructor = DeserializedClassTypeConstructor@79
}

LazyJavaClassifierType@27['List<E>'] {
    classifier = JavaClassImpl@80['List']
    typeConstructor = DeserializedClassTypeConstructor@79
}

LazyJavaClassifierType@81['Object'] {
    classifier = JavaClassImpl@82['Object']
    typeConstructor = DeserializedClassTypeConstructor@83
}

LazyJavaClassifierType@84['Object'] {
    classifier = JavaClassImpl@85['Object']
    typeConstructor = DeserializedClassTypeConstructor@83
}

LazyJavaClassifierType@86['Object'] {
    classifier = JavaClassImpl@87['Object']
    typeConstructor = DeserializedClassTypeConstructor@83
}

LazyJavaClassifierType@28['RandomAccess'] {
    classifier = JavaClassImpl@88['RandomAccess']
    typeConstructor = LazyJavaClassTypeConstructor@13['RandomAccess']
}

LazyJavaClassifierType@89['Serializable'] {
    classifier = JavaClassImpl@90['Serializable']
    typeConstructor = LazyJavaClassTypeConstructor@15['Serializable']
}

LazyJavaPackageFragmentProvider@91 {
    packageFragments('<root>': FqName@92) = LazyJavaPackageFragment@93['<root>']
    packageFragments('Int': FqName@94) = null
    packageFragments('MutableList': FqName@95) = null
    packageFragments('h': FqName@96) = null
    packageFragments('h.Int': FqName@97) = null
    packageFragments('h.MutableList': FqName@98) = null
    packageFragments('java': FqName@99) = LazyJavaPackageFragment@100['java']
    packageFragments('java.io': FqName@101) = LazyJavaPackageFragment@102['io']
    packageFragments('java.lang': FqName@103) = LazyJavaPackageFragment@104['lang']
    packageFragments('java.lang.Int': FqName@105) = null
    packageFragments('java.lang.MutableList': FqName@106) = null
    packageFragments('java.util': FqName@107) = LazyJavaPackageFragment@108['util']
    packageFragments('java.util.ArrayList': FqName@109) = null
    packageFragments('kotlin': FqName@110) = null
    packageFragments('kotlin.Int': FqName@111) = null
    packageFragments('kotlin.MutableList': FqName@112) = null
    packageFragments('kotlin.io': FqName@113) = null
    packageFragments('kotlin.jvm': FqName@114) = null
    topLevelClasses(JavaClassImpl@32['AbstractCollection']) = LazyJavaClassDescriptor@0['AbstractCollection']
    topLevelClasses(JavaClassImpl@35['AbstractList']) = LazyJavaClassDescriptor@2['AbstractList']
    topLevelClasses(JavaClassImpl@115['ArrayList']) = LazyJavaClassDescriptor@4['ArrayList']
    topLevelClasses(JavaClassImpl@88['RandomAccess']) = LazyJavaClassDescriptor@12['RandomAccess']
    topLevelClasses(JavaClassImpl@90['Serializable']) = LazyJavaClassDescriptor@14['Serializable']
}

LazyJavaPackageFragment@100['java'] {
    classes('lang': Name@116) = null // through LazyPackageFragmentScopeForJavaPackage@117
    classes('util': Name@118) = null // through LazyPackageFragmentScopeForJavaPackage@117
    deserializedPackageScope = Empty@119 // through LazyPackageFragmentScopeForJavaPackage@117
    functions('lang': Name@120) = EmptyList@121[empty] // through LazyPackageFragmentScopeForJavaPackage@117
    functions('util': Name@122) = EmptyList@121[empty] // through LazyPackageFragmentScopeForJavaPackage@117
    memberIndex = computeMemberIndex$1@123 // through LazyPackageFragmentScopeForJavaPackage@117
}

LazyJavaPackageFragment@104['lang'] {
    classes('ArrayList': Name@124) = null // through LazyPackageFragmentScopeForJavaPackage@125
    classes('equals': Name@126) = null // through LazyPackageFragmentScopeForJavaPackage@125
    deserializedPackageScope = Empty@119 // through LazyPackageFragmentScopeForJavaPackage@125
    functions('ArrayList': Name@124) = EmptyList@121[empty] // through LazyPackageFragmentScopeForJavaPackage@125
    functions('equals': Name@126) = EmptyList@121[empty] // through LazyPackageFragmentScopeForJavaPackage@125
    memberIndex = computeMemberIndex$1@127 // through LazyPackageFragmentScopeForJavaPackage@125
}

LazyJavaPackageFragment@108['util'] {
    classes('ArrayList': Name@128) = LazyJavaClassDescriptor@4['ArrayList'] // through LazyPackageFragmentScopeForJavaPackage@129
    deserializedPackageScope = Empty@119 // through LazyPackageFragmentScopeForJavaPackage@129
    functions('ArrayList': Name@130) = EmptyList@121[empty] // through LazyPackageFragmentScopeForJavaPackage@129
    memberIndex = computeMemberIndex$1@131 // through LazyPackageFragmentScopeForJavaPackage@129
}

LazyJavaTypeParameterDescriptor@24['E'] {
    defaultType = JetTypeImpl@132['E']
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@60
    upperBounds = LinkedHashSet@133[1] { NullableType@134 }
}

LazyJavaTypeParameterDescriptor@19['E'] {
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@56
}

LazyJavaTypeParameterResolver@135 {
    resolve(JavaTypeParameterImpl@136['E']) = LazyJavaTypeParameterDescriptor@24['E']
}

LazyJavaTypeParameterResolver@137 {
    resolve(JavaTypeParameterImpl@138['E']) = LazyJavaTypeParameterDescriptor@19['E']
}

ResolutionTaskHolder@139 {
    <name not found> = ArrayList@140[1] { ResolutionCandidate@141 }
    <name not found> = ArrayList@142[1] { ResolutionCandidate@141 }
    <name not found> = ArrayList@143[1] { ResolutionCandidate@144 }
    <name not found> = ArrayList@145[1] { ResolutionCandidate@144 }
    <name not found> = EmptyList@121[empty]
    <name not found> = EmptyList@121[empty]
}

ResolutionTaskHolder@146 {
    <name not found> = ArrayList@147[1] { ResolutionCandidate@148 }
    <name not found> = ArrayList@149[1] { ResolutionCandidate@148 }
}

ResolutionTaskHolder@150 {
    <name not found> = ArrayList@151[1] { ResolutionCandidate@152 }
    <name not found> = ArrayList@153[1] { ResolutionCandidate@152 }
}

ResolutionTaskHolder@154 {
    <name not found> = ArrayList@155[1] { ResolutionCandidate@156 }
    <name not found> = ArrayList@157[1] { ResolutionCandidate@156 }
}

ResolutionTaskHolder@158 {
    <name not found> = ArrayList@159[2] { ResolutionCandidate@160, ResolutionCandidate@161 }
    <name not found> = ArrayList@162[2] { ResolutionCandidate@160, ResolutionCandidate@161 }
}

ResolutionTaskHolder@163 {
    <name not found> = ArrayList@164[3] { ResolutionCandidate@165, ResolutionCandidate@166, ResolutionCandidate@167 }
    <name not found> = ArrayList@168[3] { ResolutionCandidate@165, ResolutionCandidate@166, ResolutionCandidate@167 }
    <name not found> = EmptyList@121[empty]
    <name not found> = EmptyList@121[empty]
    <name not found> = EmptyList@121[empty]
    <name not found> = EmptyList@121[empty]
}
