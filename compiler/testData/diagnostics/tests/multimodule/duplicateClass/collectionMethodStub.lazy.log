LazyJavaClassDescriptor@0['Exception'] {
    typeConstructor = LazyJavaClassTypeConstructor@1['Exception']
}

LazyJavaClassDescriptor@2['RuntimeException'] {
    typeConstructor = LazyJavaClassTypeConstructor@3['RuntimeException']
}

LazyJavaClassDescriptor@4['UnsupportedOperationException'] {
    constructors = ArrayList@5[4] { JavaConstructorDescriptor@6['<init>'], JavaConstructorDescriptor@7['<init>'], JavaConstructorDescriptor@8['<init>'], ... } // through LazyJavaClassMemberScope@9
    defaultType = JetTypeImpl@10['UnsupportedOperationException']
    functionTypeForSamInterface = null
    typeConstructor = LazyJavaClassTypeConstructor@11['UnsupportedOperationException']
}

LazyJavaClassTypeConstructor@1['Exception'] {
    parameters = ArrayList@12[empty]
    supertypes = ArrayList@13[1] { LazyJavaClassifierType@14['Throwable'] }
}

LazyJavaClassTypeConstructor@3['RuntimeException'] {
    parameters = ArrayList@15[empty]
    supertypes = ArrayList@16[1] { LazyJavaClassifierType@17['Exception'] }
}

LazyJavaClassTypeConstructor@11['UnsupportedOperationException'] {
    parameters = ArrayList@18[empty]
    supertypes = ArrayList@19[1] { LazyJavaClassifierType@20['RuntimeException'] }
}

LazyJavaClassifierType@17['Exception'] {
    arguments = ArrayList@21[empty]
    classifier = JavaClassImpl@22['Exception']
    typeConstructor = LazyJavaClassTypeConstructor@1['Exception']
}

LazyJavaClassifierType@20['RuntimeException'] {
    arguments = ArrayList@23[empty]
    classifier = JavaClassImpl@24['RuntimeException']
    typeConstructor = LazyJavaClassTypeConstructor@3['RuntimeException']
}

LazyJavaClassifierType@25['String'] {
    arguments = ArrayList@26[empty]
    classifier = JavaClassImpl@27['String']
    nullable = 'false': Boolean@28
    typeConstructor = DeserializedClassTypeConstructor@29
}

LazyJavaClassifierType@30['String'] {
    arguments = ArrayList@31[empty]
    classifier = JavaClassImpl@32['String']
    nullable = 'false': Boolean@28
    typeConstructor = DeserializedClassTypeConstructor@29
}

LazyJavaClassifierType@33['String'] {
    arguments = ArrayList@34[empty]
    classifier = JavaClassImpl@32['String']
    nullable = 'true': Boolean@35
    typeConstructor = DeserializedClassTypeConstructor@29
}

LazyJavaClassifierType@36['String'] {
    arguments = ArrayList@37[empty]
    classifier = JavaClassImpl@27['String']
    nullable = 'true': Boolean@35
    typeConstructor = DeserializedClassTypeConstructor@29
}

LazyJavaClassifierType@38['Throwable'] {
    arguments = ArrayList@39[empty]
    classifier = JavaClassImpl@40['Throwable']
    nullable = 'false': Boolean@28
    typeConstructor = DeserializedClassTypeConstructor@41
}

LazyJavaClassifierType@42['Throwable'] {
    arguments = ArrayList@43[empty]
    classifier = JavaClassImpl@44['Throwable']
    nullable = 'false': Boolean@28
    typeConstructor = DeserializedClassTypeConstructor@41
}

LazyJavaClassifierType@45['Throwable'] {
    arguments = ArrayList@46[empty]
    classifier = JavaClassImpl@40['Throwable']
    nullable = 'true': Boolean@35
    typeConstructor = DeserializedClassTypeConstructor@41
}

LazyJavaClassifierType@47['Throwable'] {
    arguments = ArrayList@48[empty]
    classifier = JavaClassImpl@44['Throwable']
    nullable = 'true': Boolean@35
    typeConstructor = DeserializedClassTypeConstructor@41
}

LazyJavaClassifierType@14['Throwable'] {
    arguments = ArrayList@49[empty]
    classifier = JavaClassImpl@50['Throwable']
    typeConstructor = DeserializedClassTypeConstructor@41
}

LazyJavaPackageFragmentProvider@51 {
    packageFragments('<root>': FqName@52) = LazyJavaPackageFragment@53['<root>']
    packageFragments('Boolean': FqName@54) = null
    packageFragments('C': FqName@55) = null
    packageFragments('Int': FqName@56) = null
    packageFragments('MutableIterator': FqName@57) = null
    packageFragments('Unit': FqName@58) = null
    packageFragments('java': FqName@59) = LazyJavaPackageFragment@60['java']
    packageFragments('java.lang': FqName@61) = LazyJavaPackageFragment@62['lang']
    packageFragments('java.lang.Boolean': FqName@63) = null
    packageFragments('java.lang.Int': FqName@64) = null
    packageFragments('java.lang.MutableIterator': FqName@65) = null
    packageFragments('java.lang.Unit': FqName@66) = null
    packageFragments('kotlin': FqName@67) = null
    packageFragments('kotlin.Boolean': FqName@68) = null
    packageFragments('kotlin.Int': FqName@69) = null
    packageFragments('kotlin.MutableIterator': FqName@70) = null
    packageFragments('kotlin.Unit': FqName@71) = null
    packageFragments('kotlin.io': FqName@72) = null
    packageFragments('kotlin.jvm': FqName@73) = null
    topLevelClasses(JavaClassImpl@22['Exception']) = LazyJavaClassDescriptor@0['Exception']
    topLevelClasses(JavaClassImpl@24['RuntimeException']) = LazyJavaClassDescriptor@2['RuntimeException']
    topLevelClasses(JavaClassImpl@74['UnsupportedOperationException']) = LazyJavaClassDescriptor@4['UnsupportedOperationException']
}

LazyJavaPackageFragment@53['<root>'] {
    classes('Boolean': Name@75) = null // through LazyPackageFragmentScopeForJavaPackage@76
    classes('Int': Name@77) = null // through LazyPackageFragmentScopeForJavaPackage@76
    classes('MutableIterator': Name@78) = null // through LazyPackageFragmentScopeForJavaPackage@76
    classes('Unit': Name@79) = null // through LazyPackageFragmentScopeForJavaPackage@76
    classes('UnsupportedOperationException': Name@80) = null // through LazyPackageFragmentScopeForJavaPackage@76
    deserializedPackageScope = Empty@81 // through LazyPackageFragmentScopeForJavaPackage@76
    functions('UnsupportedOperationException': Name@80) = EmptyList@82[empty] // through LazyPackageFragmentScopeForJavaPackage@76
    memberIndex = computeMemberIndex$1@83 // through LazyPackageFragmentScopeForJavaPackage@76
}

LazyJavaPackageFragment@60['java'] {
    classes('lang': Name@84) = null // through LazyPackageFragmentScopeForJavaPackage@85
    deserializedPackageScope = Empty@81 // through LazyPackageFragmentScopeForJavaPackage@85
    functions('lang': Name@86) = EmptyList@82[empty] // through LazyPackageFragmentScopeForJavaPackage@85
    memberIndex = computeMemberIndex$1@87 // through LazyPackageFragmentScopeForJavaPackage@85
}

LazyJavaPackageFragment@62['lang'] {
    classes('UnsupportedOperationException': Name@80) = LazyJavaClassDescriptor@4['UnsupportedOperationException'] // through LazyPackageFragmentScopeForJavaPackage@88
    deserializedPackageScope = Empty@81 // through LazyPackageFragmentScopeForJavaPackage@88
    functions('UnsupportedOperationException': Name@80) = EmptyList@82[empty] // through LazyPackageFragmentScopeForJavaPackage@88
    memberIndex = computeMemberIndex$1@89 // through LazyPackageFragmentScopeForJavaPackage@88
}

ResolutionTaskHolder@90 {
    <name not found> = ArrayList@91[4] { ResolutionCandidate@92, ResolutionCandidate@93, ResolutionCandidate@94, ... }
    <name not found> = ArrayList@95[4] { ResolutionCandidate@92, ResolutionCandidate@93, ResolutionCandidate@94, ... }
    <name not found> = EmptyList@82[empty]
    <name not found> = EmptyList@82[empty]
    <name not found> = EmptyList@82[empty]
    <name not found> = EmptyList@82[empty]
    <name not found> = EmptyList@82[empty]
    <name not found> = EmptyList@82[empty]
    <name not found> = EmptyList@82[empty]
    <name not found> = EmptyList@82[empty]
    <name not found> = EmptyList@82[empty]
    <name not found> = EmptyList@82[empty]
    <name not found> = EmptyList@82[empty]
    <name not found> = EmptyList@82[empty]
    <name not found> = EmptyList@82[empty]
    <name not found> = EmptyList@82[empty]
    <name not found> = EmptyList@82[empty]
    <name not found> = EmptyList@82[empty]
}

ResolutionTaskHolder@96 {
    <name not found> = ArrayList@97[4] { ResolutionCandidate@98, ResolutionCandidate@99, ResolutionCandidate@100, ... }
    <name not found> = ArrayList@101[4] { ResolutionCandidate@98, ResolutionCandidate@99, ResolutionCandidate@100, ... }
    <name not found> = EmptyList@82[empty]
    <name not found> = EmptyList@82[empty]
    <name not found> = EmptyList@82[empty]
    <name not found> = EmptyList@82[empty]
    <name not found> = EmptyList@82[empty]
    <name not found> = EmptyList@82[empty]
    <name not found> = EmptyList@82[empty]
    <name not found> = EmptyList@82[empty]
    <name not found> = EmptyList@82[empty]
    <name not found> = EmptyList@82[empty]
    <name not found> = EmptyList@82[empty]
    <name not found> = EmptyList@82[empty]
    <name not found> = EmptyList@82[empty]
    <name not found> = EmptyList@82[empty]
    <name not found> = EmptyList@82[empty]
    <name not found> = EmptyList@82[empty]
}

ResolutionTaskHolder@102 {
    <name not found> = ArrayList@103[4] { ResolutionCandidate@104, ResolutionCandidate@105, ResolutionCandidate@106, ... }
    <name not found> = ArrayList@107[4] { ResolutionCandidate@104, ResolutionCandidate@105, ResolutionCandidate@106, ... }
    <name not found> = EmptyList@82[empty]
    <name not found> = EmptyList@82[empty]
    <name not found> = EmptyList@82[empty]
    <name not found> = EmptyList@82[empty]
    <name not found> = EmptyList@82[empty]
    <name not found> = EmptyList@82[empty]
    <name not found> = EmptyList@82[empty]
    <name not found> = EmptyList@82[empty]
    <name not found> = EmptyList@82[empty]
    <name not found> = EmptyList@82[empty]
    <name not found> = EmptyList@82[empty]
    <name not found> = EmptyList@82[empty]
    <name not found> = EmptyList@82[empty]
    <name not found> = EmptyList@82[empty]
    <name not found> = EmptyList@82[empty]
    <name not found> = EmptyList@82[empty]
}
