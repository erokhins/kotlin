LazyJavaClassDescriptor@0['Exception'] {
    typeConstructor = LazyJavaClassTypeConstructor@1['Exception']
}

LazyJavaClassDescriptor@2['NullPointerException'] {
    constructors = ArrayList@3[2] { JavaConstructorDescriptor@4['<init>'], JavaConstructorDescriptor@5['<init>'] } // through LazyJavaClassMemberScope@6
    defaultType = JetTypeImpl@7['NullPointerException']
    functionTypeForSamInterface = null
    typeConstructor = LazyJavaClassTypeConstructor@8['NullPointerException']
}

LazyJavaClassDescriptor@9['RuntimeException'] {
    typeConstructor = LazyJavaClassTypeConstructor@10['RuntimeException']
}

LazyJavaClassTypeConstructor@1['Exception'] {
    parameters = ArrayList@11[empty]
    supertypes = ArrayList@12[1] { LazyJavaClassifierType@13['Throwable'] }
}

LazyJavaClassTypeConstructor@8['NullPointerException'] {
    parameters = ArrayList@14[empty]
    supertypes = ArrayList@15[1] { LazyJavaClassifierType@16['RuntimeException'] }
}

LazyJavaClassTypeConstructor@10['RuntimeException'] {
    parameters = ArrayList@17[empty]
    supertypes = ArrayList@18[1] { LazyJavaClassifierType@19['Exception'] }
}

LazyJavaClassifierType@19['Exception'] {
    arguments = ArrayList@20[empty]
    classifier = JavaClassImpl@21['Exception']
    typeConstructor = LazyJavaClassTypeConstructor@1['Exception']
}

LazyJavaClassifierType@16['RuntimeException'] {
    arguments = ArrayList@22[empty]
    classifier = JavaClassImpl@23['RuntimeException']
    typeConstructor = LazyJavaClassTypeConstructor@10['RuntimeException']
}

LazyJavaClassifierType@24['String'] {
    arguments = ArrayList@25[empty]
    classifier = JavaClassImpl@26['String']
    nullable = 'false': Boolean@27
    typeConstructor = DeserializedClassTypeConstructor@28
}

LazyJavaClassifierType@29['String'] {
    arguments = ArrayList@30[empty]
    classifier = JavaClassImpl@26['String']
    nullable = 'true': Boolean@31
    typeConstructor = DeserializedClassTypeConstructor@28
}

LazyJavaClassifierType@13['Throwable'] {
    arguments = ArrayList@32[empty]
    classifier = JavaClassImpl@33['Throwable']
    typeConstructor = DeserializedClassTypeConstructor@34
}

LazyJavaPackageFragmentProvider@35 {
    packageFragments('<root>': FqName@36) = LazyJavaPackageFragment@37['<root>']
    packageFragments('Any': FqName@38) = null
    packageFragments('Iterable': FqName@39) = null
    packageFragments('String': FqName@40) = null
    packageFragments('T': FqName@41) = null
    packageFragments('java': FqName@42) = LazyJavaPackageFragment@43['java']
    packageFragments('java.lang': FqName@44) = LazyJavaPackageFragment@45['lang']
    packageFragments('java.lang.Any': FqName@46) = null
    packageFragments('java.lang.Iterable': FqName@47) = null
    packageFragments('java.lang.String': FqName@48) = null
    packageFragments('java.lang.T': FqName@49) = null
    packageFragments('kotlin': FqName@50) = null
    packageFragments('kotlin.Any': FqName@51) = null
    packageFragments('kotlin.Iterable': FqName@52) = null
    packageFragments('kotlin.String': FqName@53) = null
    packageFragments('kotlin.T': FqName@54) = null
    packageFragments('kotlin.io': FqName@55) = null
    packageFragments('kotlin.jvm': FqName@56) = null
    topLevelClasses(JavaClassImpl@21['Exception']) = LazyJavaClassDescriptor@0['Exception']
    topLevelClasses(JavaClassImpl@57['NullPointerException']) = LazyJavaClassDescriptor@2['NullPointerException']
    topLevelClasses(JavaClassImpl@23['RuntimeException']) = LazyJavaClassDescriptor@9['RuntimeException']
}

LazyJavaPackageFragment@37['<root>'] {
    classes('Any': Name@58) = null // through LazyPackageFragmentScopeForJavaPackage@59
    classes('Iterable': Name@60) = null // through LazyPackageFragmentScopeForJavaPackage@59
    classes('NullPointerException': Name@61) = null // through LazyPackageFragmentScopeForJavaPackage@59
    classes('String': Name@62) = null // through LazyPackageFragmentScopeForJavaPackage@59
    classes('equals': Name@63) = null // through LazyPackageFragmentScopeForJavaPackage@59
    classes('npe': Name@64) = null // through LazyPackageFragmentScopeForJavaPackage@59
    deserializedPackageScope = Empty@65 // through LazyPackageFragmentScopeForJavaPackage@59
    functions('NullPointerException': Name@61) = EmptyList@66[empty] // through LazyPackageFragmentScopeForJavaPackage@59
    functions('equals': Name@63) = EmptyList@66[empty] // through LazyPackageFragmentScopeForJavaPackage@59
    functions('npe': Name@64) = EmptyList@66[empty] // through LazyPackageFragmentScopeForJavaPackage@59
    memberIndex = computeMemberIndex$1@67 // through LazyPackageFragmentScopeForJavaPackage@59
}

LazyJavaPackageFragment@43['java'] {
    classes('lang': Name@68) = null // through LazyPackageFragmentScopeForJavaPackage@69
    deserializedPackageScope = Empty@65 // through LazyPackageFragmentScopeForJavaPackage@69
    functions('lang': Name@70) = EmptyList@66[empty] // through LazyPackageFragmentScopeForJavaPackage@69
    memberIndex = computeMemberIndex$1@71 // through LazyPackageFragmentScopeForJavaPackage@69
}

LazyJavaPackageFragment@45['lang'] {
    classes('NullPointerException': Name@61) = LazyJavaClassDescriptor@2['NullPointerException'] // through LazyPackageFragmentScopeForJavaPackage@72
    classes('equals': Name@63) = null // through LazyPackageFragmentScopeForJavaPackage@72
    classes('npe': Name@64) = null // through LazyPackageFragmentScopeForJavaPackage@72
    deserializedPackageScope = Empty@65 // through LazyPackageFragmentScopeForJavaPackage@72
    functions('NullPointerException': Name@61) = EmptyList@66[empty] // through LazyPackageFragmentScopeForJavaPackage@72
    functions('equals': Name@63) = EmptyList@66[empty] // through LazyPackageFragmentScopeForJavaPackage@72
    functions('npe': Name@64) = EmptyList@66[empty] // through LazyPackageFragmentScopeForJavaPackage@72
    memberIndex = computeMemberIndex$1@73 // through LazyPackageFragmentScopeForJavaPackage@72
}

ResolutionTaskHolder@74 {
    <name not found> = ArrayList@75[1] { ResolutionCandidate@76 }
    <name not found> = ArrayList@77[1] { ResolutionCandidate@76 }
    <name not found> = ArrayList@78[1] { ResolutionCandidate@79 }
    <name not found> = ArrayList@80[1] { ResolutionCandidate@79 }
    <name not found> = EmptyList@66[empty]
    <name not found> = EmptyList@66[empty]
    <name not found> = EmptyList@66[empty]
    <name not found> = EmptyList@66[empty]
}

ResolutionTaskHolder@81 {
    <name not found> = ArrayList@82[1] { ResolutionCandidate@83 }
    <name not found> = ArrayList@84[1] { ResolutionCandidate@83 }
    <name not found> = EmptyList@66[empty]
    <name not found> = EmptyList@66[empty]
    <name not found> = EmptyList@66[empty]
    <name not found> = EmptyList@66[empty]
    <name not found> = EmptyList@66[empty]
    <name not found> = EmptyList@66[empty]
}

ResolutionTaskHolder@85 {
    <name not found> = ArrayList@86[1] { ResolutionCandidate@87 }
    <name not found> = ArrayList@88[1] { ResolutionCandidate@87 }
}

ResolutionTaskHolder@89 {
    <name not found> = ArrayList@90[2] { ResolutionCandidate@91, ResolutionCandidate@92 }
    <name not found> = ArrayList@93[2] { ResolutionCandidate@91, ResolutionCandidate@92 }
    <name not found> = EmptyList@66[empty]
    <name not found> = EmptyList@66[empty]
    <name not found> = EmptyList@66[empty]
    <name not found> = EmptyList@66[empty]
    <name not found> = EmptyList@66[empty]
    <name not found> = EmptyList@66[empty]
    <name not found> = EmptyList@66[empty]
    <name not found> = EmptyList@66[empty]
    <name not found> = EmptyList@66[empty]
    <name not found> = EmptyList@66[empty]
    <name not found> = EmptyList@66[empty]
    <name not found> = EmptyList@66[empty]
    <name not found> = EmptyList@66[empty]
    <name not found> = EmptyList@66[empty]
    <name not found> = EmptyList@66[empty]
    <name not found> = EmptyList@66[empty]
}
