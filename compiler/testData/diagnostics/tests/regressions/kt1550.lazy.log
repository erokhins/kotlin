LazyJavaClassDescriptor@0['AbstractCollection'] {
    defaultType = JetTypeImpl@1['AbstractCollection<1>']
    functions('add': Name@2) = ArrayList@3[1] { JavaMethodDescriptor@4['add'] } // through LazyJavaClassMemberScope@5
    functions('get': Name@6) = EmptyList@7[empty] // through LazyJavaClassMemberScope@5
    memberIndex = computeMemberIndex$1@8 // through LazyJavaClassMemberScope@5
    thisAsReceiverParameter = LazyClassReceiverParameterDescriptor@9['<this>']
    typeConstructor = LazyJavaClassTypeConstructor@10['AbstractCollection']
}

LazyJavaClassDescriptor@11['AbstractList'] {
    defaultType = JetTypeImpl@12['AbstractList<1>']
    functions('add': Name@13) = ArrayList@14[2] { JavaMethodDescriptor@15['add'], JavaMethodDescriptor@16['add'] } // through LazyJavaClassMemberScope@17
    functions('get': Name@18) = ArrayList@19[1] { JavaMethodDescriptor@20['get'] } // through LazyJavaClassMemberScope@17
    memberIndex = computeMemberIndex$1@21 // through LazyJavaClassMemberScope@17
    thisAsReceiverParameter = LazyClassReceiverParameterDescriptor@22['<this>']
    typeConstructor = LazyJavaClassTypeConstructor@23['AbstractList']
}

LazyJavaClassDescriptor@24['Appendable'] {
    functions('println': Name@25) = EmptyList@7[empty] // through LazyJavaClassMemberScope@26
    memberIndex = computeMemberIndex$1@27 // through LazyJavaClassMemberScope@26
    typeConstructor = LazyJavaClassTypeConstructor@28['Appendable']
}

LazyJavaClassDescriptor@29['ArrayList'] {
    constructors = ArrayList@30[3] { JavaConstructorDescriptor@31['<init>'], JavaConstructorDescriptor@32['<init>'], JavaConstructorDescriptor@33['<init>'] } // through LazyJavaClassMemberScope@34
    defaultType = JetTypeImpl@35['ArrayList<1>']
    enumEntryIndex = LinkedHashMap@36 // through LazyJavaClassMemberScope@34
    functionTypeForSamInterface = null
    functions('add': Name@37) = ArrayList@38[2] { JavaMethodDescriptor@39['add'], JavaMethodDescriptor@40['add'] } // through LazyJavaClassMemberScope@34
    functions('get': Name@41) = ArrayList@42[1] { JavaMethodDescriptor@43['get'] } // through LazyJavaClassMemberScope@34
    memberIndex = computeMemberIndex$1@44 // through LazyJavaClassMemberScope@34
    nestedClassIndex = LinkedHashMap@45 // through LazyJavaClassMemberScope@34
    nestedClasses('add': Name@37) = null // through LazyJavaClassMemberScope@34
    nestedClasses('get': Name@41) = null // through LazyJavaClassMemberScope@34
    thisAsReceiverParameter = LazyClassReceiverParameterDescriptor@46['<this>']
    typeConstructor = LazyJavaClassTypeConstructor@47['ArrayList']
}

LazyJavaClassDescriptor@48['AutoCloseable'] {
    functions('println': Name@25) = EmptyList@7[empty] // through LazyJavaClassMemberScope@49
    memberIndex = computeMemberIndex$1@50 // through LazyJavaClassMemberScope@49
    typeConstructor = LazyJavaClassTypeConstructor@51['AutoCloseable']
}

LazyJavaClassDescriptor@52['Closeable'] {
    functions('println': Name@25) = EmptyList@7[empty] // through LazyJavaClassMemberScope@53
    memberIndex = computeMemberIndex$1@54 // through LazyJavaClassMemberScope@53
    typeConstructor = LazyJavaClassTypeConstructor@55['Closeable']
}

LazyJavaClassDescriptor@56['FilterOutputStream'] {
    functions('println': Name@25) = EmptyList@7[empty] // through LazyJavaClassMemberScope@57
    memberIndex = computeMemberIndex$1@58 // through LazyJavaClassMemberScope@57
    typeConstructor = LazyJavaClassTypeConstructor@59['FilterOutputStream']
}

LazyJavaClassDescriptor@60['OutputStream'] {
    functions('println': Name@25) = EmptyList@7[empty] // through LazyJavaClassMemberScope@61
    memberIndex = computeMemberIndex$1@62 // through LazyJavaClassMemberScope@61
    typeConstructor = LazyJavaClassTypeConstructor@63['OutputStream']
}

LazyJavaClassDescriptor@64['PrintStream'] {
    defaultType = JetTypeImpl@65['PrintStream']
    enumEntryIndex = LinkedHashMap@66 // through LazyJavaClassMemberScope@67
    functions('println': Name@68) = ArrayList@69[10] { JavaMethodDescriptor@70['println'], JavaMethodDescriptor@71['println'], JavaMethodDescriptor@72['println'], ... } // through LazyJavaClassMemberScope@67
    memberIndex = computeMemberIndex$1@73 // through LazyJavaClassMemberScope@67
    nestedClassIndex = LinkedHashMap@74 // through LazyJavaClassMemberScope@67
    nestedClasses('println': Name@68) = null // through LazyJavaClassMemberScope@67
    thisAsReceiverParameter = LazyClassReceiverParameterDescriptor@75['<this>']
    typeConstructor = LazyJavaClassTypeConstructor@76['PrintStream']
}

LazyJavaClassDescriptor@77['RandomAccess'] {
    functions('add': Name@13) = EmptyList@7[empty] // through LazyJavaClassMemberScope@78
    functions('get': Name@18) = EmptyList@7[empty] // through LazyJavaClassMemberScope@78
    memberIndex = computeMemberIndex$1@79 // through LazyJavaClassMemberScope@78
    typeConstructor = LazyJavaClassTypeConstructor@80['RandomAccess']
}

LazyJavaClassDescriptor@81['Serializable'] {
    functions('add': Name@13) = EmptyList@7[empty] // through LazyJavaClassMemberScope@82
    functions('get': Name@18) = EmptyList@7[empty] // through LazyJavaClassMemberScope@82
    memberIndex = computeMemberIndex$1@83 // through LazyJavaClassMemberScope@82
    typeConstructor = LazyJavaClassTypeConstructor@84['Serializable']
}

LazyJavaClassDescriptor@85['System'] {
    enumEntryIndex = LinkedHashMap@86 // through LazyJavaClassMemberScope@87
    memberIndex = computeMemberIndex$1@88 // through LazyJavaClassMemberScope@87
    memberIndex = computeMemberIndex$1@89 // through LazyJavaStaticClassScope@90
    nestedClassIndex = LinkedHashMap@91 // through LazyJavaClassMemberScope@87
    nestedClasses('out': Name@92) = null // through LazyJavaClassMemberScope@87
    properties('out': Name@92) = ArrayList@93[1] { JavaPropertyDescriptor@94['out'] } // through LazyJavaStaticClassScope@90
    properties('out': Name@92) = EmptyList@7[empty] // through LazyJavaClassMemberScope@87
    typeConstructor = LazyJavaClassTypeConstructor@95['System']
}

LazyJavaClassTypeConstructor@10['AbstractCollection'] {
    parameters = ArrayList@96[1] { LazyJavaTypeParameterDescriptor@97['E'] }
    supertypes = ArrayList@98[1] { LazyJavaClassifierType@99['Collection<E>'] }
}

LazyJavaClassTypeConstructor@23['AbstractList'] {
    parameters = ArrayList@100[1] { LazyJavaTypeParameterDescriptor@101['E'] }
    supertypes = ArrayList@102[2] { LazyJavaClassifierType@103['AbstractCollection<E>'], LazyJavaClassifierType@104['List<E>'] }
}

LazyJavaClassTypeConstructor@28['Appendable'] {
    parameters = ArrayList@105[empty]
    supertypes = ArrayList@106[1] { JetTypeImpl@107['Any'] }
}

LazyJavaClassTypeConstructor@47['ArrayList'] {
    parameters = ArrayList@108[1] { LazyJavaTypeParameterDescriptor@109['E'] }
    supertypes = ArrayList@110[5] { LazyJavaClassifierType@111['AbstractList<E>'], LazyJavaClassifierType@112['List<E>'], LazyJavaClassifierType@113['RandomAccess'], ... }
}

LazyJavaClassTypeConstructor@51['AutoCloseable'] {
    parameters = ArrayList@114[empty]
    supertypes = ArrayList@115[1] { JetTypeImpl@107['Any'] }
}

LazyJavaClassTypeConstructor@55['Closeable'] {
    parameters = ArrayList@116[empty]
    supertypes = ArrayList@117[1] { LazyJavaClassifierType@118['AutoCloseable'] }
}

LazyJavaClassTypeConstructor@59['FilterOutputStream'] {
    parameters = ArrayList@119[empty]
    supertypes = ArrayList@120[1] { LazyJavaClassifierType@121['OutputStream'] }
}

LazyJavaClassTypeConstructor@63['OutputStream'] {
    parameters = ArrayList@122[empty]
    supertypes = ArrayList@123[1] { LazyJavaClassifierType@124['Closeable'] }
}

LazyJavaClassTypeConstructor@76['PrintStream'] {
    parameters = ArrayList@125[empty]
    supertypes = ArrayList@126[3] { LazyJavaClassifierType@127['FilterOutputStream'], LazyJavaClassifierType@128['Appendable'], LazyJavaClassifierType@129['Closeable'] }
}

LazyJavaClassTypeConstructor@80['RandomAccess'] {
    parameters = ArrayList@130[empty]
    supertypes = ArrayList@131[1] { JetTypeImpl@107['Any'] }
}

LazyJavaClassTypeConstructor@84['Serializable'] {
    parameters = ArrayList@132[empty]
    supertypes = ArrayList@133[1] { JetTypeImpl@107['Any'] }
}

LazyJavaClassTypeConstructor@95['System'] {
    supertypes = ArrayList@134[1] { JetTypeImpl@107['Any'] }
}

LazyJavaClassifierType@103['AbstractCollection<E>'] {
    arguments = ArrayList@135[1] { TypeProjectionImpl@136 }
    classifier = JavaClassImpl@137['AbstractCollection']
    memberScope = SubstitutingScope@138
    typeConstructor = LazyJavaClassTypeConstructor@10['AbstractCollection']
}

LazyJavaClassifierType@111['AbstractList<E>'] {
    arguments = ArrayList@139[1] { TypeProjectionImpl@140 }
    classifier = JavaClassImpl@141['AbstractList']
    memberScope = SubstitutingScope@142
    typeConstructor = LazyJavaClassTypeConstructor@23['AbstractList']
}

LazyJavaClassifierType@128['Appendable'] {
    arguments = ArrayList@143[empty]
    classifier = JavaClassImpl@144['Appendable']
    memberScope = LazyJavaClassMemberScope@26
    typeConstructor = LazyJavaClassTypeConstructor@28['Appendable']
}

LazyJavaClassifierType@118['AutoCloseable'] {
    arguments = ArrayList@145[empty]
    classifier = JavaClassImpl@146['AutoCloseable']
    memberScope = LazyJavaClassMemberScope@49
    typeConstructor = LazyJavaClassTypeConstructor@51['AutoCloseable']
}

LazyJavaClassifierType@147['Cloneable'] {
    arguments = ArrayList@148[empty]
    classifier = JavaClassImpl@149['Cloneable']
    memberScope = DeserializedClassMemberScope@150
    typeConstructor = DeserializedClassTypeConstructor@151
}

LazyJavaClassifierType@129['Closeable'] {
    arguments = ArrayList@152[empty]
    classifier = JavaClassImpl@153['Closeable']
    memberScope = LazyJavaClassMemberScope@53
    typeConstructor = LazyJavaClassTypeConstructor@55['Closeable']
}

LazyJavaClassifierType@124['Closeable'] {
    arguments = ArrayList@154[empty]
    classifier = JavaClassImpl@155['Closeable']
    memberScope = LazyJavaClassMemberScope@53
    typeConstructor = LazyJavaClassTypeConstructor@55['Closeable']
}

LazyJavaClassifierType@156['Collection<? extends E>'] {
    arguments = ArrayList@157[1] { TypeProjectionImpl@158 }
    classifier = JavaClassImpl@159['Collection']
    memberScope = SubstitutingScope@160
    nullable = 'false': Boolean@161
    typeConstructor = DeserializedClassTypeConstructor@162
}

LazyJavaClassifierType@163['Collection<? extends E>'] {
    arguments = ArrayList@164[1] { TypeProjectionImpl@165 }
    classifier = JavaClassImpl@159['Collection']
    memberScope = SubstitutingScope@166
    nullable = 'true': Boolean@167
    typeConstructor = DeserializedClassTypeConstructor@168
}

LazyJavaClassifierType@99['Collection<E>'] {
    arguments = ArrayList@169[1] { TypeProjectionImpl@170 }
    classifier = JavaClassImpl@171['Collection']
    memberScope = SubstitutingScope@172
    typeConstructor = DeserializedClassTypeConstructor@162
}

LazyJavaClassifierType@173['E'] {
    arguments = ArrayList@174[empty]
    classifier = JavaTypeParameterImpl@175['E']
    nullable = 'false': Boolean@161
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@176
}

LazyJavaClassifierType@177['E'] {
    arguments = ArrayList@178[empty]
    classifier = JavaTypeParameterImpl@179['E']
    nullable = 'false': Boolean@161
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@180
}

LazyJavaClassifierType@181['E'] {
    arguments = ArrayList@182[empty]
    classifier = JavaTypeParameterImpl@183['E']
    nullable = 'false': Boolean@161
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@176
}

LazyJavaClassifierType@184['E'] {
    arguments = ArrayList@185[empty]
    classifier = JavaTypeParameterImpl@186['E']
    nullable = 'false': Boolean@161
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@176
}

LazyJavaClassifierType@187['E'] {
    arguments = ArrayList@188[empty]
    classifier = JavaTypeParameterImpl@189['E']
    nullable = 'false': Boolean@161
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@176
}

LazyJavaClassifierType@190['E'] {
    arguments = ArrayList@191[empty]
    classifier = JavaTypeParameterImpl@192['E']
    nullable = 'false': Boolean@161
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@180
}

LazyJavaClassifierType@193['E'] {
    arguments = ArrayList@194[empty]
    classifier = JavaTypeParameterImpl@195['E']
    nullable = 'false': Boolean@161
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@180
}

LazyJavaClassifierType@196['E'] {
    arguments = ArrayList@197[empty]
    classifier = JavaTypeParameterImpl@198['E']
    nullable = 'false': Boolean@161
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@180
}

LazyJavaClassifierType@199['E'] {
    arguments = ArrayList@200[empty]
    classifier = JavaTypeParameterImpl@201['E']
    nullable = 'false': Boolean@161
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@176
}

LazyJavaClassifierType@202['E'] {
    arguments = ArrayList@203[empty]
    classifier = JavaTypeParameterImpl@204['E']
    nullable = 'false': Boolean@161
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@176
}

LazyJavaClassifierType@205['E'] {
    arguments = ArrayList@206[empty]
    classifier = JavaTypeParameterImpl@207['E']
    nullable = 'false': Boolean@161
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@208
}

LazyJavaClassifierType@209['E'] {
    arguments = ArrayList@210[empty]
    classifier = JavaTypeParameterImpl@211['E']
    nullable = 'false': Boolean@161
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@180
}

LazyJavaClassifierType@212['E'] {
    arguments = ArrayList@213[empty]
    classifier = JavaTypeParameterImpl@214['E']
    nullable = 'false': Boolean@161
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@176
}

LazyJavaClassifierType@215['E'] {
    arguments = ArrayList@216[empty]
    classifier = JavaTypeParameterImpl@217['E']
    nullable = 'false': Boolean@161
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@208
}

LazyJavaClassifierType@218['E'] {
    arguments = ArrayList@219[empty]
    classifier = JavaTypeParameterImpl@211['E']
    nullable = 'true': Boolean@167
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@180
}

LazyJavaClassifierType@220['E'] {
    arguments = ArrayList@221[empty]
    classifier = JavaTypeParameterImpl@179['E']
    nullable = 'true': Boolean@167
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@180
}

LazyJavaClassifierType@222['E'] {
    arguments = ArrayList@223[empty]
    classifier = JavaTypeParameterImpl@189['E']
    nullable = 'true': Boolean@167
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@176
}

LazyJavaClassifierType@224['E'] {
    arguments = ArrayList@225[empty]
    classifier = JavaTypeParameterImpl@183['E']
    nullable = 'true': Boolean@167
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@176
}

LazyJavaClassifierType@226['E'] {
    arguments = ArrayList@227[empty]
    classifier = JavaTypeParameterImpl@204['E']
    nullable = 'true': Boolean@167
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@176
}

LazyJavaClassifierType@228['E'] {
    arguments = ArrayList@229[empty]
    classifier = JavaTypeParameterImpl@207['E']
    nullable = 'true': Boolean@167
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@208
}

LazyJavaClassifierType@230['E'] {
    arguments = ArrayList@231[empty]
    classifier = JavaTypeParameterImpl@198['E']
    nullable = 'true': Boolean@167
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@180
}

LazyJavaClassifierType@232['E'] {
    arguments = ArrayList@233[empty]
    classifier = JavaTypeParameterImpl@186['E']
    nullable = 'true': Boolean@167
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@176
}

LazyJavaClassifierType@234['E'] {
    arguments = ArrayList@235[empty]
    classifier = JavaTypeParameterImpl@175['E']
    nullable = 'true': Boolean@167
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@176
}

LazyJavaClassifierType@236['E'] {
    arguments = ArrayList@237[empty]
    classifier = JavaTypeParameterImpl@214['E']
    nullable = 'true': Boolean@167
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@176
}

LazyJavaClassifierType@238['E'] {
    arguments = ArrayList@239[empty]
    classifier = JavaTypeParameterImpl@195['E']
    nullable = 'true': Boolean@167
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@180
}

LazyJavaClassifierType@240['E'] {
    arguments = ArrayList@241[empty]
    classifier = JavaTypeParameterImpl@217['E']
    nullable = 'true': Boolean@167
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@208
}

LazyJavaClassifierType@242['E'] {
    arguments = ArrayList@243[empty]
    classifier = JavaTypeParameterImpl@201['E']
    nullable = 'true': Boolean@167
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@176
}

LazyJavaClassifierType@244['E'] {
    arguments = ArrayList@245[empty]
    classifier = JavaTypeParameterImpl@192['E']
    nullable = 'true': Boolean@167
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@180
}

LazyJavaClassifierType@127['FilterOutputStream'] {
    arguments = ArrayList@246[empty]
    classifier = JavaClassImpl@247['FilterOutputStream']
    memberScope = LazyJavaClassMemberScope@57
    typeConstructor = LazyJavaClassTypeConstructor@59['FilterOutputStream']
}

LazyJavaClassifierType@248['Flushable'] {
    classifier = null
    typeConstructor = TypeConstructorImpl$1@249
}

LazyJavaClassifierType@104['List<E>'] {
    arguments = ArrayList@250[1] { TypeProjectionImpl@251 }
    classifier = JavaClassImpl@252['List']
    memberScope = SubstitutingScope@253
    typeConstructor = DeserializedClassTypeConstructor@254
}

LazyJavaClassifierType@112['List<E>'] {
    arguments = ArrayList@255[1] { TypeProjectionImpl@256 }
    classifier = JavaClassImpl@257['List']
    memberScope = SubstitutingScope@258
    typeConstructor = DeserializedClassTypeConstructor@254
}

LazyJavaClassifierType@259['Object'] {
    arguments = ArrayList@260[empty]
    classifier = JavaClassImpl@261['Object']
    nullable = 'false': Boolean@161
    typeConstructor = DeserializedClassTypeConstructor@262
}

LazyJavaClassifierType@263['Object'] {
    arguments = ArrayList@264[empty]
    classifier = JavaClassImpl@261['Object']
    nullable = 'true': Boolean@167
    typeConstructor = DeserializedClassTypeConstructor@262
}

LazyJavaClassifierType@265['Object'] {
    classifier = JavaClassImpl@266['Object']
    typeConstructor = DeserializedClassTypeConstructor@262
}

LazyJavaClassifierType@267['Object'] {
    classifier = JavaClassImpl@268['Object']
    typeConstructor = DeserializedClassTypeConstructor@262
}

LazyJavaClassifierType@269['Object'] {
    classifier = JavaClassImpl@270['Object']
    typeConstructor = DeserializedClassTypeConstructor@262
}

LazyJavaClassifierType@271['Object'] {
    classifier = JavaClassImpl@272['Object']
    typeConstructor = DeserializedClassTypeConstructor@262
}

LazyJavaClassifierType@273['Object'] {
    classifier = JavaClassImpl@274['Object']
    typeConstructor = DeserializedClassTypeConstructor@262
}

LazyJavaClassifierType@275['Object'] {
    classifier = JavaClassImpl@276['Object']
    typeConstructor = DeserializedClassTypeConstructor@262
}

LazyJavaClassifierType@277['Object'] {
    classifier = JavaClassImpl@278['Object']
    typeConstructor = DeserializedClassTypeConstructor@262
}

LazyJavaClassifierType@121['OutputStream'] {
    arguments = ArrayList@279[empty]
    classifier = JavaClassImpl@280['OutputStream']
    memberScope = LazyJavaClassMemberScope@61
    typeConstructor = LazyJavaClassTypeConstructor@63['OutputStream']
}

LazyJavaClassifierType@281['PrintStream'] {
    arguments = ArrayList@282[empty]
    classifier = JavaClassImpl@283['PrintStream']
    memberScope = LazyJavaClassMemberScope@67
    nullable = 'false': Boolean@161
    typeConstructor = LazyJavaClassTypeConstructor@76['PrintStream']
}

LazyJavaClassifierType@284['PrintStream'] {
    arguments = ArrayList@285[empty]
    classifier = JavaClassImpl@283['PrintStream']
    nullable = 'true': Boolean@167
    typeConstructor = LazyJavaClassTypeConstructor@76['PrintStream']
}

LazyJavaClassifierType@113['RandomAccess'] {
    arguments = ArrayList@286[empty]
    classifier = JavaClassImpl@287['RandomAccess']
    memberScope = LazyJavaClassMemberScope@78
    typeConstructor = LazyJavaClassTypeConstructor@80['RandomAccess']
}

LazyJavaClassifierType@288['Serializable'] {
    arguments = ArrayList@289[empty]
    classifier = JavaClassImpl@290['Serializable']
    memberScope = LazyJavaClassMemberScope@82
    typeConstructor = LazyJavaClassTypeConstructor@84['Serializable']
}

LazyJavaClassifierType@291['String'] {
    arguments = ArrayList@292[empty]
    classifier = JavaClassImpl@293['String']
    nullable = 'false': Boolean@161
    typeConstructor = DeserializedClassTypeConstructor@294
}

LazyJavaClassifierType@295['String'] {
    arguments = ArrayList@296[empty]
    classifier = JavaClassImpl@293['String']
    nullable = 'true': Boolean@167
    typeConstructor = DeserializedClassTypeConstructor@294
}

LazyJavaPackageFragmentProvider@297 {
    packageFragments('<root>': FqName@298) = LazyJavaPackageFragment@299['<root>']
    packageFragments('Array': FqName@300) = null
    packageFragments('Int': FqName@301) = null
    packageFragments('String': FqName@302) = null
    packageFragments('System': FqName@303) = null
    packageFragments('foo': FqName@304) = null
    packageFragments('foo.Array': FqName@305) = null
    packageFragments('foo.Int': FqName@306) = null
    packageFragments('foo.String': FqName@307) = null
    packageFragments('foo.System': FqName@308) = null
    packageFragments('java': FqName@309) = LazyJavaPackageFragment@310['java']
    packageFragments('java.io': FqName@311) = LazyJavaPackageFragment@312['io']
    packageFragments('java.lang': FqName@313) = LazyJavaPackageFragment@314['lang']
    packageFragments('java.lang.Array': FqName@315) = null
    packageFragments('java.lang.Int': FqName@316) = null
    packageFragments('java.lang.String': FqName@317) = null
    packageFragments('java.lang.System': FqName@318) = null
    packageFragments('java.util': FqName@319) = LazyJavaPackageFragment@320['util']
    packageFragments('java.util.Array': FqName@321) = null
    packageFragments('java.util.Int': FqName@322) = null
    packageFragments('java.util.String': FqName@323) = null
    packageFragments('java.util.System': FqName@324) = null
    packageFragments('kotlin': FqName@325) = null
    packageFragments('kotlin.Array': FqName@326) = null
    packageFragments('kotlin.Int': FqName@327) = null
    packageFragments('kotlin.String': FqName@328) = null
    packageFragments('kotlin.System': FqName@329) = null
    packageFragments('kotlin.io': FqName@330) = null
    packageFragments('kotlin.jvm': FqName@331) = null
    topLevelClasses(JavaClassImpl@137['AbstractCollection']) = LazyJavaClassDescriptor@0['AbstractCollection']
    topLevelClasses(JavaClassImpl@141['AbstractList']) = LazyJavaClassDescriptor@11['AbstractList']
    topLevelClasses(JavaClassImpl@144['Appendable']) = LazyJavaClassDescriptor@24['Appendable']
    topLevelClasses(JavaClassImpl@332['ArrayList']) = LazyJavaClassDescriptor@29['ArrayList']
    topLevelClasses(JavaClassImpl@146['AutoCloseable']) = LazyJavaClassDescriptor@48['AutoCloseable']
    topLevelClasses(JavaClassImpl@153['Closeable']) = LazyJavaClassDescriptor@52['Closeable']
    topLevelClasses(JavaClassImpl@247['FilterOutputStream']) = LazyJavaClassDescriptor@56['FilterOutputStream']
    topLevelClasses(JavaClassImpl@280['OutputStream']) = LazyJavaClassDescriptor@60['OutputStream']
    topLevelClasses(JavaClassImpl@283['PrintStream']) = LazyJavaClassDescriptor@64['PrintStream']
    topLevelClasses(JavaClassImpl@287['RandomAccess']) = LazyJavaClassDescriptor@77['RandomAccess']
    topLevelClasses(JavaClassImpl@290['Serializable']) = LazyJavaClassDescriptor@81['Serializable']
    topLevelClasses(JavaClassImpl@333['System']) = LazyJavaClassDescriptor@85['System']
}

LazyJavaPackageFragment@310['java'] {
    classes('lang': Name@334) = null // through LazyPackageFragmentScopeForJavaPackage@335
    classes('util': Name@336) = null // through LazyPackageFragmentScopeForJavaPackage@335
    deserializedPackageScope = Empty@337 // through LazyPackageFragmentScopeForJavaPackage@335
    functions('lang': Name@338) = EmptyList@7[empty] // through LazyPackageFragmentScopeForJavaPackage@335
    functions('util': Name@339) = EmptyList@7[empty] // through LazyPackageFragmentScopeForJavaPackage@335
    memberIndex = computeMemberIndex$1@340 // through LazyPackageFragmentScopeForJavaPackage@335
}

LazyJavaPackageFragment@314['lang'] {
    classes('ArrayList': Name@341) = null // through LazyPackageFragmentScopeForJavaPackage@342
    classes('System': Name@343) = LazyJavaClassDescriptor@85['System'] // through LazyPackageFragmentScopeForJavaPackage@342
    deserializedPackageScope = Empty@337 // through LazyPackageFragmentScopeForJavaPackage@342
    functions('ArrayList': Name@341) = EmptyList@7[empty] // through LazyPackageFragmentScopeForJavaPackage@342
    memberIndex = computeMemberIndex$1@344 // through LazyPackageFragmentScopeForJavaPackage@342
}

LazyJavaPackageFragment@320['util'] {
    classes('Array': Name@345) = null // through LazyPackageFragmentScopeForJavaPackage@346
    classes('ArrayList': Name@341) = LazyJavaClassDescriptor@29['ArrayList'] // through LazyPackageFragmentScopeForJavaPackage@346
    classes('Int': Name@347) = null // through LazyPackageFragmentScopeForJavaPackage@346
    classes('String': Name@348) = null // through LazyPackageFragmentScopeForJavaPackage@346
    classes('System': Name@343) = null // through LazyPackageFragmentScopeForJavaPackage@346
    deserializedPackageScope = Empty@337 // through LazyPackageFragmentScopeForJavaPackage@346
    functions('ArrayList': Name@341) = EmptyList@7[empty] // through LazyPackageFragmentScopeForJavaPackage@346
    memberIndex = computeMemberIndex$1@349 // through LazyPackageFragmentScopeForJavaPackage@346
}

LazyJavaTypeParameterDescriptor@109['E'] {
    defaultType = JetTypeImpl@350['E']
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@176
    upperBounds = LinkedHashSet@351[1] { NullableType@352 }
    upperBoundsAsType = NullableType@352
}

LazyJavaTypeParameterDescriptor@97['E'] {
    defaultType = JetTypeImpl@353['E']
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@208
    upperBounds = LinkedHashSet@354[1] { NullableType@355 }
    upperBoundsAsType = NullableType@355
}

LazyJavaTypeParameterDescriptor@101['E'] {
    defaultType = JetTypeImpl@356['E']
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@180
    upperBounds = LinkedHashSet@357[1] { NullableType@358 }
    upperBoundsAsType = NullableType@358
}

LazyJavaTypeParameterResolver@359 {
    resolve(JavaTypeParameterImpl@360['E']) = LazyJavaTypeParameterDescriptor@109['E']
}

LazyJavaTypeParameterResolver@361 {
    resolve(JavaTypeParameterImpl@362['E']) = LazyJavaTypeParameterDescriptor@97['E']
}

LazyJavaTypeParameterResolver@363 {
    resolve(JavaTypeParameterImpl@364['E']) = LazyJavaTypeParameterDescriptor@101['E']
}

LazyJavaTypeParameterResolver@365 {
    resolve(JavaTypeParameterImpl@201['E']) = null
}

LazyJavaTypeParameterResolver@366 {
    resolve(JavaTypeParameterImpl@217['E']) = null
}

LazyJavaTypeParameterResolver@367 {
    resolve(JavaTypeParameterImpl@211['E']) = null
}

LazyJavaTypeParameterResolver@368 {
    resolve(JavaTypeParameterImpl@175['E']) = null
}

LazyJavaTypeParameterResolver@369 {
    resolve(JavaTypeParameterImpl@195['E']) = null
}

LazyJavaTypeParameterResolver@370 {
    resolve(JavaTypeParameterImpl@183['E']) = null
}

LazyJavaTypeParameterResolver@371 {
    resolve(JavaTypeParameterImpl@192['E']) = null
}

ResolutionTaskHolder@372 {
    <name not found> = ArrayList@373[10] { ResolutionCandidate@374, ResolutionCandidate@375, ResolutionCandidate@376, ... }
    <name not found> = ArrayList@377[10] { ResolutionCandidate@374, ResolutionCandidate@375, ResolutionCandidate@376, ... }
}

ResolutionTaskHolder@378 {
    <name not found> = ArrayList@379[10] { ResolutionCandidate@380, ResolutionCandidate@381, ResolutionCandidate@382, ... }
    <name not found> = ArrayList@383[10] { ResolutionCandidate@380, ResolutionCandidate@381, ResolutionCandidate@382, ... }
}

ResolutionTaskHolder@384 {
    <name not found> = ArrayList@385[10] { ResolutionCandidate@386, ResolutionCandidate@387, ResolutionCandidate@388, ... }
    <name not found> = ArrayList@389[10] { ResolutionCandidate@386, ResolutionCandidate@387, ResolutionCandidate@388, ... }
}

ResolutionTaskHolder@390 {
    <name not found> = ArrayList@391[1] { ResolutionCandidate@392 }
    <name not found> = ArrayList@393[1] { ResolutionCandidate@392 }
    <name not found> = EmptyList@7[empty]
    <name not found> = EmptyList@7[empty]
}

ResolutionTaskHolder@394 {
    <name not found> = ArrayList@395[1] { ResolutionCandidate@396 }
    <name not found> = ArrayList@397[1] { ResolutionCandidate@396 }
    <name not found> = EmptyList@7[empty]
    <name not found> = EmptyList@7[empty]
}

ResolutionTaskHolder@398 {
    <name not found> = ArrayList@399[1] { ResolutionCandidate@400 }
    <name not found> = ArrayList@401[1] { ResolutionCandidate@400 }
    <name not found> = EmptyList@7[empty]
    <name not found> = EmptyList@7[empty]
}

ResolutionTaskHolder@402 {
    <name not found> = ArrayList@403[1] { ResolutionCandidate@404 }
    <name not found> = ArrayList@405[1] { ResolutionCandidate@404 }
}

ResolutionTaskHolder@406 {
    <name not found> = ArrayList@407[1] { ResolutionCandidate@408 }
    <name not found> = ArrayList@409[1] { ResolutionCandidate@408 }
}

ResolutionTaskHolder@410 {
    <name not found> = ArrayList@411[1] { ResolutionCandidate@412 }
    <name not found> = ArrayList@413[1] { ResolutionCandidate@412 }
}

ResolutionTaskHolder@414 {
    <name not found> = ArrayList@415[1] { ResolutionCandidate@416 }
    <name not found> = ArrayList@417[1] { ResolutionCandidate@416 }
}

ResolutionTaskHolder@418 {
    <name not found> = ArrayList@419[1] { ResolutionCandidate@420 }
    <name not found> = ArrayList@421[1] { ResolutionCandidate@420 }
}

ResolutionTaskHolder@422 {
    <name not found> = ArrayList@423[1] { ResolutionCandidate@424 }
    <name not found> = ArrayList@425[1] { ResolutionCandidate@424 }
}

ResolutionTaskHolder@426 {
    <name not found> = ArrayList@427[1] { ResolutionCandidate@428 }
    <name not found> = ArrayList@429[1] { ResolutionCandidate@428 }
}

ResolutionTaskHolder@430 {
    <name not found> = ArrayList@431[1] { ResolutionCandidate@432 }
    <name not found> = ArrayList@433[1] { ResolutionCandidate@432 }
}

ResolutionTaskHolder@434 {
    <name not found> = ArrayList@435[1] { ResolutionCandidate@436 }
    <name not found> = ArrayList@437[1] { ResolutionCandidate@436 }
}

ResolutionTaskHolder@438 {
    <name not found> = ArrayList@439[2] { ResolutionCandidate@440, ResolutionCandidate@441 }
    <name not found> = ArrayList@442[2] { ResolutionCandidate@440, ResolutionCandidate@441 }
}

ResolutionTaskHolder@443 {
    <name not found> = ArrayList@444[3] { ResolutionCandidate@445, ResolutionCandidate@446, ResolutionCandidate@447 }
    <name not found> = ArrayList@448[3] { ResolutionCandidate@445, ResolutionCandidate@446, ResolutionCandidate@447 }
    <name not found> = EmptyList@7[empty]
    <name not found> = EmptyList@7[empty]
    <name not found> = EmptyList@7[empty]
    <name not found> = EmptyList@7[empty]
}

ResolutionTaskHolder@449 {
    <name not found> = ArrayList@450[8] { ResolutionCandidate@451, ResolutionCandidate@452, ResolutionCandidate@453, ... }
    <name not found> = ArrayList@454[8] { ResolutionCandidate@451, ResolutionCandidate@452, ResolutionCandidate@453, ... }
}

ResolutionTaskHolder@455 {
    <name not found> = EmptyList@7[empty]
    <name not found> = EmptyList@7[empty]
    <name not found> = EmptyList@7[empty]
    <name not found> = EmptyList@7[empty]
    <name not found> = EmptyList@7[empty]
    <name not found> = EmptyList@7[empty]
    <name not found> = EmptyList@7[empty]
    <name not found> = EmptyList@7[empty]
    <name not found> = EmptyList@7[empty]
    <name not found> = EmptyList@7[empty]
}

ResolutionTaskHolder@456 {
    <name not found> = EmptyList@7[empty]
    <name not found> = EmptyList@7[empty]
    <name not found> = EmptyList@7[empty]
    <name not found> = EmptyList@7[empty]
    <name not found> = EmptyList@7[empty]
    <name not found> = EmptyList@7[empty]
    <name not found> = EmptyList@7[empty]
    <name not found> = EmptyList@7[empty]
    <name not found> = EmptyList@7[empty]
    <name not found> = EmptyList@7[empty]
}

ResolutionTaskHolder@457 {
    <name not found> = EmptyList@7[empty]
    <name not found> = EmptyList@7[empty]
    <name not found> = EmptyList@7[empty]
    <name not found> = EmptyList@7[empty]
    <name not found> = EmptyList@7[empty]
    <name not found> = EmptyList@7[empty]
    <name not found> = EmptyList@7[empty]
    <name not found> = EmptyList@7[empty]
    <name not found> = EmptyList@7[empty]
    <name not found> = EmptyList@7[empty]
}
