LazyJavaClassDescriptor@0['AnnotatedElement'] {
    typeConstructor = LazyJavaClassTypeConstructor@1['AnnotatedElement']
}

LazyJavaClassDescriptor@2['Class'] {
    defaultType = JetTypeImpl@3['Class<1>']
    typeConstructor = LazyJavaClassTypeConstructor@4['Class']
}

LazyJavaClassDescriptor@5['Exception'] {
    allDescriptors = ArrayList@6[6] { DeserializedSimpleFunctionDescriptor@7['hashCode'], DeserializedSimpleFunctionDescriptor@8['getMessage'], DeserializedSimpleFunctionDescriptor@9['printStackTrace'], ... } // through LazyJavaClassMemberScope@10
    constructors = ArrayList@11[5] { JavaConstructorDescriptor@12['<init>'], JavaConstructorDescriptor@13['<init>'], JavaConstructorDescriptor@14['<init>'], ... } // through LazyJavaClassMemberScope@10
    defaultType = JetTypeImpl@15['Exception']
    enumEntryIndex = LinkedHashMap@16 // through LazyJavaClassMemberScope@10
    functions('addSuppressed': Name@17) = EmptyList@18[empty] // through LazyJavaClassMemberScope@10
    functions('clone': Name@19) = EmptyList@18[empty] // through LazyJavaClassMemberScope@10
    functions('equals': Name@20) = ArrayList@21[1] { DeserializedSimpleFunctionDescriptor@22['equals'] } // through LazyJavaClassMemberScope@10
    functions('fillInStackTrace': Name@23) = EmptyList@18[empty] // through LazyJavaClassMemberScope@10
    functions('finalize': Name@24) = EmptyList@18[empty] // through LazyJavaClassMemberScope@10
    functions('getCause': Name@25) = ArrayList@26[1] { DeserializedSimpleFunctionDescriptor@27['getCause'] } // through LazyJavaClassMemberScope@10
    functions('getClass': Name@28) = EmptyList@18[empty] // through LazyJavaClassMemberScope@10
    functions('getLocalizedMessage': Name@29) = EmptyList@18[empty] // through LazyJavaClassMemberScope@10
    functions('getMessage': Name@30) = ArrayList@31[1] { DeserializedSimpleFunctionDescriptor@8['getMessage'] } // through LazyJavaClassMemberScope@10
    functions('getOurStackTrace': Name@32) = EmptyList@18[empty] // through LazyJavaClassMemberScope@10
    functions('getStackTrace': Name@33) = EmptyList@18[empty] // through LazyJavaClassMemberScope@10
    functions('getStackTraceDepth': Name@34) = EmptyList@18[empty] // through LazyJavaClassMemberScope@10
    functions('getStackTraceElement': Name@35) = EmptyList@18[empty] // through LazyJavaClassMemberScope@10
    functions('getSuppressed': Name@36) = EmptyList@18[empty] // through LazyJavaClassMemberScope@10
    functions('hashCode': Name@37) = ArrayList@38[1] { DeserializedSimpleFunctionDescriptor@7['hashCode'] } // through LazyJavaClassMemberScope@10
    functions('initCause': Name@39) = EmptyList@18[empty] // through LazyJavaClassMemberScope@10
    functions('notify': Name@40) = EmptyList@18[empty] // through LazyJavaClassMemberScope@10
    functions('notifyAll': Name@41) = EmptyList@18[empty] // through LazyJavaClassMemberScope@10
    functions('printEnclosedStackTrace': Name@42) = EmptyList@18[empty] // through LazyJavaClassMemberScope@10
    functions('printStackTrace': Name@43) = ArrayList@44[1] { DeserializedSimpleFunctionDescriptor@9['printStackTrace'] } // through LazyJavaClassMemberScope@10
    functions('readObject': Name@45) = EmptyList@18[empty] // through LazyJavaClassMemberScope@10
    functions('setStackTrace': Name@46) = EmptyList@18[empty] // through LazyJavaClassMemberScope@10
    functions('toString': Name@47) = ArrayList@48[1] { DeserializedSimpleFunctionDescriptor@49['toString'] } // through LazyJavaClassMemberScope@10
    functions('wait': Name@50) = EmptyList@18[empty] // through LazyJavaClassMemberScope@10
    functions('writeObject': Name@51) = EmptyList@18[empty] // through LazyJavaClassMemberScope@10
    memberIndex = computeMemberIndex$1@52 // through LazyJavaClassMemberScope@10
    nestedClassIndex = LinkedHashMap@53 // through LazyJavaClassMemberScope@10
    properties('backtrace': Name@54) = EmptyList@18[empty] // through LazyJavaClassMemberScope@10
    properties('cause': Name@55) = EmptyList@18[empty] // through LazyJavaClassMemberScope@10
    properties('detailMessage': Name@56) = EmptyList@18[empty] // through LazyJavaClassMemberScope@10
    properties('stackTrace': Name@57) = EmptyList@18[empty] // through LazyJavaClassMemberScope@10
    properties('suppressedExceptions': Name@58) = EmptyList@18[empty] // through LazyJavaClassMemberScope@10
    typeConstructor = LazyJavaClassTypeConstructor@59['Exception']
}

LazyJavaClassDescriptor@60['GenericDeclaration'] {
    typeConstructor = LazyJavaClassTypeConstructor@61['GenericDeclaration']
}

LazyJavaClassDescriptor@62['Object'] {
    defaultType = JetTypeImpl@63['Object']
    enumEntryIndex = LinkedHashMap@64 // through LazyJavaClassMemberScope@65
    functions('getClass': Name@66) = ArrayList@67[1] { JavaMethodDescriptor@68['getClass'] } // through LazyJavaClassMemberScope@65
    memberIndex = computeMemberIndex$1@69 // through LazyJavaClassMemberScope@65
    nestedClassIndex = LinkedHashMap@70 // through LazyJavaClassMemberScope@65
    nestedClasses('getClass': Name@66) = null // through LazyJavaClassMemberScope@65
    thisAsReceiverParameter = LazyClassReceiverParameterDescriptor@71['<this>']
    typeConstructor = LazyJavaClassTypeConstructor@72['Object']
}

LazyJavaClassDescriptor@73['Serializable'] {
    typeConstructor = LazyJavaClassTypeConstructor@74['Serializable']
}

LazyJavaClassDescriptor@75['Type'] {
    typeConstructor = LazyJavaClassTypeConstructor@76['Type']
}

LazyJavaClassTypeConstructor@1['AnnotatedElement'] {
    supertypes = ArrayList@77[1] { JetTypeImpl@78['Any'] }
}

LazyJavaClassTypeConstructor@4['Class'] {
    parameters = ArrayList@79[1] { LazyJavaTypeParameterDescriptor@80['T'] }
    supertypes = ArrayList@81[4] { LazyJavaClassifierType@82['Serializable'], LazyJavaClassifierType@83['GenericDeclaration'], LazyJavaClassifierType@84['Type'], ... }
}

LazyJavaClassTypeConstructor@59['Exception'] {
    parameters = ArrayList@85[empty]
    supertypes = ArrayList@86[1] { LazyJavaClassifierType@87['Throwable'] }
}

LazyJavaClassTypeConstructor@61['GenericDeclaration'] {
    supertypes = ArrayList@88[1] { JetTypeImpl@78['Any'] }
}

LazyJavaClassTypeConstructor@72['Object'] {
    parameters = ArrayList@89[empty]
    supertypes = ArrayList@90[1] { JetTypeImpl@78['Any'] }
}

LazyJavaClassTypeConstructor@74['Serializable'] {
    supertypes = ArrayList@91[1] { JetTypeImpl@78['Any'] }
}

LazyJavaClassTypeConstructor@76['Type'] {
    supertypes = ArrayList@92[1] { JetTypeImpl@78['Any'] }
}

LazyJavaClassifierType@93['AnnotatedElement'] {
    classifier = JavaClassImpl@94['AnnotatedElement']
    typeConstructor = LazyJavaClassTypeConstructor@1['AnnotatedElement']
}

LazyJavaClassifierType@95['Class<?>'] {
    arguments = ArrayList@96[1] { LazyStarProjection@97 }
    classifier = JavaClassImpl@98['Class']
    nullable = 'false': Boolean@99
    typeConstructor = LazyJavaClassTypeConstructor@4['Class']
}

LazyJavaClassifierType@100['Class<?>'] {
    arguments = ArrayList@101[1] { LazyStarProjection@102 }
    classifier = JavaClassImpl@98['Class']
    nullable = 'true': Boolean@103
    typeConstructor = LazyJavaClassTypeConstructor@4['Class']
}

LazyJavaClassifierType@83['GenericDeclaration'] {
    classifier = JavaClassImpl@104['GenericDeclaration']
    typeConstructor = LazyJavaClassTypeConstructor@61['GenericDeclaration']
}

LazyJavaClassifierType@105['Object'] {
    classifier = JavaClassImpl@106['Object']
    typeConstructor = DeserializedClassTypeConstructor@107
}

LazyJavaClassifierType@108['Object'] {
    classifier = JavaClassImpl@109['Object']
    typeConstructor = DeserializedClassTypeConstructor@107
}

LazyJavaClassifierType@110['Object'] {
    classifier = JavaClassImpl@111['Object']
    typeConstructor = DeserializedClassTypeConstructor@107
}

LazyJavaClassifierType@112['Object'] {
    classifier = JavaClassImpl@113['Object']
    typeConstructor = DeserializedClassTypeConstructor@107
}

LazyJavaClassifierType@114['Object'] {
    classifier = JavaClassImpl@115['Object']
    typeConstructor = DeserializedClassTypeConstructor@107
}

LazyJavaClassifierType@82['Serializable'] {
    classifier = JavaClassImpl@116['Serializable']
    typeConstructor = LazyJavaClassTypeConstructor@74['Serializable']
}

LazyJavaClassifierType@117['String'] {
    arguments = ArrayList@118[empty]
    classifier = JavaClassImpl@119['String']
    nullable = 'false': Boolean@99
    typeConstructor = DeserializedClassTypeConstructor@120
}

LazyJavaClassifierType@121['String'] {
    arguments = ArrayList@122[empty]
    classifier = JavaClassImpl@123['String']
    nullable = 'false': Boolean@99
    typeConstructor = DeserializedClassTypeConstructor@120
}

LazyJavaClassifierType@124['String'] {
    arguments = ArrayList@125[empty]
    classifier = JavaClassImpl@126['String']
    nullable = 'false': Boolean@99
    typeConstructor = DeserializedClassTypeConstructor@120
}

LazyJavaClassifierType@127['String'] {
    arguments = ArrayList@128[empty]
    classifier = JavaClassImpl@123['String']
    nullable = 'true': Boolean@103
    typeConstructor = DeserializedClassTypeConstructor@120
}

LazyJavaClassifierType@129['String'] {
    arguments = ArrayList@130[empty]
    classifier = JavaClassImpl@119['String']
    nullable = 'true': Boolean@103
    typeConstructor = DeserializedClassTypeConstructor@120
}

LazyJavaClassifierType@131['String'] {
    arguments = ArrayList@132[empty]
    classifier = JavaClassImpl@126['String']
    nullable = 'true': Boolean@103
    typeConstructor = DeserializedClassTypeConstructor@120
}

LazyJavaClassifierType@87['Throwable'] {
    arguments = ArrayList@133[empty]
    classifier = JavaClassImpl@134['Throwable']
    memberScope = DeserializedClassMemberScope@135
    nullable = 'false': Boolean@99
    typeConstructor = DeserializedClassTypeConstructor@136
}

LazyJavaClassifierType@137['Throwable'] {
    arguments = ArrayList@138[empty]
    classifier = JavaClassImpl@139['Throwable']
    nullable = 'false': Boolean@99
    typeConstructor = DeserializedClassTypeConstructor@136
}

LazyJavaClassifierType@140['Throwable'] {
    arguments = ArrayList@141[empty]
    classifier = JavaClassImpl@142['Throwable']
    nullable = 'false': Boolean@99
    typeConstructor = DeserializedClassTypeConstructor@136
}

LazyJavaClassifierType@143['Throwable'] {
    arguments = ArrayList@144[empty]
    classifier = JavaClassImpl@145['Throwable']
    nullable = 'false': Boolean@99
    typeConstructor = DeserializedClassTypeConstructor@136
}

LazyJavaClassifierType@146['Throwable'] {
    arguments = ArrayList@147[empty]
    classifier = JavaClassImpl@145['Throwable']
    nullable = 'true': Boolean@103
    typeConstructor = DeserializedClassTypeConstructor@136
}

LazyJavaClassifierType@148['Throwable'] {
    arguments = ArrayList@149[empty]
    classifier = JavaClassImpl@139['Throwable']
    nullable = 'true': Boolean@103
    typeConstructor = DeserializedClassTypeConstructor@136
}

LazyJavaClassifierType@150['Throwable'] {
    arguments = ArrayList@151[empty]
    classifier = JavaClassImpl@142['Throwable']
    nullable = 'true': Boolean@103
    typeConstructor = DeserializedClassTypeConstructor@136
}

LazyJavaClassifierType@84['Type'] {
    classifier = JavaClassImpl@152['Type']
    typeConstructor = LazyJavaClassTypeConstructor@76['Type']
}

LazyJavaPackageFragmentProvider@153 {
    packageFragments('<root>': FqName@154) = LazyJavaPackageFragment@155['<root>']
    packageFragments('Any': FqName@156) = null
    packageFragments('Class': FqName@157) = null
    packageFragments('Exception': FqName@158) = null
    packageFragments('IdUnavailableException': FqName@159) = null
    packageFragments('Object': FqName@160) = null
    packageFragments('T': FqName@161) = null
    packageFragments('java': FqName@162) = LazyJavaPackageFragment@163['java']
    packageFragments('java.io': FqName@164) = LazyJavaPackageFragment@165['io']
    packageFragments('java.lang': FqName@166) = LazyJavaPackageFragment@167['lang']
    packageFragments('java.lang.Any': FqName@168) = null
    packageFragments('java.lang.Class': FqName@169) = null
    packageFragments('java.lang.Exception': FqName@170) = null
    packageFragments('java.lang.Object': FqName@171) = null
    packageFragments('java.lang.T': FqName@172) = null
    packageFragments('java.lang.reflect': FqName@173) = LazyJavaPackageFragment@174['reflect']
    packageFragments('kotlin': FqName@175) = null
    packageFragments('kotlin.Any': FqName@176) = null
    packageFragments('kotlin.Class': FqName@177) = null
    packageFragments('kotlin.Exception': FqName@178) = null
    packageFragments('kotlin.Object': FqName@179) = null
    packageFragments('kotlin.T': FqName@180) = null
    packageFragments('kotlin.io': FqName@181) = null
    packageFragments('kotlin.jvm': FqName@182) = null
    topLevelClasses(JavaClassImpl@94['AnnotatedElement']) = LazyJavaClassDescriptor@0['AnnotatedElement']
    topLevelClasses(JavaClassImpl@183['Class']) = LazyJavaClassDescriptor@2['Class']
    topLevelClasses(JavaClassImpl@184['Exception']) = LazyJavaClassDescriptor@5['Exception']
    topLevelClasses(JavaClassImpl@104['GenericDeclaration']) = LazyJavaClassDescriptor@60['GenericDeclaration']
    topLevelClasses(JavaClassImpl@185['Object']) = LazyJavaClassDescriptor@62['Object']
    topLevelClasses(JavaClassImpl@116['Serializable']) = LazyJavaClassDescriptor@73['Serializable']
    topLevelClasses(JavaClassImpl@152['Type']) = LazyJavaClassDescriptor@75['Type']
}

LazyJavaPackageFragment@155['<root>'] {
    classes('Any': Name@186) = null // through LazyPackageFragmentScopeForJavaPackage@187
    classes('Class': Name@188) = null // through LazyPackageFragmentScopeForJavaPackage@187
    classes('Exception': Name@189) = null // through LazyPackageFragmentScopeForJavaPackage@187
    classes('Object': Name@190) = null // through LazyPackageFragmentScopeForJavaPackage@187
}

LazyJavaPackageFragment@163['java'] {
    classes('lang': Name@191) = null // through LazyPackageFragmentScopeForJavaPackage@192
    deserializedPackageScope = Empty@193 // through LazyPackageFragmentScopeForJavaPackage@192
    functions('lang': Name@194) = EmptyList@18[empty] // through LazyPackageFragmentScopeForJavaPackage@192
    memberIndex = computeMemberIndex$1@195 // through LazyPackageFragmentScopeForJavaPackage@192
}

LazyJavaPackageFragment@167['lang'] {
    classes('Class': Name@188) = LazyJavaClassDescriptor@2['Class'] // through LazyPackageFragmentScopeForJavaPackage@196
    classes('Exception': Name@189) = LazyJavaClassDescriptor@5['Exception'] // through LazyPackageFragmentScopeForJavaPackage@196
    classes('Object': Name@190) = LazyJavaClassDescriptor@62['Object'] // through LazyPackageFragmentScopeForJavaPackage@196
}

LazyJavaTypeParameterDescriptor@80['T'] {
    defaultType = JetTypeImpl@197['T']
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@198
    upperBounds = LinkedHashSet@199[1] { NullableType@200 }
    upperBoundsAsType = NullableType@200
}

LazyJavaTypeParameterResolver@201 {
    resolve(JavaTypeParameterImpl@202['T']) = LazyJavaTypeParameterDescriptor@80['T']
}

ResolutionTaskHolder@203 {
    <name not found> = ArrayList@204[1] { ResolutionCandidate@205 }
    <name not found> = ArrayList@206[1] { ResolutionCandidate@205 }
}

ResolutionTaskHolder@207 {
    <name not found> = ArrayList@208[5] { ResolutionCandidate@209, ResolutionCandidate@210, ResolutionCandidate@211, ... }
    <name not found> = ArrayList@212[5] { ResolutionCandidate@209, ResolutionCandidate@210, ResolutionCandidate@211, ... }
}
