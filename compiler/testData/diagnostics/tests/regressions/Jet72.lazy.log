LazyJavaClassDescriptor@0['AbstractCollection'] {
    defaultType = JetTypeImpl@1['AbstractCollection<1>']
    functions('iterator': Name@2) = ArrayList@3[1] { JavaMethodDescriptor@4['iterator'] } // through LazyJavaClassMemberScope@5
    memberIndex = computeMemberIndex$1@6 // through LazyJavaClassMemberScope@5
    thisAsReceiverParameter = LazyClassReceiverParameterDescriptor@7['<this>']
    typeConstructor = LazyJavaClassTypeConstructor@8['AbstractCollection']
}

LazyJavaClassDescriptor@9['AbstractList'] {
    defaultType = JetTypeImpl@10['AbstractList<1>']
    functions('iterator': Name@11) = ArrayList@12[1] { JavaMethodDescriptor@13['iterator'] } // through LazyJavaClassMemberScope@14
    memberIndex = computeMemberIndex$1@15 // through LazyJavaClassMemberScope@14
    thisAsReceiverParameter = LazyClassReceiverParameterDescriptor@16['<this>']
    typeConstructor = LazyJavaClassTypeConstructor@17['AbstractList']
}

LazyJavaClassDescriptor@18['Appendable'] {
    functions('println': Name@19) = EmptyList@20[empty] // through LazyJavaClassMemberScope@21
    memberIndex = computeMemberIndex$1@22 // through LazyJavaClassMemberScope@21
    typeConstructor = LazyJavaClassTypeConstructor@23['Appendable']
}

LazyJavaClassDescriptor@24['ArrayList'] {
    constructors = ArrayList@25[3] { JavaConstructorDescriptor@26['<init>'], JavaConstructorDescriptor@27['<init>'], JavaConstructorDescriptor@28['<init>'] } // through LazyJavaClassMemberScope@29
    defaultType = JetTypeImpl@30['ArrayList<1>']
    enumEntryIndex = LinkedHashMap@31 // through LazyJavaClassMemberScope@29
    functionTypeForSamInterface = null
    functions('iterator': Name@32) = ArrayList@33[1] { JavaMethodDescriptor@34['iterator'] } // through LazyJavaClassMemberScope@29
    memberIndex = computeMemberIndex$1@35 // through LazyJavaClassMemberScope@29
    nestedClassIndex = LinkedHashMap@36 // through LazyJavaClassMemberScope@29
    nestedClasses('iterator': Name@32) = null // through LazyJavaClassMemberScope@29
    thisAsReceiverParameter = LazyClassReceiverParameterDescriptor@37['<this>']
    typeConstructor = LazyJavaClassTypeConstructor@38['ArrayList']
}

LazyJavaClassDescriptor@39['AutoCloseable'] {
    functions('println': Name@19) = EmptyList@20[empty] // through LazyJavaClassMemberScope@40
    memberIndex = computeMemberIndex$1@41 // through LazyJavaClassMemberScope@40
    typeConstructor = LazyJavaClassTypeConstructor@42['AutoCloseable']
}

LazyJavaClassDescriptor@43['Closeable'] {
    functions('println': Name@19) = EmptyList@20[empty] // through LazyJavaClassMemberScope@44
    memberIndex = computeMemberIndex$1@45 // through LazyJavaClassMemberScope@44
    typeConstructor = LazyJavaClassTypeConstructor@46['Closeable']
}

LazyJavaClassDescriptor@47['FilterOutputStream'] {
    functions('println': Name@19) = EmptyList@20[empty] // through LazyJavaClassMemberScope@48
    memberIndex = computeMemberIndex$1@49 // through LazyJavaClassMemberScope@48
    typeConstructor = LazyJavaClassTypeConstructor@50['FilterOutputStream']
}

LazyJavaClassDescriptor@51['Object'] {
    typeConstructor = LazyJavaClassTypeConstructor@52['Object']
}

LazyJavaClassDescriptor@53['OutputStream'] {
    functions('println': Name@19) = EmptyList@20[empty] // through LazyJavaClassMemberScope@54
    memberIndex = computeMemberIndex$1@55 // through LazyJavaClassMemberScope@54
    typeConstructor = LazyJavaClassTypeConstructor@56['OutputStream']
}

LazyJavaClassDescriptor@57['PrintStream'] {
    defaultType = JetTypeImpl@58['PrintStream']
    enumEntryIndex = LinkedHashMap@59 // through LazyJavaClassMemberScope@60
    functions('println': Name@61) = ArrayList@62[10] { JavaMethodDescriptor@63['println'], JavaMethodDescriptor@64['println'], JavaMethodDescriptor@65['println'], ... } // through LazyJavaClassMemberScope@60
    memberIndex = computeMemberIndex$1@66 // through LazyJavaClassMemberScope@60
    nestedClassIndex = LinkedHashMap@67 // through LazyJavaClassMemberScope@60
    nestedClasses('println': Name@61) = null // through LazyJavaClassMemberScope@60
    thisAsReceiverParameter = LazyClassReceiverParameterDescriptor@68['<this>']
    typeConstructor = LazyJavaClassTypeConstructor@69['PrintStream']
}

LazyJavaClassDescriptor@70['RandomAccess'] {
    functions('iterator': Name@11) = EmptyList@20[empty] // through LazyJavaClassMemberScope@71
    memberIndex = computeMemberIndex$1@72 // through LazyJavaClassMemberScope@71
    typeConstructor = LazyJavaClassTypeConstructor@73['RandomAccess']
}

LazyJavaClassDescriptor@74['Serializable'] {
    functions('iterator': Name@11) = EmptyList@20[empty] // through LazyJavaClassMemberScope@75
    memberIndex = computeMemberIndex$1@76 // through LazyJavaClassMemberScope@75
    typeConstructor = LazyJavaClassTypeConstructor@77['Serializable']
}

LazyJavaClassDescriptor@78['System'] {
    enumEntryIndex = LinkedHashMap@79 // through LazyJavaClassMemberScope@80
    memberIndex = computeMemberIndex$1@81 // through LazyJavaClassMemberScope@80
    memberIndex = computeMemberIndex$1@82 // through LazyJavaStaticClassScope@83
    nestedClassIndex = LinkedHashMap@84 // through LazyJavaClassMemberScope@80
    nestedClasses('out': Name@85) = null // through LazyJavaClassMemberScope@80
    properties('out': Name@85) = ArrayList@86[1] { JavaPropertyDescriptor@87['out'] } // through LazyJavaStaticClassScope@83
    properties('out': Name@85) = EmptyList@20[empty] // through LazyJavaClassMemberScope@80
    typeConstructor = LazyJavaClassTypeConstructor@88['System']
}

LazyJavaClassTypeConstructor@8['AbstractCollection'] {
    parameters = ArrayList@89[1] { LazyJavaTypeParameterDescriptor@90['E'] }
    supertypes = ArrayList@91[1] { LazyJavaClassifierType@92['Collection<E>'] }
}

LazyJavaClassTypeConstructor@17['AbstractList'] {
    parameters = ArrayList@93[1] { LazyJavaTypeParameterDescriptor@94['E'] }
    supertypes = ArrayList@95[2] { LazyJavaClassifierType@96['AbstractCollection<E>'], LazyJavaClassifierType@97['List<E>'] }
}

LazyJavaClassTypeConstructor@23['Appendable'] {
    parameters = ArrayList@98[empty]
    supertypes = ArrayList@99[1] { JetTypeImpl@100['Any'] }
}

LazyJavaClassTypeConstructor@38['ArrayList'] {
    parameters = ArrayList@101[1] { LazyJavaTypeParameterDescriptor@102['E'] }
    supertypes = ArrayList@103[5] { LazyJavaClassifierType@104['AbstractList<E>'], LazyJavaClassifierType@105['List<E>'], LazyJavaClassifierType@106['RandomAccess'], ... }
}

LazyJavaClassTypeConstructor@42['AutoCloseable'] {
    parameters = ArrayList@107[empty]
    supertypes = ArrayList@108[1] { JetTypeImpl@100['Any'] }
}

LazyJavaClassTypeConstructor@46['Closeable'] {
    parameters = ArrayList@109[empty]
    supertypes = ArrayList@110[1] { LazyJavaClassifierType@111['AutoCloseable'] }
}

LazyJavaClassTypeConstructor@50['FilterOutputStream'] {
    parameters = ArrayList@112[empty]
    supertypes = ArrayList@113[1] { LazyJavaClassifierType@114['OutputStream'] }
}

LazyJavaClassTypeConstructor@52['Object'] {
    parameters = ArrayList@115[empty]
    supertypes = ArrayList@116[1] { JetTypeImpl@100['Any'] }
}

LazyJavaClassTypeConstructor@56['OutputStream'] {
    parameters = ArrayList@117[empty]
    supertypes = ArrayList@118[1] { LazyJavaClassifierType@119['Closeable'] }
}

LazyJavaClassTypeConstructor@69['PrintStream'] {
    parameters = ArrayList@120[empty]
    supertypes = ArrayList@121[3] { LazyJavaClassifierType@122['FilterOutputStream'], LazyJavaClassifierType@123['Appendable'], LazyJavaClassifierType@124['Closeable'] }
}

LazyJavaClassTypeConstructor@73['RandomAccess'] {
    parameters = ArrayList@125[empty]
    supertypes = ArrayList@126[1] { JetTypeImpl@100['Any'] }
}

LazyJavaClassTypeConstructor@77['Serializable'] {
    parameters = ArrayList@127[empty]
    supertypes = ArrayList@128[1] { JetTypeImpl@100['Any'] }
}

LazyJavaClassTypeConstructor@88['System'] {
    supertypes = ArrayList@129[1] { JetTypeImpl@100['Any'] }
}

LazyJavaClassifierType@96['AbstractCollection<E>'] {
    arguments = ArrayList@130[1] { TypeProjectionImpl@131 }
    classifier = JavaClassImpl@132['AbstractCollection']
    memberScope = SubstitutingScope@133
    typeConstructor = LazyJavaClassTypeConstructor@8['AbstractCollection']
}

LazyJavaClassifierType@104['AbstractList<E>'] {
    arguments = ArrayList@134[1] { TypeProjectionImpl@135 }
    classifier = JavaClassImpl@136['AbstractList']
    memberScope = SubstitutingScope@137
    typeConstructor = LazyJavaClassTypeConstructor@17['AbstractList']
}

LazyJavaClassifierType@123['Appendable'] {
    arguments = ArrayList@138[empty]
    classifier = JavaClassImpl@139['Appendable']
    memberScope = LazyJavaClassMemberScope@21
    typeConstructor = LazyJavaClassTypeConstructor@23['Appendable']
}

LazyJavaClassifierType@111['AutoCloseable'] {
    arguments = ArrayList@140[empty]
    classifier = JavaClassImpl@141['AutoCloseable']
    memberScope = LazyJavaClassMemberScope@40
    typeConstructor = LazyJavaClassTypeConstructor@42['AutoCloseable']
}

LazyJavaClassifierType@142['Cloneable'] {
    arguments = ArrayList@143[empty]
    classifier = JavaClassImpl@144['Cloneable']
    memberScope = DeserializedClassMemberScope@145
    typeConstructor = DeserializedClassTypeConstructor@146
}

LazyJavaClassifierType@119['Closeable'] {
    arguments = ArrayList@147[empty]
    classifier = JavaClassImpl@148['Closeable']
    memberScope = LazyJavaClassMemberScope@44
    typeConstructor = LazyJavaClassTypeConstructor@46['Closeable']
}

LazyJavaClassifierType@124['Closeable'] {
    arguments = ArrayList@149[empty]
    classifier = JavaClassImpl@150['Closeable']
    memberScope = LazyJavaClassMemberScope@44
    typeConstructor = LazyJavaClassTypeConstructor@46['Closeable']
}

LazyJavaClassifierType@151['Collection<? extends E>'] {
    arguments = ArrayList@152[1] { TypeProjectionImpl@153 }
    classifier = JavaClassImpl@154['Collection']
    memberScope = SubstitutingScope@155
    nullable = 'false': Boolean@156
    typeConstructor = DeserializedClassTypeConstructor@157
}

LazyJavaClassifierType@158['Collection<? extends E>'] {
    arguments = ArrayList@159[1] { TypeProjectionImpl@160 }
    classifier = JavaClassImpl@154['Collection']
    memberScope = SubstitutingScope@161
    nullable = 'true': Boolean@162
    typeConstructor = DeserializedClassTypeConstructor@163
}

LazyJavaClassifierType@92['Collection<E>'] {
    arguments = ArrayList@164[1] { TypeProjectionImpl@165 }
    classifier = JavaClassImpl@166['Collection']
    memberScope = SubstitutingScope@167
    typeConstructor = DeserializedClassTypeConstructor@157
}

LazyJavaClassifierType@168['E'] {
    arguments = ArrayList@169[empty]
    classifier = JavaTypeParameterImpl@170['E']
    nullable = 'false': Boolean@156
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@171
}

LazyJavaClassifierType@172['E'] {
    arguments = ArrayList@173[empty]
    classifier = JavaTypeParameterImpl@174['E']
    nullable = 'false': Boolean@156
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@175
}

LazyJavaClassifierType@176['E'] {
    arguments = ArrayList@177[empty]
    classifier = JavaTypeParameterImpl@178['E']
    nullable = 'false': Boolean@156
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@179
}

LazyJavaClassifierType@180['E'] {
    arguments = ArrayList@181[empty]
    classifier = JavaTypeParameterImpl@182['E']
    nullable = 'false': Boolean@156
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@171
}

LazyJavaClassifierType@183['E'] {
    arguments = ArrayList@184[empty]
    classifier = JavaTypeParameterImpl@185['E']
    nullable = 'false': Boolean@156
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@171
}

LazyJavaClassifierType@186['E'] {
    arguments = ArrayList@187[empty]
    classifier = JavaTypeParameterImpl@188['E']
    nullable = 'false': Boolean@156
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@171
}

LazyJavaClassifierType@189['E'] {
    arguments = ArrayList@190[empty]
    classifier = JavaTypeParameterImpl@191['E']
    nullable = 'false': Boolean@156
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@175
}

LazyJavaClassifierType@192['E'] {
    arguments = ArrayList@193[empty]
    classifier = JavaTypeParameterImpl@194['E']
    nullable = 'false': Boolean@156
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@179
}

LazyJavaClassifierType@195['E'] {
    arguments = ArrayList@196[empty]
    classifier = JavaTypeParameterImpl@197['E']
    nullable = 'false': Boolean@156
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@179
}

LazyJavaClassifierType@198['E'] {
    arguments = ArrayList@199[empty]
    classifier = JavaTypeParameterImpl@200['E']
    nullable = 'false': Boolean@156
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@179
}

LazyJavaClassifierType@201['E'] {
    arguments = ArrayList@202[empty]
    classifier = JavaTypeParameterImpl@203['E']
    nullable = 'false': Boolean@156
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@175
}

LazyJavaClassifierType@204['E'] {
    arguments = ArrayList@205[empty]
    classifier = JavaTypeParameterImpl@206['E']
    nullable = 'false': Boolean@156
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@179
}

LazyJavaClassifierType@207['E'] {
    arguments = ArrayList@208[empty]
    classifier = JavaTypeParameterImpl@209['E']
    nullable = 'false': Boolean@156
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@179
}

LazyJavaClassifierType@210['E'] {
    arguments = ArrayList@211[empty]
    classifier = JavaTypeParameterImpl@191['E']
    nullable = 'true': Boolean@162
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@175
}

LazyJavaClassifierType@212['E'] {
    arguments = ArrayList@213[empty]
    classifier = JavaTypeParameterImpl@206['E']
    nullable = 'true': Boolean@162
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@179
}

LazyJavaClassifierType@214['E'] {
    arguments = ArrayList@215[empty]
    classifier = JavaTypeParameterImpl@203['E']
    nullable = 'true': Boolean@162
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@175
}

LazyJavaClassifierType@216['E'] {
    arguments = ArrayList@217[empty]
    classifier = JavaTypeParameterImpl@174['E']
    nullable = 'true': Boolean@162
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@175
}

LazyJavaClassifierType@218['E'] {
    arguments = ArrayList@219[empty]
    classifier = JavaTypeParameterImpl@178['E']
    nullable = 'true': Boolean@162
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@179
}

LazyJavaClassifierType@220['E'] {
    arguments = ArrayList@221[empty]
    classifier = JavaTypeParameterImpl@209['E']
    nullable = 'true': Boolean@162
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@179
}

LazyJavaClassifierType@222['E'] {
    arguments = ArrayList@223[empty]
    classifier = JavaTypeParameterImpl@194['E']
    nullable = 'true': Boolean@162
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@179
}

LazyJavaClassifierType@224['E'] {
    arguments = ArrayList@225[empty]
    classifier = JavaTypeParameterImpl@182['E']
    nullable = 'true': Boolean@162
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@171
}

LazyJavaClassifierType@226['E'] {
    arguments = ArrayList@227[empty]
    classifier = JavaTypeParameterImpl@197['E']
    nullable = 'true': Boolean@162
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@179
}

LazyJavaClassifierType@228['E'] {
    arguments = ArrayList@229[empty]
    classifier = JavaTypeParameterImpl@200['E']
    nullable = 'true': Boolean@162
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@179
}

LazyJavaClassifierType@230['E'] {
    arguments = ArrayList@231[empty]
    classifier = JavaTypeParameterImpl@185['E']
    nullable = 'true': Boolean@162
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@171
}

LazyJavaClassifierType@232['E'] {
    arguments = ArrayList@233[empty]
    classifier = JavaTypeParameterImpl@170['E']
    nullable = 'true': Boolean@162
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@171
}

LazyJavaClassifierType@234['E'] {
    arguments = ArrayList@235[empty]
    classifier = JavaTypeParameterImpl@188['E']
    nullable = 'true': Boolean@162
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@171
}

LazyJavaClassifierType@122['FilterOutputStream'] {
    arguments = ArrayList@236[empty]
    classifier = JavaClassImpl@237['FilterOutputStream']
    memberScope = LazyJavaClassMemberScope@48
    typeConstructor = LazyJavaClassTypeConstructor@50['FilterOutputStream']
}

LazyJavaClassifierType@238['Flushable'] {
    classifier = null
    typeConstructor = TypeConstructorImpl$1@239
}

LazyJavaClassifierType@240['Iterator<E>'] {
    arguments = ArrayList@241[1] { TypeProjectionImpl@242 }
    classifier = JavaClassImpl@243['Iterator']
    memberScope = SubstitutingScope@244
    nullable = 'false': Boolean@156
    typeConstructor = DeserializedClassTypeConstructor@245
}

LazyJavaClassifierType@246['Iterator<E>'] {
    arguments = ArrayList@247[1] { TypeProjectionImpl@248 }
    classifier = JavaClassImpl@249['Iterator']
    memberScope = SubstitutingScope@250
    nullable = 'false': Boolean@156
    typeConstructor = DeserializedClassTypeConstructor@245
}

LazyJavaClassifierType@251['Iterator<E>'] {
    arguments = ArrayList@252[1] { TypeProjectionImpl@253 }
    classifier = JavaClassImpl@254['Iterator']
    memberScope = SubstitutingScope@255
    nullable = 'false': Boolean@156
    typeConstructor = DeserializedClassTypeConstructor@245
}

LazyJavaClassifierType@256['Iterator<E>'] {
    arguments = ArrayList@257[1] { TypeProjectionImpl@258 }
    classifier = JavaClassImpl@243['Iterator']
    memberScope = SubstitutingScope@259
    nullable = 'true': Boolean@162
    typeConstructor = DeserializedClassTypeConstructor@260
}

LazyJavaClassifierType@261['Iterator<E>'] {
    arguments = ArrayList@262[1] { TypeProjectionImpl@263 }
    classifier = JavaClassImpl@254['Iterator']
    memberScope = SubstitutingScope@264
    nullable = 'true': Boolean@162
    typeConstructor = DeserializedClassTypeConstructor@260
}

LazyJavaClassifierType@265['Iterator<E>'] {
    arguments = ArrayList@266[1] { TypeProjectionImpl@267 }
    classifier = JavaClassImpl@249['Iterator']
    memberScope = SubstitutingScope@268
    nullable = 'true': Boolean@162
    typeConstructor = DeserializedClassTypeConstructor@260
}

LazyJavaClassifierType@97['List<E>'] {
    arguments = ArrayList@269[1] { TypeProjectionImpl@270 }
    classifier = JavaClassImpl@271['List']
    memberScope = SubstitutingScope@272
    typeConstructor = DeserializedClassTypeConstructor@273
}

LazyJavaClassifierType@105['List<E>'] {
    arguments = ArrayList@274[1] { TypeProjectionImpl@275 }
    classifier = JavaClassImpl@276['List']
    memberScope = SubstitutingScope@277
    typeConstructor = DeserializedClassTypeConstructor@273
}

LazyJavaClassifierType@278['Object'] {
    arguments = ArrayList@279[empty]
    classifier = JavaClassImpl@280['Object']
    nullable = 'false': Boolean@156
    typeConstructor = DeserializedClassTypeConstructor@281
}

LazyJavaClassifierType@282['Object'] {
    arguments = ArrayList@283[empty]
    classifier = JavaClassImpl@280['Object']
    nullable = 'true': Boolean@162
    typeConstructor = DeserializedClassTypeConstructor@281
}

LazyJavaClassifierType@284['Object'] {
    classifier = JavaClassImpl@285['Object']
    typeConstructor = DeserializedClassTypeConstructor@281
}

LazyJavaClassifierType@286['Object'] {
    classifier = JavaClassImpl@287['Object']
    typeConstructor = DeserializedClassTypeConstructor@281
}

LazyJavaClassifierType@288['Object'] {
    classifier = JavaClassImpl@289['Object']
    typeConstructor = DeserializedClassTypeConstructor@281
}

LazyJavaClassifierType@290['Object'] {
    classifier = JavaClassImpl@291['Object']
    typeConstructor = DeserializedClassTypeConstructor@281
}

LazyJavaClassifierType@292['Object'] {
    classifier = JavaClassImpl@293['Object']
    typeConstructor = DeserializedClassTypeConstructor@281
}

LazyJavaClassifierType@294['Object'] {
    classifier = JavaClassImpl@295['Object']
    typeConstructor = DeserializedClassTypeConstructor@281
}

LazyJavaClassifierType@296['Object'] {
    classifier = JavaClassImpl@297['Object']
    typeConstructor = DeserializedClassTypeConstructor@281
}

LazyJavaClassifierType@114['OutputStream'] {
    arguments = ArrayList@298[empty]
    classifier = JavaClassImpl@299['OutputStream']
    memberScope = LazyJavaClassMemberScope@54
    typeConstructor = LazyJavaClassTypeConstructor@56['OutputStream']
}

LazyJavaClassifierType@300['PrintStream'] {
    arguments = ArrayList@301[empty]
    classifier = JavaClassImpl@302['PrintStream']
    memberScope = LazyJavaClassMemberScope@60
    nullable = 'false': Boolean@156
    typeConstructor = LazyJavaClassTypeConstructor@69['PrintStream']
}

LazyJavaClassifierType@303['PrintStream'] {
    arguments = ArrayList@304[empty]
    classifier = JavaClassImpl@302['PrintStream']
    nullable = 'true': Boolean@162
    typeConstructor = LazyJavaClassTypeConstructor@69['PrintStream']
}

LazyJavaClassifierType@106['RandomAccess'] {
    arguments = ArrayList@305[empty]
    classifier = JavaClassImpl@306['RandomAccess']
    memberScope = LazyJavaClassMemberScope@71
    typeConstructor = LazyJavaClassTypeConstructor@73['RandomAccess']
}

LazyJavaClassifierType@307['Serializable'] {
    arguments = ArrayList@308[empty]
    classifier = JavaClassImpl@309['Serializable']
    memberScope = LazyJavaClassMemberScope@75
    typeConstructor = LazyJavaClassTypeConstructor@77['Serializable']
}

LazyJavaClassifierType@310['String'] {
    arguments = ArrayList@311[empty]
    classifier = JavaClassImpl@312['String']
    nullable = 'false': Boolean@156
    typeConstructor = DeserializedClassTypeConstructor@313
}

LazyJavaClassifierType@314['String'] {
    arguments = ArrayList@315[empty]
    classifier = JavaClassImpl@312['String']
    nullable = 'true': Boolean@162
    typeConstructor = DeserializedClassTypeConstructor@313
}

LazyJavaPackageFragmentProvider@316 {
    packageFragments('<root>': FqName@317) = LazyJavaPackageFragment@318['<root>']
    packageFragments('ArrayList': FqName@319) = null
    packageFragments('Item': FqName@320) = null
    packageFragments('Object': FqName@321) = null
    packageFragments('String': FqName@322) = null
    packageFragments('System': FqName@323) = null
    packageFragments('items': FqName@324) = null
    packageFragments('java': FqName@325) = LazyJavaPackageFragment@326['java']
    packageFragments('java.io': FqName@327) = LazyJavaPackageFragment@328['io']
    packageFragments('java.lang': FqName@329) = LazyJavaPackageFragment@330['lang']
    packageFragments('java.lang.ArrayList': FqName@331) = null
    packageFragments('java.lang.Item': FqName@332) = null
    packageFragments('java.lang.Object': FqName@333) = null
    packageFragments('java.lang.String': FqName@334) = null
    packageFragments('java.lang.System': FqName@335) = null
    packageFragments('java.util': FqName@336) = LazyJavaPackageFragment@337['util']
    packageFragments('java.util.ArrayList': FqName@338) = null
    packageFragments('kotlin': FqName@339) = null
    packageFragments('kotlin.ArrayList': FqName@340) = null
    packageFragments('kotlin.Item': FqName@341) = null
    packageFragments('kotlin.Object': FqName@342) = null
    packageFragments('kotlin.String': FqName@343) = null
    packageFragments('kotlin.System': FqName@344) = null
    packageFragments('kotlin.io': FqName@345) = null
    packageFragments('kotlin.jvm': FqName@346) = null
    topLevelClasses(JavaClassImpl@132['AbstractCollection']) = LazyJavaClassDescriptor@0['AbstractCollection']
    topLevelClasses(JavaClassImpl@136['AbstractList']) = LazyJavaClassDescriptor@9['AbstractList']
    topLevelClasses(JavaClassImpl@139['Appendable']) = LazyJavaClassDescriptor@18['Appendable']
    topLevelClasses(JavaClassImpl@347['ArrayList']) = LazyJavaClassDescriptor@24['ArrayList']
    topLevelClasses(JavaClassImpl@141['AutoCloseable']) = LazyJavaClassDescriptor@39['AutoCloseable']
    topLevelClasses(JavaClassImpl@150['Closeable']) = LazyJavaClassDescriptor@43['Closeable']
    topLevelClasses(JavaClassImpl@237['FilterOutputStream']) = LazyJavaClassDescriptor@47['FilterOutputStream']
    topLevelClasses(JavaClassImpl@348['Object']) = LazyJavaClassDescriptor@51['Object']
    topLevelClasses(JavaClassImpl@299['OutputStream']) = LazyJavaClassDescriptor@53['OutputStream']
    topLevelClasses(JavaClassImpl@302['PrintStream']) = LazyJavaClassDescriptor@57['PrintStream']
    topLevelClasses(JavaClassImpl@306['RandomAccess']) = LazyJavaClassDescriptor@70['RandomAccess']
    topLevelClasses(JavaClassImpl@309['Serializable']) = LazyJavaClassDescriptor@74['Serializable']
    topLevelClasses(JavaClassImpl@349['System']) = LazyJavaClassDescriptor@78['System']
}

LazyJavaPackageFragment@318['<root>'] {
    classes('ArrayList': Name@350) = null // through LazyPackageFragmentScopeForJavaPackage@351
    classes('Object': Name@352) = null // through LazyPackageFragmentScopeForJavaPackage@351
    classes('String': Name@353) = null // through LazyPackageFragmentScopeForJavaPackage@351
    classes('System': Name@354) = null // through LazyPackageFragmentScopeForJavaPackage@351
    classes('items': Name@355) = null // through LazyPackageFragmentScopeForJavaPackage@351
    classes('java': Name@356) = null // through LazyPackageFragmentScopeForJavaPackage@351
    deserializedPackageScope = Empty@357 // through LazyPackageFragmentScopeForJavaPackage@351
    functions('ArrayList': Name@358) = EmptyList@20[empty] // through LazyPackageFragmentScopeForJavaPackage@351
    functions('java': Name@359) = EmptyList@20[empty] // through LazyPackageFragmentScopeForJavaPackage@351
    memberIndex = computeMemberIndex$1@360 // through LazyPackageFragmentScopeForJavaPackage@351
}

LazyJavaPackageFragment@326['java'] {
    classes('lang': Name@361) = null // through LazyPackageFragmentScopeForJavaPackage@362
    classes('util': Name@363) = null // through LazyPackageFragmentScopeForJavaPackage@362
    deserializedPackageScope = Empty@357 // through LazyPackageFragmentScopeForJavaPackage@362
    functions('lang': Name@364) = EmptyList@20[empty] // through LazyPackageFragmentScopeForJavaPackage@362
    functions('util': Name@365) = EmptyList@20[empty] // through LazyPackageFragmentScopeForJavaPackage@362
    memberIndex = computeMemberIndex$1@366 // through LazyPackageFragmentScopeForJavaPackage@362
}

LazyJavaPackageFragment@330['lang'] {
    classes('ArrayList': Name@358) = null // through LazyPackageFragmentScopeForJavaPackage@367
    classes('Object': Name@352) = LazyJavaClassDescriptor@51['Object'] // through LazyPackageFragmentScopeForJavaPackage@367
    classes('System': Name@354) = LazyJavaClassDescriptor@78['System'] // through LazyPackageFragmentScopeForJavaPackage@367
    classes('items': Name@355) = null // through LazyPackageFragmentScopeForJavaPackage@367
    deserializedPackageScope = Empty@357 // through LazyPackageFragmentScopeForJavaPackage@367
    functions('ArrayList': Name@358) = EmptyList@20[empty] // through LazyPackageFragmentScopeForJavaPackage@367
    memberIndex = computeMemberIndex$1@368 // through LazyPackageFragmentScopeForJavaPackage@367
}

LazyJavaPackageFragment@337['util'] {
    classes('ArrayList': Name@369) = LazyJavaClassDescriptor@24['ArrayList'] // through LazyPackageFragmentScopeForJavaPackage@370
    deserializedPackageScope = Empty@357 // through LazyPackageFragmentScopeForJavaPackage@370
    functions('ArrayList': Name@371) = EmptyList@20[empty] // through LazyPackageFragmentScopeForJavaPackage@370
    memberIndex = computeMemberIndex$1@372 // through LazyPackageFragmentScopeForJavaPackage@370
}

LazyJavaTypeParameterDescriptor@90['E'] {
    defaultType = JetTypeImpl@373['E']
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@175
    upperBounds = LinkedHashSet@374[1] { NullableType@375 }
    upperBoundsAsType = NullableType@375
}

LazyJavaTypeParameterDescriptor@94['E'] {
    defaultType = JetTypeImpl@376['E']
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@171
    upperBounds = LinkedHashSet@377[1] { NullableType@378 }
    upperBoundsAsType = NullableType@378
}

LazyJavaTypeParameterDescriptor@102['E'] {
    defaultType = JetTypeImpl@379['E']
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@179
    upperBounds = LinkedHashSet@380[1] { NullableType@381 }
}

LazyJavaTypeParameterResolver@382 {
    resolve(JavaTypeParameterImpl@383['E']) = LazyJavaTypeParameterDescriptor@90['E']
}

LazyJavaTypeParameterResolver@384 {
    resolve(JavaTypeParameterImpl@385['E']) = LazyJavaTypeParameterDescriptor@102['E']
}

LazyJavaTypeParameterResolver@386 {
    resolve(JavaTypeParameterImpl@387['E']) = LazyJavaTypeParameterDescriptor@94['E']
}

LazyJavaTypeParameterResolver@388 {
    resolve(JavaTypeParameterImpl@209['E']) = null
}

LazyJavaTypeParameterResolver@389 {
    resolve(JavaTypeParameterImpl@203['E']) = null
}

LazyJavaTypeParameterResolver@390 {
    resolve(JavaTypeParameterImpl@182['E']) = null
}

ResolutionTaskHolder@391 {
    <name not found> = ArrayList@392[10] { ResolutionCandidate@393, ResolutionCandidate@394, ResolutionCandidate@395, ... }
    <name not found> = ArrayList@396[10] { ResolutionCandidate@393, ResolutionCandidate@394, ResolutionCandidate@395, ... }
}

ResolutionTaskHolder@397 {
    <name not found> = ArrayList@398[1] { ResolutionCandidate@399 }
    <name not found> = ArrayList@400[1] { ResolutionCandidate@399 }
    <name not found> = EmptyList@20[empty]
    <name not found> = EmptyList@20[empty]
}

ResolutionTaskHolder@401 {
    <name not found> = ArrayList@402[1] { ResolutionCandidate@403 }
    <name not found> = ArrayList@404[1] { ResolutionCandidate@403 }
    <name not found> = EmptyList@20[empty]
    <name not found> = EmptyList@20[empty]
}

ResolutionTaskHolder@405 {
    <name not found> = ArrayList@406[1] { ResolutionCandidate@407 }
    <name not found> = ArrayList@408[1] { ResolutionCandidate@407 }
}

ResolutionTaskHolder@409 {
    <name not found> = ArrayList@410[1] { ResolutionCandidate@411 }
    <name not found> = ArrayList@412[1] { ResolutionCandidate@411 }
}

ResolutionTaskHolder@413 {
    <name not found> = ArrayList@414[1] { ResolutionCandidate@415 }
    <name not found> = ArrayList@416[1] { ResolutionCandidate@415 }
}

ResolutionTaskHolder@417 {
    <name not found> = ArrayList@418[1] { ResolutionCandidate@419 }
    <name not found> = ArrayList@420[1] { ResolutionCandidate@419 }
}

ResolutionTaskHolder@421 {
    <name not found> = ArrayList@422[1] { ResolutionCandidate@423 }
    <name not found> = ArrayList@424[1] { ResolutionCandidate@423 }
}

ResolutionTaskHolder@425 {
    <name not found> = ArrayList@426[1] { ResolutionCandidate@427 }
    <name not found> = ArrayList@428[1] { ResolutionCandidate@427 }
}

ResolutionTaskHolder@429 {
    <name not found> = ArrayList@430[1] { ResolutionCandidate@431 }
    <name not found> = ArrayList@432[1] { ResolutionCandidate@431 }
}

ResolutionTaskHolder@433 {
    <name not found> = ArrayList@434[1] { ResolutionCandidate@435 }
    <name not found> = ArrayList@436[1] { ResolutionCandidate@435 }
}

ResolutionTaskHolder@437 {
    <name not found> = ArrayList@438[1] { ResolutionCandidate@439 }
    <name not found> = ArrayList@440[1] { ResolutionCandidate@439 }
}

ResolutionTaskHolder@441 {
    <name not found> = ArrayList@442[3] { ResolutionCandidate@443, ResolutionCandidate@444, ResolutionCandidate@445 }
    <name not found> = ArrayList@446[3] { ResolutionCandidate@443, ResolutionCandidate@444, ResolutionCandidate@445 }
    <name not found> = EmptyList@20[empty]
    <name not found> = EmptyList@20[empty]
    <name not found> = EmptyList@20[empty]
    <name not found> = EmptyList@20[empty]
}

ResolutionTaskHolder@447 {
    <name not found> = EmptyList@20[empty]
    <name not found> = EmptyList@20[empty]
    <name not found> = EmptyList@20[empty]
    <name not found> = EmptyList@20[empty]
    <name not found> = EmptyList@20[empty]
    <name not found> = EmptyList@20[empty]
    <name not found> = EmptyList@20[empty]
    <name not found> = EmptyList@20[empty]
    <name not found> = EmptyList@20[empty]
    <name not found> = EmptyList@20[empty]
}
