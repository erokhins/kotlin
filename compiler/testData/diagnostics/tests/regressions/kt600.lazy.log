DescriptorResolver@0 {
    <name not found> = IntValue@1
}

LazyJavaClassDescriptor@2['Exception'] {
    typeConstructor = LazyJavaClassTypeConstructor@3['Exception']
}

LazyJavaClassDescriptor@4['NullPointerException'] {
    constructors = ArrayList@5[2] { JavaConstructorDescriptor@6['<init>'], JavaConstructorDescriptor@7['<init>'] } // through LazyJavaClassMemberScope@8
    defaultType = JetTypeImpl@9['NullPointerException']
    functionTypeForSamInterface = null
    typeConstructor = LazyJavaClassTypeConstructor@10['NullPointerException']
}

LazyJavaClassDescriptor@11['RuntimeException'] {
    typeConstructor = LazyJavaClassTypeConstructor@12['RuntimeException']
}

LazyJavaClassTypeConstructor@3['Exception'] {
    parameters = ArrayList@13[empty]
    supertypes = ArrayList@14[1] { LazyJavaClassifierType@15['Throwable'] }
}

LazyJavaClassTypeConstructor@10['NullPointerException'] {
    parameters = ArrayList@16[empty]
    supertypes = ArrayList@17[1] { LazyJavaClassifierType@18['RuntimeException'] }
}

LazyJavaClassTypeConstructor@12['RuntimeException'] {
    parameters = ArrayList@19[empty]
    supertypes = ArrayList@20[1] { LazyJavaClassifierType@21['Exception'] }
}

LazyJavaClassifierType@21['Exception'] {
    arguments = ArrayList@22[empty]
    classifier = JavaClassImpl@23['Exception']
    typeConstructor = LazyJavaClassTypeConstructor@3['Exception']
}

LazyJavaClassifierType@18['RuntimeException'] {
    arguments = ArrayList@24[empty]
    classifier = JavaClassImpl@25['RuntimeException']
    typeConstructor = LazyJavaClassTypeConstructor@12['RuntimeException']
}

LazyJavaClassifierType@26['String'] {
    arguments = ArrayList@27[empty]
    classifier = JavaClassImpl@28['String']
    nullable = 'false': Boolean@29
    typeConstructor = DeserializedClassTypeConstructor@30
}

LazyJavaClassifierType@31['String'] {
    arguments = ArrayList@32[empty]
    classifier = JavaClassImpl@28['String']
    nullable = 'true': Boolean@33
    typeConstructor = DeserializedClassTypeConstructor@30
}

LazyJavaClassifierType@15['Throwable'] {
    arguments = ArrayList@34[empty]
    classifier = JavaClassImpl@35['Throwable']
    typeConstructor = DeserializedClassTypeConstructor@36
}

LazyJavaPackageFragmentProvider@37 {
    packageFragments('<root>': FqName@38) = LazyJavaPackageFragment@39['<root>']
    packageFragments('Any': FqName@40) = null
    packageFragments('Int': FqName@41) = null
    packageFragments('T': FqName@42) = null
    packageFragments('java': FqName@43) = LazyJavaPackageFragment@44['java']
    packageFragments('java.lang': FqName@45) = LazyJavaPackageFragment@46['lang']
    packageFragments('java.lang.Any': FqName@47) = null
    packageFragments('java.lang.Int': FqName@48) = null
    packageFragments('java.lang.T': FqName@49) = null
    packageFragments('kotlin': FqName@50) = null
    packageFragments('kotlin.Any': FqName@51) = null
    packageFragments('kotlin.Int': FqName@52) = null
    packageFragments('kotlin.T': FqName@53) = null
    packageFragments('kotlin.io': FqName@54) = null
    packageFragments('kotlin.jvm': FqName@55) = null
    topLevelClasses(JavaClassImpl@23['Exception']) = LazyJavaClassDescriptor@2['Exception']
    topLevelClasses(JavaClassImpl@56['NullPointerException']) = LazyJavaClassDescriptor@4['NullPointerException']
    topLevelClasses(JavaClassImpl@25['RuntimeException']) = LazyJavaClassDescriptor@11['RuntimeException']
}

LazyJavaPackageFragment@39['<root>'] {
    classes('Any': Name@57) = null // through LazyPackageFragmentScopeForJavaPackage@58
    classes('Int': Name@59) = null // through LazyPackageFragmentScopeForJavaPackage@58
    classes('NullPointerException': Name@60) = null // through LazyPackageFragmentScopeForJavaPackage@58
    classes('_sure': Name@61) = null // through LazyPackageFragmentScopeForJavaPackage@58
    classes('equals': Name@62) = null // through LazyPackageFragmentScopeForJavaPackage@58
    deserializedPackageScope = Empty@63 // through LazyPackageFragmentScopeForJavaPackage@58
    functions('NullPointerException': Name@60) = EmptyList@64[empty] // through LazyPackageFragmentScopeForJavaPackage@58
    functions('_sure': Name@61) = EmptyList@64[empty] // through LazyPackageFragmentScopeForJavaPackage@58
    functions('equals': Name@62) = EmptyList@64[empty] // through LazyPackageFragmentScopeForJavaPackage@58
    memberIndex = computeMemberIndex$1@65 // through LazyPackageFragmentScopeForJavaPackage@58
}

LazyJavaPackageFragment@44['java'] {
    classes('lang': Name@66) = null // through LazyPackageFragmentScopeForJavaPackage@67
    deserializedPackageScope = Empty@63 // through LazyPackageFragmentScopeForJavaPackage@67
    functions('lang': Name@68) = EmptyList@64[empty] // through LazyPackageFragmentScopeForJavaPackage@67
    memberIndex = computeMemberIndex$1@69 // through LazyPackageFragmentScopeForJavaPackage@67
}

LazyJavaPackageFragment@46['lang'] {
    classes('NullPointerException': Name@60) = LazyJavaClassDescriptor@4['NullPointerException'] // through LazyPackageFragmentScopeForJavaPackage@70
    classes('_sure': Name@61) = null // through LazyPackageFragmentScopeForJavaPackage@70
    classes('equals': Name@62) = null // through LazyPackageFragmentScopeForJavaPackage@70
    deserializedPackageScope = Empty@63 // through LazyPackageFragmentScopeForJavaPackage@70
    functions('NullPointerException': Name@60) = EmptyList@64[empty] // through LazyPackageFragmentScopeForJavaPackage@70
    functions('_sure': Name@61) = EmptyList@64[empty] // through LazyPackageFragmentScopeForJavaPackage@70
    functions('equals': Name@62) = EmptyList@64[empty] // through LazyPackageFragmentScopeForJavaPackage@70
    memberIndex = computeMemberIndex$1@71 // through LazyPackageFragmentScopeForJavaPackage@70
}

ResolutionTaskHolder@72 {
    <name not found> = ArrayList@73[1] { ResolutionCandidate@74 }
    <name not found> = ArrayList@75[1] { ResolutionCandidate@74 }
    <name not found> = ArrayList@76[1] { ResolutionCandidate@77 }
    <name not found> = ArrayList@78[1] { ResolutionCandidate@77 }
    <name not found> = EmptyList@64[empty]
    <name not found> = EmptyList@64[empty]
    <name not found> = EmptyList@64[empty]
    <name not found> = EmptyList@64[empty]
}

ResolutionTaskHolder@79 {
    <name not found> = ArrayList@80[1] { ResolutionCandidate@81 }
    <name not found> = ArrayList@82[1] { ResolutionCandidate@81 }
    <name not found> = EmptyList@64[empty]
    <name not found> = EmptyList@64[empty]
    <name not found> = EmptyList@64[empty]
    <name not found> = EmptyList@64[empty]
}

ResolutionTaskHolder@83 {
    <name not found> = ArrayList@84[1] { ResolutionCandidate@85 }
    <name not found> = ArrayList@86[1] { ResolutionCandidate@85 }
}

ResolutionTaskHolder@87 {
    <name not found> = ArrayList@88[1] { ResolutionCandidate@89 }
    <name not found> = ArrayList@90[1] { ResolutionCandidate@89 }
}

ResolutionTaskHolder@91 {
    <name not found> = ArrayList@92[2] { ResolutionCandidate@93, ResolutionCandidate@94 }
    <name not found> = ArrayList@95[2] { ResolutionCandidate@93, ResolutionCandidate@94 }
    <name not found> = EmptyList@64[empty]
    <name not found> = EmptyList@64[empty]
    <name not found> = EmptyList@64[empty]
    <name not found> = EmptyList@64[empty]
    <name not found> = EmptyList@64[empty]
    <name not found> = EmptyList@64[empty]
    <name not found> = EmptyList@64[empty]
    <name not found> = EmptyList@64[empty]
    <name not found> = EmptyList@64[empty]
    <name not found> = EmptyList@64[empty]
    <name not found> = EmptyList@64[empty]
    <name not found> = EmptyList@64[empty]
    <name not found> = EmptyList@64[empty]
    <name not found> = EmptyList@64[empty]
    <name not found> = EmptyList@64[empty]
    <name not found> = EmptyList@64[empty]
}
