LazyJavaClassDescriptor@0['C'] {
    defaultType = JetTypeImpl@1['C']
    enumEntryIndex = LinkedHashMap@2 // through LazyJavaClassMemberScope@3
    functions('from': Name@4) = ArrayList@5[5] { JavaMethodDescriptor@6['from'], JavaMethodDescriptor@7['from'], JavaMethodDescriptor@8['from'], ... } // through LazyJavaClassMemberScope@3
    memberIndex = computeMemberIndex$1@9 // through LazyJavaClassMemberScope@3
    nestedClassIndex = LinkedHashMap@10 // through LazyJavaClassMemberScope@3
    nestedClasses('from': Name@4) = null // through LazyJavaClassMemberScope@3
    thisAsReceiverParameter = LazyClassReceiverParameterDescriptor@11['<this>']
    typeConstructor = LazyJavaClassTypeConstructor@12['C']
}

LazyJavaClassTypeConstructor@12['C'] {
    parameters = ArrayList@13[empty]
    supertypes = ArrayList@14[1] { JetTypeImpl@15['Any'] }
}

LazyJavaClassifierType@16['Object'] {
    classifier = JavaClassImpl@17['Object']
    typeConstructor = DeserializedClassTypeConstructor@18
}

LazyJavaClassifierType@19['String'] {
    arguments = ArrayList@20[empty]
    classifier = JavaClassImpl@21['String']
    nullable = 'false': Boolean@22
    typeConstructor = DeserializedClassTypeConstructor@23
}

LazyJavaClassifierType@24['String'] {
    arguments = ArrayList@25[empty]
    classifier = JavaClassImpl@26['String']
    nullable = 'false': Boolean@22
    typeConstructor = DeserializedClassTypeConstructor@23
}

LazyJavaClassifierType@27['String'] {
    arguments = ArrayList@28[empty]
    classifier = JavaClassImpl@29['String']
    nullable = 'false': Boolean@22
    typeConstructor = DeserializedClassTypeConstructor@23
}

LazyJavaClassifierType@30['String'] {
    arguments = ArrayList@31[empty]
    classifier = JavaClassImpl@32['String']
    nullable = 'false': Boolean@22
    typeConstructor = DeserializedClassTypeConstructor@23
}

LazyJavaClassifierType@33['String'] {
    arguments = ArrayList@34[empty]
    classifier = JavaClassImpl@35['String']
    nullable = 'false': Boolean@22
    typeConstructor = DeserializedClassTypeConstructor@23
}

LazyJavaClassifierType@36['String'] {
    arguments = ArrayList@37[empty]
    classifier = JavaClassImpl@38['String']
    nullable = 'false': Boolean@22
    typeConstructor = DeserializedClassTypeConstructor@23
}

LazyJavaClassifierType@39['String'] {
    arguments = ArrayList@40[empty]
    classifier = JavaClassImpl@29['String']
    nullable = 'true': Boolean@41
    typeConstructor = DeserializedClassTypeConstructor@23
}

LazyJavaClassifierType@42['String'] {
    arguments = ArrayList@43[empty]
    classifier = JavaClassImpl@38['String']
    nullable = 'true': Boolean@41
    typeConstructor = DeserializedClassTypeConstructor@23
}

LazyJavaClassifierType@44['String'] {
    arguments = ArrayList@45[empty]
    classifier = JavaClassImpl@35['String']
    nullable = 'true': Boolean@41
    typeConstructor = DeserializedClassTypeConstructor@23
}

LazyJavaClassifierType@46['String'] {
    arguments = ArrayList@47[empty]
    classifier = JavaClassImpl@32['String']
    nullable = 'true': Boolean@41
    typeConstructor = DeserializedClassTypeConstructor@23
}

LazyJavaClassifierType@48['String'] {
    arguments = ArrayList@49[empty]
    classifier = JavaClassImpl@21['String']
    nullable = 'true': Boolean@41
    typeConstructor = DeserializedClassTypeConstructor@23
}

LazyJavaClassifierType@50['String'] {
    arguments = ArrayList@51[empty]
    classifier = JavaClassImpl@26['String']
    nullable = 'true': Boolean@41
    typeConstructor = DeserializedClassTypeConstructor@23
}

LazyJavaPackageFragmentProvider@52 {
    packageFragments('<root>': FqName@53) = LazyJavaPackageFragment@54['<root>']
    packageFragments('Array': FqName@55) = null
    packageFragments('C': FqName@56) = null
    packageFragments('String': FqName@57) = null
    packageFragments('java': FqName@58) = LazyJavaPackageFragment@59['java']
    packageFragments('java.lang': FqName@60) = LazyJavaPackageFragment@61['lang']
    packageFragments('java.lang.Array': FqName@62) = null
    packageFragments('java.lang.C': FqName@63) = null
    packageFragments('java.lang.String': FqName@64) = null
    packageFragments('kotlin': FqName@65) = null
    packageFragments('kotlin.Array': FqName@66) = null
    packageFragments('kotlin.C': FqName@67) = null
    packageFragments('kotlin.String': FqName@68) = null
    packageFragments('kotlin.io': FqName@69) = null
    packageFragments('kotlin.jvm': FqName@70) = null
    topLevelClasses(JavaClassImpl@71['C']) = LazyJavaClassDescriptor@0['C']
}

LazyJavaPackageFragment@54['<root>'] {
    classes('Array': Name@72) = null // through LazyPackageFragmentScopeForJavaPackage@73
    classes('C': Name@74) = LazyJavaClassDescriptor@0['C'] // through LazyPackageFragmentScopeForJavaPackage@73
    classes('String': Name@75) = null // through LazyPackageFragmentScopeForJavaPackage@73
}

LazyJavaPackageFragment@59['java'] {
    classes('lang': Name@76) = null // through LazyPackageFragmentScopeForJavaPackage@77
    deserializedPackageScope = Empty@78 // through LazyPackageFragmentScopeForJavaPackage@77
    functions('lang': Name@79) = EmptyList@80[empty] // through LazyPackageFragmentScopeForJavaPackage@77
    memberIndex = computeMemberIndex$1@81 // through LazyPackageFragmentScopeForJavaPackage@77
}

ResolutionTaskHolder@82 {
    <name not found> = ArrayList@83[1] { ResolutionCandidate@84 }
    <name not found> = ArrayList@85[1] { ResolutionCandidate@84 }
}

ResolutionTaskHolder@86 {
    <name not found> = ArrayList@87[1] { ResolutionCandidate@88 }
    <name not found> = ArrayList@89[1] { ResolutionCandidate@88 }
}

ResolutionTaskHolder@90 {
    <name not found> = ArrayList@91[1] { ResolutionCandidate@92 }
    <name not found> = ArrayList@93[1] { ResolutionCandidate@92 }
}

ResolutionTaskHolder@94 {
    <name not found> = ArrayList@95[1] { ResolutionCandidate@96 }
    <name not found> = ArrayList@97[1] { ResolutionCandidate@96 }
}

ResolutionTaskHolder@98 {
    <name not found> = ArrayList@99[1] { ResolutionCandidate@100 }
    <name not found> = ArrayList@101[1] { ResolutionCandidate@100 }
}

ResolutionTaskHolder@102 {
    <name not found> = ArrayList@103[1] { ResolutionCandidate@104 }
    <name not found> = ArrayList@105[1] { ResolutionCandidate@104 }
}

ResolutionTaskHolder@106 {
    <name not found> = ArrayList@107[1] { ResolutionCandidate@108 }
    <name not found> = ArrayList@109[1] { ResolutionCandidate@108 }
}

ResolutionTaskHolder@110 {
    <name not found> = ArrayList@111[1] { ResolutionCandidate@112 }
    <name not found> = ArrayList@113[1] { ResolutionCandidate@112 }
}

ResolutionTaskHolder@114 {
    <name not found> = ArrayList@115[5] { ResolutionCandidate@116, ResolutionCandidate@117, ResolutionCandidate@118, ... }
    <name not found> = ArrayList@119[5] { ResolutionCandidate@116, ResolutionCandidate@117, ResolutionCandidate@118, ... }
}

ResolutionTaskHolder@120 {
    <name not found> = ArrayList@121[5] { ResolutionCandidate@122, ResolutionCandidate@123, ResolutionCandidate@124, ... }
    <name not found> = ArrayList@125[5] { ResolutionCandidate@122, ResolutionCandidate@123, ResolutionCandidate@124, ... }
}

ResolutionTaskHolder@126 {
    <name not found> = ArrayList@127[5] { ResolutionCandidate@128, ResolutionCandidate@129, ResolutionCandidate@130, ... }
    <name not found> = ArrayList@131[5] { ResolutionCandidate@128, ResolutionCandidate@129, ResolutionCandidate@130, ... }
}

ResolutionTaskHolder@132 {
    <name not found> = ArrayList@133[5] { ResolutionCandidate@134, ResolutionCandidate@135, ResolutionCandidate@136, ... }
    <name not found> = ArrayList@137[5] { ResolutionCandidate@134, ResolutionCandidate@135, ResolutionCandidate@136, ... }
}

ResolutionTaskHolder@138 {
    <name not found> = ArrayList@139[5] { ResolutionCandidate@140, ResolutionCandidate@141, ResolutionCandidate@142, ... }
    <name not found> = ArrayList@143[5] { ResolutionCandidate@140, ResolutionCandidate@141, ResolutionCandidate@142, ... }
}

ResolutionTaskHolder@144 {
    <name not found> = ArrayList@145[5] { ResolutionCandidate@146, ResolutionCandidate@147, ResolutionCandidate@148, ... }
    <name not found> = ArrayList@149[5] { ResolutionCandidate@146, ResolutionCandidate@147, ResolutionCandidate@148, ... }
}
