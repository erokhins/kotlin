DescriptorResolver@0 {
    <name not found> = JetTypeImpl@1['String']
    <name not found> = MutableClassDescriptor$1@2
}

LazyJavaClassDescriptor@3['AbstractCollection'] {
    defaultType = JetTypeImpl@4['AbstractCollection<1>']
    functions('Itr': Name@5) = EmptyList@6[empty] // through LazyJavaClassMemberScope@7
    functions('ListItr': Name@8) = EmptyList@6[empty] // through LazyJavaClassMemberScope@7
    functions('SubList': Name@9) = EmptyList@6[empty] // through LazyJavaClassMemberScope@7
    functions('add': Name@10) = ArrayList@11[1] { JavaMethodDescriptor@12['add'] } // through LazyJavaClassMemberScope@7
    functions('addAll': Name@13) = ArrayList@14[1] { JavaMethodDescriptor@15['addAll'] } // through LazyJavaClassMemberScope@7
    functions('batchRemove': Name@16) = EmptyList@6[empty] // through LazyJavaClassMemberScope@7
    functions('clear': Name@17) = ArrayList@18[1] { JavaMethodDescriptor@19['clear'] } // through LazyJavaClassMemberScope@7
    functions('clone': Name@20) = EmptyList@6[empty] // through LazyJavaClassMemberScope@7
    functions('contains': Name@21) = ArrayList@22[1] { JavaMethodDescriptor@23['contains'] } // through LazyJavaClassMemberScope@7
    functions('containsAll': Name@24) = ArrayList@25[1] { JavaMethodDescriptor@26['containsAll'] } // through LazyJavaClassMemberScope@7
    functions('elementData': Name@27) = EmptyList@6[empty] // through LazyJavaClassMemberScope@7
    functions('ensureCapacity': Name@28) = EmptyList@6[empty] // through LazyJavaClassMemberScope@7
    functions('ensureCapacityInternal': Name@29) = EmptyList@6[empty] // through LazyJavaClassMemberScope@7
    functions('equals': Name@30) = ArrayList@31[1] { DeserializedSimpleFunctionDescriptor@32['equals'] } // through LazyJavaClassMemberScope@7
    functions('fastRemove': Name@33) = EmptyList@6[empty] // through LazyJavaClassMemberScope@7
    functions('finalize': Name@34) = EmptyList@6[empty] // through LazyJavaClassMemberScope@7
    functions('get': Name@35) = EmptyList@6[empty] // through LazyJavaClassMemberScope@7
    functions('getClass': Name@36) = EmptyList@6[empty] // through LazyJavaClassMemberScope@7
    functions('grow': Name@37) = EmptyList@6[empty] // through LazyJavaClassMemberScope@7
    functions('hashCode': Name@38) = ArrayList@39[1] { DeserializedSimpleFunctionDescriptor@40['hashCode'] } // through LazyJavaClassMemberScope@7
    functions('indexOf': Name@41) = EmptyList@6[empty] // through LazyJavaClassMemberScope@7
    functions('isEmpty': Name@42) = ArrayList@43[1] { JavaMethodDescriptor@44['isEmpty'] } // through LazyJavaClassMemberScope@7
    functions('iterator': Name@45) = ArrayList@46[1] { JavaMethodDescriptor@47['iterator'] } // through LazyJavaClassMemberScope@7
    functions('lastIndexOf': Name@48) = EmptyList@6[empty] // through LazyJavaClassMemberScope@7
    functions('listIterator': Name@49) = EmptyList@6[empty] // through LazyJavaClassMemberScope@7
    functions('notify': Name@50) = EmptyList@6[empty] // through LazyJavaClassMemberScope@7
    functions('notifyAll': Name@51) = EmptyList@6[empty] // through LazyJavaClassMemberScope@7
    functions('outOfBoundsMsg': Name@52) = EmptyList@6[empty] // through LazyJavaClassMemberScope@7
    functions('rangeCheck': Name@53) = EmptyList@6[empty] // through LazyJavaClassMemberScope@7
    functions('rangeCheckForAdd': Name@54) = EmptyList@6[empty] // through LazyJavaClassMemberScope@7
    functions('readObject': Name@55) = EmptyList@6[empty] // through LazyJavaClassMemberScope@7
    functions('remove': Name@56) = ArrayList@57[1] { JavaMethodDescriptor@58['remove'] } // through LazyJavaClassMemberScope@7
    functions('removeAll': Name@59) = ArrayList@60[1] { JavaMethodDescriptor@61['removeAll'] } // through LazyJavaClassMemberScope@7
    functions('removeRange': Name@62) = EmptyList@6[empty] // through LazyJavaClassMemberScope@7
    functions('retainAll': Name@63) = ArrayList@64[1] { JavaMethodDescriptor@65['retainAll'] } // through LazyJavaClassMemberScope@7
    functions('set': Name@66) = EmptyList@6[empty] // through LazyJavaClassMemberScope@7
    functions('size': Name@67) = ArrayList@68[1] { JavaMethodDescriptor@69['size'] } // through LazyJavaClassMemberScope@7
    functions('subList': Name@70) = EmptyList@6[empty] // through LazyJavaClassMemberScope@7
    functions('toArray': Name@71) = ArrayList@72[2] { JavaMethodDescriptor@73['toArray'], JavaMethodDescriptor@74['toArray'] } // through LazyJavaClassMemberScope@7
    functions('toString': Name@75) = ArrayList@76[1] { JavaMethodDescriptor@77['toString'] } // through LazyJavaClassMemberScope@7
    functions('trimToSize': Name@78) = EmptyList@6[empty] // through LazyJavaClassMemberScope@7
    functions('wait': Name@79) = EmptyList@6[empty] // through LazyJavaClassMemberScope@7
    functions('writeObject': Name@80) = EmptyList@6[empty] // through LazyJavaClassMemberScope@7
    memberIndex = computeMemberIndex$1@81 // through LazyJavaClassMemberScope@7
    properties('elementData': Name@82) = EmptyList@6[empty] // through LazyJavaClassMemberScope@7
    properties('modCount': Name@83) = EmptyList@6[empty] // through LazyJavaClassMemberScope@7
    properties('size': Name@84) = EmptyList@6[empty] // through LazyJavaClassMemberScope@7
    thisAsReceiverParameter = LazyClassReceiverParameterDescriptor@85['<this>']
    typeConstructor = LazyJavaClassTypeConstructor@86['AbstractCollection']
}

LazyJavaClassDescriptor@87['AbstractList'] {
    defaultType = JetTypeImpl@88['AbstractList<1>']
    functions('Itr': Name@5) = EmptyList@6[empty] // through LazyJavaClassMemberScope@89
    functions('ListItr': Name@8) = EmptyList@6[empty] // through LazyJavaClassMemberScope@89
    functions('SubList': Name@9) = EmptyList@6[empty] // through LazyJavaClassMemberScope@89
    functions('add': Name@90) = ArrayList@91[2] { JavaMethodDescriptor@92['add'], JavaMethodDescriptor@93['add'] } // through LazyJavaClassMemberScope@89
    functions('addAll': Name@94) = ArrayList@95[2] { JavaMethodDescriptor@96['addAll'], DeserializedSimpleFunctionDescriptor@97['addAll'] } // through LazyJavaClassMemberScope@89
    functions('batchRemove': Name@16) = EmptyList@6[empty] // through LazyJavaClassMemberScope@89
    functions('clear': Name@98) = ArrayList@99[1] { JavaMethodDescriptor@100['clear'] } // through LazyJavaClassMemberScope@89
    functions('clone': Name@20) = EmptyList@6[empty] // through LazyJavaClassMemberScope@89
    functions('contains': Name@21) = ArrayList@101[1] { DeserializedSimpleFunctionDescriptor@102['contains'] } // through LazyJavaClassMemberScope@89
    functions('containsAll': Name@24) = ArrayList@103[1] { DeserializedSimpleFunctionDescriptor@104['containsAll'] } // through LazyJavaClassMemberScope@89
    functions('elementData': Name@27) = EmptyList@6[empty] // through LazyJavaClassMemberScope@89
    functions('ensureCapacity': Name@28) = EmptyList@6[empty] // through LazyJavaClassMemberScope@89
    functions('ensureCapacityInternal': Name@29) = EmptyList@6[empty] // through LazyJavaClassMemberScope@89
    functions('equals': Name@105) = ArrayList@106[1] { JavaMethodDescriptor@107['equals'] } // through LazyJavaClassMemberScope@89
    functions('fastRemove': Name@33) = EmptyList@6[empty] // through LazyJavaClassMemberScope@89
    functions('finalize': Name@34) = EmptyList@6[empty] // through LazyJavaClassMemberScope@89
    functions('get': Name@108) = ArrayList@109[1] { JavaMethodDescriptor@110['get'] } // through LazyJavaClassMemberScope@89
    functions('getClass': Name@36) = EmptyList@6[empty] // through LazyJavaClassMemberScope@89
    functions('grow': Name@37) = EmptyList@6[empty] // through LazyJavaClassMemberScope@89
    functions('hashCode': Name@111) = ArrayList@112[1] { JavaMethodDescriptor@113['hashCode'] } // through LazyJavaClassMemberScope@89
    functions('indexOf': Name@114) = ArrayList@115[1] { JavaMethodDescriptor@116['indexOf'] } // through LazyJavaClassMemberScope@89
    functions('isEmpty': Name@42) = ArrayList@117[1] { DeserializedSimpleFunctionDescriptor@118['isEmpty'] } // through LazyJavaClassMemberScope@89
    functions('iterator': Name@119) = ArrayList@120[1] { JavaMethodDescriptor@121['iterator'] } // through LazyJavaClassMemberScope@89
    functions('lastIndexOf': Name@122) = ArrayList@123[1] { JavaMethodDescriptor@124['lastIndexOf'] } // through LazyJavaClassMemberScope@89
    functions('listIterator': Name@125) = ArrayList@126[2] { JavaMethodDescriptor@127['listIterator'], JavaMethodDescriptor@128['listIterator'] } // through LazyJavaClassMemberScope@89
    functions('notify': Name@50) = EmptyList@6[empty] // through LazyJavaClassMemberScope@89
    functions('notifyAll': Name@51) = EmptyList@6[empty] // through LazyJavaClassMemberScope@89
    functions('outOfBoundsMsg': Name@129) = ArrayList@130[1] { JavaMethodDescriptor@131['outOfBoundsMsg'] } // through LazyJavaClassMemberScope@89
    functions('rangeCheck': Name@53) = EmptyList@6[empty] // through LazyJavaClassMemberScope@89
    functions('rangeCheckForAdd': Name@132) = ArrayList@133[1] { JavaMethodDescriptor@134['rangeCheckForAdd'] } // through LazyJavaClassMemberScope@89
    functions('readObject': Name@55) = EmptyList@6[empty] // through LazyJavaClassMemberScope@89
    functions('remove': Name@135) = ArrayList@136[2] { JavaMethodDescriptor@137['remove'], DeserializedSimpleFunctionDescriptor@138['remove'] } // through LazyJavaClassMemberScope@89
    functions('removeAll': Name@59) = ArrayList@139[1] { DeserializedSimpleFunctionDescriptor@140['removeAll'] } // through LazyJavaClassMemberScope@89
    functions('removeRange': Name@141) = ArrayList@142[1] { JavaMethodDescriptor@143['removeRange'] } // through LazyJavaClassMemberScope@89
    functions('retainAll': Name@63) = ArrayList@144[1] { DeserializedSimpleFunctionDescriptor@145['retainAll'] } // through LazyJavaClassMemberScope@89
    functions('set': Name@146) = ArrayList@147[1] { JavaMethodDescriptor@148['set'] } // through LazyJavaClassMemberScope@89
    functions('size': Name@67) = ArrayList@149[1] { DeserializedSimpleFunctionDescriptor@150['size'] } // through LazyJavaClassMemberScope@89
    functions('subList': Name@151) = ArrayList@152[1] { JavaMethodDescriptor@153['subList'] } // through LazyJavaClassMemberScope@89
    functions('toArray': Name@71) = ArrayList@154[2] { JavaMethodDescriptor@155['toArray'], JavaMethodDescriptor@156['toArray'] } // through LazyJavaClassMemberScope@89
    functions('toString': Name@75) = ArrayList@157[1] { DeserializedSimpleFunctionDescriptor@158['toString'] } // through LazyJavaClassMemberScope@89
    functions('trimToSize': Name@78) = EmptyList@6[empty] // through LazyJavaClassMemberScope@89
    functions('wait': Name@79) = EmptyList@6[empty] // through LazyJavaClassMemberScope@89
    functions('writeObject': Name@80) = EmptyList@6[empty] // through LazyJavaClassMemberScope@89
    memberIndex = computeMemberIndex$1@159 // through LazyJavaClassMemberScope@89
    properties('elementData': Name@82) = EmptyList@6[empty] // through LazyJavaClassMemberScope@89
    properties('modCount': Name@83) = ArrayList@160[1] { JavaPropertyDescriptor@161['modCount'] } // through LazyJavaClassMemberScope@89
    properties('size': Name@84) = EmptyList@6[empty] // through LazyJavaClassMemberScope@89
    thisAsReceiverParameter = LazyClassReceiverParameterDescriptor@162['<this>']
    typeConstructor = LazyJavaClassTypeConstructor@163['AbstractList']
}

LazyJavaClassDescriptor@164['ArrayList'] {
    allDescriptors = ArrayList@165[46] { LazyJavaClassDescriptor@166['SubList'], LazyJavaClassDescriptor@167['ListItr'], LazyJavaClassDescriptor@168['Itr'], ... } // through LazyJavaClassMemberScope@169
    constructors = ArrayList@170[3] { JavaConstructorDescriptor@171['<init>'], JavaConstructorDescriptor@172['<init>'], JavaConstructorDescriptor@173['<init>'] } // through LazyJavaClassMemberScope@169
    defaultType = JetTypeImpl@174['ArrayList<1>']
    enumEntryIndex = LinkedHashMap@175 // through LazyJavaClassMemberScope@169
    functions('Itr': Name@5) = EmptyList@6[empty] // through LazyJavaClassMemberScope@169
    functions('ListItr': Name@8) = EmptyList@6[empty] // through LazyJavaClassMemberScope@169
    functions('SubList': Name@9) = EmptyList@6[empty] // through LazyJavaClassMemberScope@169
    functions('add': Name@176) = ArrayList@177[2] { JavaMethodDescriptor@178['add'], JavaMethodDescriptor@179['add'] } // through LazyJavaClassMemberScope@169
    functions('addAll': Name@180) = ArrayList@181[2] { JavaMethodDescriptor@182['addAll'], JavaMethodDescriptor@183['addAll'] } // through LazyJavaClassMemberScope@169
    functions('batchRemove': Name@184) = ArrayList@185[1] { JavaMethodDescriptor@186['batchRemove'] } // through LazyJavaClassMemberScope@169
    functions('clear': Name@187) = ArrayList@188[1] { JavaMethodDescriptor@189['clear'] } // through LazyJavaClassMemberScope@169
    functions('clone': Name@190) = ArrayList@191[1] { JavaMethodDescriptor@192['clone'] } // through LazyJavaClassMemberScope@169
    functions('contains': Name@193) = ArrayList@194[1] { JavaMethodDescriptor@195['contains'] } // through LazyJavaClassMemberScope@169
    functions('containsAll': Name@24) = ArrayList@196[1] { DeserializedSimpleFunctionDescriptor@197['containsAll'] } // through LazyJavaClassMemberScope@169
    functions('elementData': Name@198) = ArrayList@199[1] { JavaMethodDescriptor@200['elementData'] } // through LazyJavaClassMemberScope@169
    functions('ensureCapacity': Name@201) = ArrayList@202[1] { JavaMethodDescriptor@203['ensureCapacity'] } // through LazyJavaClassMemberScope@169
    functions('ensureCapacityInternal': Name@204) = ArrayList@205[1] { JavaMethodDescriptor@206['ensureCapacityInternal'] } // through LazyJavaClassMemberScope@169
    functions('equals': Name@105) = ArrayList@207[1] { DeserializedSimpleFunctionDescriptor@208['equals'] } // through LazyJavaClassMemberScope@169
    functions('fastRemove': Name@209) = ArrayList@210[1] { JavaMethodDescriptor@211['fastRemove'] } // through LazyJavaClassMemberScope@169
    functions('finalize': Name@34) = EmptyList@6[empty] // through LazyJavaClassMemberScope@169
    functions('get': Name@212) = ArrayList@213[1] { JavaMethodDescriptor@214['get'] } // through LazyJavaClassMemberScope@169
    functions('getClass': Name@36) = EmptyList@6[empty] // through LazyJavaClassMemberScope@169
    functions('grow': Name@215) = ArrayList@216[1] { JavaMethodDescriptor@217['grow'] } // through LazyJavaClassMemberScope@169
    functions('hashCode': Name@111) = ArrayList@218[1] { DeserializedSimpleFunctionDescriptor@219['hashCode'] } // through LazyJavaClassMemberScope@169
    functions('indexOf': Name@220) = ArrayList@221[1] { JavaMethodDescriptor@222['indexOf'] } // through LazyJavaClassMemberScope@169
    functions('isEmpty': Name@223) = ArrayList@224[1] { JavaMethodDescriptor@225['isEmpty'] } // through LazyJavaClassMemberScope@169
    functions('iterator': Name@226) = ArrayList@227[1] { JavaMethodDescriptor@228['iterator'] } // through LazyJavaClassMemberScope@169
    functions('lastIndexOf': Name@229) = ArrayList@230[1] { JavaMethodDescriptor@231['lastIndexOf'] } // through LazyJavaClassMemberScope@169
    functions('listIterator': Name@232) = ArrayList@233[2] { JavaMethodDescriptor@234['listIterator'], JavaMethodDescriptor@235['listIterator'] } // through LazyJavaClassMemberScope@169
    functions('notify': Name@50) = EmptyList@6[empty] // through LazyJavaClassMemberScope@169
    functions('notifyAll': Name@51) = EmptyList@6[empty] // through LazyJavaClassMemberScope@169
    functions('outOfBoundsMsg': Name@236) = ArrayList@237[1] { JavaMethodDescriptor@238['outOfBoundsMsg'] } // through LazyJavaClassMemberScope@169
    functions('rangeCheck': Name@239) = ArrayList@240[1] { JavaMethodDescriptor@241['rangeCheck'] } // through LazyJavaClassMemberScope@169
    functions('rangeCheckForAdd': Name@242) = ArrayList@243[1] { JavaMethodDescriptor@244['rangeCheckForAdd'] } // through LazyJavaClassMemberScope@169
    functions('readObject': Name@245) = ArrayList@246[1] { JavaMethodDescriptor@247['readObject'] } // through LazyJavaClassMemberScope@169
    functions('remove': Name@248) = ArrayList@249[2] { JavaMethodDescriptor@250['remove'], JavaMethodDescriptor@251['remove'] } // through LazyJavaClassMemberScope@169
    functions('removeAll': Name@252) = ArrayList@253[1] { JavaMethodDescriptor@254['removeAll'] } // through LazyJavaClassMemberScope@169
    functions('removeRange': Name@255) = ArrayList@256[1] { JavaMethodDescriptor@257['removeRange'] } // through LazyJavaClassMemberScope@169
    functions('retainAll': Name@258) = ArrayList@259[1] { JavaMethodDescriptor@260['retainAll'] } // through LazyJavaClassMemberScope@169
    functions('set': Name@261) = ArrayList@262[1] { JavaMethodDescriptor@263['set'] } // through LazyJavaClassMemberScope@169
    functions('size': Name@264) = ArrayList@265[1] { JavaMethodDescriptor@266['size'] } // through LazyJavaClassMemberScope@169
    functions('subList': Name@267) = ArrayList@268[1] { JavaMethodDescriptor@269['subList'] } // through LazyJavaClassMemberScope@169
    functions('toArray': Name@270) = ArrayList@271[2] { JavaMethodDescriptor@272['toArray'], JavaMethodDescriptor@273['toArray'] } // through LazyJavaClassMemberScope@169
    functions('toString': Name@75) = ArrayList@274[1] { DeserializedSimpleFunctionDescriptor@275['toString'] } // through LazyJavaClassMemberScope@169
    functions('trimToSize': Name@276) = ArrayList@277[1] { JavaMethodDescriptor@278['trimToSize'] } // through LazyJavaClassMemberScope@169
    functions('wait': Name@79) = EmptyList@6[empty] // through LazyJavaClassMemberScope@169
    functions('writeObject': Name@279) = ArrayList@280[1] { JavaMethodDescriptor@281['writeObject'] } // through LazyJavaClassMemberScope@169
    memberIndex = computeMemberIndex$1@282 // through LazyJavaClassMemberScope@169
    nestedClassIndex = LinkedHashMap@283 // through LazyJavaClassMemberScope@169
    nestedClasses('Itr': Name@5) = LazyJavaClassDescriptor@168['Itr'] // through LazyJavaClassMemberScope@169
    nestedClasses('ListItr': Name@8) = LazyJavaClassDescriptor@167['ListItr'] // through LazyJavaClassMemberScope@169
    nestedClasses('SubList': Name@9) = LazyJavaClassDescriptor@166['SubList'] // through LazyJavaClassMemberScope@169
    properties('elementData': Name@82) = ArrayList@284[1] { JavaPropertyDescriptor@285['elementData'] } // through LazyJavaClassMemberScope@169
    properties('modCount': Name@83) = ArrayList@286[1] { PropertyDescriptorImpl@287['modCount'] } // through LazyJavaClassMemberScope@169
    properties('size': Name@84) = ArrayList@288[1] { JavaPropertyDescriptor@289['size'] } // through LazyJavaClassMemberScope@169
    thisAsReceiverParameter = LazyClassReceiverParameterDescriptor@290['<this>']
    typeConstructor = LazyJavaClassTypeConstructor@291['ArrayList']
}

LazyJavaClassDescriptor@292['ArrayList'] {
    typeConstructor = LazyJavaClassTypeConstructor@293['ArrayList']
}

LazyJavaClassDescriptor@294['Arrays'] {
    nestedClassIndex = LinkedHashMap@295 // through LazyJavaClassMemberScope@296
    nestedClasses('ArrayList': Name@297) = LazyJavaClassDescriptor@292['ArrayList'] // through LazyJavaClassMemberScope@296
}

LazyJavaClassDescriptor@298['Integer'] {
    typeConstructor = LazyJavaClassTypeConstructor@299['Integer']
}

LazyJavaClassDescriptor@300['ObjectInputStream'] {
    functionTypeForSamInterface = null
    typeConstructor = LazyJavaClassTypeConstructor@301['ObjectInputStream']
}

LazyJavaClassDescriptor@302['ObjectOutputStream'] {
    functionTypeForSamInterface = null
    typeConstructor = LazyJavaClassTypeConstructor@303['ObjectOutputStream']
}

LazyJavaClassDescriptor@304['RandomAccess'] {
    defaultType = JetTypeImpl@305['RandomAccess']
    functions('Itr': Name@5) = EmptyList@6[empty] // through LazyJavaClassMemberScope@306
    functions('ListItr': Name@8) = EmptyList@6[empty] // through LazyJavaClassMemberScope@306
    functions('SubList': Name@9) = EmptyList@6[empty] // through LazyJavaClassMemberScope@306
    functions('add': Name@90) = EmptyList@6[empty] // through LazyJavaClassMemberScope@306
    functions('addAll': Name@94) = EmptyList@6[empty] // through LazyJavaClassMemberScope@306
    functions('batchRemove': Name@16) = EmptyList@6[empty] // through LazyJavaClassMemberScope@306
    functions('clear': Name@98) = EmptyList@6[empty] // through LazyJavaClassMemberScope@306
    functions('clone': Name@20) = EmptyList@6[empty] // through LazyJavaClassMemberScope@306
    functions('contains': Name@21) = EmptyList@6[empty] // through LazyJavaClassMemberScope@306
    functions('containsAll': Name@24) = EmptyList@6[empty] // through LazyJavaClassMemberScope@306
    functions('elementData': Name@27) = EmptyList@6[empty] // through LazyJavaClassMemberScope@306
    functions('ensureCapacity': Name@28) = EmptyList@6[empty] // through LazyJavaClassMemberScope@306
    functions('ensureCapacityInternal': Name@29) = EmptyList@6[empty] // through LazyJavaClassMemberScope@306
    functions('equals': Name@105) = ArrayList@307[1] { DeserializedSimpleFunctionDescriptor@308['equals'] } // through LazyJavaClassMemberScope@306
    functions('fastRemove': Name@33) = EmptyList@6[empty] // through LazyJavaClassMemberScope@306
    functions('finalize': Name@34) = EmptyList@6[empty] // through LazyJavaClassMemberScope@306
    functions('get': Name@108) = EmptyList@6[empty] // through LazyJavaClassMemberScope@306
    functions('getClass': Name@36) = EmptyList@6[empty] // through LazyJavaClassMemberScope@306
    functions('grow': Name@37) = EmptyList@6[empty] // through LazyJavaClassMemberScope@306
    functions('hashCode': Name@111) = ArrayList@309[1] { DeserializedSimpleFunctionDescriptor@310['hashCode'] } // through LazyJavaClassMemberScope@306
    functions('indexOf': Name@114) = EmptyList@6[empty] // through LazyJavaClassMemberScope@306
    functions('isEmpty': Name@42) = EmptyList@6[empty] // through LazyJavaClassMemberScope@306
    functions('iterator': Name@119) = EmptyList@6[empty] // through LazyJavaClassMemberScope@306
    functions('lastIndexOf': Name@122) = EmptyList@6[empty] // through LazyJavaClassMemberScope@306
    functions('listIterator': Name@125) = EmptyList@6[empty] // through LazyJavaClassMemberScope@306
    functions('notify': Name@50) = EmptyList@6[empty] // through LazyJavaClassMemberScope@306
    functions('notifyAll': Name@51) = EmptyList@6[empty] // through LazyJavaClassMemberScope@306
    functions('outOfBoundsMsg': Name@129) = EmptyList@6[empty] // through LazyJavaClassMemberScope@306
    functions('rangeCheck': Name@53) = EmptyList@6[empty] // through LazyJavaClassMemberScope@306
    functions('rangeCheckForAdd': Name@132) = EmptyList@6[empty] // through LazyJavaClassMemberScope@306
    functions('readObject': Name@55) = EmptyList@6[empty] // through LazyJavaClassMemberScope@306
    functions('remove': Name@135) = EmptyList@6[empty] // through LazyJavaClassMemberScope@306
    functions('removeAll': Name@59) = EmptyList@6[empty] // through LazyJavaClassMemberScope@306
    functions('removeRange': Name@141) = EmptyList@6[empty] // through LazyJavaClassMemberScope@306
    functions('retainAll': Name@63) = EmptyList@6[empty] // through LazyJavaClassMemberScope@306
    functions('set': Name@146) = EmptyList@6[empty] // through LazyJavaClassMemberScope@306
    functions('size': Name@67) = EmptyList@6[empty] // through LazyJavaClassMemberScope@306
    functions('subList': Name@151) = EmptyList@6[empty] // through LazyJavaClassMemberScope@306
    functions('toArray': Name@71) = EmptyList@6[empty] // through LazyJavaClassMemberScope@306
    functions('toString': Name@75) = ArrayList@311[1] { DeserializedSimpleFunctionDescriptor@312['toString'] } // through LazyJavaClassMemberScope@306
    functions('trimToSize': Name@78) = EmptyList@6[empty] // through LazyJavaClassMemberScope@306
    functions('wait': Name@79) = EmptyList@6[empty] // through LazyJavaClassMemberScope@306
    functions('writeObject': Name@80) = EmptyList@6[empty] // through LazyJavaClassMemberScope@306
    memberIndex = computeMemberIndex$1@313 // through LazyJavaClassMemberScope@306
    properties('elementData': Name@82) = EmptyList@6[empty] // through LazyJavaClassMemberScope@306
    properties('modCount': Name@83) = EmptyList@6[empty] // through LazyJavaClassMemberScope@306
    properties('size': Name@84) = EmptyList@6[empty] // through LazyJavaClassMemberScope@306
    typeConstructor = LazyJavaClassTypeConstructor@314['RandomAccess']
}

LazyJavaClassDescriptor@315['Serializable'] {
    defaultType = JetTypeImpl@316['Serializable']
    functions('Itr': Name@5) = EmptyList@6[empty] // through LazyJavaClassMemberScope@317
    functions('ListItr': Name@8) = EmptyList@6[empty] // through LazyJavaClassMemberScope@317
    functions('SubList': Name@9) = EmptyList@6[empty] // through LazyJavaClassMemberScope@317
    functions('add': Name@90) = EmptyList@6[empty] // through LazyJavaClassMemberScope@317
    functions('addAll': Name@94) = EmptyList@6[empty] // through LazyJavaClassMemberScope@317
    functions('batchRemove': Name@16) = EmptyList@6[empty] // through LazyJavaClassMemberScope@317
    functions('clear': Name@98) = EmptyList@6[empty] // through LazyJavaClassMemberScope@317
    functions('clone': Name@20) = EmptyList@6[empty] // through LazyJavaClassMemberScope@317
    functions('contains': Name@21) = EmptyList@6[empty] // through LazyJavaClassMemberScope@317
    functions('containsAll': Name@24) = EmptyList@6[empty] // through LazyJavaClassMemberScope@317
    functions('elementData': Name@27) = EmptyList@6[empty] // through LazyJavaClassMemberScope@317
    functions('ensureCapacity': Name@28) = EmptyList@6[empty] // through LazyJavaClassMemberScope@317
    functions('ensureCapacityInternal': Name@29) = EmptyList@6[empty] // through LazyJavaClassMemberScope@317
    functions('equals': Name@105) = ArrayList@318[1] { DeserializedSimpleFunctionDescriptor@319['equals'] } // through LazyJavaClassMemberScope@317
    functions('fastRemove': Name@33) = EmptyList@6[empty] // through LazyJavaClassMemberScope@317
    functions('finalize': Name@34) = EmptyList@6[empty] // through LazyJavaClassMemberScope@317
    functions('get': Name@108) = EmptyList@6[empty] // through LazyJavaClassMemberScope@317
    functions('getClass': Name@36) = EmptyList@6[empty] // through LazyJavaClassMemberScope@317
    functions('grow': Name@37) = EmptyList@6[empty] // through LazyJavaClassMemberScope@317
    functions('hashCode': Name@111) = ArrayList@320[1] { DeserializedSimpleFunctionDescriptor@321['hashCode'] } // through LazyJavaClassMemberScope@317
    functions('indexOf': Name@114) = EmptyList@6[empty] // through LazyJavaClassMemberScope@317
    functions('isEmpty': Name@42) = EmptyList@6[empty] // through LazyJavaClassMemberScope@317
    functions('iterator': Name@119) = EmptyList@6[empty] // through LazyJavaClassMemberScope@317
    functions('lastIndexOf': Name@122) = EmptyList@6[empty] // through LazyJavaClassMemberScope@317
    functions('listIterator': Name@125) = EmptyList@6[empty] // through LazyJavaClassMemberScope@317
    functions('notify': Name@50) = EmptyList@6[empty] // through LazyJavaClassMemberScope@317
    functions('notifyAll': Name@51) = EmptyList@6[empty] // through LazyJavaClassMemberScope@317
    functions('outOfBoundsMsg': Name@129) = EmptyList@6[empty] // through LazyJavaClassMemberScope@317
    functions('rangeCheck': Name@53) = EmptyList@6[empty] // through LazyJavaClassMemberScope@317
    functions('rangeCheckForAdd': Name@132) = EmptyList@6[empty] // through LazyJavaClassMemberScope@317
    functions('readObject': Name@55) = EmptyList@6[empty] // through LazyJavaClassMemberScope@317
    functions('remove': Name@135) = EmptyList@6[empty] // through LazyJavaClassMemberScope@317
    functions('removeAll': Name@59) = EmptyList@6[empty] // through LazyJavaClassMemberScope@317
    functions('removeRange': Name@141) = EmptyList@6[empty] // through LazyJavaClassMemberScope@317
    functions('retainAll': Name@63) = EmptyList@6[empty] // through LazyJavaClassMemberScope@317
    functions('set': Name@146) = EmptyList@6[empty] // through LazyJavaClassMemberScope@317
    functions('size': Name@67) = EmptyList@6[empty] // through LazyJavaClassMemberScope@317
    functions('subList': Name@151) = EmptyList@6[empty] // through LazyJavaClassMemberScope@317
    functions('toArray': Name@71) = EmptyList@6[empty] // through LazyJavaClassMemberScope@317
    functions('toString': Name@75) = ArrayList@322[1] { DeserializedSimpleFunctionDescriptor@323['toString'] } // through LazyJavaClassMemberScope@317
    functions('trimToSize': Name@78) = EmptyList@6[empty] // through LazyJavaClassMemberScope@317
    functions('wait': Name@79) = EmptyList@6[empty] // through LazyJavaClassMemberScope@317
    functions('writeObject': Name@80) = EmptyList@6[empty] // through LazyJavaClassMemberScope@317
    memberIndex = computeMemberIndex$1@324 // through LazyJavaClassMemberScope@317
    properties('elementData': Name@82) = EmptyList@6[empty] // through LazyJavaClassMemberScope@317
    properties('modCount': Name@83) = EmptyList@6[empty] // through LazyJavaClassMemberScope@317
    properties('size': Name@84) = EmptyList@6[empty] // through LazyJavaClassMemberScope@317
    typeConstructor = LazyJavaClassTypeConstructor@325['Serializable']
}

LazyJavaClassTypeConstructor@86['AbstractCollection'] {
    parameters = ArrayList@326[1] { LazyJavaTypeParameterDescriptor@327['E'] }
    supertypes = ArrayList@328[1] { LazyJavaClassifierType@329['Collection<E>'] }
}

LazyJavaClassTypeConstructor@163['AbstractList'] {
    parameters = ArrayList@330[1] { LazyJavaTypeParameterDescriptor@331['E'] }
    supertypes = ArrayList@332[2] { LazyJavaClassifierType@333['AbstractCollection<E>'], LazyJavaClassifierType@334['List<E>'] }
}

LazyJavaClassTypeConstructor@291['ArrayList'] {
    parameters = ArrayList@335[1] { LazyJavaTypeParameterDescriptor@336['E'] }
    supertypes = ArrayList@337[5] { LazyJavaClassifierType@338['AbstractList<E>'], LazyJavaClassifierType@339['List<E>'], LazyJavaClassifierType@340['RandomAccess'], ... }
}

LazyJavaClassTypeConstructor@293['ArrayList'] {
    parameters = ArrayList@341[1] { LazyJavaTypeParameterDescriptor@342['E'] }
}

LazyJavaClassTypeConstructor@299['Integer'] {
    parameters = ArrayList@343[empty]
    supertypes = ArrayList@344[2] { LazyJavaClassifierType@345['Number'], LazyJavaClassifierType@346['Comparable<Integer>'] }
}

LazyJavaClassTypeConstructor@301['ObjectInputStream'] {
    parameters = ArrayList@347[empty]
}

LazyJavaClassTypeConstructor@303['ObjectOutputStream'] {
    parameters = ArrayList@348[empty]
}

LazyJavaClassTypeConstructor@314['RandomAccess'] {
    parameters = ArrayList@349[empty]
    supertypes = ArrayList@350[1] { JetTypeImpl@351['Any'] }
}

LazyJavaClassTypeConstructor@325['Serializable'] {
    parameters = ArrayList@352[empty]
    supertypes = ArrayList@353[1] { JetTypeImpl@351['Any'] }
}

LazyJavaClassifierType@333['AbstractCollection<E>'] {
    arguments = ArrayList@354[1] { TypeProjectionImpl@355 }
    classifier = JavaClassImpl@356['AbstractCollection']
    memberScope = SubstitutingScope@357
    nullable = 'false': Boolean@358
    typeConstructor = LazyJavaClassTypeConstructor@86['AbstractCollection']
}

LazyJavaClassifierType@338['AbstractList<E>'] {
    arguments = ArrayList@359[1] { TypeProjectionImpl@360 }
    classifier = JavaClassImpl@361['AbstractList']
    memberScope = SubstitutingScope@362
    nullable = 'false': Boolean@358
    typeConstructor = LazyJavaClassTypeConstructor@163['AbstractList']
}

LazyJavaClassifierType@363['Cloneable'] {
    arguments = ArrayList@364[empty]
    classifier = JavaClassImpl@365['Cloneable']
    memberScope = DeserializedClassMemberScope@366
    nullable = 'false': Boolean@358
    typeConstructor = DeserializedClassTypeConstructor@367
}

LazyJavaClassifierType@368['Collection<? extends E>'] {
    arguments = ArrayList@369[1] { TypeProjectionImpl@370 }
    classifier = JavaClassImpl@371['Collection']
    memberScope = SubstitutingScope@372
    nullable = 'false': Boolean@358
    typeConstructor = DeserializedClassTypeConstructor@373
}

LazyJavaClassifierType@374['Collection<? extends E>'] {
    arguments = ArrayList@375[1] { TypeProjectionImpl@376 }
    classifier = JavaClassImpl@377['Collection']
    memberScope = SubstitutingScope@378
    nullable = 'false': Boolean@358
    typeConstructor = DeserializedClassTypeConstructor@373
}

LazyJavaClassifierType@379['Collection<? extends E>'] {
    arguments = ArrayList@380[1] { TypeProjectionImpl@381 }
    classifier = JavaClassImpl@382['Collection']
    memberScope = SubstitutingScope@383
    nullable = 'false': Boolean@358
    typeConstructor = DeserializedClassTypeConstructor@373
}

LazyJavaClassifierType@384['Collection<? extends E>'] {
    arguments = ArrayList@385[1] { TypeProjectionImpl@386 }
    classifier = JavaClassImpl@387['Collection']
    memberScope = SubstitutingScope@388
    nullable = 'false': Boolean@358
    typeConstructor = DeserializedClassTypeConstructor@373
}

LazyJavaClassifierType@389['Collection<? extends E>'] {
    arguments = ArrayList@390[1] { TypeProjectionImpl@391 }
    classifier = JavaClassImpl@392['Collection']
    memberScope = SubstitutingScope@393
    nullable = 'false': Boolean@358
    typeConstructor = DeserializedClassTypeConstructor@373
}

LazyJavaClassifierType@394['Collection<? extends E>'] {
    arguments = ArrayList@395[1] { TypeProjectionImpl@396 }
    classifier = JavaClassImpl@382['Collection']
    memberScope = SubstitutingScope@397
    nullable = 'true': Boolean@398
    typeConstructor = DeserializedClassTypeConstructor@399
}

LazyJavaClassifierType@400['Collection<? extends E>'] {
    arguments = ArrayList@401[1] { TypeProjectionImpl@402 }
    classifier = JavaClassImpl@392['Collection']
    memberScope = SubstitutingScope@403
    nullable = 'true': Boolean@398
    typeConstructor = DeserializedClassTypeConstructor@399
}

LazyJavaClassifierType@404['Collection<? extends E>'] {
    arguments = ArrayList@405[1] { TypeProjectionImpl@406 }
    classifier = JavaClassImpl@371['Collection']
    memberScope = SubstitutingScope@407
    nullable = 'true': Boolean@398
    typeConstructor = DeserializedClassTypeConstructor@399
}

LazyJavaClassifierType@408['Collection<? extends E>'] {
    arguments = ArrayList@409[1] { TypeProjectionImpl@410 }
    classifier = JavaClassImpl@387['Collection']
    memberScope = SubstitutingScope@411
    nullable = 'true': Boolean@398
    typeConstructor = DeserializedClassTypeConstructor@399
}

LazyJavaClassifierType@412['Collection<? extends E>'] {
    arguments = ArrayList@413[1] { TypeProjectionImpl@414 }
    classifier = JavaClassImpl@377['Collection']
    memberScope = SubstitutingScope@415
    nullable = 'true': Boolean@398
    typeConstructor = DeserializedClassTypeConstructor@399
}

LazyJavaClassifierType@416['Collection<?>'] {
    arguments = ArrayList@417[1] { LazyStarProjection@418 }
    classifier = JavaClassImpl@419['Collection']
    memberScope = SubstitutingScope@420
    nullable = 'false': Boolean@358
    typeConstructor = DeserializedClassTypeConstructor@373
}

LazyJavaClassifierType@421['Collection<?>'] {
    arguments = ArrayList@422[1] { LazyStarProjection@423 }
    classifier = JavaClassImpl@424['Collection']
    memberScope = SubstitutingScope@425
    nullable = 'false': Boolean@358
    typeConstructor = DeserializedClassTypeConstructor@373
}

LazyJavaClassifierType@426['Collection<?>'] {
    arguments = ArrayList@427[1] { LazyStarProjection@428 }
    classifier = JavaClassImpl@429['Collection']
    memberScope = SubstitutingScope@430
    nullable = 'false': Boolean@358
    typeConstructor = DeserializedClassTypeConstructor@373
}

LazyJavaClassifierType@431['Collection<?>'] {
    arguments = ArrayList@432[1] { LazyStarProjection@433 }
    classifier = JavaClassImpl@434['Collection']
    memberScope = SubstitutingScope@435
    nullable = 'false': Boolean@358
    typeConstructor = DeserializedClassTypeConstructor@373
}

LazyJavaClassifierType@436['Collection<?>'] {
    arguments = ArrayList@437[1] { LazyStarProjection@438 }
    classifier = JavaClassImpl@439['Collection']
    memberScope = SubstitutingScope@440
    nullable = 'false': Boolean@358
    typeConstructor = DeserializedClassTypeConstructor@373
}

LazyJavaClassifierType@441['Collection<?>'] {
    arguments = ArrayList@442[1] { LazyStarProjection@443 }
    classifier = JavaClassImpl@444['Collection']
    memberScope = SubstitutingScope@445
    nullable = 'false': Boolean@358
    typeConstructor = DeserializedClassTypeConstructor@373
}

LazyJavaClassifierType@446['Collection<?>'] {
    arguments = ArrayList@447[1] { LazyStarProjection@448 }
    classifier = JavaClassImpl@424['Collection']
    memberScope = SubstitutingScope@449
    nullable = 'true': Boolean@398
    typeConstructor = DeserializedClassTypeConstructor@399
}

LazyJavaClassifierType@450['Collection<?>'] {
    arguments = ArrayList@451[1] { LazyStarProjection@452 }
    classifier = JavaClassImpl@444['Collection']
    memberScope = SubstitutingScope@453
    nullable = 'true': Boolean@398
    typeConstructor = DeserializedClassTypeConstructor@399
}

LazyJavaClassifierType@454['Collection<?>'] {
    arguments = ArrayList@455[1] { LazyStarProjection@456 }
    classifier = JavaClassImpl@429['Collection']
    memberScope = SubstitutingScope@457
    nullable = 'true': Boolean@398
    typeConstructor = DeserializedClassTypeConstructor@399
}

LazyJavaClassifierType@458['Collection<?>'] {
    arguments = ArrayList@459[1] { LazyStarProjection@460 }
    classifier = JavaClassImpl@439['Collection']
    memberScope = SubstitutingScope@461
    nullable = 'true': Boolean@398
    typeConstructor = DeserializedClassTypeConstructor@399
}

LazyJavaClassifierType@462['Collection<?>'] {
    arguments = ArrayList@463[1] { LazyStarProjection@464 }
    classifier = JavaClassImpl@434['Collection']
    memberScope = SubstitutingScope@465
    nullable = 'true': Boolean@398
    typeConstructor = DeserializedClassTypeConstructor@399
}

LazyJavaClassifierType@466['Collection<?>'] {
    arguments = ArrayList@467[1] { LazyStarProjection@468 }
    classifier = JavaClassImpl@419['Collection']
    memberScope = SubstitutingScope@469
    nullable = 'true': Boolean@398
    typeConstructor = DeserializedClassTypeConstructor@399
}

LazyJavaClassifierType@329['Collection<E>'] {
    arguments = ArrayList@470[1] { TypeProjectionImpl@471 }
    classifier = JavaClassImpl@472['Collection']
    memberScope = SubstitutingScope@473
    nullable = 'false': Boolean@358
    typeConstructor = DeserializedClassTypeConstructor@373
}

LazyJavaClassifierType@346['Comparable<Integer>'] {
    classifier = JavaClassImpl@474['Comparable']
    typeConstructor = DeserializedClassTypeConstructor@475
}

LazyJavaClassifierType@476['E'] {
    arguments = ArrayList@477[empty]
    classifier = JavaTypeParameterImpl@478['E']
    memberScope = LazyScopeAdapter@479
    nullable = 'false': Boolean@358
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@480
}

LazyJavaClassifierType@481['E'] {
    arguments = ArrayList@482[empty]
    classifier = JavaTypeParameterImpl@483['E']
    nullable = 'false': Boolean@358
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@484
}

LazyJavaClassifierType@485['E'] {
    arguments = ArrayList@486[empty]
    classifier = JavaTypeParameterImpl@487['E']
    nullable = 'false': Boolean@358
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@480
}

LazyJavaClassifierType@488['E'] {
    arguments = ArrayList@489[empty]
    classifier = JavaTypeParameterImpl@490['E']
    nullable = 'false': Boolean@358
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@484
}

LazyJavaClassifierType@491['E'] {
    arguments = ArrayList@492[empty]
    classifier = JavaTypeParameterImpl@493['E']
    nullable = 'false': Boolean@358
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@480
}

LazyJavaClassifierType@494['E'] {
    arguments = ArrayList@495[empty]
    classifier = JavaTypeParameterImpl@496['E']
    nullable = 'false': Boolean@358
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@484
}

LazyJavaClassifierType@497['E'] {
    arguments = ArrayList@498[empty]
    classifier = JavaTypeParameterImpl@499['E']
    nullable = 'false': Boolean@358
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@500
}

LazyJavaClassifierType@501['E'] {
    arguments = ArrayList@502[empty]
    classifier = JavaTypeParameterImpl@503['E']
    nullable = 'false': Boolean@358
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@484
}

LazyJavaClassifierType@504['E'] {
    arguments = ArrayList@505[empty]
    classifier = JavaTypeParameterImpl@506['E']
    nullable = 'false': Boolean@358
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@484
}

LazyJavaClassifierType@507['E'] {
    arguments = ArrayList@508[empty]
    classifier = JavaTypeParameterImpl@509['E']
    nullable = 'false': Boolean@358
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@484
}

LazyJavaClassifierType@510['E'] {
    arguments = ArrayList@511[empty]
    classifier = JavaTypeParameterImpl@512['E']
    nullable = 'false': Boolean@358
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@480
}

LazyJavaClassifierType@513['E'] {
    arguments = ArrayList@514[empty]
    classifier = JavaTypeParameterImpl@515['E']
    nullable = 'false': Boolean@358
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@480
}

LazyJavaClassifierType@516['E'] {
    arguments = ArrayList@517[empty]
    classifier = JavaTypeParameterImpl@518['E']
    nullable = 'false': Boolean@358
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@500
}

LazyJavaClassifierType@519['E'] {
    arguments = ArrayList@520[empty]
    classifier = JavaTypeParameterImpl@521['E']
    nullable = 'false': Boolean@358
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@500
}

LazyJavaClassifierType@522['E'] {
    arguments = ArrayList@523[empty]
    classifier = JavaTypeParameterImpl@524['E']
    nullable = 'false': Boolean@358
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@480
}

LazyJavaClassifierType@525['E'] {
    arguments = ArrayList@526[empty]
    classifier = JavaTypeParameterImpl@527['E']
    nullable = 'false': Boolean@358
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@500
}

LazyJavaClassifierType@528['E'] {
    arguments = ArrayList@529[empty]
    classifier = JavaTypeParameterImpl@530['E']
    nullable = 'false': Boolean@358
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@480
}

LazyJavaClassifierType@531['E'] {
    arguments = ArrayList@532[empty]
    classifier = JavaTypeParameterImpl@533['E']
    nullable = 'false': Boolean@358
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@484
}

LazyJavaClassifierType@534['E'] {
    arguments = ArrayList@535[empty]
    classifier = JavaTypeParameterImpl@536['E']
    nullable = 'false': Boolean@358
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@480
}

LazyJavaClassifierType@537['E'] {
    arguments = ArrayList@538[empty]
    classifier = JavaTypeParameterImpl@539['E']
    nullable = 'false': Boolean@358
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@480
}

LazyJavaClassifierType@540['E'] {
    arguments = ArrayList@541[empty]
    classifier = JavaTypeParameterImpl@542['E']
    nullable = 'false': Boolean@358
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@480
}

LazyJavaClassifierType@543['E'] {
    arguments = ArrayList@544[empty]
    classifier = JavaTypeParameterImpl@545['E']
    nullable = 'false': Boolean@358
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@484
}

LazyJavaClassifierType@546['E'] {
    arguments = ArrayList@547[empty]
    classifier = JavaTypeParameterImpl@548['E']
    nullable = 'false': Boolean@358
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@480
}

LazyJavaClassifierType@549['E'] {
    arguments = ArrayList@550[empty]
    classifier = JavaTypeParameterImpl@551['E']
    nullable = 'false': Boolean@358
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@484
}

LazyJavaClassifierType@552['E'] {
    arguments = ArrayList@553[empty]
    classifier = JavaTypeParameterImpl@554['E']
    nullable = 'false': Boolean@358
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@484
}

LazyJavaClassifierType@555['E'] {
    arguments = ArrayList@556[empty]
    classifier = JavaTypeParameterImpl@557['E']
    nullable = 'false': Boolean@358
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@484
}

LazyJavaClassifierType@558['E'] {
    arguments = ArrayList@559[empty]
    classifier = JavaTypeParameterImpl@560['E']
    nullable = 'false': Boolean@358
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@480
}

LazyJavaClassifierType@561['E'] {
    arguments = ArrayList@562[empty]
    classifier = JavaTypeParameterImpl@563['E']
    nullable = 'false': Boolean@358
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@480
}

LazyJavaClassifierType@564['E'] {
    arguments = ArrayList@565[empty]
    classifier = JavaTypeParameterImpl@566['E']
    nullable = 'false': Boolean@358
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@484
}

LazyJavaClassifierType@567['E'] {
    arguments = ArrayList@568[empty]
    classifier = JavaTypeParameterImpl@569['E']
    nullable = 'false': Boolean@358
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@484
}

LazyJavaClassifierType@570['E'] {
    arguments = ArrayList@571[empty]
    classifier = JavaTypeParameterImpl@572['E']
    nullable = 'false': Boolean@358
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@500
}

LazyJavaClassifierType@573['E'] {
    arguments = ArrayList@574[empty]
    classifier = JavaTypeParameterImpl@575['E']
    nullable = 'false': Boolean@358
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@480
}

LazyJavaClassifierType@576['E'] {
    arguments = ArrayList@577[empty]
    classifier = JavaTypeParameterImpl@578['E']
    nullable = 'false': Boolean@358
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@480
}

LazyJavaClassifierType@579['E'] {
    arguments = ArrayList@580[empty]
    classifier = JavaTypeParameterImpl@581['E']
    nullable = 'false': Boolean@358
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@484
}

LazyJavaClassifierType@582['E'] {
    arguments = ArrayList@583[empty]
    classifier = JavaTypeParameterImpl@584['E']
    nullable = 'false': Boolean@358
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@480
}

LazyJavaClassifierType@585['E'] {
    arguments = ArrayList@586[empty]
    classifier = JavaTypeParameterImpl@587['E']
    nullable = 'false': Boolean@358
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@480
}

LazyJavaClassifierType@588['E'] {
    arguments = ArrayList@589[empty]
    classifier = JavaTypeParameterImpl@590['E']
    nullable = 'false': Boolean@358
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@484
}

LazyJavaClassifierType@591['E'] {
    arguments = ArrayList@592[empty]
    classifier = JavaTypeParameterImpl@593['E']
    nullable = 'false': Boolean@358
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@484
}

LazyJavaClassifierType@594['E'] {
    arguments = ArrayList@595[empty]
    classifier = JavaTypeParameterImpl@596['E']
    nullable = 'false': Boolean@358
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@484
}

LazyJavaClassifierType@597['E'] {
    arguments = ArrayList@598[empty]
    classifier = JavaTypeParameterImpl@599['E']
    nullable = 'false': Boolean@358
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@484
}

LazyJavaClassifierType@600['E'] {
    arguments = ArrayList@601[empty]
    classifier = JavaTypeParameterImpl@602['E']
    nullable = 'false': Boolean@358
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@484
}

LazyJavaClassifierType@603['E'] {
    arguments = ArrayList@604[empty]
    classifier = JavaTypeParameterImpl@605['E']
    nullable = 'false': Boolean@358
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@484
}

LazyJavaClassifierType@606['E'] {
    arguments = ArrayList@607[empty]
    classifier = JavaTypeParameterImpl@608['E']
    nullable = 'false': Boolean@358
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@484
}

LazyJavaClassifierType@609['E'] {
    arguments = ArrayList@610[empty]
    classifier = JavaTypeParameterImpl@611['E']
    nullable = 'false': Boolean@358
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@484
}

LazyJavaClassifierType@612['E'] {
    arguments = ArrayList@613[empty]
    classifier = JavaTypeParameterImpl@614['E']
    nullable = 'false': Boolean@358
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@500
}

LazyJavaClassifierType@615['E'] {
    arguments = ArrayList@616[empty]
    classifier = JavaTypeParameterImpl@617['E']
    nullable = 'false': Boolean@358
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@484
}

LazyJavaClassifierType@618['E'] {
    arguments = ArrayList@619[empty]
    classifier = JavaTypeParameterImpl@620['E']
    nullable = 'false': Boolean@358
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@480
}

LazyJavaClassifierType@621['E'] {
    arguments = ArrayList@622[empty]
    classifier = JavaTypeParameterImpl@493['E']
    nullable = 'true': Boolean@398
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@480
}

LazyJavaClassifierType@623['E'] {
    arguments = ArrayList@624[empty]
    classifier = JavaTypeParameterImpl@596['E']
    nullable = 'true': Boolean@398
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@484
}

LazyJavaClassifierType@625['E'] {
    arguments = ArrayList@626[empty]
    classifier = JavaTypeParameterImpl@483['E']
    nullable = 'true': Boolean@398
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@484
}

LazyJavaClassifierType@627['E'] {
    arguments = ArrayList@628[empty]
    classifier = JavaTypeParameterImpl@590['E']
    nullable = 'true': Boolean@398
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@484
}

LazyJavaClassifierType@629['E'] {
    arguments = ArrayList@630[empty]
    classifier = JavaTypeParameterImpl@602['E']
    nullable = 'true': Boolean@398
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@484
}

LazyJavaClassifierType@631['E'] {
    arguments = ArrayList@632[empty]
    classifier = JavaTypeParameterImpl@581['E']
    nullable = 'true': Boolean@398
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@484
}

LazyJavaClassifierType@633['E'] {
    arguments = ArrayList@634[empty]
    classifier = JavaTypeParameterImpl@524['E']
    nullable = 'true': Boolean@398
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@480
}

LazyJavaClassifierType@635['E'] {
    arguments = ArrayList@636[empty]
    classifier = JavaTypeParameterImpl@496['E']
    nullable = 'true': Boolean@398
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@484
}

LazyJavaClassifierType@637['E'] {
    arguments = ArrayList@638[empty]
    classifier = JavaTypeParameterImpl@578['E']
    nullable = 'true': Boolean@398
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@480
}

LazyJavaClassifierType@639['E'] {
    arguments = ArrayList@640[empty]
    classifier = JavaTypeParameterImpl@608['E']
    nullable = 'true': Boolean@398
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@484
}

LazyJavaClassifierType@641['E'] {
    arguments = ArrayList@642[empty]
    classifier = JavaTypeParameterImpl@499['E']
    nullable = 'true': Boolean@398
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@500
}

LazyJavaClassifierType@643['E'] {
    arguments = ArrayList@644[empty]
    classifier = JavaTypeParameterImpl@572['E']
    nullable = 'true': Boolean@398
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@500
}

LazyJavaClassifierType@645['E'] {
    arguments = ArrayList@646[empty]
    classifier = JavaTypeParameterImpl@548['E']
    nullable = 'true': Boolean@398
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@480
}

LazyJavaClassifierType@647['E'] {
    arguments = ArrayList@648[empty]
    classifier = JavaTypeParameterImpl@584['E']
    nullable = 'true': Boolean@398
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@480
}

LazyJavaClassifierType@649['E'] {
    arguments = ArrayList@650[empty]
    classifier = JavaTypeParameterImpl@478['E']
    nullable = 'true': Boolean@398
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@480
}

LazyJavaClassifierType@651['E'] {
    arguments = ArrayList@652[empty]
    classifier = JavaTypeParameterImpl@542['E']
    nullable = 'true': Boolean@398
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@480
}

LazyJavaClassifierType@653['E'] {
    arguments = ArrayList@654[empty]
    classifier = JavaTypeParameterImpl@557['E']
    nullable = 'true': Boolean@398
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@484
}

LazyJavaClassifierType@655['E'] {
    arguments = ArrayList@656[empty]
    classifier = JavaTypeParameterImpl@599['E']
    nullable = 'true': Boolean@398
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@484
}

LazyJavaClassifierType@657['E'] {
    arguments = ArrayList@658[empty]
    classifier = JavaTypeParameterImpl@566['E']
    nullable = 'true': Boolean@398
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@484
}

LazyJavaClassifierType@659['E'] {
    arguments = ArrayList@660[empty]
    classifier = JavaTypeParameterImpl@518['E']
    nullable = 'true': Boolean@398
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@500
}

LazyJavaClassifierType@661['E'] {
    arguments = ArrayList@662[empty]
    classifier = JavaTypeParameterImpl@512['E']
    nullable = 'true': Boolean@398
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@480
}

LazyJavaClassifierType@663['E'] {
    arguments = ArrayList@664[empty]
    classifier = JavaTypeParameterImpl@545['E']
    nullable = 'true': Boolean@398
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@484
}

LazyJavaClassifierType@665['E'] {
    arguments = ArrayList@666[empty]
    classifier = JavaTypeParameterImpl@506['E']
    nullable = 'true': Boolean@398
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@484
}

LazyJavaClassifierType@667['E'] {
    arguments = ArrayList@668[empty]
    classifier = JavaTypeParameterImpl@487['E']
    nullable = 'true': Boolean@398
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@480
}

LazyJavaClassifierType@669['E'] {
    arguments = ArrayList@670[empty]
    classifier = JavaTypeParameterImpl@527['E']
    nullable = 'true': Boolean@398
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@500
}

LazyJavaClassifierType@671['E'] {
    arguments = ArrayList@672[empty]
    classifier = JavaTypeParameterImpl@611['E']
    nullable = 'true': Boolean@398
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@484
}

LazyJavaClassifierType@673['E'] {
    arguments = ArrayList@674[empty]
    classifier = JavaTypeParameterImpl@605['E']
    nullable = 'true': Boolean@398
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@484
}

LazyJavaClassifierType@675['E'] {
    arguments = ArrayList@676[empty]
    classifier = JavaTypeParameterImpl@515['E']
    nullable = 'true': Boolean@398
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@480
}

LazyJavaClassifierType@677['E'] {
    arguments = ArrayList@678[empty]
    classifier = JavaTypeParameterImpl@530['E']
    nullable = 'true': Boolean@398
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@480
}

LazyJavaClassifierType@679['E'] {
    arguments = ArrayList@680[empty]
    classifier = JavaTypeParameterImpl@575['E']
    nullable = 'true': Boolean@398
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@480
}

LazyJavaClassifierType@681['E'] {
    arguments = ArrayList@682[empty]
    classifier = JavaTypeParameterImpl@617['E']
    nullable = 'true': Boolean@398
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@484
}

LazyJavaClassifierType@683['E'] {
    arguments = ArrayList@684[empty]
    classifier = JavaTypeParameterImpl@593['E']
    nullable = 'true': Boolean@398
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@484
}

LazyJavaClassifierType@685['E'] {
    arguments = ArrayList@686[empty]
    classifier = JavaTypeParameterImpl@554['E']
    nullable = 'true': Boolean@398
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@484
}

LazyJavaClassifierType@687['E'] {
    arguments = ArrayList@688[empty]
    classifier = JavaTypeParameterImpl@587['E']
    nullable = 'true': Boolean@398
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@480
}

LazyJavaClassifierType@689['E'] {
    arguments = ArrayList@690[empty]
    classifier = JavaTypeParameterImpl@551['E']
    nullable = 'true': Boolean@398
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@484
}

LazyJavaClassifierType@691['E'] {
    arguments = ArrayList@692[empty]
    classifier = JavaTypeParameterImpl@560['E']
    nullable = 'true': Boolean@398
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@480
}

LazyJavaClassifierType@693['E'] {
    arguments = ArrayList@694[empty]
    classifier = JavaTypeParameterImpl@620['E']
    nullable = 'true': Boolean@398
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@480
}

LazyJavaClassifierType@695['E'] {
    arguments = ArrayList@696[empty]
    classifier = JavaTypeParameterImpl@503['E']
    nullable = 'true': Boolean@398
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@484
}

LazyJavaClassifierType@697['E'] {
    arguments = ArrayList@698[empty]
    classifier = JavaTypeParameterImpl@569['E']
    nullable = 'true': Boolean@398
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@484
}

LazyJavaClassifierType@699['E'] {
    arguments = ArrayList@700[empty]
    classifier = JavaTypeParameterImpl@614['E']
    nullable = 'true': Boolean@398
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@500
}

LazyJavaClassifierType@701['E'] {
    arguments = ArrayList@702[empty]
    classifier = JavaTypeParameterImpl@536['E']
    nullable = 'true': Boolean@398
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@480
}

LazyJavaClassifierType@703['E'] {
    arguments = ArrayList@704[empty]
    classifier = JavaTypeParameterImpl@563['E']
    nullable = 'true': Boolean@398
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@480
}

LazyJavaClassifierType@705['E'] {
    arguments = ArrayList@706[empty]
    classifier = JavaTypeParameterImpl@539['E']
    nullable = 'true': Boolean@398
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@480
}

LazyJavaClassifierType@707['E'] {
    arguments = ArrayList@708[empty]
    classifier = JavaTypeParameterImpl@521['E']
    nullable = 'true': Boolean@398
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@500
}

LazyJavaClassifierType@709['E'] {
    arguments = ArrayList@710[empty]
    classifier = JavaTypeParameterImpl@509['E']
    nullable = 'true': Boolean@398
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@484
}

LazyJavaClassifierType@711['E'] {
    arguments = ArrayList@712[empty]
    classifier = JavaTypeParameterImpl@490['E']
    nullable = 'true': Boolean@398
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@484
}

LazyJavaClassifierType@713['E'] {
    arguments = ArrayList@714[empty]
    classifier = JavaTypeParameterImpl@533['E']
    nullable = 'true': Boolean@398
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@484
}

LazyJavaClassifierType@715['Iterator<E>'] {
    arguments = ArrayList@716[1] { TypeProjectionImpl@717 }
    classifier = JavaClassImpl@718['Iterator']
    memberScope = SubstitutingScope@719
    nullable = 'false': Boolean@358
    typeConstructor = DeserializedClassTypeConstructor@720
}

LazyJavaClassifierType@721['Iterator<E>'] {
    arguments = ArrayList@722[1] { TypeProjectionImpl@723 }
    classifier = JavaClassImpl@724['Iterator']
    memberScope = SubstitutingScope@725
    nullable = 'false': Boolean@358
    typeConstructor = DeserializedClassTypeConstructor@720
}

LazyJavaClassifierType@726['Iterator<E>'] {
    arguments = ArrayList@727[1] { TypeProjectionImpl@728 }
    classifier = JavaClassImpl@729['Iterator']
    memberScope = SubstitutingScope@730
    nullable = 'false': Boolean@358
    typeConstructor = DeserializedClassTypeConstructor@720
}

LazyJavaClassifierType@731['Iterator<E>'] {
    arguments = ArrayList@732[1] { TypeProjectionImpl@733 }
    classifier = JavaClassImpl@718['Iterator']
    memberScope = SubstitutingScope@734
    nullable = 'true': Boolean@398
    typeConstructor = DeserializedClassTypeConstructor@735
}

LazyJavaClassifierType@736['Iterator<E>'] {
    arguments = ArrayList@737[1] { TypeProjectionImpl@738 }
    classifier = JavaClassImpl@729['Iterator']
    memberScope = SubstitutingScope@739
    nullable = 'true': Boolean@398
    typeConstructor = DeserializedClassTypeConstructor@735
}

LazyJavaClassifierType@740['Iterator<E>'] {
    arguments = ArrayList@741[1] { TypeProjectionImpl@742 }
    classifier = JavaClassImpl@724['Iterator']
    memberScope = SubstitutingScope@743
    nullable = 'true': Boolean@398
    typeConstructor = DeserializedClassTypeConstructor@735
}

LazyJavaClassifierType@744['List<E>'] {
    arguments = ArrayList@745[1] { TypeProjectionImpl@746 }
    classifier = JavaClassImpl@747['List']
    memberScope = SubstitutingScope@748
    nullable = 'false': Boolean@358
    typeConstructor = DeserializedClassTypeConstructor@749
}

LazyJavaClassifierType@750['List<E>'] {
    arguments = ArrayList@751[1] { TypeProjectionImpl@752 }
    classifier = JavaClassImpl@753['List']
    memberScope = SubstitutingScope@754
    nullable = 'false': Boolean@358
    typeConstructor = DeserializedClassTypeConstructor@749
}

LazyJavaClassifierType@334['List<E>'] {
    arguments = ArrayList@755[1] { TypeProjectionImpl@756 }
    classifier = JavaClassImpl@757['List']
    memberScope = SubstitutingScope@758
    nullable = 'false': Boolean@358
    typeConstructor = DeserializedClassTypeConstructor@749
}

LazyJavaClassifierType@339['List<E>'] {
    arguments = ArrayList@759[1] { TypeProjectionImpl@760 }
    classifier = JavaClassImpl@761['List']
    memberScope = SubstitutingScope@762
    nullable = 'false': Boolean@358
    typeConstructor = DeserializedClassTypeConstructor@749
}

LazyJavaClassifierType@763['List<E>'] {
    arguments = ArrayList@764[1] { TypeProjectionImpl@765 }
    classifier = JavaClassImpl@747['List']
    memberScope = SubstitutingScope@766
    nullable = 'true': Boolean@398
    typeConstructor = DeserializedClassTypeConstructor@767
}

LazyJavaClassifierType@768['List<E>'] {
    arguments = ArrayList@769[1] { TypeProjectionImpl@770 }
    classifier = JavaClassImpl@753['List']
    memberScope = SubstitutingScope@771
    nullable = 'true': Boolean@398
    typeConstructor = DeserializedClassTypeConstructor@767
}

LazyJavaClassifierType@772['ListIterator<E>'] {
    arguments = ArrayList@773[1] { TypeProjectionImpl@774 }
    classifier = JavaClassImpl@775['ListIterator']
    memberScope = SubstitutingScope@776
    nullable = 'false': Boolean@358
    typeConstructor = DeserializedClassTypeConstructor@777
}

LazyJavaClassifierType@778['ListIterator<E>'] {
    arguments = ArrayList@779[1] { TypeProjectionImpl@780 }
    classifier = JavaClassImpl@781['ListIterator']
    memberScope = SubstitutingScope@782
    nullable = 'false': Boolean@358
    typeConstructor = DeserializedClassTypeConstructor@777
}

LazyJavaClassifierType@783['ListIterator<E>'] {
    arguments = ArrayList@784[1] { TypeProjectionImpl@785 }
    classifier = JavaClassImpl@786['ListIterator']
    memberScope = SubstitutingScope@787
    nullable = 'false': Boolean@358
    typeConstructor = DeserializedClassTypeConstructor@777
}

LazyJavaClassifierType@788['ListIterator<E>'] {
    arguments = ArrayList@789[1] { TypeProjectionImpl@790 }
    classifier = JavaClassImpl@791['ListIterator']
    memberScope = SubstitutingScope@792
    nullable = 'false': Boolean@358
    typeConstructor = DeserializedClassTypeConstructor@777
}

LazyJavaClassifierType@793['ListIterator<E>'] {
    arguments = ArrayList@794[1] { TypeProjectionImpl@795 }
    classifier = JavaClassImpl@775['ListIterator']
    memberScope = SubstitutingScope@796
    nullable = 'true': Boolean@398
    typeConstructor = DeserializedClassTypeConstructor@797
}

LazyJavaClassifierType@798['ListIterator<E>'] {
    arguments = ArrayList@799[1] { TypeProjectionImpl@800 }
    classifier = JavaClassImpl@791['ListIterator']
    memberScope = SubstitutingScope@801
    nullable = 'true': Boolean@398
    typeConstructor = DeserializedClassTypeConstructor@797
}

LazyJavaClassifierType@802['ListIterator<E>'] {
    arguments = ArrayList@803[1] { TypeProjectionImpl@804 }
    classifier = JavaClassImpl@786['ListIterator']
    memberScope = SubstitutingScope@805
    nullable = 'true': Boolean@398
    typeConstructor = DeserializedClassTypeConstructor@797
}

LazyJavaClassifierType@806['ListIterator<E>'] {
    arguments = ArrayList@807[1] { TypeProjectionImpl@808 }
    classifier = JavaClassImpl@781['ListIterator']
    memberScope = SubstitutingScope@809
    nullable = 'true': Boolean@398
    typeConstructor = DeserializedClassTypeConstructor@797
}

LazyJavaClassifierType@345['Number'] {
    arguments = ArrayList@810[empty]
    classifier = JavaClassImpl@811['Number']
    typeConstructor = DeserializedClassTypeConstructor@812
}

LazyJavaClassifierType@813['Object'] {
    arguments = ArrayList@814[empty]
    classifier = JavaClassImpl@815['Object']
    memberScope = DeserializedClassMemberScope@816
    nullable = 'false': Boolean@358
    typeConstructor = DeserializedClassTypeConstructor@817
}

LazyJavaClassifierType@818['Object'] {
    arguments = ArrayList@819[empty]
    classifier = JavaClassImpl@820['Object']
    memberScope = DeserializedClassMemberScope@816
    nullable = 'false': Boolean@358
    typeConstructor = DeserializedClassTypeConstructor@817
}

LazyJavaClassifierType@821['Object'] {
    arguments = ArrayList@822[empty]
    classifier = JavaClassImpl@823['Object']
    memberScope = DeserializedClassMemberScope@816
    nullable = 'false': Boolean@358
    typeConstructor = DeserializedClassTypeConstructor@817
}

LazyJavaClassifierType@824['Object'] {
    arguments = ArrayList@825[empty]
    classifier = JavaClassImpl@826['Object']
    memberScope = DeserializedClassMemberScope@816
    nullable = 'false': Boolean@358
    typeConstructor = DeserializedClassTypeConstructor@817
}

LazyJavaClassifierType@827['Object'] {
    arguments = ArrayList@828[empty]
    classifier = JavaClassImpl@829['Object']
    memberScope = DeserializedClassMemberScope@816
    nullable = 'false': Boolean@358
    typeConstructor = DeserializedClassTypeConstructor@817
}

LazyJavaClassifierType@830['Object'] {
    arguments = ArrayList@831[empty]
    classifier = JavaClassImpl@832['Object']
    memberScope = DeserializedClassMemberScope@816
    nullable = 'false': Boolean@358
    typeConstructor = DeserializedClassTypeConstructor@817
}

LazyJavaClassifierType@833['Object'] {
    arguments = ArrayList@834[empty]
    classifier = JavaClassImpl@835['Object']
    memberScope = DeserializedClassMemberScope@816
    nullable = 'false': Boolean@358
    typeConstructor = DeserializedClassTypeConstructor@817
}

LazyJavaClassifierType@836['Object'] {
    arguments = ArrayList@837[empty]
    classifier = JavaClassImpl@838['Object']
    memberScope = DeserializedClassMemberScope@816
    nullable = 'false': Boolean@358
    typeConstructor = DeserializedClassTypeConstructor@817
}

LazyJavaClassifierType@839['Object'] {
    arguments = ArrayList@840[empty]
    classifier = JavaClassImpl@841['Object']
    memberScope = DeserializedClassMemberScope@816
    nullable = 'false': Boolean@358
    typeConstructor = DeserializedClassTypeConstructor@817
}

LazyJavaClassifierType@842['Object'] {
    arguments = ArrayList@843[empty]
    classifier = JavaClassImpl@844['Object']
    memberScope = DeserializedClassMemberScope@816
    nullable = 'false': Boolean@358
    typeConstructor = DeserializedClassTypeConstructor@817
}

LazyJavaClassifierType@845['Object'] {
    arguments = ArrayList@846[empty]
    classifier = JavaClassImpl@847['Object']
    memberScope = DeserializedClassMemberScope@816
    nullable = 'false': Boolean@358
    typeConstructor = DeserializedClassTypeConstructor@817
}

LazyJavaClassifierType@848['Object'] {
    arguments = ArrayList@849[empty]
    classifier = JavaClassImpl@850['Object']
    memberScope = DeserializedClassMemberScope@816
    nullable = 'false': Boolean@358
    typeConstructor = DeserializedClassTypeConstructor@817
}

LazyJavaClassifierType@851['Object'] {
    arguments = ArrayList@852[empty]
    classifier = JavaClassImpl@853['Object']
    memberScope = DeserializedClassMemberScope@816
    nullable = 'false': Boolean@358
    typeConstructor = DeserializedClassTypeConstructor@817
}

LazyJavaClassifierType@854['Object'] {
    arguments = ArrayList@855[empty]
    classifier = JavaClassImpl@841['Object']
    memberScope = DeserializedClassMemberScope@816
    nullable = 'true': Boolean@398
    typeConstructor = DeserializedClassTypeConstructor@817
}

LazyJavaClassifierType@856['Object'] {
    arguments = ArrayList@857[empty]
    classifier = JavaClassImpl@832['Object']
    memberScope = DeserializedClassMemberScope@816
    nullable = 'true': Boolean@398
    typeConstructor = DeserializedClassTypeConstructor@817
}

LazyJavaClassifierType@858['Object'] {
    arguments = ArrayList@859[empty]
    classifier = JavaClassImpl@826['Object']
    memberScope = DeserializedClassMemberScope@816
    nullable = 'true': Boolean@398
    typeConstructor = DeserializedClassTypeConstructor@817
}

LazyJavaClassifierType@860['Object'] {
    arguments = ArrayList@861[empty]
    classifier = JavaClassImpl@850['Object']
    memberScope = DeserializedClassMemberScope@816
    nullable = 'true': Boolean@398
    typeConstructor = DeserializedClassTypeConstructor@817
}

LazyJavaClassifierType@862['Object'] {
    arguments = ArrayList@863[empty]
    classifier = JavaClassImpl@823['Object']
    memberScope = DeserializedClassMemberScope@816
    nullable = 'true': Boolean@398
    typeConstructor = DeserializedClassTypeConstructor@817
}

LazyJavaClassifierType@864['Object'] {
    arguments = ArrayList@865[empty]
    classifier = JavaClassImpl@838['Object']
    memberScope = DeserializedClassMemberScope@816
    nullable = 'true': Boolean@398
    typeConstructor = DeserializedClassTypeConstructor@817
}

LazyJavaClassifierType@866['Object'] {
    arguments = ArrayList@867[empty]
    classifier = JavaClassImpl@815['Object']
    memberScope = DeserializedClassMemberScope@816
    nullable = 'true': Boolean@398
    typeConstructor = DeserializedClassTypeConstructor@817
}

LazyJavaClassifierType@868['Object'] {
    arguments = ArrayList@869[empty]
    classifier = JavaClassImpl@847['Object']
    memberScope = DeserializedClassMemberScope@816
    nullable = 'true': Boolean@398
    typeConstructor = DeserializedClassTypeConstructor@817
}

LazyJavaClassifierType@870['Object'] {
    arguments = ArrayList@871[empty]
    classifier = JavaClassImpl@829['Object']
    memberScope = DeserializedClassMemberScope@816
    nullable = 'true': Boolean@398
    typeConstructor = DeserializedClassTypeConstructor@817
}

LazyJavaClassifierType@872['Object'] {
    arguments = ArrayList@873[empty]
    classifier = JavaClassImpl@835['Object']
    memberScope = DeserializedClassMemberScope@816
    nullable = 'true': Boolean@398
    typeConstructor = DeserializedClassTypeConstructor@817
}

LazyJavaClassifierType@874['Object'] {
    arguments = ArrayList@875[empty]
    classifier = JavaClassImpl@844['Object']
    memberScope = DeserializedClassMemberScope@816
    nullable = 'true': Boolean@398
    typeConstructor = DeserializedClassTypeConstructor@817
}

LazyJavaClassifierType@876['Object'] {
    arguments = ArrayList@877[empty]
    classifier = JavaClassImpl@853['Object']
    memberScope = DeserializedClassMemberScope@816
    nullable = 'true': Boolean@398
    typeConstructor = DeserializedClassTypeConstructor@817
}

LazyJavaClassifierType@878['Object'] {
    arguments = ArrayList@879[empty]
    classifier = JavaClassImpl@820['Object']
    memberScope = DeserializedClassMemberScope@816
    nullable = 'true': Boolean@398
    typeConstructor = DeserializedClassTypeConstructor@817
}

LazyJavaClassifierType@880['Object'] {
    classifier = JavaClassImpl@881['Object']
    typeConstructor = DeserializedClassTypeConstructor@817
}

LazyJavaClassifierType@882['Object'] {
    classifier = JavaClassImpl@883['Object']
    typeConstructor = DeserializedClassTypeConstructor@817
}

LazyJavaClassifierType@884['Object'] {
    classifier = JavaClassImpl@885['Object']
    typeConstructor = DeserializedClassTypeConstructor@817
}

LazyJavaClassifierType@886['ObjectInputStream'] {
    arguments = ArrayList@887[empty]
    classifier = JavaClassImpl@888['ObjectInputStream']
    memberScope = LazyJavaClassMemberScope@889
    nullable = 'false': Boolean@358
    typeConstructor = LazyJavaClassTypeConstructor@301['ObjectInputStream']
}

LazyJavaClassifierType@890['ObjectInputStream'] {
    arguments = ArrayList@891[empty]
    classifier = JavaClassImpl@888['ObjectInputStream']
    memberScope = LazyJavaClassMemberScope@889
    nullable = 'true': Boolean@398
    typeConstructor = LazyJavaClassTypeConstructor@301['ObjectInputStream']
}

LazyJavaClassifierType@892['ObjectOutputStream'] {
    arguments = ArrayList@893[empty]
    classifier = JavaClassImpl@894['ObjectOutputStream']
    memberScope = LazyJavaClassMemberScope@895
    nullable = 'false': Boolean@358
    typeConstructor = LazyJavaClassTypeConstructor@303['ObjectOutputStream']
}

LazyJavaClassifierType@896['ObjectOutputStream'] {
    arguments = ArrayList@897[empty]
    classifier = JavaClassImpl@894['ObjectOutputStream']
    memberScope = LazyJavaClassMemberScope@895
    nullable = 'true': Boolean@398
    typeConstructor = LazyJavaClassTypeConstructor@303['ObjectOutputStream']
}

LazyJavaClassifierType@340['RandomAccess'] {
    arguments = ArrayList@898[empty]
    classifier = JavaClassImpl@899['RandomAccess']
    memberScope = LazyJavaClassMemberScope@306
    nullable = 'false': Boolean@358
    typeConstructor = LazyJavaClassTypeConstructor@314['RandomAccess']
}

LazyJavaClassifierType@900['Serializable'] {
    arguments = ArrayList@901[empty]
    classifier = JavaClassImpl@902['Serializable']
    memberScope = LazyJavaClassMemberScope@317
    nullable = 'false': Boolean@358
    typeConstructor = LazyJavaClassTypeConstructor@325['Serializable']
}

LazyJavaClassifierType@903['String'] {
    arguments = ArrayList@904[empty]
    classifier = JavaClassImpl@905['String']
    memberScope = DeserializedClassMemberScope@906
    nullable = 'false': Boolean@358
    typeConstructor = DeserializedClassTypeConstructor@907
}

LazyJavaClassifierType@908['String'] {
    arguments = ArrayList@909[empty]
    classifier = JavaClassImpl@910['String']
    memberScope = DeserializedClassMemberScope@906
    nullable = 'false': Boolean@358
    typeConstructor = DeserializedClassTypeConstructor@907
}

LazyJavaClassifierType@911['String'] {
    arguments = ArrayList@912[empty]
    classifier = JavaClassImpl@913['String']
    memberScope = DeserializedClassMemberScope@906
    nullable = 'false': Boolean@358
    typeConstructor = DeserializedClassTypeConstructor@907
}

LazyJavaClassifierType@914['String'] {
    arguments = ArrayList@915[empty]
    classifier = JavaClassImpl@905['String']
    memberScope = DeserializedClassMemberScope@906
    nullable = 'true': Boolean@398
    typeConstructor = DeserializedClassTypeConstructor@907
}

LazyJavaClassifierType@916['String'] {
    arguments = ArrayList@917[empty]
    classifier = JavaClassImpl@910['String']
    memberScope = DeserializedClassMemberScope@906
    nullable = 'true': Boolean@398
    typeConstructor = DeserializedClassTypeConstructor@907
}

LazyJavaClassifierType@918['String'] {
    arguments = ArrayList@919[empty]
    classifier = JavaClassImpl@913['String']
    memberScope = DeserializedClassMemberScope@906
    nullable = 'true': Boolean@398
    typeConstructor = DeserializedClassTypeConstructor@907
}

LazyJavaClassifierType@920['T'] {
    arguments = ArrayList@921[empty]
    classifier = JavaTypeParameterImpl@922['T']
    nullable = 'false': Boolean@358
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@923
}

LazyJavaClassifierType@924['T'] {
    arguments = ArrayList@925[empty]
    classifier = JavaTypeParameterImpl@926['T']
    nullable = 'false': Boolean@358
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@927
}

LazyJavaClassifierType@928['T'] {
    arguments = ArrayList@929[empty]
    classifier = JavaTypeParameterImpl@930['T']
    nullable = 'false': Boolean@358
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@923
}

LazyJavaClassifierType@931['T'] {
    arguments = ArrayList@932[empty]
    classifier = JavaTypeParameterImpl@933['T']
    nullable = 'false': Boolean@358
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@927
}

LazyJavaClassifierType@934['T'] {
    arguments = ArrayList@935[empty]
    classifier = JavaTypeParameterImpl@933['T']
    nullable = 'true': Boolean@398
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@927
}

LazyJavaClassifierType@936['T'] {
    arguments = ArrayList@937[empty]
    classifier = JavaTypeParameterImpl@922['T']
    nullable = 'true': Boolean@398
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@923
}

LazyJavaClassifierType@938['T'] {
    arguments = ArrayList@939[empty]
    classifier = JavaTypeParameterImpl@926['T']
    nullable = 'true': Boolean@398
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@927
}

LazyJavaClassifierType@940['T'] {
    arguments = ArrayList@941[empty]
    classifier = JavaTypeParameterImpl@930['T']
    nullable = 'true': Boolean@398
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@923
}

LazyJavaPackageFragmentProvider@942 {
    packageFragments('<root>': FqName@943) = LazyJavaPackageFragment@944['<root>']
    packageFragments('A': FqName@945) = null
    packageFragments('Int': FqName@946) = null
    packageFragments('Integer': FqName@947) = null
    packageFragments('a': FqName@948) = null
    packageFragments('a.A': FqName@949) = null
    packageFragments('a.PO': FqName@950) = null
    packageFragments('a.foo': FqName@951) = null
    packageFragments('a.makeA': FqName@952) = null
    packageFragments('b': FqName@953) = null
    packageFragments('b.A': FqName@954) = null
    packageFragments('b.B': FqName@955) = null
    packageFragments('b.Int': FqName@956) = null
    packageFragments('b.Integer': FqName@957) = null
    packageFragments('b.NewClass': FqName@958) = null
    packageFragments('b.Q': FqName@959) = null
    packageFragments('b.java': FqName@960) = null
    packageFragments('java': FqName@961) = LazyJavaPackageFragment@962['java']
    packageFragments('java.io': FqName@963) = LazyJavaPackageFragment@964['io']
    packageFragments('java.lang': FqName@965) = LazyJavaPackageFragment@966['lang']
    packageFragments('java.lang.A': FqName@967) = null
    packageFragments('java.lang.Int': FqName@968) = null
    packageFragments('java.lang.Integer': FqName@969) = null
    packageFragments('java.util': FqName@970) = LazyJavaPackageFragment@971['util']
    packageFragments('java.util.ArrayList': FqName@972) = null
    packageFragments('java.util.Arrays': FqName@973) = null
    packageFragments('kotlin': FqName@974) = null
    packageFragments('kotlin.A': FqName@975) = null
    packageFragments('kotlin.Int': FqName@976) = null
    packageFragments('kotlin.Integer': FqName@977) = null
    packageFragments('kotlin.io': FqName@978) = null
    packageFragments('kotlin.jvm': FqName@979) = null
    topLevelClasses(JavaClassImpl@356['AbstractCollection']) = LazyJavaClassDescriptor@3['AbstractCollection']
    topLevelClasses(JavaClassImpl@361['AbstractList']) = LazyJavaClassDescriptor@87['AbstractList']
    topLevelClasses(JavaClassImpl@980['ArrayList']) = LazyJavaClassDescriptor@164['ArrayList']
    topLevelClasses(JavaClassImpl@981['Arrays']) = LazyJavaClassDescriptor@294['Arrays']
    topLevelClasses(JavaClassImpl@982['Integer']) = LazyJavaClassDescriptor@298['Integer']
    topLevelClasses(JavaClassImpl@888['ObjectInputStream']) = LazyJavaClassDescriptor@300['ObjectInputStream']
    topLevelClasses(JavaClassImpl@894['ObjectOutputStream']) = LazyJavaClassDescriptor@302['ObjectOutputStream']
    topLevelClasses(JavaClassImpl@899['RandomAccess']) = LazyJavaClassDescriptor@304['RandomAccess']
    topLevelClasses(JavaClassImpl@902['Serializable']) = LazyJavaClassDescriptor@315['Serializable']
}

LazyJavaPackageFragment@962['java'] {
    classes('lang': Name@983) = null // through LazyPackageFragmentScopeForJavaPackage@984
    classes('util': Name@985) = null // through LazyPackageFragmentScopeForJavaPackage@984
    deserializedPackageScope = Empty@986 // through LazyPackageFragmentScopeForJavaPackage@984
    functions('lang': Name@987) = EmptyList@6[empty] // through LazyPackageFragmentScopeForJavaPackage@984
    memberIndex = computeMemberIndex$1@988 // through LazyPackageFragmentScopeForJavaPackage@984
}

LazyJavaPackageFragment@966['lang'] {
    classes('A': Name@989) = null // through LazyPackageFragmentScopeForJavaPackage@990
    classes('Integer': Name@991) = LazyJavaClassDescriptor@298['Integer'] // through LazyPackageFragmentScopeForJavaPackage@990
    classes('bar': Name@992) = null // through LazyPackageFragmentScopeForJavaPackage@990
    classes('foo': Name@993) = null // through LazyPackageFragmentScopeForJavaPackage@990
    classes('java': Name@994) = null // through LazyPackageFragmentScopeForJavaPackage@990
    classes('makeA': Name@995) = null // through LazyPackageFragmentScopeForJavaPackage@990
    deserializedPackageScope = Empty@986 // through LazyPackageFragmentScopeForJavaPackage@990
    functions('A': Name@989) = EmptyList@6[empty] // through LazyPackageFragmentScopeForJavaPackage@990
    functions('bar': Name@992) = EmptyList@6[empty] // through LazyPackageFragmentScopeForJavaPackage@990
    functions('foo': Name@993) = EmptyList@6[empty] // through LazyPackageFragmentScopeForJavaPackage@990
    functions('makeA': Name@995) = EmptyList@6[empty] // through LazyPackageFragmentScopeForJavaPackage@990
    memberIndex = computeMemberIndex$1@996 // through LazyPackageFragmentScopeForJavaPackage@990
}

LazyJavaPackageFragment@971['util'] {
    classes('ArrayList': Name@997) = LazyJavaClassDescriptor@164['ArrayList'] // through LazyPackageFragmentScopeForJavaPackage@998
    classes('Arrays': Name@999) = LazyJavaClassDescriptor@294['Arrays'] // through LazyPackageFragmentScopeForJavaPackage@998
}

LazyJavaTypeParameterDescriptor@336['E'] {
    defaultType = JetTypeImpl@1000['E']
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@484
    upperBounds = LinkedHashSet@1001[1] { NullableType@1002 }
    upperBoundsAsType = NullableType@1002
}

LazyJavaTypeParameterDescriptor@331['E'] {
    defaultType = JetTypeImpl@1003['E']
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@480
    upperBounds = LinkedHashSet@1004[1] { NullableType@1005 }
    upperBoundsAsType = NullableType@1005
}

LazyJavaTypeParameterDescriptor@327['E'] {
    defaultType = JetTypeImpl@1006['E']
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@500
    upperBounds = LinkedHashSet@1007[1] { NullableType@1008 }
    upperBoundsAsType = NullableType@1008
}

LazyJavaTypeParameterDescriptor@342['E'] {
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1009
    upperBounds = LinkedHashSet@1010[1] { NullableType@1011 }
}

LazyJavaTypeParameterDescriptor@1012['T'] {
    defaultType = JetTypeImpl@1013['T']
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@927
    upperBounds = LinkedHashSet@1014[1] { NullableType@1015 }
    upperBoundsAsType = NullableType@1015
}

LazyJavaTypeParameterDescriptor@1016['T'] {
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@923
    upperBounds = LinkedHashSet@1017[1] { NullableType@1018 }
    upperBoundsAsType = NullableType@1018
}

LazyJavaTypeParameterResolver@1019 {
    resolve(JavaTypeParameterImpl@1020['E']) = LazyJavaTypeParameterDescriptor@331['E']
}

LazyJavaTypeParameterResolver@1021 {
    resolve(JavaTypeParameterImpl@1022['E']) = LazyJavaTypeParameterDescriptor@342['E']
}

LazyJavaTypeParameterResolver@1023 {
    resolve(JavaTypeParameterImpl@1024['E']) = LazyJavaTypeParameterDescriptor@327['E']
}

LazyJavaTypeParameterResolver@1025 {
    resolve(JavaTypeParameterImpl@1026['E']) = LazyJavaTypeParameterDescriptor@336['E']
}

LazyJavaTypeParameterResolver@1027 {
    resolve(JavaTypeParameterImpl@499['E']) = null
}

LazyJavaTypeParameterResolver@1028 {
    resolve(JavaTypeParameterImpl@533['E']) = null
}

LazyJavaTypeParameterResolver@1029 {
    resolve(JavaTypeParameterImpl@593['E']) = null
}

LazyJavaTypeParameterResolver@1030 {
    resolve(JavaTypeParameterImpl@605['E']) = null
}

LazyJavaTypeParameterResolver@1031 {
    resolve(JavaTypeParameterImpl@599['E']) = null
}

LazyJavaTypeParameterResolver@1032 {
    resolve(JavaTypeParameterImpl@496['E']) = null
}

LazyJavaTypeParameterResolver@1033 {
    resolve(JavaTypeParameterImpl@524['E']) = null
}

LazyJavaTypeParameterResolver@1034 {
    resolve(JavaTypeParameterImpl@578['E']) = null
}

LazyJavaTypeParameterResolver@1035 {
    resolve(JavaTypeParameterImpl@515['E']) = null
}

LazyJavaTypeParameterResolver@1036 {
    resolve(JavaTypeParameterImpl@542['E']) = null
}

LazyJavaTypeParameterResolver@1037 {
    resolve(JavaTypeParameterImpl@521['E']) = null
}

LazyJavaTypeParameterResolver@1038 {
    resolve(JavaTypeParameterImpl@587['E']) = null
}

LazyJavaTypeParameterResolver@1039 {
    resolve(JavaTypeParameterImpl@575['E']) = null
}

LazyJavaTypeParameterResolver@1040 {
    resolve(JavaTypeParameterImpl@560['E']) = null
}

LazyJavaTypeParameterResolver@1041 {
    resolve(JavaTypeParameterImpl@527['E']) = null
}

LazyJavaTypeParameterResolver@1042 {
    resolve(JavaTypeParameterImpl@584['E']) = null
}

LazyJavaTypeParameterResolver@1043 {
    resolve(JavaTypeParameterImpl@569['E']) = null
}

LazyJavaTypeParameterResolver@1044 {
    resolve(JavaTypeParameterImpl@509['E']) = null
}

LazyJavaTypeParameterResolver@1045 {
    resolve(JavaTypeParameterImpl@548['E']) = null
}

LazyJavaTypeParameterResolver@1046 {
    resolve(JavaTypeParameterImpl@617['E']) = null
}

LazyJavaTypeParameterResolver@1047 {
    resolve(JavaTypeParameterImpl@563['E']) = null
}

LazyJavaTypeParameterResolver@1048 {
    resolve(JavaTypeParameterImpl@551['E']) = null
}

LazyJavaTypeParameterResolver@1049 {
    resolve(JavaTypeParameterImpl@611['E']) = null
}

LazyJavaTypeParameterResolver@1050 {
    resolve(JavaTypeParameterImpl@602['E']) = null
}

LazyJavaTypeParameterResolver@1051 {
    resolve(JavaTypeParameterImpl@557['E']) = null
}

LazyJavaTypeParameterResolver@1052 {
    resolve(JavaTypeParameterImpl@1053['T']) = LazyJavaTypeParameterDescriptor@1012['T']
}

LazyJavaTypeParameterResolver@1054 {
    resolve(JavaTypeParameterImpl@1055['T']) = LazyJavaTypeParameterDescriptor@1016['T']
}

ResolutionTaskHolder@1056 {
    <name not found> = ArrayList@1057[1] { ResolutionCandidate@1058 }
    <name not found> = ArrayList@1059[1] { ResolutionCandidate@1058 }
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
}

ResolutionTaskHolder@1060 {
    <name not found> = ArrayList@1061[1] { ResolutionCandidate@1062 }
    <name not found> = ArrayList@1063[1] { ResolutionCandidate@1062 }
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
}

ResolutionTaskHolder@1064 {
    <name not found> = ArrayList@1065[1] { ResolutionCandidate@1066 }
    <name not found> = ArrayList@1067[1] { ResolutionCandidate@1066 }
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
}

ResolutionTaskHolder@1068 {
    <name not found> = ArrayList@1069[1] { ResolutionCandidate@1070 }
    <name not found> = ArrayList@1071[1] { ResolutionCandidate@1070 }
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
}

ResolutionTaskHolder@1072 {
    <name not found> = ArrayList@1073[1] { ResolutionCandidate@1074 }
    <name not found> = ArrayList@1075[1] { ResolutionCandidate@1074 }
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
}

ResolutionTaskHolder@1076 {
    <name not found> = ArrayList@1077[1] { ResolutionCandidate@1078 }
    <name not found> = ArrayList@1079[1] { ResolutionCandidate@1078 }
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
}

ResolutionTaskHolder@1080 {
    <name not found> = ArrayList@1081[1] { ResolutionCandidate@1082 }
    <name not found> = ArrayList@1083[1] { ResolutionCandidate@1082 }
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
}

ResolutionTaskHolder@1084 {
    <name not found> = ArrayList@1085[1] { ResolutionCandidate@1086 }
    <name not found> = ArrayList@1087[1] { ResolutionCandidate@1086 }
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
    <name not found> = EmptyList@6[empty]
}

ResolutionTaskHolder@1088 {
    <name not found> = ArrayList@1089[1] { ResolutionCandidate@1090 }
    <name not found> = ArrayList@1091[1] { ResolutionCandidate@1090 }
}

ResolutionTaskHolder@1092 {
    <name not found> = ArrayList@1093[3] { ResolutionCandidate@1094, ResolutionCandidate@1095, ResolutionCandidate@1096 }
    <name not found> = ArrayList@1097[3] { ResolutionCandidate@1094, ResolutionCandidate@1095, ResolutionCandidate@1096 }
}
