LazyJavaClassDescriptor@0['CharSequence'] {
    allDescriptors = ArrayList@1[6] { JavaMethodDescriptor@2['length'], DeserializedSimpleFunctionDescriptor@3['hashCode'], JavaMethodDescriptor@4['subSequence'], ... } // through LazyJavaClassMemberScope@5
    constructors = stdlib_emptyListClass@6[empty] // through LazyJavaClassMemberScope@5
    defaultType = JetTypeImpl@7['CharSequence']
    enumEntryIndex = LinkedHashMap@8 // through LazyJavaClassMemberScope@5
    functionTypeForSamInterface = null
    functions('charAt': Name@9) = ArrayList@10[1] { JavaMethodDescriptor@11['charAt'] } // through LazyJavaClassMemberScope@5
    functions('clone': Name@12) = EmptyList@13[empty] // through LazyJavaClassMemberScope@5
    functions('equals': Name@14) = ArrayList@15[1] { DeserializedSimpleFunctionDescriptor@16['equals'] } // through LazyJavaClassMemberScope@5
    functions('finalize': Name@17) = EmptyList@13[empty] // through LazyJavaClassMemberScope@5
    functions('getClass': Name@18) = EmptyList@13[empty] // through LazyJavaClassMemberScope@5
    functions('hashCode': Name@19) = ArrayList@20[1] { DeserializedSimpleFunctionDescriptor@3['hashCode'] } // through LazyJavaClassMemberScope@5
    functions('length': Name@21) = ArrayList@22[1] { JavaMethodDescriptor@2['length'] } // through LazyJavaClassMemberScope@5
    functions('notify': Name@23) = EmptyList@13[empty] // through LazyJavaClassMemberScope@5
    functions('notifyAll': Name@24) = EmptyList@13[empty] // through LazyJavaClassMemberScope@5
    functions('subSequence': Name@25) = ArrayList@26[1] { JavaMethodDescriptor@4['subSequence'] } // through LazyJavaClassMemberScope@5
    functions('toString': Name@27) = ArrayList@28[1] { DeserializedSimpleFunctionDescriptor@29['toString'] } // through LazyJavaClassMemberScope@5
    functions('wait': Name@30) = EmptyList@13[empty] // through LazyJavaClassMemberScope@5
    memberIndex = computeMemberIndex$1@31 // through LazyJavaClassMemberScope@5
    nestedClassIndex = LinkedHashMap@32 // through LazyJavaClassMemberScope@5
    thisAsReceiverParameter = LazyClassReceiverParameterDescriptor@33['<this>']
    typeConstructor = LazyJavaClassTypeConstructor@34['CharSequence']
}

LazyJavaClassTypeConstructor@34['CharSequence'] {
    parameters = ArrayList@35[empty]
    supertypes = ArrayList@36[1] { JetTypeImpl@37['Any'] }
}

LazyJavaClassifierType@38['CharSequence'] {
    arguments = ArrayList@39[empty]
    classifier = JavaClassImpl@40['CharSequence']
    nullable = 'false': Boolean@41
    typeConstructor = DeserializedClassTypeConstructor@42
}

LazyJavaClassifierType@43['CharSequence'] {
    arguments = ArrayList@44[empty]
    classifier = JavaClassImpl@40['CharSequence']
    nullable = 'true': Boolean@45
    typeConstructor = DeserializedClassTypeConstructor@42
}

LazyJavaClassifierType@46['Object'] {
    classifier = JavaClassImpl@47['Object']
    typeConstructor = DeserializedClassTypeConstructor@48
}

LazyJavaPackageFragmentProvider@49 {
    packageFragments('<root>': FqName@50) = LazyJavaPackageFragment@51['<root>']
    packageFragments('CharSequence': FqName@52) = null
    packageFragments('JCS': FqName@53) = null
    packageFragments('JSub': FqName@54) = null
    packageFragments('Sub': FqName@55) = null
    packageFragments('java': FqName@56) = LazyJavaPackageFragment@57['java']
    packageFragments('java.lang': FqName@58) = LazyJavaPackageFragment@59['lang']
    packageFragments('java.lang.CharSequence': FqName@60) = null
    packageFragments('java.lang.JCS': FqName@61) = null
    packageFragments('java.lang.JSub': FqName@62) = null
    packageFragments('java.lang.Sub': FqName@63) = null
    packageFragments('kotlin': FqName@64) = null
    packageFragments('kotlin.CharSequence': FqName@65) = null
    packageFragments('kotlin.JCS': FqName@66) = null
    packageFragments('kotlin.JSub': FqName@67) = null
    packageFragments('kotlin.Sub': FqName@68) = null
    packageFragments('kotlin.io': FqName@69) = null
    packageFragments('kotlin.jvm': FqName@70) = null
    topLevelClasses(JavaClassImpl@71['CharSequence']) = LazyJavaClassDescriptor@0['CharSequence']
}

LazyJavaPackageFragment@51['<root>'] {
    classes('CharSequence': Name@72) = null // through LazyPackageFragmentScopeForJavaPackage@73
    classes('JCS': Name@74) = null // through LazyPackageFragmentScopeForJavaPackage@73
    classes('java': Name@75) = null // through LazyPackageFragmentScopeForJavaPackage@73
    deserializedPackageScope = Empty@76 // through LazyPackageFragmentScopeForJavaPackage@73
    functions('java': Name@77) = EmptyList@13[empty] // through LazyPackageFragmentScopeForJavaPackage@73
    memberIndex = computeMemberIndex$1@78 // through LazyPackageFragmentScopeForJavaPackage@73
}

LazyJavaPackageFragment@57['java'] {
    classes('lang': Name@79) = null // through LazyPackageFragmentScopeForJavaPackage@80
    deserializedPackageScope = Empty@76 // through LazyPackageFragmentScopeForJavaPackage@80
    functions('lang': Name@81) = EmptyList@13[empty] // through LazyPackageFragmentScopeForJavaPackage@80
    memberIndex = computeMemberIndex$1@82 // through LazyPackageFragmentScopeForJavaPackage@80
}

LazyJavaPackageFragment@59['lang'] {
    classes('CharSequence': Name@83) = LazyJavaClassDescriptor@0['CharSequence'] // through LazyPackageFragmentScopeForJavaPackage@84
    deserializedPackageScope = Empty@76 // through LazyPackageFragmentScopeForJavaPackage@84
    functions('CharSequence': Name@85) = EmptyList@13[empty] // through LazyPackageFragmentScopeForJavaPackage@84
    memberIndex = computeMemberIndex$1@86 // through LazyPackageFragmentScopeForJavaPackage@84
}

ResolutionTaskHolder@87 {
    <name not found> = ArrayList@88[1] { ResolutionCandidate@89 }
    <name not found> = ArrayList@90[1] { ResolutionCandidate@89 }
}

ResolutionTaskHolder@91 {
    <name not found> = ArrayList@92[1] { ResolutionCandidate@93 }
    <name not found> = ArrayList@94[1] { ResolutionCandidate@93 }
}

ResolutionTaskHolder@95 {
    <name not found> = ArrayList@96[1] { ResolutionCandidate@97 }
    <name not found> = ArrayList@98[1] { ResolutionCandidate@97 }
}

ResolutionTaskHolder@99 {
    <name not found> = ArrayList@100[1] { ResolutionCandidate@101 }
    <name not found> = ArrayList@102[1] { ResolutionCandidate@101 }
}

ResolutionTaskHolder@103 {
    <name not found> = ArrayList@104[1] { ResolutionCandidate@105 }
    <name not found> = ArrayList@106[1] { ResolutionCandidate@105 }
}
