LazyJavaClassDescriptor@0['Class'] {
    typeConstructor = LazyJavaClassTypeConstructor@1['Class']
}

LazyJavaClassDescriptor@2['Object'] {
    allDescriptors = ArrayList@3[11] { JavaMethodDescriptor@4['notifyAll'], JavaMethodDescriptor@5['notify'], JavaMethodDescriptor@6['hashCode'], ... } // through LazyJavaClassMemberScope@7
    defaultType = JetTypeImpl@8['Object']
    enumEntryIndex = LinkedHashMap@9 // through LazyJavaClassMemberScope@7
    functions('clone': Name@10) = ArrayList@11[1] { JavaMethodDescriptor@12['clone'] } // through LazyJavaClassMemberScope@7
    functions('equals': Name@13) = ArrayList@14[1] { JavaMethodDescriptor@15['equals'] } // through LazyJavaClassMemberScope@7
    functions('finalize': Name@16) = ArrayList@17[1] { JavaMethodDescriptor@18['finalize'] } // through LazyJavaClassMemberScope@7
    functions('getClass': Name@19) = ArrayList@20[1] { JavaMethodDescriptor@21['getClass'] } // through LazyJavaClassMemberScope@7
    functions('hashCode': Name@22) = ArrayList@23[1] { JavaMethodDescriptor@6['hashCode'] } // through LazyJavaClassMemberScope@7
    functions('notify': Name@24) = ArrayList@25[1] { JavaMethodDescriptor@5['notify'] } // through LazyJavaClassMemberScope@7
    functions('notifyAll': Name@26) = ArrayList@27[1] { JavaMethodDescriptor@4['notifyAll'] } // through LazyJavaClassMemberScope@7
    functions('toString': Name@28) = ArrayList@29[1] { JavaMethodDescriptor@30['toString'] } // through LazyJavaClassMemberScope@7
    functions('wait': Name@31) = ArrayList@32[3] { JavaMethodDescriptor@33['wait'], JavaMethodDescriptor@34['wait'], JavaMethodDescriptor@35['wait'] } // through LazyJavaClassMemberScope@7
    memberIndex = computeMemberIndex$1@36 // through LazyJavaClassMemberScope@7
    nestedClassIndex = LinkedHashMap@37 // through LazyJavaClassMemberScope@7
    thisAsReceiverParameter = LazyClassReceiverParameterDescriptor@38['<this>']
    typeConstructor = LazyJavaClassTypeConstructor@39['Object']
}

LazyJavaClassDescriptor@40['Runnable'] {
    allDescriptors = ArrayList@41[4] { DeserializedSimpleFunctionDescriptor@42['hashCode'], DeserializedSimpleFunctionDescriptor@43['toString'], JavaMethodDescriptor@44['run'], ... } // through LazyJavaClassMemberScope@45
    defaultType = JetTypeImpl@46['Runnable']
    enumEntryIndex = LinkedHashMap@47 // through LazyJavaClassMemberScope@45
    functions('clone': Name@48) = EmptyList@49[empty] // through LazyJavaClassMemberScope@45
    functions('equals': Name@50) = ArrayList@51[1] { DeserializedSimpleFunctionDescriptor@52['equals'] } // through LazyJavaClassMemberScope@45
    functions('finalize': Name@53) = EmptyList@49[empty] // through LazyJavaClassMemberScope@45
    functions('getClass': Name@54) = EmptyList@49[empty] // through LazyJavaClassMemberScope@45
    functions('hashCode': Name@55) = ArrayList@56[1] { DeserializedSimpleFunctionDescriptor@42['hashCode'] } // through LazyJavaClassMemberScope@45
    functions('notify': Name@57) = EmptyList@49[empty] // through LazyJavaClassMemberScope@45
    functions('notifyAll': Name@58) = EmptyList@49[empty] // through LazyJavaClassMemberScope@45
    functions('run': Name@59) = ArrayList@60[1] { JavaMethodDescriptor@44['run'] } // through LazyJavaClassMemberScope@45
    functions('toString': Name@61) = ArrayList@62[1] { DeserializedSimpleFunctionDescriptor@43['toString'] } // through LazyJavaClassMemberScope@45
    functions('wait': Name@63) = EmptyList@49[empty] // through LazyJavaClassMemberScope@45
    memberIndex = computeMemberIndex$1@64 // through LazyJavaClassMemberScope@45
    nestedClassIndex = LinkedHashMap@65 // through LazyJavaClassMemberScope@45
    thisAsReceiverParameter = LazyClassReceiverParameterDescriptor@66['<this>']
    typeConstructor = LazyJavaClassTypeConstructor@67['Runnable']
}

LazyJavaClassTypeConstructor@1['Class'] {
    parameters = ArrayList@68[1] { LazyJavaTypeParameterDescriptor@69['T'] }
}

LazyJavaClassTypeConstructor@39['Object'] {
    parameters = ArrayList@70[empty]
    supertypes = ArrayList@71[1] { JetTypeImpl@72['Any'] }
}

LazyJavaClassTypeConstructor@67['Runnable'] {
    parameters = ArrayList@73[empty]
    supertypes = ArrayList@74[1] { JetTypeImpl@72['Any'] }
}

LazyJavaClassifierType@75['Class<?>'] {
    arguments = ArrayList@76[1] { LazyStarProjection@77 }
    classifier = JavaClassImpl@78['Class']
    nullable = 'false': Boolean@79
    typeConstructor = LazyJavaClassTypeConstructor@1['Class']
}

LazyJavaClassifierType@80['Class<?>'] {
    arguments = ArrayList@81[1] { LazyStarProjection@82 }
    classifier = JavaClassImpl@78['Class']
    nullable = 'true': Boolean@83
    typeConstructor = LazyJavaClassTypeConstructor@1['Class']
}

LazyJavaClassifierType@84['Object'] {
    arguments = ArrayList@85[empty]
    classifier = JavaClassImpl@86['Object']
    nullable = 'false': Boolean@79
    typeConstructor = DeserializedClassTypeConstructor@87
}

LazyJavaClassifierType@88['Object'] {
    arguments = ArrayList@89[empty]
    classifier = JavaClassImpl@90['Object']
    nullable = 'false': Boolean@79
    typeConstructor = DeserializedClassTypeConstructor@87
}

LazyJavaClassifierType@91['Object'] {
    arguments = ArrayList@92[empty]
    classifier = JavaClassImpl@86['Object']
    nullable = 'true': Boolean@83
    typeConstructor = DeserializedClassTypeConstructor@87
}

LazyJavaClassifierType@93['Object'] {
    arguments = ArrayList@94[empty]
    classifier = JavaClassImpl@90['Object']
    nullable = 'true': Boolean@83
    typeConstructor = DeserializedClassTypeConstructor@87
}

LazyJavaClassifierType@95['Object'] {
    classifier = JavaClassImpl@96['Object']
    typeConstructor = DeserializedClassTypeConstructor@87
}

LazyJavaClassifierType@97['String'] {
    arguments = ArrayList@98[empty]
    classifier = JavaClassImpl@99['String']
    nullable = 'false': Boolean@79
    typeConstructor = DeserializedClassTypeConstructor@100
}

LazyJavaClassifierType@101['String'] {
    arguments = ArrayList@102[empty]
    classifier = JavaClassImpl@99['String']
    nullable = 'true': Boolean@83
    typeConstructor = DeserializedClassTypeConstructor@100
}

LazyJavaPackageFragmentProvider@103 {
    packageFragments('<root>': FqName@104) = LazyJavaPackageFragment@105['<root>']
    packageFragments('Object': FqName@106) = null
    packageFragments('Runnable': FqName@107) = null
    packageFragments('TestIface': FqName@108) = null
    packageFragments('TestObject': FqName@109) = null
    packageFragments('java': FqName@110) = LazyJavaPackageFragment@111['java']
    packageFragments('java.lang': FqName@112) = LazyJavaPackageFragment@113['lang']
    packageFragments('java.lang.Object': FqName@114) = null
    packageFragments('java.lang.Runnable': FqName@115) = null
    packageFragments('kotlin': FqName@116) = null
    packageFragments('kotlin.Object': FqName@117) = null
    packageFragments('kotlin.Runnable': FqName@118) = null
    packageFragments('kotlin.io': FqName@119) = null
    packageFragments('kotlin.jvm': FqName@120) = null
    topLevelClasses(JavaClassImpl@78['Class']) = LazyJavaClassDescriptor@0['Class']
    topLevelClasses(JavaClassImpl@121['Object']) = LazyJavaClassDescriptor@2['Object']
    topLevelClasses(JavaClassImpl@122['Runnable']) = LazyJavaClassDescriptor@40['Runnable']
}

LazyJavaPackageFragment@105['<root>'] {
    classes('Object': Name@123) = null // through LazyPackageFragmentScopeForJavaPackage@124
    classes('Runnable': Name@125) = null // through LazyPackageFragmentScopeForJavaPackage@124
}

LazyJavaPackageFragment@111['java'] {
    classes('lang': Name@126) = null // through LazyPackageFragmentScopeForJavaPackage@127
    deserializedPackageScope = Empty@128 // through LazyPackageFragmentScopeForJavaPackage@127
    functions('lang': Name@129) = EmptyList@49[empty] // through LazyPackageFragmentScopeForJavaPackage@127
    memberIndex = computeMemberIndex$1@130 // through LazyPackageFragmentScopeForJavaPackage@127
}

LazyJavaPackageFragment@113['lang'] {
    classes('Object': Name@123) = LazyJavaClassDescriptor@2['Object'] // through LazyPackageFragmentScopeForJavaPackage@131
    classes('Runnable': Name@125) = LazyJavaClassDescriptor@40['Runnable'] // through LazyPackageFragmentScopeForJavaPackage@131
}

LazyJavaTypeParameterDescriptor@69['T'] {
    upperBounds = LinkedHashSet@132[1] { NullableType@133 }
    upperBoundsAsType = NullableType@133
}

LazyJavaTypeParameterResolver@134 {
    resolve(JavaTypeParameterImpl@135['T']) = LazyJavaTypeParameterDescriptor@69['T']
}

ResolutionTaskHolder@136 {
    <name not found> = ArrayList@137[1] { ResolutionCandidate@138 }
    <name not found> = ArrayList@139[1] { ResolutionCandidate@138 }
}

ResolutionTaskHolder@140 {
    <name not found> = ArrayList@141[1] { ResolutionCandidate@142 }
    <name not found> = ArrayList@143[1] { ResolutionCandidate@142 }
}
