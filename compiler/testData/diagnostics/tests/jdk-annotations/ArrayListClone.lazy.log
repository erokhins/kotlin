LazyJavaClassDescriptor@0['AbstractCollection'] {
    functions('clone': Name@1) = EmptyList@2[empty] // through LazyJavaClassMemberScope@3
    memberIndex = computeMemberIndex$1@4 // through LazyJavaClassMemberScope@3
    typeConstructor = LazyJavaClassTypeConstructor@5['AbstractCollection']
}

LazyJavaClassDescriptor@6['AbstractList'] {
    functions('clone': Name@1) = EmptyList@2[empty] // through LazyJavaClassMemberScope@7
    memberIndex = computeMemberIndex$1@8 // through LazyJavaClassMemberScope@7
    typeConstructor = LazyJavaClassTypeConstructor@9['AbstractList']
}

LazyJavaClassDescriptor@10['ArrayList'] {
    constructors = ArrayList@11[3] { JavaConstructorDescriptor@12['<init>'], JavaConstructorDescriptor@13['<init>'], JavaConstructorDescriptor@14['<init>'] } // through LazyJavaClassMemberScope@15
    defaultType = JetTypeImpl@16['ArrayList<1>']
    enumEntryIndex = LinkedHashMap@17 // through LazyJavaClassMemberScope@15
    functionTypeForSamInterface = null
    functions('clone': Name@18) = ArrayList@19[1] { JavaMethodDescriptor@20['clone'] } // through LazyJavaClassMemberScope@15
    memberIndex = computeMemberIndex$1@21 // through LazyJavaClassMemberScope@15
    nestedClassIndex = LinkedHashMap@22 // through LazyJavaClassMemberScope@15
    nestedClasses('clone': Name@18) = null // through LazyJavaClassMemberScope@15
    thisAsReceiverParameter = LazyClassReceiverParameterDescriptor@23['<this>']
    typeConstructor = LazyJavaClassTypeConstructor@24['ArrayList']
}

LazyJavaClassDescriptor@25['RandomAccess'] {
    functions('clone': Name@1) = EmptyList@2[empty] // through LazyJavaClassMemberScope@26
    memberIndex = computeMemberIndex$1@27 // through LazyJavaClassMemberScope@26
    typeConstructor = LazyJavaClassTypeConstructor@28['RandomAccess']
}

LazyJavaClassDescriptor@29['Serializable'] {
    functions('clone': Name@1) = EmptyList@2[empty] // through LazyJavaClassMemberScope@30
    memberIndex = computeMemberIndex$1@31 // through LazyJavaClassMemberScope@30
    typeConstructor = LazyJavaClassTypeConstructor@32['Serializable']
}

LazyJavaClassTypeConstructor@5['AbstractCollection'] {
    parameters = ArrayList@33[1] { LazyJavaTypeParameterDescriptor@34['E'] }
    supertypes = ArrayList@35[1] { LazyJavaClassifierType@36['Collection<E>'] }
}

LazyJavaClassTypeConstructor@9['AbstractList'] {
    parameters = ArrayList@37[1] { LazyJavaTypeParameterDescriptor@38['E'] }
    supertypes = ArrayList@39[2] { LazyJavaClassifierType@40['AbstractCollection<E>'], LazyJavaClassifierType@41['List<E>'] }
}

LazyJavaClassTypeConstructor@24['ArrayList'] {
    parameters = ArrayList@42[1] { LazyJavaTypeParameterDescriptor@43['E'] }
    supertypes = ArrayList@44[5] { LazyJavaClassifierType@45['AbstractList<E>'], LazyJavaClassifierType@46['List<E>'], LazyJavaClassifierType@47['RandomAccess'], ... }
}

LazyJavaClassTypeConstructor@28['RandomAccess'] {
    parameters = ArrayList@48[empty]
    supertypes = ArrayList@49[1] { JetTypeImpl@50['Any'] }
}

LazyJavaClassTypeConstructor@32['Serializable'] {
    parameters = ArrayList@51[empty]
    supertypes = ArrayList@52[1] { JetTypeImpl@50['Any'] }
}

LazyJavaClassifierType@40['AbstractCollection<E>'] {
    arguments = ArrayList@53[1] { TypeProjectionImpl@54 }
    classifier = JavaClassImpl@55['AbstractCollection']
    memberScope = SubstitutingScope@56
    typeConstructor = LazyJavaClassTypeConstructor@5['AbstractCollection']
}

LazyJavaClassifierType@45['AbstractList<E>'] {
    arguments = ArrayList@57[1] { TypeProjectionImpl@58 }
    classifier = JavaClassImpl@59['AbstractList']
    memberScope = SubstitutingScope@60
    typeConstructor = LazyJavaClassTypeConstructor@9['AbstractList']
}

LazyJavaClassifierType@61['Cloneable'] {
    arguments = ArrayList@62[empty]
    classifier = JavaClassImpl@63['Cloneable']
    memberScope = DeserializedClassMemberScope@64
    typeConstructor = DeserializedClassTypeConstructor@65
}

LazyJavaClassifierType@66['Collection<? extends E>'] {
    arguments = ArrayList@67[1] { TypeProjectionImpl@68 }
    classifier = JavaClassImpl@69['Collection']
    memberScope = SubstitutingScope@70
    nullable = 'false': Boolean@71
    typeConstructor = DeserializedClassTypeConstructor@72
}

LazyJavaClassifierType@73['Collection<? extends E>'] {
    arguments = ArrayList@74[1] { TypeProjectionImpl@75 }
    classifier = JavaClassImpl@69['Collection']
    memberScope = SubstitutingScope@76
    nullable = 'true': Boolean@77
    typeConstructor = DeserializedClassTypeConstructor@78
}

LazyJavaClassifierType@36['Collection<E>'] {
    arguments = ArrayList@79[1] { TypeProjectionImpl@80 }
    classifier = JavaClassImpl@81['Collection']
    memberScope = SubstitutingScope@82
    typeConstructor = DeserializedClassTypeConstructor@72
}

LazyJavaClassifierType@83['E'] {
    arguments = ArrayList@84[empty]
    classifier = JavaTypeParameterImpl@85['E']
    nullable = 'false': Boolean@71
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@86
}

LazyJavaClassifierType@87['E'] {
    arguments = ArrayList@88[empty]
    classifier = JavaTypeParameterImpl@89['E']
    nullable = 'false': Boolean@71
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@90
}

LazyJavaClassifierType@91['E'] {
    arguments = ArrayList@92[empty]
    classifier = JavaTypeParameterImpl@93['E']
    nullable = 'false': Boolean@71
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@94
}

LazyJavaClassifierType@95['E'] {
    arguments = ArrayList@96[empty]
    classifier = JavaTypeParameterImpl@97['E']
    nullable = 'false': Boolean@71
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@86
}

LazyJavaClassifierType@98['E'] {
    arguments = ArrayList@99[empty]
    classifier = JavaTypeParameterImpl@100['E']
    nullable = 'false': Boolean@71
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@86
}

LazyJavaClassifierType@101['E'] {
    arguments = ArrayList@102[empty]
    classifier = JavaTypeParameterImpl@103['E']
    nullable = 'false': Boolean@71
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@86
}

LazyJavaClassifierType@104['E'] {
    arguments = ArrayList@105[empty]
    classifier = JavaTypeParameterImpl@106['E']
    nullable = 'false': Boolean@71
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@94
}

LazyJavaClassifierType@107['E'] {
    arguments = ArrayList@108[empty]
    classifier = JavaTypeParameterImpl@106['E']
    nullable = 'true': Boolean@77
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@94
}

LazyJavaClassifierType@109['E'] {
    arguments = ArrayList@110[empty]
    classifier = JavaTypeParameterImpl@103['E']
    nullable = 'true': Boolean@77
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@86
}

LazyJavaClassifierType@111['E'] {
    arguments = ArrayList@112[empty]
    classifier = JavaTypeParameterImpl@85['E']
    nullable = 'true': Boolean@77
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@86
}

LazyJavaClassifierType@113['E'] {
    arguments = ArrayList@114[empty]
    classifier = JavaTypeParameterImpl@97['E']
    nullable = 'true': Boolean@77
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@86
}

LazyJavaClassifierType@115['E'] {
    arguments = ArrayList@116[empty]
    classifier = JavaTypeParameterImpl@89['E']
    nullable = 'true': Boolean@77
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@90
}

LazyJavaClassifierType@117['E'] {
    arguments = ArrayList@118[empty]
    classifier = JavaTypeParameterImpl@93['E']
    nullable = 'true': Boolean@77
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@94
}

LazyJavaClassifierType@119['E'] {
    arguments = ArrayList@120[empty]
    classifier = JavaTypeParameterImpl@100['E']
    nullable = 'true': Boolean@77
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@86
}

LazyJavaClassifierType@41['List<E>'] {
    arguments = ArrayList@121[1] { TypeProjectionImpl@122 }
    classifier = JavaClassImpl@123['List']
    memberScope = SubstitutingScope@124
    typeConstructor = DeserializedClassTypeConstructor@125
}

LazyJavaClassifierType@46['List<E>'] {
    arguments = ArrayList@126[1] { TypeProjectionImpl@127 }
    classifier = JavaClassImpl@128['List']
    memberScope = SubstitutingScope@129
    typeConstructor = DeserializedClassTypeConstructor@125
}

LazyJavaClassifierType@130['Object'] {
    arguments = ArrayList@131[empty]
    classifier = JavaClassImpl@132['Object']
    memberScope = DeserializedClassMemberScope@133
    nullable = 'false': Boolean@71
    typeConstructor = DeserializedClassTypeConstructor@134
}

LazyJavaClassifierType@135['Object'] {
    arguments = ArrayList@136[empty]
    classifier = JavaClassImpl@132['Object']
    memberScope = DeserializedClassMemberScope@133
    nullable = 'true': Boolean@77
    typeConstructor = DeserializedClassTypeConstructor@134
}

LazyJavaClassifierType@137['Object'] {
    classifier = JavaClassImpl@138['Object']
    typeConstructor = DeserializedClassTypeConstructor@134
}

LazyJavaClassifierType@139['Object'] {
    classifier = JavaClassImpl@140['Object']
    typeConstructor = DeserializedClassTypeConstructor@134
}

LazyJavaClassifierType@141['Object'] {
    classifier = JavaClassImpl@142['Object']
    typeConstructor = DeserializedClassTypeConstructor@134
}

LazyJavaClassifierType@47['RandomAccess'] {
    arguments = ArrayList@143[empty]
    classifier = JavaClassImpl@144['RandomAccess']
    memberScope = LazyJavaClassMemberScope@26
    typeConstructor = LazyJavaClassTypeConstructor@28['RandomAccess']
}

LazyJavaClassifierType@145['Serializable'] {
    arguments = ArrayList@146[empty]
    classifier = JavaClassImpl@147['Serializable']
    memberScope = LazyJavaClassMemberScope@30
    typeConstructor = LazyJavaClassTypeConstructor@32['Serializable']
}

LazyJavaPackageFragmentProvider@148 {
    packageFragments('<root>': FqName@149) = LazyJavaPackageFragment@150['<root>']
    packageFragments('Any': FqName@151) = null
    packageFragments('Array': FqName@152) = null
    packageFragments('ArrayList': FqName@153) = null
    packageFragments('Int': FqName@154) = null
    packageFragments('String': FqName@155) = null
    packageFragments('java': FqName@156) = LazyJavaPackageFragment@157['java']
    packageFragments('java.io': FqName@158) = LazyJavaPackageFragment@159['io']
    packageFragments('java.lang': FqName@160) = LazyJavaPackageFragment@161['lang']
    packageFragments('java.lang.Any': FqName@162) = null
    packageFragments('java.lang.Array': FqName@163) = null
    packageFragments('java.lang.ArrayList': FqName@164) = null
    packageFragments('java.lang.Int': FqName@165) = null
    packageFragments('java.lang.String': FqName@166) = null
    packageFragments('java.util': FqName@167) = LazyJavaPackageFragment@168['util']
    packageFragments('java.util.Any': FqName@169) = null
    packageFragments('java.util.Array': FqName@170) = null
    packageFragments('java.util.ArrayList': FqName@171) = null
    packageFragments('java.util.Int': FqName@172) = null
    packageFragments('java.util.String': FqName@173) = null
    packageFragments('kotlin': FqName@174) = null
    packageFragments('kotlin.Any': FqName@175) = null
    packageFragments('kotlin.Array': FqName@176) = null
    packageFragments('kotlin.ArrayList': FqName@177) = null
    packageFragments('kotlin.Int': FqName@178) = null
    packageFragments('kotlin.String': FqName@179) = null
    packageFragments('kotlin.io': FqName@180) = null
    packageFragments('kotlin.jvm': FqName@181) = null
    packageFragments('kotlin1': FqName@182) = null
    packageFragments('kotlin1.Any': FqName@183) = null
    packageFragments('kotlin1.Array': FqName@184) = null
    packageFragments('kotlin1.ArrayList': FqName@185) = null
    packageFragments('kotlin1.Int': FqName@186) = null
    packageFragments('kotlin1.String': FqName@187) = null
    topLevelClasses(JavaClassImpl@55['AbstractCollection']) = LazyJavaClassDescriptor@0['AbstractCollection']
    topLevelClasses(JavaClassImpl@59['AbstractList']) = LazyJavaClassDescriptor@6['AbstractList']
    topLevelClasses(JavaClassImpl@188['ArrayList']) = LazyJavaClassDescriptor@10['ArrayList']
    topLevelClasses(JavaClassImpl@144['RandomAccess']) = LazyJavaClassDescriptor@25['RandomAccess']
    topLevelClasses(JavaClassImpl@147['Serializable']) = LazyJavaClassDescriptor@29['Serializable']
}

LazyJavaPackageFragment@157['java'] {
    classes('lang': Name@189) = null // through LazyPackageFragmentScopeForJavaPackage@190
    classes('util': Name@191) = null // through LazyPackageFragmentScopeForJavaPackage@190
    deserializedPackageScope = Empty@192 // through LazyPackageFragmentScopeForJavaPackage@190
    functions('lang': Name@193) = EmptyList@2[empty] // through LazyPackageFragmentScopeForJavaPackage@190
    functions('util': Name@194) = EmptyList@2[empty] // through LazyPackageFragmentScopeForJavaPackage@190
    memberIndex = computeMemberIndex$1@195 // through LazyPackageFragmentScopeForJavaPackage@190
}

LazyJavaPackageFragment@161['lang'] {
    classes('ArrayList': Name@196) = null // through LazyPackageFragmentScopeForJavaPackage@197
    deserializedPackageScope = Empty@192 // through LazyPackageFragmentScopeForJavaPackage@197
    functions('ArrayList': Name@196) = EmptyList@2[empty] // through LazyPackageFragmentScopeForJavaPackage@197
    memberIndex = computeMemberIndex$1@198 // through LazyPackageFragmentScopeForJavaPackage@197
}

LazyJavaPackageFragment@168['util'] {
    classes('Any': Name@199) = null // through LazyPackageFragmentScopeForJavaPackage@200
    classes('Array': Name@201) = null // through LazyPackageFragmentScopeForJavaPackage@200
    classes('ArrayList': Name@202) = LazyJavaClassDescriptor@10['ArrayList'] // through LazyPackageFragmentScopeForJavaPackage@200
    classes('Int': Name@203) = null // through LazyPackageFragmentScopeForJavaPackage@200
    classes('String': Name@204) = null // through LazyPackageFragmentScopeForJavaPackage@200
    deserializedPackageScope = Empty@192 // through LazyPackageFragmentScopeForJavaPackage@200
    functions('ArrayList': Name@196) = EmptyList@2[empty] // through LazyPackageFragmentScopeForJavaPackage@200
    memberIndex = computeMemberIndex$1@205 // through LazyPackageFragmentScopeForJavaPackage@200
}

LazyJavaTypeParameterDescriptor@43['E'] {
    defaultType = JetTypeImpl@206['E']
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@86
    upperBounds = LinkedHashSet@207[1] { NullableType@208 }
}

LazyJavaTypeParameterDescriptor@38['E'] {
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@94
}

LazyJavaTypeParameterDescriptor@34['E'] {
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@90
}

LazyJavaTypeParameterResolver@209 {
    resolve(JavaTypeParameterImpl@210['E']) = LazyJavaTypeParameterDescriptor@34['E']
}

LazyJavaTypeParameterResolver@211 {
    resolve(JavaTypeParameterImpl@212['E']) = LazyJavaTypeParameterDescriptor@38['E']
}

LazyJavaTypeParameterResolver@213 {
    resolve(JavaTypeParameterImpl@214['E']) = LazyJavaTypeParameterDescriptor@43['E']
}

ResolutionTaskHolder@215 {
    <name not found> = ArrayList@216[1] { ResolutionCandidate@217 }
    <name not found> = ArrayList@218[1] { ResolutionCandidate@217 }
}

ResolutionTaskHolder@219 {
    <name not found> = ArrayList@220[1] { ResolutionCandidate@221 }
    <name not found> = ArrayList@222[1] { ResolutionCandidate@221 }
}

ResolutionTaskHolder@223 {
    <name not found> = ArrayList@224[3] { ResolutionCandidate@225, ResolutionCandidate@226, ResolutionCandidate@227 }
    <name not found> = ArrayList@228[3] { ResolutionCandidate@225, ResolutionCandidate@226, ResolutionCandidate@227 }
    <name not found> = EmptyList@2[empty]
    <name not found> = EmptyList@2[empty]
    <name not found> = EmptyList@2[empty]
    <name not found> = EmptyList@2[empty]
}
