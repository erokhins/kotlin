LazyJavaClassDescriptor@0['AbstractCollection'] {
    defaultType = JetTypeImpl@1['AbstractCollection<1>']
    functions('toArray': Name@2) = ArrayList@3[2] { JavaMethodDescriptor@4['toArray'], JavaMethodDescriptor@5['toArray'] } // through LazyJavaClassMemberScope@6
    memberIndex = computeMemberIndex$1@7 // through LazyJavaClassMemberScope@6
    thisAsReceiverParameter = LazyClassReceiverParameterDescriptor@8['<this>']
    typeConstructor = LazyJavaClassTypeConstructor@9['AbstractCollection']
}

LazyJavaClassDescriptor@10['AbstractList'] {
    defaultType = JetTypeImpl@11['AbstractList<1>']
    functions('toArray': Name@2) = ArrayList@12[2] { JavaMethodDescriptor@13['toArray'], JavaMethodDescriptor@14['toArray'] } // through LazyJavaClassMemberScope@15
    memberIndex = computeMemberIndex$1@16 // through LazyJavaClassMemberScope@15
    typeConstructor = LazyJavaClassTypeConstructor@17['AbstractList']
}

LazyJavaClassDescriptor@18['ArrayList'] {
    constructors = ArrayList@19[3] { JavaConstructorDescriptor@20['<init>'], JavaConstructorDescriptor@21['<init>'], JavaConstructorDescriptor@22['<init>'] } // through LazyJavaClassMemberScope@23
    defaultType = JetTypeImpl@24['ArrayList<1>']
    enumEntryIndex = LinkedHashMap@25 // through LazyJavaClassMemberScope@23
    functionTypeForSamInterface = null
    functions('toArray': Name@26) = ArrayList@27[2] { JavaMethodDescriptor@28['toArray'], JavaMethodDescriptor@29['toArray'] } // through LazyJavaClassMemberScope@23
    memberIndex = computeMemberIndex$1@30 // through LazyJavaClassMemberScope@23
    nestedClassIndex = LinkedHashMap@31 // through LazyJavaClassMemberScope@23
    nestedClasses('toArray': Name@26) = null // through LazyJavaClassMemberScope@23
    thisAsReceiverParameter = LazyClassReceiverParameterDescriptor@32['<this>']
    typeConstructor = LazyJavaClassTypeConstructor@33['ArrayList']
}

LazyJavaClassDescriptor@34['RandomAccess'] {
    functions('toArray': Name@2) = EmptyList@35[empty] // through LazyJavaClassMemberScope@36
    memberIndex = computeMemberIndex$1@37 // through LazyJavaClassMemberScope@36
    typeConstructor = LazyJavaClassTypeConstructor@38['RandomAccess']
}

LazyJavaClassDescriptor@39['Serializable'] {
    functions('toArray': Name@2) = EmptyList@35[empty] // through LazyJavaClassMemberScope@40
    memberIndex = computeMemberIndex$1@41 // through LazyJavaClassMemberScope@40
    typeConstructor = LazyJavaClassTypeConstructor@42['Serializable']
}

LazyJavaClassTypeConstructor@9['AbstractCollection'] {
    parameters = ArrayList@43[1] { LazyJavaTypeParameterDescriptor@44['E'] }
    supertypes = ArrayList@45[1] { LazyJavaClassifierType@46['Collection<E>'] }
}

LazyJavaClassTypeConstructor@17['AbstractList'] {
    parameters = ArrayList@47[1] { LazyJavaTypeParameterDescriptor@48['E'] }
    supertypes = ArrayList@49[2] { LazyJavaClassifierType@50['AbstractCollection<E>'], LazyJavaClassifierType@51['List<E>'] }
}

LazyJavaClassTypeConstructor@33['ArrayList'] {
    parameters = ArrayList@52[1] { LazyJavaTypeParameterDescriptor@53['E'] }
    supertypes = ArrayList@54[5] { LazyJavaClassifierType@55['AbstractList<E>'], LazyJavaClassifierType@56['List<E>'], LazyJavaClassifierType@57['RandomAccess'], ... }
}

LazyJavaClassTypeConstructor@38['RandomAccess'] {
    parameters = ArrayList@58[empty]
    supertypes = ArrayList@59[1] { JetTypeImpl@60['Any'] }
}

LazyJavaClassTypeConstructor@42['Serializable'] {
    parameters = ArrayList@61[empty]
    supertypes = ArrayList@62[1] { JetTypeImpl@60['Any'] }
}

LazyJavaClassifierType@50['AbstractCollection<E>'] {
    arguments = ArrayList@63[1] { TypeProjectionImpl@64 }
    classifier = JavaClassImpl@65['AbstractCollection']
    memberScope = SubstitutingScope@66
    nullable = 'false': Boolean@67
    typeConstructor = LazyJavaClassTypeConstructor@9['AbstractCollection']
}

LazyJavaClassifierType@55['AbstractList<E>'] {
    arguments = ArrayList@68[1] { TypeProjectionImpl@69 }
    classifier = JavaClassImpl@70['AbstractList']
    memberScope = SubstitutingScope@71
    typeConstructor = LazyJavaClassTypeConstructor@17['AbstractList']
}

LazyJavaClassifierType@72['Cloneable'] {
    arguments = ArrayList@73[empty]
    classifier = JavaClassImpl@74['Cloneable']
    memberScope = DeserializedClassMemberScope@75
    typeConstructor = DeserializedClassTypeConstructor@76
}

LazyJavaClassifierType@77['Collection<? extends E>'] {
    arguments = ArrayList@78[1] { TypeProjectionImpl@79 }
    classifier = JavaClassImpl@80['Collection']
    memberScope = SubstitutingScope@81
    nullable = 'false': Boolean@67
    typeConstructor = DeserializedClassTypeConstructor@82
}

LazyJavaClassifierType@83['Collection<? extends E>'] {
    arguments = ArrayList@84[1] { TypeProjectionImpl@85 }
    classifier = JavaClassImpl@80['Collection']
    memberScope = SubstitutingScope@86
    nullable = 'true': Boolean@87
    typeConstructor = DeserializedClassTypeConstructor@88
}

LazyJavaClassifierType@46['Collection<E>'] {
    arguments = ArrayList@89[1] { TypeProjectionImpl@90 }
    classifier = JavaClassImpl@91['Collection']
    memberScope = SubstitutingScope@92
    typeConstructor = DeserializedClassTypeConstructor@82
}

LazyJavaClassifierType@93['E'] {
    arguments = ArrayList@94[empty]
    classifier = JavaTypeParameterImpl@95['E']
    memberScope = LazyScopeAdapter@96
    nullable = 'false': Boolean@67
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@97
}

LazyJavaClassifierType@98['E'] {
    arguments = ArrayList@99[empty]
    classifier = JavaTypeParameterImpl@100['E']
    nullable = 'false': Boolean@67
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@101
}

LazyJavaClassifierType@102['E'] {
    arguments = ArrayList@103[empty]
    classifier = JavaTypeParameterImpl@104['E']
    nullable = 'false': Boolean@67
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@97
}

LazyJavaClassifierType@105['E'] {
    arguments = ArrayList@106[empty]
    classifier = JavaTypeParameterImpl@107['E']
    nullable = 'false': Boolean@67
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@101
}

LazyJavaClassifierType@108['E'] {
    arguments = ArrayList@109[empty]
    classifier = JavaTypeParameterImpl@110['E']
    nullable = 'false': Boolean@67
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@101
}

LazyJavaClassifierType@111['E'] {
    arguments = ArrayList@112[empty]
    classifier = JavaTypeParameterImpl@113['E']
    nullable = 'false': Boolean@67
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@101
}

LazyJavaClassifierType@114['E'] {
    arguments = ArrayList@115[empty]
    classifier = JavaTypeParameterImpl@116['E']
    nullable = 'false': Boolean@67
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@117
}

LazyJavaClassifierType@118['E'] {
    arguments = ArrayList@119[empty]
    classifier = JavaTypeParameterImpl@95['E']
    nullable = 'true': Boolean@87
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@97
}

LazyJavaClassifierType@120['E'] {
    arguments = ArrayList@121[empty]
    classifier = JavaTypeParameterImpl@113['E']
    nullable = 'true': Boolean@87
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@101
}

LazyJavaClassifierType@122['E'] {
    arguments = ArrayList@123[empty]
    classifier = JavaTypeParameterImpl@104['E']
    nullable = 'true': Boolean@87
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@97
}

LazyJavaClassifierType@124['E'] {
    arguments = ArrayList@125[empty]
    classifier = JavaTypeParameterImpl@107['E']
    nullable = 'true': Boolean@87
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@101
}

LazyJavaClassifierType@126['E'] {
    arguments = ArrayList@127[empty]
    classifier = JavaTypeParameterImpl@116['E']
    nullable = 'true': Boolean@87
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@117
}

LazyJavaClassifierType@128['E'] {
    arguments = ArrayList@129[empty]
    classifier = JavaTypeParameterImpl@100['E']
    nullable = 'true': Boolean@87
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@101
}

LazyJavaClassifierType@130['E'] {
    arguments = ArrayList@131[empty]
    classifier = JavaTypeParameterImpl@110['E']
    nullable = 'true': Boolean@87
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@101
}

LazyJavaClassifierType@51['List<E>'] {
    arguments = ArrayList@132[1] { TypeProjectionImpl@133 }
    classifier = JavaClassImpl@134['List']
    memberScope = SubstitutingScope@135
    nullable = 'false': Boolean@67
    typeConstructor = DeserializedClassTypeConstructor@136
}

LazyJavaClassifierType@56['List<E>'] {
    arguments = ArrayList@137[1] { TypeProjectionImpl@138 }
    classifier = JavaClassImpl@139['List']
    memberScope = SubstitutingScope@140
    typeConstructor = DeserializedClassTypeConstructor@136
}

LazyJavaClassifierType@141['Object'] {
    arguments = ArrayList@142[empty]
    classifier = JavaClassImpl@143['Object']
    memberScope = DeserializedClassMemberScope@144
    nullable = 'false': Boolean@67
    typeConstructor = DeserializedClassTypeConstructor@145
}

LazyJavaClassifierType@146['Object'] {
    arguments = ArrayList@147[empty]
    classifier = JavaClassImpl@148['Object']
    memberScope = DeserializedClassMemberScope@144
    nullable = 'false': Boolean@67
    typeConstructor = DeserializedClassTypeConstructor@145
}

LazyJavaClassifierType@149['Object'] {
    arguments = ArrayList@150[empty]
    classifier = JavaClassImpl@148['Object']
    memberScope = DeserializedClassMemberScope@144
    nullable = 'true': Boolean@87
    typeConstructor = DeserializedClassTypeConstructor@145
}

LazyJavaClassifierType@151['Object'] {
    arguments = ArrayList@152[empty]
    classifier = JavaClassImpl@143['Object']
    memberScope = DeserializedClassMemberScope@144
    nullable = 'true': Boolean@87
    typeConstructor = DeserializedClassTypeConstructor@145
}

LazyJavaClassifierType@153['Object'] {
    classifier = JavaClassImpl@154['Object']
    typeConstructor = DeserializedClassTypeConstructor@145
}

LazyJavaClassifierType@155['Object'] {
    classifier = JavaClassImpl@156['Object']
    typeConstructor = DeserializedClassTypeConstructor@145
}

LazyJavaClassifierType@157['Object'] {
    classifier = JavaClassImpl@158['Object']
    typeConstructor = DeserializedClassTypeConstructor@145
}

LazyJavaClassifierType@57['RandomAccess'] {
    arguments = ArrayList@159[empty]
    classifier = JavaClassImpl@160['RandomAccess']
    memberScope = LazyJavaClassMemberScope@36
    typeConstructor = LazyJavaClassTypeConstructor@38['RandomAccess']
}

LazyJavaClassifierType@161['Serializable'] {
    arguments = ArrayList@162[empty]
    classifier = JavaClassImpl@163['Serializable']
    memberScope = LazyJavaClassMemberScope@40
    typeConstructor = LazyJavaClassTypeConstructor@42['Serializable']
}

LazyJavaClassifierType@164['T'] {
    arguments = ArrayList@165[empty]
    classifier = JavaTypeParameterImpl@166['T']
    nullable = 'false': Boolean@67
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@167
}

LazyJavaClassifierType@168['T'] {
    arguments = ArrayList@169[empty]
    classifier = JavaTypeParameterImpl@170['T']
    nullable = 'false': Boolean@67
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@167
}

LazyJavaClassifierType@171['T'] {
    arguments = ArrayList@172[empty]
    classifier = JavaTypeParameterImpl@173['T']
    nullable = 'false': Boolean@67
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@174
}

LazyJavaClassifierType@175['T'] {
    arguments = ArrayList@176[empty]
    classifier = JavaTypeParameterImpl@177['T']
    nullable = 'false': Boolean@67
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@174
}

LazyJavaClassifierType@178['T'] {
    arguments = ArrayList@179[empty]
    classifier = JavaTypeParameterImpl@166['T']
    nullable = 'true': Boolean@87
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@167
}

LazyJavaClassifierType@180['T'] {
    arguments = ArrayList@181[empty]
    classifier = JavaTypeParameterImpl@177['T']
    nullable = 'true': Boolean@87
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@174
}

LazyJavaClassifierType@182['T'] {
    arguments = ArrayList@183[empty]
    classifier = JavaTypeParameterImpl@173['T']
    nullable = 'true': Boolean@87
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@174
}

LazyJavaClassifierType@184['T'] {
    arguments = ArrayList@185[empty]
    classifier = JavaTypeParameterImpl@170['T']
    nullable = 'true': Boolean@87
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@167
}

LazyJavaPackageFragmentProvider@186 {
    packageFragments('<root>': FqName@187) = LazyJavaPackageFragment@188['<root>']
    packageFragments('Array': FqName@189) = null
    packageFragments('ArrayList': FqName@190) = null
    packageFragments('Int': FqName@191) = null
    packageFragments('String': FqName@192) = null
    packageFragments('java': FqName@193) = LazyJavaPackageFragment@194['java']
    packageFragments('java.io': FqName@195) = LazyJavaPackageFragment@196['io']
    packageFragments('java.lang': FqName@197) = LazyJavaPackageFragment@198['lang']
    packageFragments('java.lang.Array': FqName@199) = null
    packageFragments('java.lang.ArrayList': FqName@200) = null
    packageFragments('java.lang.Int': FqName@201) = null
    packageFragments('java.lang.String': FqName@202) = null
    packageFragments('java.util': FqName@203) = LazyJavaPackageFragment@204['util']
    packageFragments('java.util.Array': FqName@205) = null
    packageFragments('java.util.ArrayList': FqName@206) = null
    packageFragments('java.util.Int': FqName@207) = null
    packageFragments('java.util.String': FqName@208) = null
    packageFragments('kotlin': FqName@209) = null
    packageFragments('kotlin.Array': FqName@210) = null
    packageFragments('kotlin.ArrayList': FqName@211) = null
    packageFragments('kotlin.Int': FqName@212) = null
    packageFragments('kotlin.String': FqName@213) = null
    packageFragments('kotlin.io': FqName@214) = null
    packageFragments('kotlin.jvm': FqName@215) = null
    packageFragments('kotlin1': FqName@216) = null
    packageFragments('kotlin1.Array': FqName@217) = null
    packageFragments('kotlin1.ArrayList': FqName@218) = null
    packageFragments('kotlin1.Int': FqName@219) = null
    packageFragments('kotlin1.String': FqName@220) = null
    topLevelClasses(JavaClassImpl@65['AbstractCollection']) = LazyJavaClassDescriptor@0['AbstractCollection']
    topLevelClasses(JavaClassImpl@70['AbstractList']) = LazyJavaClassDescriptor@10['AbstractList']
    topLevelClasses(JavaClassImpl@221['ArrayList']) = LazyJavaClassDescriptor@18['ArrayList']
    topLevelClasses(JavaClassImpl@160['RandomAccess']) = LazyJavaClassDescriptor@34['RandomAccess']
    topLevelClasses(JavaClassImpl@163['Serializable']) = LazyJavaClassDescriptor@39['Serializable']
}

LazyJavaPackageFragment@194['java'] {
    classes('lang': Name@222) = null // through LazyPackageFragmentScopeForJavaPackage@223
    classes('util': Name@224) = null // through LazyPackageFragmentScopeForJavaPackage@223
    deserializedPackageScope = Empty@225 // through LazyPackageFragmentScopeForJavaPackage@223
    functions('lang': Name@226) = EmptyList@35[empty] // through LazyPackageFragmentScopeForJavaPackage@223
    functions('util': Name@227) = EmptyList@35[empty] // through LazyPackageFragmentScopeForJavaPackage@223
    memberIndex = computeMemberIndex$1@228 // through LazyPackageFragmentScopeForJavaPackage@223
}

LazyJavaPackageFragment@198['lang'] {
    classes('Array': Name@229) = null // through LazyPackageFragmentScopeForJavaPackage@230
    classes('ArrayList': Name@231) = null // through LazyPackageFragmentScopeForJavaPackage@230
    deserializedPackageScope = Empty@225 // through LazyPackageFragmentScopeForJavaPackage@230
    functions('Array': Name@229) = EmptyList@35[empty] // through LazyPackageFragmentScopeForJavaPackage@230
    functions('ArrayList': Name@231) = EmptyList@35[empty] // through LazyPackageFragmentScopeForJavaPackage@230
    memberIndex = computeMemberIndex$1@232 // through LazyPackageFragmentScopeForJavaPackage@230
}

LazyJavaPackageFragment@204['util'] {
    classes('Array': Name@233) = null // through LazyPackageFragmentScopeForJavaPackage@234
    classes('ArrayList': Name@235) = LazyJavaClassDescriptor@18['ArrayList'] // through LazyPackageFragmentScopeForJavaPackage@234
    classes('Int': Name@236) = null // through LazyPackageFragmentScopeForJavaPackage@234
    classes('String': Name@237) = null // through LazyPackageFragmentScopeForJavaPackage@234
    deserializedPackageScope = Empty@225 // through LazyPackageFragmentScopeForJavaPackage@234
    functions('Array': Name@229) = EmptyList@35[empty] // through LazyPackageFragmentScopeForJavaPackage@234
    functions('ArrayList': Name@231) = EmptyList@35[empty] // through LazyPackageFragmentScopeForJavaPackage@234
    memberIndex = computeMemberIndex$1@238 // through LazyPackageFragmentScopeForJavaPackage@234
}

LazyJavaTypeParameterDescriptor@53['E'] {
    defaultType = JetTypeImpl@239['E']
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@101
    upperBounds = LinkedHashSet@240[1] { NullableType@241 }
}

LazyJavaTypeParameterDescriptor@44['E'] {
    defaultType = JetTypeImpl@242['E']
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@117
}

LazyJavaTypeParameterDescriptor@48['E'] {
    defaultType = JetTypeImpl@243['E']
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@97
}

LazyJavaTypeParameterDescriptor@244['T'] {
    defaultType = JetTypeImpl@245['T']
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@174
    upperBounds = LinkedHashSet@246[1] { NullableType@247 }
    upperBoundsAsType = NullableType@247
}

LazyJavaTypeParameterDescriptor@248['T'] {
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@167
    upperBounds = LinkedHashSet@249[1] { NullableType@250 }
    upperBoundsAsType = NullableType@250
}

LazyJavaTypeParameterResolver@251 {
    resolve(JavaTypeParameterImpl@252['E']) = LazyJavaTypeParameterDescriptor@48['E']
}

LazyJavaTypeParameterResolver@253 {
    resolve(JavaTypeParameterImpl@254['E']) = LazyJavaTypeParameterDescriptor@53['E']
}

LazyJavaTypeParameterResolver@255 {
    resolve(JavaTypeParameterImpl@256['E']) = LazyJavaTypeParameterDescriptor@44['E']
}

LazyJavaTypeParameterResolver@257 {
    resolve(JavaTypeParameterImpl@258['T']) = LazyJavaTypeParameterDescriptor@248['T']
}

LazyJavaTypeParameterResolver@259 {
    resolve(JavaTypeParameterImpl@260['T']) = LazyJavaTypeParameterDescriptor@244['T']
}

ResolutionTaskHolder@261 {
    <name not found> = ArrayList@262[1] { ResolutionCandidate@263 }
    <name not found> = ArrayList@264[1] { ResolutionCandidate@263 }
    <name not found> = EmptyList@35[empty]
    <name not found> = EmptyList@35[empty]
    <name not found> = EmptyList@35[empty]
    <name not found> = EmptyList@35[empty]
}

ResolutionTaskHolder@265 {
    <name not found> = ArrayList@266[1] { ResolutionCandidate@267 }
    <name not found> = ArrayList@268[1] { ResolutionCandidate@267 }
}

ResolutionTaskHolder@269 {
    <name not found> = ArrayList@270[2] { ResolutionCandidate@271, ResolutionCandidate@272 }
    <name not found> = ArrayList@273[2] { ResolutionCandidate@271, ResolutionCandidate@272 }
}

ResolutionTaskHolder@274 {
    <name not found> = ArrayList@275[3] { ResolutionCandidate@276, ResolutionCandidate@277, ResolutionCandidate@278 }
    <name not found> = ArrayList@279[3] { ResolutionCandidate@276, ResolutionCandidate@277, ResolutionCandidate@278 }
    <name not found> = EmptyList@35[empty]
    <name not found> = EmptyList@35[empty]
    <name not found> = EmptyList@35[empty]
    <name not found> = EmptyList@35[empty]
}
