LazyJavaClassDescriptor@0['Comparator'] {
    allDescriptors = ArrayList@1[4] { JavaMethodDescriptor@2['compare'], DeserializedSimpleFunctionDescriptor@3['hashCode'], DeserializedSimpleFunctionDescriptor@4['toString'], ... } // through LazyJavaClassMemberScope@5
    annotations = LazyJavaAnnotations@6
    constructors = stdlib_emptyListClass@7[empty] // through LazyJavaClassMemberScope@5
    defaultType = JetTypeImpl@8['Comparator<1>']
    enumEntryIndex = LinkedHashMap@9 // through LazyJavaClassMemberScope@5
    functionTypeForSamInterface = JetTypeImpl@10['Function2<3>']
    functions('clone': Name@11) = EmptyList@12[empty] // through LazyJavaClassMemberScope@5
    functions('compare': Name@13) = ArrayList@14[1] { JavaMethodDescriptor@2['compare'] } // through LazyJavaClassMemberScope@5
    functions('equals': Name@15) = ArrayList@16[1] { DeserializedSimpleFunctionDescriptor@17['equals'] } // through LazyJavaClassMemberScope@5
    functions('finalize': Name@18) = EmptyList@12[empty] // through LazyJavaClassMemberScope@5
    functions('getClass': Name@19) = EmptyList@12[empty] // through LazyJavaClassMemberScope@5
    functions('hashCode': Name@20) = ArrayList@21[1] { DeserializedSimpleFunctionDescriptor@3['hashCode'] } // through LazyJavaClassMemberScope@5
    functions('notify': Name@22) = EmptyList@12[empty] // through LazyJavaClassMemberScope@5
    functions('notifyAll': Name@23) = EmptyList@12[empty] // through LazyJavaClassMemberScope@5
    functions('toString': Name@24) = ArrayList@25[1] { DeserializedSimpleFunctionDescriptor@4['toString'] } // through LazyJavaClassMemberScope@5
    functions('wait': Name@26) = EmptyList@12[empty] // through LazyJavaClassMemberScope@5
    memberIndex = computeMemberIndex$1@27 // through LazyJavaClassMemberScope@5
    nestedClassIndex = LinkedHashMap@28 // through LazyJavaClassMemberScope@5
    thisAsReceiverParameter = LazyClassReceiverParameterDescriptor@29['<this>']
    typeConstructor = LazyJavaClassTypeConstructor@30['Comparator']
}

LazyJavaClassDescriptor@31['J'] {
    enumEntryIndex = LinkedHashMap@32 // through LazyJavaClassMemberScope@33
    functions('c': Name@34) = ArrayList@35[2] { JavaMethodDescriptor@36['c'], SamAdapterFunctionDescriptor@37['c'] } // through LazyJavaStaticClassScope@38
    functions('c': Name@34) = EmptyList@12[empty] // through LazyJavaClassMemberScope@33
    memberIndex = computeMemberIndex$1@39 // through LazyJavaClassMemberScope@33
    memberIndex = computeMemberIndex$1@40 // through LazyJavaStaticClassScope@38
    nestedClassIndex = LinkedHashMap@41 // through LazyJavaClassMemberScope@33
    nestedClasses('c': Name@34) = null // through LazyJavaClassMemberScope@33
    properties('c': Name@34) = EmptyList@12[empty] // through LazyJavaClassMemberScope@33
    properties('c': Name@34) = EmptyList@12[empty] // through LazyJavaStaticClassScope@38
    typeConstructor = LazyJavaClassTypeConstructor@42['J']
}

LazyJavaClassTypeConstructor@30['Comparator'] {
    parameters = ArrayList@43[1] { LazyJavaTypeParameterDescriptor@44['T'] }
    supertypes = ArrayList@45[1] { JetTypeImpl@46['Any'] }
}

LazyJavaClassTypeConstructor@42['J'] {
    supertypes = ArrayList@47[1] { JetTypeImpl@46['Any'] }
}

LazyJavaClassifierType@48['Comparator<Integer>'] {
    arguments = ArrayList@49[1] { TypeProjectionImpl@50 }
    classifier = JavaClassImpl@51['Comparator']
    nullable = 'false': Boolean@52
    typeConstructor = LazyJavaClassTypeConstructor@30['Comparator']
}

LazyJavaClassifierType@53['Comparator<Integer>'] {
    arguments = ArrayList@54[1] { TypeProjectionImpl@55 }
    classifier = JavaClassImpl@51['Comparator']
    nullable = 'true': Boolean@56
    typeConstructor = LazyJavaClassTypeConstructor@30['Comparator']
}

LazyJavaClassifierType@57['Integer'] {
    arguments = ArrayList@58[empty]
    classifier = JavaClassImpl@59['Integer']
    memberScope = DeserializedClassMemberScope@60
    nullable = 'false': Boolean@52
    typeConstructor = DeserializedClassTypeConstructor@61
}

LazyJavaClassifierType@62['Integer'] {
    arguments = ArrayList@63[empty]
    classifier = JavaClassImpl@64['Integer']
    nullable = 'false': Boolean@52
    typeConstructor = DeserializedClassTypeConstructor@61
}

LazyJavaClassifierType@65['Integer'] {
    arguments = ArrayList@66[empty]
    classifier = JavaClassImpl@64['Integer']
    nullable = 'true': Boolean@56
    typeConstructor = DeserializedClassTypeConstructor@61
}

LazyJavaClassifierType@67['Integer'] {
    arguments = ArrayList@68[empty]
    classifier = JavaClassImpl@59['Integer']
    nullable = 'true': Boolean@56
    typeConstructor = DeserializedClassTypeConstructor@61
}

LazyJavaClassifierType@69['Object'] {
    classifier = JavaClassImpl@70['Object']
    typeConstructor = DeserializedClassTypeConstructor@71
}

LazyJavaClassifierType@72['Object'] {
    classifier = JavaClassImpl@73['Object']
    typeConstructor = DeserializedClassTypeConstructor@71
}

LazyJavaClassifierType@74['T'] {
    arguments = ArrayList@75[empty]
    classifier = JavaTypeParameterImpl@76['T']
    nullable = 'false': Boolean@52
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@77
}

LazyJavaClassifierType@78['T'] {
    arguments = ArrayList@79[empty]
    classifier = JavaTypeParameterImpl@80['T']
    nullable = 'false': Boolean@52
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@77
}

LazyJavaClassifierType@81['T'] {
    arguments = ArrayList@82[empty]
    classifier = JavaTypeParameterImpl@83['T']
    nullable = 'false': Boolean@52
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@77
}

LazyJavaClassifierType@84['T'] {
    arguments = ArrayList@85[empty]
    classifier = JavaTypeParameterImpl@86['T']
    nullable = 'false': Boolean@52
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@77
}

LazyJavaClassifierType@87['T'] {
    arguments = ArrayList@88[empty]
    classifier = JavaTypeParameterImpl@76['T']
    nullable = 'true': Boolean@56
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@77
}

LazyJavaClassifierType@89['T'] {
    arguments = ArrayList@90[empty]
    classifier = JavaTypeParameterImpl@83['T']
    nullable = 'true': Boolean@56
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@77
}

LazyJavaClassifierType@91['T'] {
    arguments = ArrayList@92[empty]
    classifier = JavaTypeParameterImpl@80['T']
    nullable = 'true': Boolean@56
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@77
}

LazyJavaClassifierType@93['T'] {
    arguments = ArrayList@94[empty]
    classifier = JavaTypeParameterImpl@86['T']
    nullable = 'true': Boolean@56
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@77
}

LazyJavaPackageFragmentProvider@95 {
    packageFragments('<root>': FqName@96) = LazyJavaPackageFragment@97['<root>']
    packageFragments('J': FqName@98) = null
    packageFragments('java': FqName@99) = LazyJavaPackageFragment@100['java']
    packageFragments('java.lang': FqName@101) = LazyJavaPackageFragment@102['lang']
    packageFragments('java.lang.J': FqName@103) = null
    packageFragments('java.util': FqName@104) = LazyJavaPackageFragment@105['util']
    packageFragments('java.util.J': FqName@106) = null
    packageFragments('kotlin': FqName@107) = null
    packageFragments('kotlin.J': FqName@108) = null
    packageFragments('kotlin.io': FqName@109) = null
    packageFragments('kotlin.jvm': FqName@110) = null
    packageFragments('p': FqName@111) = LazyJavaPackageFragment@112['p']
    packageFragments('p.J': FqName@113) = null
    topLevelClasses(JavaClassImpl@51['Comparator']) = LazyJavaClassDescriptor@0['Comparator']
    topLevelClasses(JavaClassImpl@114['J']) = LazyJavaClassDescriptor@31['J']
}

LazyJavaPackageFragment@97['<root>'] {
    classes('Comparator': Name@115) = null // through LazyPackageFragmentScopeForJavaPackage@116
    classes('J': Name@117) = null // through LazyPackageFragmentScopeForJavaPackage@116
    classes('java': Name@118) = null // through LazyPackageFragmentScopeForJavaPackage@116
    classes('p': Name@119) = null // through LazyPackageFragmentScopeForJavaPackage@116
    deserializedPackageScope = Empty@120 // through LazyPackageFragmentScopeForJavaPackage@116
    functions('Comparator': Name@115) = EmptyList@12[empty] // through LazyPackageFragmentScopeForJavaPackage@116
    functions('java': Name@121) = EmptyList@12[empty] // through LazyPackageFragmentScopeForJavaPackage@116
    functions('p': Name@122) = EmptyList@12[empty] // through LazyPackageFragmentScopeForJavaPackage@116
    memberIndex = computeMemberIndex$1@123 // through LazyPackageFragmentScopeForJavaPackage@116
}

LazyJavaPackageFragment@100['java'] {
    classes('lang': Name@124) = null // through LazyPackageFragmentScopeForJavaPackage@125
    classes('util': Name@126) = null // through LazyPackageFragmentScopeForJavaPackage@125
    deserializedPackageScope = Empty@120 // through LazyPackageFragmentScopeForJavaPackage@125
    functions('lang': Name@127) = EmptyList@12[empty] // through LazyPackageFragmentScopeForJavaPackage@125
    functions('util': Name@128) = EmptyList@12[empty] // through LazyPackageFragmentScopeForJavaPackage@125
    memberIndex = computeMemberIndex$1@129 // through LazyPackageFragmentScopeForJavaPackage@125
}

LazyJavaPackageFragment@102['lang'] {
    classes('Comparator': Name@115) = null // through LazyPackageFragmentScopeForJavaPackage@130
    deserializedPackageScope = Empty@120 // through LazyPackageFragmentScopeForJavaPackage@130
    functions('Comparator': Name@115) = EmptyList@12[empty] // through LazyPackageFragmentScopeForJavaPackage@130
    memberIndex = computeMemberIndex$1@131 // through LazyPackageFragmentScopeForJavaPackage@130
}

LazyJavaPackageFragment@112['p'] {
    classes('Comparator': Name@115) = null // through LazyPackageFragmentScopeForJavaPackage@132
    classes('J': Name@117) = LazyJavaClassDescriptor@31['J'] // through LazyPackageFragmentScopeForJavaPackage@132
    deserializedPackageScope = Empty@120 // through LazyPackageFragmentScopeForJavaPackage@132
    functions('Comparator': Name@115) = EmptyList@12[empty] // through LazyPackageFragmentScopeForJavaPackage@132
    memberIndex = computeMemberIndex$1@133 // through LazyPackageFragmentScopeForJavaPackage@132
}

LazyJavaPackageFragment@105['util'] {
    classes('Comparator': Name@115) = LazyJavaClassDescriptor@0['Comparator'] // through LazyPackageFragmentScopeForJavaPackage@134
    deserializedPackageScope = Empty@120 // through LazyPackageFragmentScopeForJavaPackage@134
    functions('Comparator': Name@115) = ArrayList@135[1] { SamConstructorDescriptor@136['Comparator'] } // through LazyPackageFragmentScopeForJavaPackage@134
    memberIndex = computeMemberIndex$1@137 // through LazyPackageFragmentScopeForJavaPackage@134
}

LazyJavaTypeParameterDescriptor@44['T'] {
    defaultType = JetTypeImpl@138['T']
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@77
    upperBounds = LinkedHashSet@139[1] { NullableType@140 }
}

LazyJavaTypeParameterResolver@141 {
    resolve(JavaTypeParameterImpl@142['T']) = LazyJavaTypeParameterDescriptor@44['T']
}

LazyJavaTypeParameterResolver@143 {
    resolve(JavaTypeParameterImpl@86['T']) = null
}

LazyJavaTypeParameterResolver@144 {
    resolve(JavaTypeParameterImpl@76['T']) = null
}

ResolutionTaskHolder@145 {
    <name not found> = ArrayList@146[1] { ResolutionCandidate@147 }
    <name not found> = ArrayList@148[1] { ResolutionCandidate@147 }
    <name not found> = EmptyList@12[empty]
    <name not found> = EmptyList@12[empty]
    <name not found> = EmptyList@12[empty]
    <name not found> = EmptyList@12[empty]
    <name not found> = EmptyList@12[empty]
    <name not found> = EmptyList@12[empty]
    <name not found> = EmptyList@12[empty]
    <name not found> = EmptyList@12[empty]
    <name not found> = EmptyList@12[empty]
}

ResolutionTaskHolder@149 {
    <name not found> = ArrayList@150[1] { ResolutionCandidate@151 }
    <name not found> = ArrayList@152[1] { ResolutionCandidate@151 }
}

ResolutionTaskHolder@153 {
    <name not found> = ArrayList@154[1] { ResolutionCandidate@155 }
    <name not found> = ArrayList@156[1] { ResolutionCandidate@155 }
}

ResolutionTaskHolder@157 {
    <name not found> = ArrayList@158[1] { ResolutionCandidate@159 }
    <name not found> = ArrayList@160[2] { ResolutionCandidate@159, ResolutionCandidate@161 }
    <name not found> = EmptyList@12[empty]
    <name not found> = EmptyList@12[empty]
    <name not found> = EmptyList@12[empty]
    <name not found> = EmptyList@12[empty]
}

ResolutionTaskHolder@162 {
    <name not found> = ArrayList@163[8] { ResolutionCandidate@164, ResolutionCandidate@165, ResolutionCandidate@166, ... }
    <name not found> = ArrayList@167[8] { ResolutionCandidate@164, ResolutionCandidate@165, ResolutionCandidate@166, ... }
}

ResolutionTaskHolder@168 {
    <name not found> = EmptyList@12[empty]
    <name not found> = EmptyList@12[empty]
    <name not found> = EmptyList@12[empty]
    <name not found> = EmptyList@12[empty]
    <name not found> = EmptyList@12[empty]
    <name not found> = EmptyList@12[empty]
    <name not found> = EmptyList@12[empty]
    <name not found> = EmptyList@12[empty]
    <name not found> = EmptyList@12[empty]
    <name not found> = EmptyList@12[empty]
}
