DescriptorResolver@0 {
    <name not found> = JetTypeImpl@1['Function1<2>']
}

LazyJavaClassDescriptor@2['J'] {
    enumEntryIndex = LinkedHashMap@3 // through LazyJavaClassMemberScope@4
    functions('j': Name@5) = ArrayList@6[1] { JavaMethodDescriptor@7['j'] } // through LazyJavaStaticClassScope@8
    functions('j': Name@5) = EmptyList@9[empty] // through LazyJavaClassMemberScope@4
    memberIndex = computeMemberIndex$1@10 // through LazyJavaClassMemberScope@4
    memberIndex = computeMemberIndex$1@11 // through LazyJavaStaticClassScope@8
    nestedClassIndex = LinkedHashMap@12 // through LazyJavaClassMemberScope@4
    nestedClasses('j': Name@5) = null // through LazyJavaClassMemberScope@4
    properties('j': Name@5) = EmptyList@9[empty] // through LazyJavaClassMemberScope@4
    properties('j': Name@5) = EmptyList@9[empty] // through LazyJavaStaticClassScope@8
    typeConstructor = LazyJavaClassTypeConstructor@13['J']
}

LazyJavaClassTypeConstructor@13['J'] {
    parameters = ArrayList@14[1] { LazyJavaTypeParameterDescriptor@15['G'] }
    supertypes = ArrayList@16[1] { JetTypeImpl@17['Any'] }
}

LazyJavaClassifierType@18['J<String>'] {
    arguments = ArrayList@19[1] { TypeProjectionImpl@20 }
    classifier = JavaClassImpl@21['J']
    nullable = 'false': Boolean@22
    typeConstructor = LazyJavaClassTypeConstructor@13['J']
}

LazyJavaClassifierType@23['J<String>'] {
    arguments = ArrayList@24[1] { TypeProjectionImpl@25 }
    classifier = JavaClassImpl@21['J']
    nullable = 'true': Boolean@26
    typeConstructor = LazyJavaClassTypeConstructor@13['J']
}

LazyJavaClassifierType@27['Object'] {
    classifier = JavaClassImpl@28['Object']
    typeConstructor = DeserializedClassTypeConstructor@29
}

LazyJavaClassifierType@30['String'] {
    arguments = ArrayList@31[empty]
    classifier = JavaClassImpl@32['String']
    nullable = 'false': Boolean@22
    typeConstructor = DeserializedClassTypeConstructor@33
}

LazyJavaClassifierType@34['String'] {
    arguments = ArrayList@35[empty]
    classifier = JavaClassImpl@36['String']
    nullable = 'false': Boolean@22
    typeConstructor = DeserializedClassTypeConstructor@33
}

LazyJavaClassifierType@37['String'] {
    arguments = ArrayList@38[empty]
    classifier = JavaClassImpl@32['String']
    nullable = 'true': Boolean@26
    typeConstructor = DeserializedClassTypeConstructor@33
}

LazyJavaClassifierType@39['String'] {
    arguments = ArrayList@40[empty]
    classifier = JavaClassImpl@36['String']
    nullable = 'true': Boolean@26
    typeConstructor = DeserializedClassTypeConstructor@33
}

LazyJavaPackageFragmentProvider@41 {
    packageFragments('<root>': FqName@42) = LazyJavaPackageFragment@43['<root>']
    packageFragments('J': FqName@44) = null
    packageFragments('String': FqName@45) = null
    packageFragments('T': FqName@46) = null
    packageFragments('Unit': FqName@47) = null
    packageFragments('_': FqName@48) = null
    packageFragments('java': FqName@49) = LazyJavaPackageFragment@50['java']
    packageFragments('java.lang': FqName@51) = LazyJavaPackageFragment@52['lang']
    packageFragments('java.lang.J': FqName@53) = null
    packageFragments('java.lang.String': FqName@54) = null
    packageFragments('java.lang.T': FqName@55) = null
    packageFragments('java.lang.Unit': FqName@56) = null
    packageFragments('java.lang._': FqName@57) = null
    packageFragments('kotlin': FqName@58) = null
    packageFragments('kotlin.J': FqName@59) = null
    packageFragments('kotlin.String': FqName@60) = null
    packageFragments('kotlin.T': FqName@61) = null
    packageFragments('kotlin.Unit': FqName@62) = null
    packageFragments('kotlin._': FqName@63) = null
    packageFragments('kotlin.io': FqName@64) = null
    packageFragments('kotlin.jvm': FqName@65) = null
    packageFragments('p': FqName@66) = LazyJavaPackageFragment@67['p']
    packageFragments('p.J': FqName@68) = null
    packageFragments('p.String': FqName@69) = null
    packageFragments('tests': FqName@70) = null
    packageFragments('tests._checkType': FqName@71) = null
    packageFragments('tests._checkType.J': FqName@72) = null
    packageFragments('tests._checkType.String': FqName@73) = null
    packageFragments('tests._checkType.T': FqName@74) = null
    packageFragments('tests._checkType.Unit': FqName@75) = null
    packageFragments('tests._checkType._': FqName@76) = null
    topLevelClasses(JavaClassImpl@77['J']) = LazyJavaClassDescriptor@2['J']
}

LazyJavaPackageFragment@43['<root>'] {
    classes('J': Name@78) = null // through LazyPackageFragmentScopeForJavaPackage@79
    classes('String': Name@80) = null // through LazyPackageFragmentScopeForJavaPackage@79
    classes('p': Name@81) = null // through LazyPackageFragmentScopeForJavaPackage@79
    classes('tests': Name@82) = null // through LazyPackageFragmentScopeForJavaPackage@79
    deserializedPackageScope = Empty@83 // through LazyPackageFragmentScopeForJavaPackage@79
    functions('p': Name@84) = EmptyList@9[empty] // through LazyPackageFragmentScopeForJavaPackage@79
    functions('tests': Name@85) = EmptyList@9[empty] // through LazyPackageFragmentScopeForJavaPackage@79
    memberIndex = computeMemberIndex$1@86 // through LazyPackageFragmentScopeForJavaPackage@79
}

LazyJavaPackageFragment@50['java'] {
    classes('lang': Name@87) = null // through LazyPackageFragmentScopeForJavaPackage@88
    deserializedPackageScope = Empty@83 // through LazyPackageFragmentScopeForJavaPackage@88
    functions('lang': Name@89) = EmptyList@9[empty] // through LazyPackageFragmentScopeForJavaPackage@88
    memberIndex = computeMemberIndex$1@90 // through LazyPackageFragmentScopeForJavaPackage@88
}

LazyJavaPackageFragment@52['lang'] {
    deserializedPackageScope = Empty@83 // through LazyPackageFragmentScopeForJavaPackage@91
}

LazyJavaPackageFragment@67['p'] {
    classes('J': Name@78) = LazyJavaClassDescriptor@2['J'] // through LazyPackageFragmentScopeForJavaPackage@92
    classes('String': Name@80) = null // through LazyPackageFragmentScopeForJavaPackage@92
    deserializedPackageScope = Empty@83 // through LazyPackageFragmentScopeForJavaPackage@92
}

LazyJavaTypeParameterDescriptor@15['G'] {
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@93
    upperBounds = LinkedHashSet@94[1] { NullableType@95 }
}

LazyJavaTypeParameterResolver@96 {
    resolve(JavaTypeParameterImpl@97['G']) = LazyJavaTypeParameterDescriptor@15['G']
}

ResolutionTaskHolder@98 {
    <name not found> = ArrayList@99[1] { ResolutionCandidate@100 }
    <name not found> = ArrayList@101[1] { ResolutionCandidate@100 }
    <name not found> = EmptyList@9[empty]
    <name not found> = EmptyList@9[empty]
    <name not found> = EmptyList@9[empty]
    <name not found> = EmptyList@9[empty]
}

ResolutionTaskHolder@102 {
    <name not found> = ArrayList@103[1] { ResolutionCandidate@104 }
    <name not found> = ArrayList@105[1] { ResolutionCandidate@104 }
}

ResolutionTaskHolder@106 {
    <name not found> = ArrayList@107[1] { ResolutionCandidate@108 }
    <name not found> = ArrayList@109[1] { ResolutionCandidate@108 }
}

ResolutionTaskHolder@110 {
    <name not found> = ArrayList@111[1] { ResolutionCandidate@112 }
    <name not found> = ArrayList@113[1] { ResolutionCandidate@112 }
}

ResolutionTaskHolder@114 {
    <name not found> = ArrayList@115[1] { ResolutionCandidate@116 }
    <name not found> = ArrayList@117[1] { ResolutionCandidate@116 }
}

ResolutionTaskHolder@118 {
    <name not found> = EmptyList@9[empty]
    <name not found> = EmptyList@9[empty]
    <name not found> = EmptyList@9[empty]
    <name not found> = EmptyList@9[empty]
    <name not found> = EmptyList@9[empty]
    <name not found> = EmptyList@9[empty]
    <name not found> = EmptyList@9[empty]
    <name not found> = EmptyList@9[empty]
    <name not found> = EmptyList@9[empty]
    <name not found> = EmptyList@9[empty]
}
