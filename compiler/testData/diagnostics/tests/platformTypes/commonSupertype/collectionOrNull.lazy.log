LazyJavaClassDescriptor@0['Utils'] {
    enumEntryIndex = LinkedHashMap@1 // through LazyJavaClassMemberScope@2
    functions('c': Name@3) = ArrayList@4[1] { JavaMethodDescriptor@5['c'] } // through LazyJavaStaticClassScope@6
    functions('c': Name@3) = EmptyList@7[empty] // through LazyJavaClassMemberScope@2
    memberIndex = computeMemberIndex$1@8 // through LazyJavaClassMemberScope@2
    memberIndex = computeMemberIndex$1@9 // through LazyJavaStaticClassScope@6
    nestedClassIndex = LinkedHashMap@10 // through LazyJavaClassMemberScope@2
    nestedClasses('c': Name@3) = null // through LazyJavaClassMemberScope@2
    properties('c': Name@3) = EmptyList@7[empty] // through LazyJavaClassMemberScope@2
    properties('c': Name@3) = EmptyList@7[empty] // through LazyJavaStaticClassScope@6
    typeConstructor = LazyJavaClassTypeConstructor@11['Utils']
}

LazyJavaClassTypeConstructor@11['Utils'] {
    supertypes = ArrayList@12[1] { JetTypeImpl@13['Any'] }
}

LazyJavaClassifierType@14['Collection<String>'] {
    arguments = ArrayList@15[1] { TypeProjectionImpl@16 }
    classifier = JavaClassImpl@17['Collection']
    memberScope = SubstitutingScope@18
    nullable = 'false': Boolean@19
    typeConstructor = DeserializedClassTypeConstructor@20
}

LazyJavaClassifierType@21['Collection<String>'] {
    arguments = ArrayList@22[1] { TypeProjectionImpl@23 }
    classifier = JavaClassImpl@17['Collection']
    nullable = 'true': Boolean@24
    typeConstructor = DeserializedClassTypeConstructor@25
}

LazyJavaClassifierType@26['Object'] {
    classifier = JavaClassImpl@27['Object']
    typeConstructor = DeserializedClassTypeConstructor@28
}

LazyJavaClassifierType@29['String'] {
    arguments = ArrayList@30[empty]
    classifier = JavaClassImpl@31['String']
    nullable = 'false': Boolean@19
    typeConstructor = DeserializedClassTypeConstructor@32
}

LazyJavaClassifierType@33['String'] {
    arguments = ArrayList@34[empty]
    classifier = JavaClassImpl@35['String']
    nullable = 'false': Boolean@19
    typeConstructor = DeserializedClassTypeConstructor@32
}

LazyJavaClassifierType@36['String'] {
    arguments = ArrayList@37[empty]
    classifier = JavaClassImpl@35['String']
    nullable = 'true': Boolean@24
    typeConstructor = DeserializedClassTypeConstructor@32
}

LazyJavaClassifierType@38['String'] {
    arguments = ArrayList@39[empty]
    classifier = JavaClassImpl@31['String']
    nullable = 'true': Boolean@24
    typeConstructor = DeserializedClassTypeConstructor@32
}

LazyJavaPackageFragmentProvider@40 {
    packageFragments('<root>': FqName@41) = LazyJavaPackageFragment@42['<root>']
    packageFragments('Any': FqName@43) = null
    packageFragments('Boolean': FqName@44) = null
    packageFragments('T': FqName@45) = null
    packageFragments('Utils': FqName@46) = null
    packageFragments('java': FqName@47) = LazyJavaPackageFragment@48['java']
    packageFragments('java.lang': FqName@49) = LazyJavaPackageFragment@50['lang']
    packageFragments('java.lang.Any': FqName@51) = null
    packageFragments('java.lang.Boolean': FqName@52) = null
    packageFragments('java.lang.T': FqName@53) = null
    packageFragments('java.lang.Utils': FqName@54) = null
    packageFragments('kotlin': FqName@55) = null
    packageFragments('kotlin.Any': FqName@56) = null
    packageFragments('kotlin.Boolean': FqName@57) = null
    packageFragments('kotlin.T': FqName@58) = null
    packageFragments('kotlin.Utils': FqName@59) = null
    packageFragments('kotlin.io': FqName@60) = null
    packageFragments('kotlin.jvm': FqName@61) = null
    packageFragments('p': FqName@62) = LazyJavaPackageFragment@63['p']
    packageFragments('p.Any': FqName@64) = null
    packageFragments('p.Boolean': FqName@65) = null
    packageFragments('p.T': FqName@66) = null
    packageFragments('p.Utils': FqName@67) = null
    topLevelClasses(JavaClassImpl@68['Utils']) = LazyJavaClassDescriptor@0['Utils']
}

LazyJavaPackageFragment@42['<root>'] {
    classes('Any': Name@69) = null // through LazyPackageFragmentScopeForJavaPackage@70
    classes('Boolean': Name@71) = null // through LazyPackageFragmentScopeForJavaPackage@70
    classes('Utils': Name@72) = null // through LazyPackageFragmentScopeForJavaPackage@70
    classes('foo': Name@73) = null // through LazyPackageFragmentScopeForJavaPackage@70
    classes('p': Name@74) = null // through LazyPackageFragmentScopeForJavaPackage@70
    deserializedPackageScope = Empty@75 // through LazyPackageFragmentScopeForJavaPackage@70
    functions('foo': Name@73) = EmptyList@7[empty] // through LazyPackageFragmentScopeForJavaPackage@70
    functions('p': Name@76) = EmptyList@7[empty] // through LazyPackageFragmentScopeForJavaPackage@70
    memberIndex = computeMemberIndex$1@77 // through LazyPackageFragmentScopeForJavaPackage@70
}

LazyJavaPackageFragment@48['java'] {
    classes('lang': Name@78) = null // through LazyPackageFragmentScopeForJavaPackage@79
    deserializedPackageScope = Empty@75 // through LazyPackageFragmentScopeForJavaPackage@79
    functions('lang': Name@80) = EmptyList@7[empty] // through LazyPackageFragmentScopeForJavaPackage@79
    memberIndex = computeMemberIndex$1@81 // through LazyPackageFragmentScopeForJavaPackage@79
}

LazyJavaPackageFragment@50['lang'] {
    classes('foo': Name@73) = null // through LazyPackageFragmentScopeForJavaPackage@82
    deserializedPackageScope = Empty@75 // through LazyPackageFragmentScopeForJavaPackage@82
    functions('foo': Name@73) = EmptyList@7[empty] // through LazyPackageFragmentScopeForJavaPackage@82
    memberIndex = computeMemberIndex$1@83 // through LazyPackageFragmentScopeForJavaPackage@82
}

LazyJavaPackageFragment@63['p'] {
    classes('Any': Name@69) = null // through LazyPackageFragmentScopeForJavaPackage@84
    classes('Boolean': Name@71) = null // through LazyPackageFragmentScopeForJavaPackage@84
    classes('Utils': Name@72) = LazyJavaClassDescriptor@0['Utils'] // through LazyPackageFragmentScopeForJavaPackage@84
    classes('foo': Name@73) = null // through LazyPackageFragmentScopeForJavaPackage@84
    deserializedPackageScope = Empty@75 // through LazyPackageFragmentScopeForJavaPackage@84
    functions('foo': Name@73) = EmptyList@7[empty] // through LazyPackageFragmentScopeForJavaPackage@84
    memberIndex = computeMemberIndex$1@85 // through LazyPackageFragmentScopeForJavaPackage@84
}

ResolutionTaskHolder@86 {
    <name not found> = ArrayList@87[1] { ResolutionCandidate@88 }
    <name not found> = ArrayList@89[1] { ResolutionCandidate@88 }
    <name not found> = EmptyList@7[empty]
    <name not found> = EmptyList@7[empty]
    <name not found> = EmptyList@7[empty]
    <name not found> = EmptyList@7[empty]
}

ResolutionTaskHolder@90 {
    <name not found> = ArrayList@91[1] { ResolutionCandidate@92 }
    <name not found> = ArrayList@93[1] { ResolutionCandidate@92 }
    <name not found> = EmptyList@7[empty]
    <name not found> = EmptyList@7[empty]
    <name not found> = EmptyList@7[empty]
    <name not found> = EmptyList@7[empty]
}

ResolutionTaskHolder@94 {
    <name not found> = ArrayList@95[1] { ResolutionCandidate@96 }
    <name not found> = ArrayList@97[1] { ResolutionCandidate@96 }
}

ResolutionTaskHolder@98 {
    <name not found> = ArrayList@99[1] { ResolutionCandidate@100 }
    <name not found> = ArrayList@101[1] { ResolutionCandidate@100 }
}

ResolutionTaskHolder@102 {
    <name not found> = ArrayList@103[1] { ResolutionCandidate@104 }
    <name not found> = ArrayList@105[1] { ResolutionCandidate@104 }
}

ResolutionTaskHolder@106 {
    <name not found> = EmptyList@7[empty]
    <name not found> = EmptyList@7[empty]
    <name not found> = EmptyList@7[empty]
    <name not found> = EmptyList@7[empty]
    <name not found> = EmptyList@7[empty]
    <name not found> = EmptyList@7[empty]
    <name not found> = EmptyList@7[empty]
    <name not found> = EmptyList@7[empty]
    <name not found> = EmptyList@7[empty]
    <name not found> = EmptyList@7[empty]
}
