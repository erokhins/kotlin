LazyJavaClassDescriptor@0['AbstractMap'] {
    defaultType = JetTypeImpl@1['AbstractMap<2>']
    functions('Entry': Name@2) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('EntryIterator': Name@5) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('EntrySet': Name@6) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('HashIterator': Name@7) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('Holder': Name@8) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('KeyIterator': Name@9) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('KeySet': Name@10) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('ValueIterator': Name@11) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('Values': Name@12) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('addEntry': Name@13) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('capacity': Name@14) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('clear': Name@15) = ArrayList@16[1] { JavaMethodDescriptor@17['clear'] } // through LazyJavaClassMemberScope@4
    functions('clone': Name@18) = ArrayList@19[1] { JavaMethodDescriptor@20['clone'] } // through LazyJavaClassMemberScope@4
    functions('containsKey': Name@21) = ArrayList@22[1] { JavaMethodDescriptor@23['containsKey'] } // through LazyJavaClassMemberScope@4
    functions('containsNullValue': Name@24) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('containsValue': Name@25) = ArrayList@26[1] { JavaMethodDescriptor@27['containsValue'] } // through LazyJavaClassMemberScope@4
    functions('createEntry': Name@28) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('entrySet': Name@29) = ArrayList@30[1] { JavaMethodDescriptor@31['entrySet'] } // through LazyJavaClassMemberScope@4
    functions('entrySet0': Name@32) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('equals': Name@33) = ArrayList@34[1] { JavaMethodDescriptor@35['equals'] } // through LazyJavaClassMemberScope@4
    functions('finalize': Name@36) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('get': Name@37) = ArrayList@38[1] { JavaMethodDescriptor@39['get'] } // through LazyJavaClassMemberScope@4
    functions('getClass': Name@40) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('getEntry': Name@41) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('getForNullKey': Name@42) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('hash': Name@43) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('hashCode': Name@44) = ArrayList@45[1] { JavaMethodDescriptor@46['hashCode'] } // through LazyJavaClassMemberScope@4
    functions('init': Name@47) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('isEmpty': Name@48) = ArrayList@49[1] { JavaMethodDescriptor@50['isEmpty'] } // through LazyJavaClassMemberScope@4
    functions('keySet': Name@51) = ArrayList@52[1] { JavaMethodDescriptor@53['keySet'] } // through LazyJavaClassMemberScope@4
    functions('loadFactor': Name@54) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('newEntryIterator': Name@55) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('newKeyIterator': Name@56) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('newValueIterator': Name@57) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('notify': Name@58) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('notifyAll': Name@59) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('put': Name@60) = ArrayList@61[1] { JavaMethodDescriptor@62['put'] } // through LazyJavaClassMemberScope@4
    functions('putAll': Name@63) = ArrayList@64[1] { JavaMethodDescriptor@65['putAll'] } // through LazyJavaClassMemberScope@4
    functions('putAllForCreate': Name@66) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('putForCreate': Name@67) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('putForNullKey': Name@68) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('readObject': Name@69) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('remove': Name@70) = ArrayList@71[1] { JavaMethodDescriptor@72['remove'] } // through LazyJavaClassMemberScope@4
    functions('removeEntryForKey': Name@73) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('removeMapping': Name@74) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('resize': Name@75) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('size': Name@76) = ArrayList@77[1] { JavaMethodDescriptor@78['size'] } // through LazyJavaClassMemberScope@4
    functions('toString': Name@79) = ArrayList@80[1] { JavaMethodDescriptor@81['toString'] } // through LazyJavaClassMemberScope@4
    functions('transfer': Name@82) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('values': Name@83) = ArrayList@84[1] { JavaMethodDescriptor@85['values'] } // through LazyJavaClassMemberScope@4
    functions('wait': Name@86) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('writeObject': Name@87) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    memberIndex = computeMemberIndex$1@88 // through LazyJavaClassMemberScope@4
    properties('entrySet': Name@89) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    properties('hashSeed': Name@90) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    properties('keySet': Name@91) = ArrayList@92[1] { JavaPropertyDescriptor@93['keySet'] } // through LazyJavaClassMemberScope@4
    properties('loadFactor': Name@94) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    properties('modCount': Name@95) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    properties('size': Name@96) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    properties('table': Name@97) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    properties('threshold': Name@98) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    properties('useAltHashing': Name@99) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    properties('values': Name@100) = ArrayList@101[1] { JavaPropertyDescriptor@102['values'] } // through LazyJavaClassMemberScope@4
    thisAsReceiverParameter = LazyClassReceiverParameterDescriptor@103['<this>']
    typeConstructor = LazyJavaClassTypeConstructor@104['AbstractMap']
}

LazyJavaClassDescriptor@105['Entry'] {
    typeConstructor = LazyJavaClassTypeConstructor@106['Entry']
}

LazyJavaClassDescriptor@107['HashMap'] {
    allDescriptors = ArrayList@108[57] { LazyJavaClassDescriptor@109['EntrySet'], LazyJavaClassDescriptor@110['Values'], LazyJavaClassDescriptor@111['KeySet'], ... } // through LazyJavaClassMemberScope@112
    constructors = ArrayList@113[4] { JavaConstructorDescriptor@114['<init>'], JavaConstructorDescriptor@115['<init>'], JavaConstructorDescriptor@116['<init>'], ... } // through LazyJavaClassMemberScope@112
    defaultType = JetTypeImpl@117['HashMap<2>']
    enumEntryIndex = LinkedHashMap@118 // through LazyJavaClassMemberScope@112
    functions('Entry': Name@2) = EmptyList@3[empty] // through LazyJavaClassMemberScope@112
    functions('EntryIterator': Name@5) = EmptyList@3[empty] // through LazyJavaClassMemberScope@112
    functions('EntrySet': Name@6) = EmptyList@3[empty] // through LazyJavaClassMemberScope@112
    functions('HashIterator': Name@7) = EmptyList@3[empty] // through LazyJavaClassMemberScope@112
    functions('Holder': Name@8) = EmptyList@3[empty] // through LazyJavaClassMemberScope@112
    functions('KeyIterator': Name@9) = EmptyList@3[empty] // through LazyJavaClassMemberScope@112
    functions('KeySet': Name@10) = EmptyList@3[empty] // through LazyJavaClassMemberScope@112
    functions('ValueIterator': Name@11) = EmptyList@3[empty] // through LazyJavaClassMemberScope@112
    functions('Values': Name@12) = EmptyList@3[empty] // through LazyJavaClassMemberScope@112
    functions('addEntry': Name@119) = ArrayList@120[1] { JavaMethodDescriptor@121['addEntry'] } // through LazyJavaClassMemberScope@112
    functions('capacity': Name@122) = ArrayList@123[1] { JavaMethodDescriptor@124['capacity'] } // through LazyJavaClassMemberScope@112
    functions('clear': Name@125) = ArrayList@126[1] { JavaMethodDescriptor@127['clear'] } // through LazyJavaClassMemberScope@112
    functions('clone': Name@128) = ArrayList@129[1] { JavaMethodDescriptor@130['clone'] } // through LazyJavaClassMemberScope@112
    functions('containsKey': Name@131) = ArrayList@132[1] { JavaMethodDescriptor@133['containsKey'] } // through LazyJavaClassMemberScope@112
    functions('containsNullValue': Name@134) = ArrayList@135[1] { JavaMethodDescriptor@136['containsNullValue'] } // through LazyJavaClassMemberScope@112
    functions('containsValue': Name@137) = ArrayList@138[1] { JavaMethodDescriptor@139['containsValue'] } // through LazyJavaClassMemberScope@112
    functions('createEntry': Name@140) = ArrayList@141[1] { JavaMethodDescriptor@142['createEntry'] } // through LazyJavaClassMemberScope@112
    functions('entrySet': Name@143) = ArrayList@144[1] { JavaMethodDescriptor@145['entrySet'] } // through LazyJavaClassMemberScope@112
    functions('entrySet0': Name@146) = ArrayList@147[1] { JavaMethodDescriptor@148['entrySet0'] } // through LazyJavaClassMemberScope@112
    functions('equals': Name@33) = ArrayList@149[1] { DeserializedSimpleFunctionDescriptor@150['equals'] } // through LazyJavaClassMemberScope@112
    functions('finalize': Name@36) = EmptyList@3[empty] // through LazyJavaClassMemberScope@112
    functions('get': Name@151) = ArrayList@152[1] { JavaMethodDescriptor@153['get'] } // through LazyJavaClassMemberScope@112
    functions('getClass': Name@40) = EmptyList@3[empty] // through LazyJavaClassMemberScope@112
    functions('getEntry': Name@154) = ArrayList@155[1] { JavaMethodDescriptor@156['getEntry'] } // through LazyJavaClassMemberScope@112
    functions('getForNullKey': Name@157) = ArrayList@158[1] { JavaMethodDescriptor@159['getForNullKey'] } // through LazyJavaClassMemberScope@112
    functions('hash': Name@160) = ArrayList@161[1] { JavaMethodDescriptor@162['hash'] } // through LazyJavaClassMemberScope@112
    functions('hashCode': Name@44) = ArrayList@163[1] { DeserializedSimpleFunctionDescriptor@164['hashCode'] } // through LazyJavaClassMemberScope@112
    functions('init': Name@165) = ArrayList@166[1] { JavaMethodDescriptor@167['init'] } // through LazyJavaClassMemberScope@112
    functions('isEmpty': Name@168) = ArrayList@169[1] { JavaMethodDescriptor@170['isEmpty'] } // through LazyJavaClassMemberScope@112
    functions('keySet': Name@171) = ArrayList@172[1] { JavaMethodDescriptor@173['keySet'] } // through LazyJavaClassMemberScope@112
    functions('loadFactor': Name@174) = ArrayList@175[1] { JavaMethodDescriptor@176['loadFactor'] } // through LazyJavaClassMemberScope@112
    functions('newEntryIterator': Name@177) = ArrayList@178[1] { JavaMethodDescriptor@179['newEntryIterator'] } // through LazyJavaClassMemberScope@112
    functions('newKeyIterator': Name@180) = ArrayList@181[1] { JavaMethodDescriptor@182['newKeyIterator'] } // through LazyJavaClassMemberScope@112
    functions('newValueIterator': Name@183) = ArrayList@184[1] { JavaMethodDescriptor@185['newValueIterator'] } // through LazyJavaClassMemberScope@112
    functions('notify': Name@58) = EmptyList@3[empty] // through LazyJavaClassMemberScope@112
    functions('notifyAll': Name@59) = EmptyList@3[empty] // through LazyJavaClassMemberScope@112
    functions('put': Name@186) = ArrayList@187[1] { JavaMethodDescriptor@188['put'] } // through LazyJavaClassMemberScope@112
    functions('putAll': Name@189) = ArrayList@190[1] { JavaMethodDescriptor@191['putAll'] } // through LazyJavaClassMemberScope@112
    functions('putAllForCreate': Name@192) = ArrayList@193[1] { JavaMethodDescriptor@194['putAllForCreate'] } // through LazyJavaClassMemberScope@112
    functions('putForCreate': Name@195) = ArrayList@196[1] { JavaMethodDescriptor@197['putForCreate'] } // through LazyJavaClassMemberScope@112
    functions('putForNullKey': Name@198) = ArrayList@199[1] { JavaMethodDescriptor@200['putForNullKey'] } // through LazyJavaClassMemberScope@112
    functions('readObject': Name@201) = ArrayList@202[1] { JavaMethodDescriptor@203['readObject'] } // through LazyJavaClassMemberScope@112
    functions('remove': Name@204) = ArrayList@205[1] { JavaMethodDescriptor@206['remove'] } // through LazyJavaClassMemberScope@112
    functions('removeEntryForKey': Name@207) = ArrayList@208[1] { JavaMethodDescriptor@209['removeEntryForKey'] } // through LazyJavaClassMemberScope@112
    functions('removeMapping': Name@210) = ArrayList@211[1] { JavaMethodDescriptor@212['removeMapping'] } // through LazyJavaClassMemberScope@112
    functions('resize': Name@213) = ArrayList@214[1] { JavaMethodDescriptor@215['resize'] } // through LazyJavaClassMemberScope@112
    functions('size': Name@216) = ArrayList@217[1] { JavaMethodDescriptor@218['size'] } // through LazyJavaClassMemberScope@112
    functions('toString': Name@79) = ArrayList@219[1] { DeserializedSimpleFunctionDescriptor@220['toString'] } // through LazyJavaClassMemberScope@112
    functions('transfer': Name@221) = ArrayList@222[1] { JavaMethodDescriptor@223['transfer'] } // through LazyJavaClassMemberScope@112
    functions('values': Name@224) = ArrayList@225[1] { JavaMethodDescriptor@226['values'] } // through LazyJavaClassMemberScope@112
    functions('wait': Name@86) = EmptyList@3[empty] // through LazyJavaClassMemberScope@112
    functions('writeObject': Name@227) = ArrayList@228[1] { JavaMethodDescriptor@229['writeObject'] } // through LazyJavaClassMemberScope@112
    memberIndex = computeMemberIndex$1@230 // through LazyJavaClassMemberScope@112
    nestedClassIndex = LinkedHashMap@231 // through LazyJavaClassMemberScope@112
    nestedClasses('Entry': Name@2) = LazyJavaClassDescriptor@105['Entry'] // through LazyJavaClassMemberScope@112
    nestedClasses('EntryIterator': Name@5) = LazyJavaClassDescriptor@232['EntryIterator'] // through LazyJavaClassMemberScope@112
    nestedClasses('EntrySet': Name@6) = LazyJavaClassDescriptor@109['EntrySet'] // through LazyJavaClassMemberScope@112
    nestedClasses('HashIterator': Name@7) = LazyJavaClassDescriptor@233['HashIterator'] // through LazyJavaClassMemberScope@112
    nestedClasses('Holder': Name@8) = LazyJavaClassDescriptor@234['Holder'] // through LazyJavaClassMemberScope@112
    nestedClasses('KeyIterator': Name@9) = LazyJavaClassDescriptor@235['KeyIterator'] // through LazyJavaClassMemberScope@112
    nestedClasses('KeySet': Name@10) = LazyJavaClassDescriptor@111['KeySet'] // through LazyJavaClassMemberScope@112
    nestedClasses('ValueIterator': Name@11) = LazyJavaClassDescriptor@236['ValueIterator'] // through LazyJavaClassMemberScope@112
    nestedClasses('Values': Name@12) = LazyJavaClassDescriptor@110['Values'] // through LazyJavaClassMemberScope@112
    properties('entrySet': Name@89) = ArrayList@237[1] { JavaPropertyDescriptor@238['entrySet'] } // through LazyJavaClassMemberScope@112
    properties('hashSeed': Name@90) = ArrayList@239[1] { JavaPropertyDescriptor@240['hashSeed'] } // through LazyJavaClassMemberScope@112
    properties('keySet': Name@91) = ArrayList@241[1] { PropertyDescriptorImpl@242['keySet'] } // through LazyJavaClassMemberScope@112
    properties('loadFactor': Name@94) = ArrayList@243[1] { JavaPropertyDescriptor@244['loadFactor'] } // through LazyJavaClassMemberScope@112
    properties('modCount': Name@95) = ArrayList@245[1] { JavaPropertyDescriptor@246['modCount'] } // through LazyJavaClassMemberScope@112
    properties('size': Name@96) = ArrayList@247[1] { JavaPropertyDescriptor@248['size'] } // through LazyJavaClassMemberScope@112
    properties('table': Name@97) = ArrayList@249[1] { JavaPropertyDescriptor@250['table'] } // through LazyJavaClassMemberScope@112
    properties('threshold': Name@98) = ArrayList@251[1] { JavaPropertyDescriptor@252['threshold'] } // through LazyJavaClassMemberScope@112
    properties('useAltHashing': Name@99) = ArrayList@253[1] { JavaPropertyDescriptor@254['useAltHashing'] } // through LazyJavaClassMemberScope@112
    properties('values': Name@100) = ArrayList@255[1] { PropertyDescriptorImpl@256['values'] } // through LazyJavaClassMemberScope@112
    thisAsReceiverParameter = LazyClassReceiverParameterDescriptor@257['<this>']
    typeConstructor = LazyJavaClassTypeConstructor@258['HashMap']
}

LazyJavaClassDescriptor@259['ObjectInputStream'] {
    functionTypeForSamInterface = null
    typeConstructor = LazyJavaClassTypeConstructor@260['ObjectInputStream']
}

LazyJavaClassDescriptor@261['ObjectOutputStream'] {
    functionTypeForSamInterface = null
    typeConstructor = LazyJavaClassTypeConstructor@262['ObjectOutputStream']
}

LazyJavaClassDescriptor@263['Serializable'] {
    defaultType = JetTypeImpl@264['Serializable']
    functions('Entry': Name@2) = EmptyList@3[empty] // through LazyJavaClassMemberScope@265
    functions('EntryIterator': Name@5) = EmptyList@3[empty] // through LazyJavaClassMemberScope@265
    functions('EntrySet': Name@6) = EmptyList@3[empty] // through LazyJavaClassMemberScope@265
    functions('HashIterator': Name@7) = EmptyList@3[empty] // through LazyJavaClassMemberScope@265
    functions('Holder': Name@8) = EmptyList@3[empty] // through LazyJavaClassMemberScope@265
    functions('KeyIterator': Name@9) = EmptyList@3[empty] // through LazyJavaClassMemberScope@265
    functions('KeySet': Name@10) = EmptyList@3[empty] // through LazyJavaClassMemberScope@265
    functions('ValueIterator': Name@11) = EmptyList@3[empty] // through LazyJavaClassMemberScope@265
    functions('Values': Name@12) = EmptyList@3[empty] // through LazyJavaClassMemberScope@265
    functions('addEntry': Name@13) = EmptyList@3[empty] // through LazyJavaClassMemberScope@265
    functions('capacity': Name@14) = EmptyList@3[empty] // through LazyJavaClassMemberScope@265
    functions('clear': Name@15) = EmptyList@3[empty] // through LazyJavaClassMemberScope@265
    functions('clone': Name@18) = EmptyList@3[empty] // through LazyJavaClassMemberScope@265
    functions('containsKey': Name@21) = EmptyList@3[empty] // through LazyJavaClassMemberScope@265
    functions('containsNullValue': Name@24) = EmptyList@3[empty] // through LazyJavaClassMemberScope@265
    functions('containsValue': Name@25) = EmptyList@3[empty] // through LazyJavaClassMemberScope@265
    functions('createEntry': Name@28) = EmptyList@3[empty] // through LazyJavaClassMemberScope@265
    functions('entrySet': Name@29) = EmptyList@3[empty] // through LazyJavaClassMemberScope@265
    functions('entrySet0': Name@32) = EmptyList@3[empty] // through LazyJavaClassMemberScope@265
    functions('equals': Name@33) = ArrayList@266[1] { DeserializedSimpleFunctionDescriptor@267['equals'] } // through LazyJavaClassMemberScope@265
    functions('finalize': Name@36) = EmptyList@3[empty] // through LazyJavaClassMemberScope@265
    functions('get': Name@37) = EmptyList@3[empty] // through LazyJavaClassMemberScope@265
    functions('getClass': Name@40) = EmptyList@3[empty] // through LazyJavaClassMemberScope@265
    functions('getEntry': Name@41) = EmptyList@3[empty] // through LazyJavaClassMemberScope@265
    functions('getForNullKey': Name@42) = EmptyList@3[empty] // through LazyJavaClassMemberScope@265
    functions('hash': Name@43) = EmptyList@3[empty] // through LazyJavaClassMemberScope@265
    functions('hashCode': Name@44) = ArrayList@268[1] { DeserializedSimpleFunctionDescriptor@269['hashCode'] } // through LazyJavaClassMemberScope@265
    functions('init': Name@47) = EmptyList@3[empty] // through LazyJavaClassMemberScope@265
    functions('isEmpty': Name@48) = EmptyList@3[empty] // through LazyJavaClassMemberScope@265
    functions('keySet': Name@51) = EmptyList@3[empty] // through LazyJavaClassMemberScope@265
    functions('loadFactor': Name@54) = EmptyList@3[empty] // through LazyJavaClassMemberScope@265
    functions('newEntryIterator': Name@55) = EmptyList@3[empty] // through LazyJavaClassMemberScope@265
    functions('newKeyIterator': Name@56) = EmptyList@3[empty] // through LazyJavaClassMemberScope@265
    functions('newValueIterator': Name@57) = EmptyList@3[empty] // through LazyJavaClassMemberScope@265
    functions('notify': Name@58) = EmptyList@3[empty] // through LazyJavaClassMemberScope@265
    functions('notifyAll': Name@59) = EmptyList@3[empty] // through LazyJavaClassMemberScope@265
    functions('put': Name@60) = EmptyList@3[empty] // through LazyJavaClassMemberScope@265
    functions('putAll': Name@63) = EmptyList@3[empty] // through LazyJavaClassMemberScope@265
    functions('putAllForCreate': Name@66) = EmptyList@3[empty] // through LazyJavaClassMemberScope@265
    functions('putForCreate': Name@67) = EmptyList@3[empty] // through LazyJavaClassMemberScope@265
    functions('putForNullKey': Name@68) = EmptyList@3[empty] // through LazyJavaClassMemberScope@265
    functions('readObject': Name@69) = EmptyList@3[empty] // through LazyJavaClassMemberScope@265
    functions('remove': Name@70) = EmptyList@3[empty] // through LazyJavaClassMemberScope@265
    functions('removeEntryForKey': Name@73) = EmptyList@3[empty] // through LazyJavaClassMemberScope@265
    functions('removeMapping': Name@74) = EmptyList@3[empty] // through LazyJavaClassMemberScope@265
    functions('resize': Name@75) = EmptyList@3[empty] // through LazyJavaClassMemberScope@265
    functions('size': Name@76) = EmptyList@3[empty] // through LazyJavaClassMemberScope@265
    functions('toString': Name@79) = ArrayList@270[1] { DeserializedSimpleFunctionDescriptor@271['toString'] } // through LazyJavaClassMemberScope@265
    functions('transfer': Name@82) = EmptyList@3[empty] // through LazyJavaClassMemberScope@265
    functions('values': Name@83) = EmptyList@3[empty] // through LazyJavaClassMemberScope@265
    functions('wait': Name@86) = EmptyList@3[empty] // through LazyJavaClassMemberScope@265
    functions('writeObject': Name@87) = EmptyList@3[empty] // through LazyJavaClassMemberScope@265
    memberIndex = computeMemberIndex$1@272 // through LazyJavaClassMemberScope@265
    properties('entrySet': Name@89) = EmptyList@3[empty] // through LazyJavaClassMemberScope@265
    properties('hashSeed': Name@90) = EmptyList@3[empty] // through LazyJavaClassMemberScope@265
    properties('keySet': Name@91) = EmptyList@3[empty] // through LazyJavaClassMemberScope@265
    properties('loadFactor': Name@94) = EmptyList@3[empty] // through LazyJavaClassMemberScope@265
    properties('modCount': Name@95) = EmptyList@3[empty] // through LazyJavaClassMemberScope@265
    properties('size': Name@96) = EmptyList@3[empty] // through LazyJavaClassMemberScope@265
    properties('table': Name@97) = EmptyList@3[empty] // through LazyJavaClassMemberScope@265
    properties('threshold': Name@98) = EmptyList@3[empty] // through LazyJavaClassMemberScope@265
    properties('useAltHashing': Name@99) = EmptyList@3[empty] // through LazyJavaClassMemberScope@265
    properties('values': Name@100) = EmptyList@3[empty] // through LazyJavaClassMemberScope@265
    typeConstructor = LazyJavaClassTypeConstructor@273['Serializable']
}

LazyJavaClassTypeConstructor@104['AbstractMap'] {
    parameters = ArrayList@274[2] { LazyJavaTypeParameterDescriptor@275['K'], LazyJavaTypeParameterDescriptor@276['V'] }
    supertypes = ArrayList@277[1] { LazyJavaClassifierType@278['Map<K, V>'] }
}

LazyJavaClassTypeConstructor@106['Entry'] {
    parameters = ArrayList@279[2] { LazyJavaTypeParameterDescriptor@280['K'], LazyJavaTypeParameterDescriptor@281['V'] }
}

LazyJavaClassTypeConstructor@258['HashMap'] {
    parameters = ArrayList@282[2] { LazyJavaTypeParameterDescriptor@283['K'], LazyJavaTypeParameterDescriptor@284['V'] }
    supertypes = ArrayList@285[4] { LazyJavaClassifierType@286['AbstractMap<K, V>'], LazyJavaClassifierType@287['Map<K, V>'], LazyJavaClassifierType@288['Cloneable'], ... }
}

LazyJavaClassTypeConstructor@260['ObjectInputStream'] {
    parameters = ArrayList@289[empty]
}

LazyJavaClassTypeConstructor@262['ObjectOutputStream'] {
    parameters = ArrayList@290[empty]
}

LazyJavaClassTypeConstructor@273['Serializable'] {
    parameters = ArrayList@291[empty]
    supertypes = ArrayList@292[1] { JetTypeImpl@293['Any'] }
}

LazyJavaClassifierType@286['AbstractMap<K, V>'] {
    arguments = ArrayList@294[2] { TypeProjectionImpl@295, TypeProjectionImpl@296 }
    classifier = JavaClassImpl@297['AbstractMap']
    memberScope = SubstitutingScope@298
    nullable = 'false': Boolean@299
    typeConstructor = LazyJavaClassTypeConstructor@104['AbstractMap']
}

LazyJavaClassifierType@288['Cloneable'] {
    arguments = ArrayList@300[empty]
    classifier = JavaClassImpl@301['Cloneable']
    memberScope = DeserializedClassMemberScope@302
    nullable = 'false': Boolean@299
    typeConstructor = DeserializedClassTypeConstructor@303
}

LazyJavaClassifierType@304['Collection<V>'] {
    arguments = ArrayList@305[1] { TypeProjectionImpl@306 }
    classifier = JavaClassImpl@307['Collection']
    memberScope = SubstitutingScope@308
    nullable = 'false': Boolean@299
    typeConstructor = DeserializedClassTypeConstructor@309
}

LazyJavaClassifierType@310['Collection<V>'] {
    arguments = ArrayList@311[1] { TypeProjectionImpl@312 }
    classifier = JavaClassImpl@313['Collection']
    memberScope = SubstitutingScope@314
    nullable = 'false': Boolean@299
    typeConstructor = DeserializedClassTypeConstructor@309
}

LazyJavaClassifierType@315['Collection<V>'] {
    arguments = ArrayList@316[1] { TypeProjectionImpl@317 }
    classifier = JavaClassImpl@318['Collection']
    memberScope = SubstitutingScope@319
    nullable = 'false': Boolean@299
    typeConstructor = DeserializedClassTypeConstructor@309
}

LazyJavaClassifierType@320['Collection<V>'] {
    arguments = ArrayList@321[1] { TypeProjectionImpl@322 }
    classifier = JavaClassImpl@318['Collection']
    memberScope = SubstitutingScope@323
    nullable = 'true': Boolean@324
    typeConstructor = DeserializedClassTypeConstructor@325
}

LazyJavaClassifierType@326['Collection<V>'] {
    arguments = ArrayList@327[1] { TypeProjectionImpl@328 }
    classifier = JavaClassImpl@307['Collection']
    memberScope = SubstitutingScope@329
    nullable = 'true': Boolean@324
    typeConstructor = DeserializedClassTypeConstructor@325
}

LazyJavaClassifierType@330['Collection<V>'] {
    arguments = ArrayList@331[1] { TypeProjectionImpl@332 }
    classifier = JavaClassImpl@313['Collection']
    memberScope = SubstitutingScope@333
    nullable = 'true': Boolean@324
    typeConstructor = DeserializedClassTypeConstructor@325
}

LazyJavaClassifierType@334['Entry'] {
    arguments = ArrayList@335[2] { LazyStarProjection@336, LazyStarProjection@337 }
    classifier = JavaClassImpl@338['Entry']
    memberScope = SubstitutingScope@339
    nullable = 'false': Boolean@299
    typeConstructor = LazyJavaClassTypeConstructor@106['Entry']
}

LazyJavaClassifierType@340['Entry'] {
    arguments = ArrayList@341[2] { LazyStarProjection@342, LazyStarProjection@343 }
    classifier = JavaClassImpl@338['Entry']
    memberScope = SubstitutingScope@344
    nullable = 'true': Boolean@324
    typeConstructor = LazyJavaClassTypeConstructor@106['Entry']
}

LazyJavaClassifierType@345['Entry<K, V>'] {
    arguments = ArrayList@346[2] { TypeProjectionImpl@347, TypeProjectionImpl@348 }
    classifier = JavaClassImpl@349['Entry']
    memberScope = SubstitutingScope@350
    nullable = 'false': Boolean@299
    typeConstructor = DeserializedClassTypeConstructor@351
}

LazyJavaClassifierType@352['Entry<K, V>'] {
    arguments = ArrayList@353[2] { TypeProjectionImpl@354, TypeProjectionImpl@355 }
    classifier = JavaClassImpl@356['Entry']
    memberScope = SubstitutingScope@357
    nullable = 'false': Boolean@299
    typeConstructor = DeserializedClassTypeConstructor@351
}

LazyJavaClassifierType@358['Entry<K, V>'] {
    arguments = ArrayList@359[2] { TypeProjectionImpl@360, TypeProjectionImpl@361 }
    classifier = JavaClassImpl@362['Entry']
    memberScope = SubstitutingScope@363
    nullable = 'false': Boolean@299
    typeConstructor = DeserializedClassTypeConstructor@351
}

LazyJavaClassifierType@364['Entry<K, V>'] {
    arguments = ArrayList@365[2] { TypeProjectionImpl@366, TypeProjectionImpl@367 }
    classifier = JavaClassImpl@368['Entry']
    memberScope = SubstitutingScope@369
    nullable = 'false': Boolean@299
    typeConstructor = DeserializedClassTypeConstructor@351
}

LazyJavaClassifierType@370['Entry<K, V>'] {
    arguments = ArrayList@371[2] { TypeProjectionImpl@372, TypeProjectionImpl@373 }
    classifier = JavaClassImpl@374['Entry']
    memberScope = SubstitutingScope@375
    nullable = 'false': Boolean@299
    typeConstructor = DeserializedClassTypeConstructor@351
}

LazyJavaClassifierType@376['Entry<K, V>'] {
    arguments = ArrayList@377[2] { TypeProjectionImpl@378, TypeProjectionImpl@379 }
    classifier = JavaClassImpl@380['Entry']
    memberScope = SubstitutingScope@381
    nullable = 'false': Boolean@299
    typeConstructor = DeserializedClassTypeConstructor@351
}

LazyJavaClassifierType@382['Entry<K, V>'] {
    arguments = ArrayList@383[2] { TypeProjectionImpl@384, TypeProjectionImpl@385 }
    classifier = JavaClassImpl@386['Entry']
    memberScope = SubstitutingScope@387
    nullable = 'false': Boolean@299
    typeConstructor = DeserializedClassTypeConstructor@351
}

LazyJavaClassifierType@388['Entry<K, V>'] {
    arguments = ArrayList@389[2] { TypeProjectionImpl@390, TypeProjectionImpl@391 }
    classifier = JavaClassImpl@392['Entry']
    memberScope = SubstitutingScope@393
    nullable = 'false': Boolean@299
    typeConstructor = DeserializedClassTypeConstructor@351
}

LazyJavaClassifierType@394['Entry<K, V>'] {
    arguments = ArrayList@395[2] { TypeProjectionImpl@396, TypeProjectionImpl@397 }
    classifier = JavaClassImpl@398['Entry']
    memberScope = SubstitutingScope@399
    nullable = 'false': Boolean@299
    typeConstructor = DeserializedClassTypeConstructor@351
}

LazyJavaClassifierType@400['Entry<K, V>'] {
    arguments = ArrayList@401[2] { TypeProjectionImpl@402, TypeProjectionImpl@403 }
    classifier = JavaClassImpl@404['Entry']
    memberScope = SubstitutingScope@405
    nullable = 'false': Boolean@299
    typeConstructor = DeserializedClassTypeConstructor@351
}

LazyJavaClassifierType@406['Entry<K, V>'] {
    arguments = ArrayList@407[2] { TypeProjectionImpl@408, TypeProjectionImpl@409 }
    classifier = JavaClassImpl@410['Entry']
    memberScope = SubstitutingScope@411
    nullable = 'false': Boolean@299
    typeConstructor = LazyJavaClassTypeConstructor@106['Entry']
}

LazyJavaClassifierType@412['Entry<K, V>'] {
    arguments = ArrayList@413[2] { TypeProjectionImpl@414, TypeProjectionImpl@415 }
    classifier = JavaClassImpl@416['Entry']
    memberScope = SubstitutingScope@417
    nullable = 'false': Boolean@299
    typeConstructor = LazyJavaClassTypeConstructor@106['Entry']
}

LazyJavaClassifierType@418['Entry<K, V>'] {
    arguments = ArrayList@419[2] { TypeProjectionImpl@420, TypeProjectionImpl@421 }
    classifier = JavaClassImpl@422['Entry']
    memberScope = SubstitutingScope@423
    nullable = 'false': Boolean@299
    typeConstructor = LazyJavaClassTypeConstructor@106['Entry']
}

LazyJavaClassifierType@424['Entry<K, V>'] {
    arguments = ArrayList@425[2] { TypeProjectionImpl@426, TypeProjectionImpl@427 }
    classifier = JavaClassImpl@428['Entry']
    memberScope = SubstitutingScope@429
    nullable = 'false': Boolean@299
    typeConstructor = LazyJavaClassTypeConstructor@106['Entry']
}

LazyJavaClassifierType@430['Entry<K, V>'] {
    arguments = ArrayList@431[2] { TypeProjectionImpl@432, TypeProjectionImpl@433 }
    classifier = JavaClassImpl@404['Entry']
    memberScope = SubstitutingScope@434
    nullable = 'true': Boolean@324
    typeConstructor = DeserializedClassTypeConstructor@435
}

LazyJavaClassifierType@436['Entry<K, V>'] {
    arguments = ArrayList@437[2] { TypeProjectionImpl@438, TypeProjectionImpl@439 }
    classifier = JavaClassImpl@349['Entry']
    memberScope = SubstitutingScope@440
    nullable = 'true': Boolean@324
    typeConstructor = DeserializedClassTypeConstructor@435
}

LazyJavaClassifierType@441['Entry<K, V>'] {
    arguments = ArrayList@442[2] { TypeProjectionImpl@443, TypeProjectionImpl@444 }
    classifier = JavaClassImpl@362['Entry']
    memberScope = SubstitutingScope@445
    nullable = 'true': Boolean@324
    typeConstructor = DeserializedClassTypeConstructor@435
}

LazyJavaClassifierType@446['Entry<K, V>'] {
    arguments = ArrayList@447[2] { TypeProjectionImpl@448, TypeProjectionImpl@449 }
    classifier = JavaClassImpl@386['Entry']
    memberScope = SubstitutingScope@450
    nullable = 'true': Boolean@324
    typeConstructor = DeserializedClassTypeConstructor@435
}

LazyJavaClassifierType@451['Entry<K, V>'] {
    arguments = ArrayList@452[2] { TypeProjectionImpl@453, TypeProjectionImpl@454 }
    classifier = JavaClassImpl@398['Entry']
    memberScope = SubstitutingScope@455
    nullable = 'true': Boolean@324
    typeConstructor = DeserializedClassTypeConstructor@435
}

LazyJavaClassifierType@456['Entry<K, V>'] {
    arguments = ArrayList@457[2] { TypeProjectionImpl@458, TypeProjectionImpl@459 }
    classifier = JavaClassImpl@368['Entry']
    memberScope = SubstitutingScope@460
    nullable = 'true': Boolean@324
    typeConstructor = DeserializedClassTypeConstructor@435
}

LazyJavaClassifierType@461['Entry<K, V>'] {
    arguments = ArrayList@462[2] { TypeProjectionImpl@463, TypeProjectionImpl@464 }
    classifier = JavaClassImpl@374['Entry']
    memberScope = SubstitutingScope@465
    nullable = 'true': Boolean@324
    typeConstructor = DeserializedClassTypeConstructor@435
}

LazyJavaClassifierType@466['Entry<K, V>'] {
    arguments = ArrayList@467[2] { TypeProjectionImpl@468, TypeProjectionImpl@469 }
    classifier = JavaClassImpl@392['Entry']
    memberScope = SubstitutingScope@470
    nullable = 'true': Boolean@324
    typeConstructor = DeserializedClassTypeConstructor@435
}

LazyJavaClassifierType@471['Entry<K, V>'] {
    arguments = ArrayList@472[2] { TypeProjectionImpl@473, TypeProjectionImpl@474 }
    classifier = JavaClassImpl@356['Entry']
    memberScope = SubstitutingScope@475
    nullable = 'true': Boolean@324
    typeConstructor = DeserializedClassTypeConstructor@435
}

LazyJavaClassifierType@476['Entry<K, V>'] {
    arguments = ArrayList@477[2] { TypeProjectionImpl@478, TypeProjectionImpl@479 }
    classifier = JavaClassImpl@380['Entry']
    memberScope = SubstitutingScope@480
    nullable = 'true': Boolean@324
    typeConstructor = DeserializedClassTypeConstructor@435
}

LazyJavaClassifierType@481['Entry<K, V>'] {
    arguments = ArrayList@482[2] { TypeProjectionImpl@483, TypeProjectionImpl@484 }
    classifier = JavaClassImpl@428['Entry']
    memberScope = SubstitutingScope@485
    nullable = 'true': Boolean@324
    typeConstructor = LazyJavaClassTypeConstructor@106['Entry']
}

LazyJavaClassifierType@486['Entry<K, V>'] {
    arguments = ArrayList@487[2] { TypeProjectionImpl@488, TypeProjectionImpl@489 }
    classifier = JavaClassImpl@416['Entry']
    memberScope = SubstitutingScope@490
    nullable = 'true': Boolean@324
    typeConstructor = LazyJavaClassTypeConstructor@106['Entry']
}

LazyJavaClassifierType@491['Entry<K, V>'] {
    arguments = ArrayList@492[2] { TypeProjectionImpl@493, TypeProjectionImpl@494 }
    classifier = JavaClassImpl@422['Entry']
    memberScope = SubstitutingScope@495
    nullable = 'true': Boolean@324
    typeConstructor = LazyJavaClassTypeConstructor@106['Entry']
}

LazyJavaClassifierType@496['Entry<K, V>'] {
    arguments = ArrayList@497[2] { TypeProjectionImpl@498, TypeProjectionImpl@499 }
    classifier = JavaClassImpl@410['Entry']
    memberScope = SubstitutingScope@500
    nullable = 'true': Boolean@324
    typeConstructor = LazyJavaClassTypeConstructor@106['Entry']
}

LazyJavaClassifierType@501['Iterator<Entry<K, V>>'] {
    arguments = ArrayList@502[1] { TypeProjectionImpl@503 }
    classifier = JavaClassImpl@504['Iterator']
    memberScope = SubstitutingScope@505
    nullable = 'false': Boolean@299
    typeConstructor = DeserializedClassTypeConstructor@506
}

LazyJavaClassifierType@507['Iterator<Entry<K, V>>'] {
    arguments = ArrayList@508[1] { TypeProjectionImpl@509 }
    classifier = JavaClassImpl@504['Iterator']
    memberScope = SubstitutingScope@510
    nullable = 'true': Boolean@324
    typeConstructor = DeserializedClassTypeConstructor@511
}

LazyJavaClassifierType@512['Iterator<K>'] {
    arguments = ArrayList@513[1] { TypeProjectionImpl@514 }
    classifier = JavaClassImpl@515['Iterator']
    memberScope = SubstitutingScope@516
    nullable = 'false': Boolean@299
    typeConstructor = DeserializedClassTypeConstructor@506
}

LazyJavaClassifierType@517['Iterator<K>'] {
    arguments = ArrayList@518[1] { TypeProjectionImpl@519 }
    classifier = JavaClassImpl@515['Iterator']
    memberScope = SubstitutingScope@520
    nullable = 'true': Boolean@324
    typeConstructor = DeserializedClassTypeConstructor@511
}

LazyJavaClassifierType@521['Iterator<V>'] {
    arguments = ArrayList@522[1] { TypeProjectionImpl@523 }
    classifier = JavaClassImpl@524['Iterator']
    memberScope = SubstitutingScope@525
    nullable = 'false': Boolean@299
    typeConstructor = DeserializedClassTypeConstructor@506
}

LazyJavaClassifierType@526['Iterator<V>'] {
    arguments = ArrayList@527[1] { TypeProjectionImpl@528 }
    classifier = JavaClassImpl@524['Iterator']
    memberScope = SubstitutingScope@529
    nullable = 'true': Boolean@324
    typeConstructor = DeserializedClassTypeConstructor@511
}

LazyJavaClassifierType@530['K'] {
    arguments = ArrayList@531[empty]
    classifier = JavaTypeParameterImpl@532['K']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@533
}

LazyJavaClassifierType@534['K'] {
    arguments = ArrayList@535[empty]
    classifier = JavaTypeParameterImpl@536['K']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@533
}

LazyJavaClassifierType@537['K'] {
    arguments = ArrayList@538[empty]
    classifier = JavaTypeParameterImpl@539['K']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@533
}

LazyJavaClassifierType@540['K'] {
    arguments = ArrayList@541[empty]
    classifier = JavaTypeParameterImpl@542['K']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@533
}

LazyJavaClassifierType@543['K'] {
    arguments = ArrayList@544[empty]
    classifier = JavaTypeParameterImpl@545['K']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@546
}

LazyJavaClassifierType@547['K'] {
    arguments = ArrayList@548[empty]
    classifier = JavaTypeParameterImpl@549['K']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@533
}

LazyJavaClassifierType@550['K'] {
    arguments = ArrayList@551[empty]
    classifier = JavaTypeParameterImpl@552['K']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@533
}

LazyJavaClassifierType@553['K'] {
    arguments = ArrayList@554[empty]
    classifier = JavaTypeParameterImpl@555['K']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@533
}

LazyJavaClassifierType@556['K'] {
    arguments = ArrayList@557[empty]
    classifier = JavaTypeParameterImpl@558['K']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@533
}

LazyJavaClassifierType@559['K'] {
    arguments = ArrayList@560[empty]
    classifier = JavaTypeParameterImpl@561['K']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@533
}

LazyJavaClassifierType@562['K'] {
    arguments = ArrayList@563[empty]
    classifier = JavaTypeParameterImpl@564['K']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@533
}

LazyJavaClassifierType@565['K'] {
    arguments = ArrayList@566[empty]
    classifier = JavaTypeParameterImpl@567['K']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@546
}

LazyJavaClassifierType@568['K'] {
    arguments = ArrayList@569[empty]
    classifier = JavaTypeParameterImpl@570['K']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@533
}

LazyJavaClassifierType@571['K'] {
    arguments = ArrayList@572[empty]
    classifier = JavaTypeParameterImpl@573['K']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@546
}

LazyJavaClassifierType@574['K'] {
    arguments = ArrayList@575[empty]
    classifier = JavaTypeParameterImpl@576['K']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@546
}

LazyJavaClassifierType@577['K'] {
    arguments = ArrayList@578[empty]
    classifier = JavaTypeParameterImpl@579['K']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@533
}

LazyJavaClassifierType@580['K'] {
    arguments = ArrayList@581[empty]
    classifier = JavaTypeParameterImpl@582['K']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@533
}

LazyJavaClassifierType@583['K'] {
    arguments = ArrayList@584[empty]
    classifier = JavaTypeParameterImpl@585['K']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@533
}

LazyJavaClassifierType@586['K'] {
    arguments = ArrayList@587[empty]
    classifier = JavaTypeParameterImpl@588['K']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@546
}

LazyJavaClassifierType@589['K'] {
    arguments = ArrayList@590[empty]
    classifier = JavaTypeParameterImpl@591['K']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@533
}

LazyJavaClassifierType@592['K'] {
    arguments = ArrayList@593[empty]
    classifier = JavaTypeParameterImpl@594['K']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@533
}

LazyJavaClassifierType@595['K'] {
    arguments = ArrayList@596[empty]
    classifier = JavaTypeParameterImpl@597['K']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@533
}

LazyJavaClassifierType@598['K'] {
    arguments = ArrayList@599[empty]
    classifier = JavaTypeParameterImpl@600['K']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@533
}

LazyJavaClassifierType@601['K'] {
    arguments = ArrayList@602[empty]
    classifier = JavaTypeParameterImpl@603['K']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@533
}

LazyJavaClassifierType@604['K'] {
    arguments = ArrayList@605[empty]
    classifier = JavaTypeParameterImpl@606['K']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@533
}

LazyJavaClassifierType@607['K'] {
    arguments = ArrayList@608[empty]
    classifier = JavaTypeParameterImpl@609['K']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@533
}

LazyJavaClassifierType@610['K'] {
    arguments = ArrayList@611[empty]
    classifier = JavaTypeParameterImpl@612['K']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@546
}

LazyJavaClassifierType@613['K'] {
    arguments = ArrayList@614[empty]
    classifier = JavaTypeParameterImpl@615['K']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@533
}

LazyJavaClassifierType@616['K'] {
    arguments = ArrayList@617[empty]
    classifier = JavaTypeParameterImpl@618['K']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@533
}

LazyJavaClassifierType@619['K'] {
    arguments = ArrayList@620[empty]
    classifier = JavaTypeParameterImpl@621['K']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@533
}

LazyJavaClassifierType@622['K'] {
    arguments = ArrayList@623[empty]
    classifier = JavaTypeParameterImpl@624['K']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@533
}

LazyJavaClassifierType@625['K'] {
    arguments = ArrayList@626[empty]
    classifier = JavaTypeParameterImpl@627['K']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@546
}

LazyJavaClassifierType@628['K'] {
    arguments = ArrayList@629[empty]
    classifier = JavaTypeParameterImpl@630['K']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@533
}

LazyJavaClassifierType@631['K'] {
    arguments = ArrayList@632[empty]
    classifier = JavaTypeParameterImpl@633['K']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@546
}

LazyJavaClassifierType@634['K'] {
    arguments = ArrayList@635[empty]
    classifier = JavaTypeParameterImpl@636['K']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@533
}

LazyJavaClassifierType@637['K'] {
    arguments = ArrayList@638[empty]
    classifier = JavaTypeParameterImpl@639['K']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@533
}

LazyJavaClassifierType@640['K'] {
    arguments = ArrayList@641[empty]
    classifier = JavaTypeParameterImpl@642['K']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@533
}

LazyJavaClassifierType@643['K'] {
    arguments = ArrayList@644[empty]
    classifier = JavaTypeParameterImpl@645['K']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@546
}

LazyJavaClassifierType@646['K'] {
    arguments = ArrayList@647[empty]
    classifier = JavaTypeParameterImpl@648['K']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@533
}

LazyJavaClassifierType@649['K'] {
    arguments = ArrayList@650[empty]
    classifier = JavaTypeParameterImpl@651['K']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@533
}

LazyJavaClassifierType@652['K'] {
    arguments = ArrayList@653[empty]
    classifier = JavaTypeParameterImpl@654['K']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@546
}

LazyJavaClassifierType@655['K'] {
    arguments = ArrayList@656[empty]
    classifier = JavaTypeParameterImpl@657['K']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@533
}

LazyJavaClassifierType@658['K'] {
    arguments = ArrayList@659[empty]
    classifier = JavaTypeParameterImpl@660['K']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@546
}

LazyJavaClassifierType@661['K'] {
    arguments = ArrayList@662[empty]
    classifier = JavaTypeParameterImpl@663['K']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@533
}

LazyJavaClassifierType@664['K'] {
    arguments = ArrayList@665[empty]
    classifier = JavaTypeParameterImpl@666['K']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@533
}

LazyJavaClassifierType@667['K'] {
    arguments = ArrayList@668[empty]
    classifier = JavaTypeParameterImpl@669['K']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@533
}

LazyJavaClassifierType@670['K'] {
    arguments = ArrayList@671[empty]
    classifier = JavaTypeParameterImpl@672['K']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@533
}

LazyJavaClassifierType@673['K'] {
    arguments = ArrayList@674[empty]
    classifier = JavaTypeParameterImpl@675['K']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@533
}

LazyJavaClassifierType@676['K'] {
    arguments = ArrayList@677[empty]
    classifier = JavaTypeParameterImpl@678['K']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@533
}

LazyJavaClassifierType@679['K'] {
    arguments = ArrayList@680[empty]
    classifier = JavaTypeParameterImpl@681['K']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@533
}

LazyJavaClassifierType@682['K'] {
    arguments = ArrayList@683[empty]
    classifier = JavaTypeParameterImpl@684['K']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@533
}

LazyJavaClassifierType@685['K'] {
    arguments = ArrayList@686[empty]
    classifier = JavaTypeParameterImpl@687['K']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@546
}

LazyJavaClassifierType@688['K'] {
    arguments = ArrayList@689[empty]
    classifier = JavaTypeParameterImpl@573['K']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@546
}

LazyJavaClassifierType@690['K'] {
    arguments = ArrayList@691[empty]
    classifier = JavaTypeParameterImpl@579['K']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@533
}

LazyJavaClassifierType@692['K'] {
    arguments = ArrayList@693[empty]
    classifier = JavaTypeParameterImpl@567['K']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@546
}

LazyJavaClassifierType@694['K'] {
    arguments = ArrayList@695[empty]
    classifier = JavaTypeParameterImpl@597['K']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@533
}

LazyJavaClassifierType@696['K'] {
    arguments = ArrayList@697[empty]
    classifier = JavaTypeParameterImpl@615['K']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@533
}

LazyJavaClassifierType@698['K'] {
    arguments = ArrayList@699[empty]
    classifier = JavaTypeParameterImpl@609['K']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@533
}

LazyJavaClassifierType@700['K'] {
    arguments = ArrayList@701[empty]
    classifier = JavaTypeParameterImpl@591['K']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@533
}

LazyJavaClassifierType@702['K'] {
    arguments = ArrayList@703[empty]
    classifier = JavaTypeParameterImpl@585['K']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@533
}

LazyJavaClassifierType@704['K'] {
    arguments = ArrayList@705[empty]
    classifier = JavaTypeParameterImpl@645['K']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@546
}

LazyJavaClassifierType@706['K'] {
    arguments = ArrayList@707[empty]
    classifier = JavaTypeParameterImpl@636['K']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@533
}

LazyJavaClassifierType@708['K'] {
    arguments = ArrayList@709[empty]
    classifier = JavaTypeParameterImpl@672['K']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@533
}

LazyJavaClassifierType@710['K'] {
    arguments = ArrayList@711[empty]
    classifier = JavaTypeParameterImpl@545['K']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@546
}

LazyJavaClassifierType@712['K'] {
    arguments = ArrayList@713[empty]
    classifier = JavaTypeParameterImpl@654['K']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@546
}

LazyJavaClassifierType@714['K'] {
    arguments = ArrayList@715[empty]
    classifier = JavaTypeParameterImpl@555['K']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@533
}

LazyJavaClassifierType@716['K'] {
    arguments = ArrayList@717[empty]
    classifier = JavaTypeParameterImpl@618['K']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@533
}

LazyJavaClassifierType@718['K'] {
    arguments = ArrayList@719[empty]
    classifier = JavaTypeParameterImpl@684['K']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@533
}

LazyJavaClassifierType@720['K'] {
    arguments = ArrayList@721[empty]
    classifier = JavaTypeParameterImpl@666['K']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@533
}

LazyJavaClassifierType@722['K'] {
    arguments = ArrayList@723[empty]
    classifier = JavaTypeParameterImpl@603['K']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@533
}

LazyJavaClassifierType@724['K'] {
    arguments = ArrayList@725[empty]
    classifier = JavaTypeParameterImpl@663['K']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@533
}

LazyJavaClassifierType@726['K'] {
    arguments = ArrayList@727[empty]
    classifier = JavaTypeParameterImpl@558['K']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@533
}

LazyJavaClassifierType@728['K'] {
    arguments = ArrayList@729[empty]
    classifier = JavaTypeParameterImpl@687['K']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@546
}

LazyJavaClassifierType@730['K'] {
    arguments = ArrayList@731[empty]
    classifier = JavaTypeParameterImpl@588['K']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@546
}

LazyJavaClassifierType@732['K'] {
    arguments = ArrayList@733[empty]
    classifier = JavaTypeParameterImpl@660['K']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@546
}

LazyJavaClassifierType@734['K'] {
    arguments = ArrayList@735[empty]
    classifier = JavaTypeParameterImpl@642['K']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@533
}

LazyJavaClassifierType@736['K'] {
    arguments = ArrayList@737[empty]
    classifier = JavaTypeParameterImpl@633['K']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@546
}

LazyJavaClassifierType@738['K'] {
    arguments = ArrayList@739[empty]
    classifier = JavaTypeParameterImpl@576['K']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@546
}

LazyJavaClassifierType@740['K'] {
    arguments = ArrayList@741[empty]
    classifier = JavaTypeParameterImpl@630['K']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@533
}

LazyJavaClassifierType@742['K'] {
    arguments = ArrayList@743[empty]
    classifier = JavaTypeParameterImpl@564['K']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@533
}

LazyJavaClassifierType@744['K'] {
    arguments = ArrayList@745[empty]
    classifier = JavaTypeParameterImpl@606['K']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@533
}

LazyJavaClassifierType@746['K'] {
    arguments = ArrayList@747[empty]
    classifier = JavaTypeParameterImpl@594['K']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@533
}

LazyJavaClassifierType@748['K'] {
    arguments = ArrayList@749[empty]
    classifier = JavaTypeParameterImpl@532['K']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@533
}

LazyJavaClassifierType@750['K'] {
    arguments = ArrayList@751[empty]
    classifier = JavaTypeParameterImpl@612['K']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@546
}

LazyJavaClassifierType@752['K'] {
    arguments = ArrayList@753[empty]
    classifier = JavaTypeParameterImpl@570['K']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@533
}

LazyJavaClassifierType@754['K'] {
    arguments = ArrayList@755[empty]
    classifier = JavaTypeParameterImpl@600['K']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@533
}

LazyJavaClassifierType@756['K'] {
    arguments = ArrayList@757[empty]
    classifier = JavaTypeParameterImpl@681['K']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@533
}

LazyJavaClassifierType@758['K'] {
    arguments = ArrayList@759[empty]
    classifier = JavaTypeParameterImpl@624['K']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@533
}

LazyJavaClassifierType@760['K'] {
    arguments = ArrayList@761[empty]
    classifier = JavaTypeParameterImpl@651['K']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@533
}

LazyJavaClassifierType@762['K'] {
    arguments = ArrayList@763[empty]
    classifier = JavaTypeParameterImpl@657['K']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@533
}

LazyJavaClassifierType@764['K'] {
    arguments = ArrayList@765[empty]
    classifier = JavaTypeParameterImpl@648['K']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@533
}

LazyJavaClassifierType@766['K'] {
    arguments = ArrayList@767[empty]
    classifier = JavaTypeParameterImpl@582['K']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@533
}

LazyJavaClassifierType@768['K'] {
    arguments = ArrayList@769[empty]
    classifier = JavaTypeParameterImpl@552['K']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@533
}

LazyJavaClassifierType@770['K'] {
    arguments = ArrayList@771[empty]
    classifier = JavaTypeParameterImpl@539['K']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@533
}

LazyJavaClassifierType@772['K'] {
    arguments = ArrayList@773[empty]
    classifier = JavaTypeParameterImpl@675['K']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@533
}

LazyJavaClassifierType@774['K'] {
    arguments = ArrayList@775[empty]
    classifier = JavaTypeParameterImpl@536['K']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@533
}

LazyJavaClassifierType@776['K'] {
    arguments = ArrayList@777[empty]
    classifier = JavaTypeParameterImpl@627['K']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@546
}

LazyJavaClassifierType@778['K'] {
    arguments = ArrayList@779[empty]
    classifier = JavaTypeParameterImpl@549['K']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@533
}

LazyJavaClassifierType@780['K'] {
    arguments = ArrayList@781[empty]
    classifier = JavaTypeParameterImpl@621['K']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@533
}

LazyJavaClassifierType@782['K'] {
    arguments = ArrayList@783[empty]
    classifier = JavaTypeParameterImpl@669['K']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@533
}

LazyJavaClassifierType@784['K'] {
    arguments = ArrayList@785[empty]
    classifier = JavaTypeParameterImpl@678['K']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@533
}

LazyJavaClassifierType@786['K'] {
    arguments = ArrayList@787[empty]
    classifier = JavaTypeParameterImpl@542['K']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@533
}

LazyJavaClassifierType@788['K'] {
    arguments = ArrayList@789[empty]
    classifier = JavaTypeParameterImpl@639['K']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@533
}

LazyJavaClassifierType@790['K'] {
    arguments = ArrayList@791[empty]
    classifier = JavaTypeParameterImpl@561['K']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@533
}

LazyJavaClassifierType@792['Map<? extends K, ? extends V>'] {
    arguments = ArrayList@793[2] { TypeProjectionImpl@794, TypeProjectionImpl@795 }
    classifier = JavaClassImpl@796['Map']
    memberScope = SubstitutingScope@797
    nullable = 'false': Boolean@299
    typeConstructor = DeserializedClassTypeConstructor@798
}

LazyJavaClassifierType@799['Map<? extends K, ? extends V>'] {
    arguments = ArrayList@800[2] { TypeProjectionImpl@801, TypeProjectionImpl@802 }
    classifier = JavaClassImpl@803['Map']
    memberScope = SubstitutingScope@804
    nullable = 'false': Boolean@299
    typeConstructor = DeserializedClassTypeConstructor@798
}

LazyJavaClassifierType@805['Map<? extends K, ? extends V>'] {
    arguments = ArrayList@806[2] { TypeProjectionImpl@807, TypeProjectionImpl@808 }
    classifier = JavaClassImpl@809['Map']
    memberScope = SubstitutingScope@810
    nullable = 'false': Boolean@299
    typeConstructor = DeserializedClassTypeConstructor@798
}

LazyJavaClassifierType@811['Map<? extends K, ? extends V>'] {
    arguments = ArrayList@812[2] { TypeProjectionImpl@813, TypeProjectionImpl@814 }
    classifier = JavaClassImpl@815['Map']
    memberScope = SubstitutingScope@816
    nullable = 'false': Boolean@299
    typeConstructor = DeserializedClassTypeConstructor@798
}

LazyJavaClassifierType@817['Map<? extends K, ? extends V>'] {
    arguments = ArrayList@818[2] { TypeProjectionImpl@819, TypeProjectionImpl@820 }
    classifier = JavaClassImpl@809['Map']
    memberScope = SubstitutingScope@821
    nullable = 'true': Boolean@324
    typeConstructor = DeserializedClassTypeConstructor@822
}

LazyJavaClassifierType@823['Map<? extends K, ? extends V>'] {
    arguments = ArrayList@824[2] { TypeProjectionImpl@825, TypeProjectionImpl@826 }
    classifier = JavaClassImpl@815['Map']
    memberScope = SubstitutingScope@827
    nullable = 'true': Boolean@324
    typeConstructor = DeserializedClassTypeConstructor@822
}

LazyJavaClassifierType@828['Map<? extends K, ? extends V>'] {
    arguments = ArrayList@829[2] { TypeProjectionImpl@830, TypeProjectionImpl@831 }
    classifier = JavaClassImpl@803['Map']
    memberScope = SubstitutingScope@832
    nullable = 'true': Boolean@324
    typeConstructor = DeserializedClassTypeConstructor@822
}

LazyJavaClassifierType@833['Map<? extends K, ? extends V>'] {
    arguments = ArrayList@834[2] { TypeProjectionImpl@835, TypeProjectionImpl@836 }
    classifier = JavaClassImpl@796['Map']
    memberScope = SubstitutingScope@837
    nullable = 'true': Boolean@324
    typeConstructor = DeserializedClassTypeConstructor@822
}

LazyJavaClassifierType@287['Map<K, V>'] {
    arguments = ArrayList@838[2] { TypeProjectionImpl@839, TypeProjectionImpl@840 }
    classifier = JavaClassImpl@841['Map']
    memberScope = SubstitutingScope@842
    nullable = 'false': Boolean@299
    typeConstructor = DeserializedClassTypeConstructor@798
}

LazyJavaClassifierType@278['Map<K, V>'] {
    arguments = ArrayList@843[2] { TypeProjectionImpl@844, TypeProjectionImpl@845 }
    classifier = JavaClassImpl@846['Map']
    memberScope = SubstitutingScope@847
    nullable = 'false': Boolean@299
    typeConstructor = DeserializedClassTypeConstructor@798
}

LazyJavaClassifierType@848['Object'] {
    arguments = ArrayList@849[empty]
    classifier = JavaClassImpl@850['Object']
    memberScope = DeserializedClassMemberScope@851
    nullable = 'false': Boolean@299
    typeConstructor = DeserializedClassTypeConstructor@852
}

LazyJavaClassifierType@853['Object'] {
    arguments = ArrayList@854[empty]
    classifier = JavaClassImpl@855['Object']
    memberScope = DeserializedClassMemberScope@851
    nullable = 'false': Boolean@299
    typeConstructor = DeserializedClassTypeConstructor@852
}

LazyJavaClassifierType@856['Object'] {
    arguments = ArrayList@857[empty]
    classifier = JavaClassImpl@858['Object']
    memberScope = DeserializedClassMemberScope@851
    nullable = 'false': Boolean@299
    typeConstructor = DeserializedClassTypeConstructor@852
}

LazyJavaClassifierType@859['Object'] {
    arguments = ArrayList@860[empty]
    classifier = JavaClassImpl@861['Object']
    memberScope = DeserializedClassMemberScope@851
    nullable = 'false': Boolean@299
    typeConstructor = DeserializedClassTypeConstructor@852
}

LazyJavaClassifierType@862['Object'] {
    arguments = ArrayList@863[empty]
    classifier = JavaClassImpl@864['Object']
    memberScope = DeserializedClassMemberScope@851
    nullable = 'false': Boolean@299
    typeConstructor = DeserializedClassTypeConstructor@852
}

LazyJavaClassifierType@865['Object'] {
    arguments = ArrayList@866[empty]
    classifier = JavaClassImpl@867['Object']
    memberScope = DeserializedClassMemberScope@851
    nullable = 'false': Boolean@299
    typeConstructor = DeserializedClassTypeConstructor@852
}

LazyJavaClassifierType@868['Object'] {
    arguments = ArrayList@869[empty]
    classifier = JavaClassImpl@870['Object']
    memberScope = DeserializedClassMemberScope@851
    nullable = 'false': Boolean@299
    typeConstructor = DeserializedClassTypeConstructor@852
}

LazyJavaClassifierType@871['Object'] {
    arguments = ArrayList@872[empty]
    classifier = JavaClassImpl@873['Object']
    memberScope = DeserializedClassMemberScope@851
    nullable = 'false': Boolean@299
    typeConstructor = DeserializedClassTypeConstructor@852
}

LazyJavaClassifierType@874['Object'] {
    arguments = ArrayList@875[empty]
    classifier = JavaClassImpl@876['Object']
    memberScope = DeserializedClassMemberScope@851
    nullable = 'false': Boolean@299
    typeConstructor = DeserializedClassTypeConstructor@852
}

LazyJavaClassifierType@877['Object'] {
    arguments = ArrayList@878[empty]
    classifier = JavaClassImpl@879['Object']
    memberScope = DeserializedClassMemberScope@851
    nullable = 'false': Boolean@299
    typeConstructor = DeserializedClassTypeConstructor@852
}

LazyJavaClassifierType@880['Object'] {
    arguments = ArrayList@881[empty]
    classifier = JavaClassImpl@882['Object']
    memberScope = DeserializedClassMemberScope@851
    nullable = 'false': Boolean@299
    typeConstructor = DeserializedClassTypeConstructor@852
}

LazyJavaClassifierType@883['Object'] {
    arguments = ArrayList@884[empty]
    classifier = JavaClassImpl@885['Object']
    memberScope = DeserializedClassMemberScope@851
    nullable = 'false': Boolean@299
    typeConstructor = DeserializedClassTypeConstructor@852
}

LazyJavaClassifierType@886['Object'] {
    arguments = ArrayList@887[empty]
    classifier = JavaClassImpl@888['Object']
    memberScope = DeserializedClassMemberScope@851
    nullable = 'false': Boolean@299
    typeConstructor = DeserializedClassTypeConstructor@852
}

LazyJavaClassifierType@889['Object'] {
    arguments = ArrayList@890[empty]
    classifier = JavaClassImpl@891['Object']
    memberScope = DeserializedClassMemberScope@851
    nullable = 'false': Boolean@299
    typeConstructor = DeserializedClassTypeConstructor@852
}

LazyJavaClassifierType@892['Object'] {
    arguments = ArrayList@893[empty]
    classifier = JavaClassImpl@894['Object']
    memberScope = DeserializedClassMemberScope@851
    nullable = 'false': Boolean@299
    typeConstructor = DeserializedClassTypeConstructor@852
}

LazyJavaClassifierType@895['Object'] {
    arguments = ArrayList@896[empty]
    classifier = JavaClassImpl@873['Object']
    memberScope = DeserializedClassMemberScope@851
    nullable = 'true': Boolean@324
    typeConstructor = DeserializedClassTypeConstructor@852
}

LazyJavaClassifierType@897['Object'] {
    arguments = ArrayList@898[empty]
    classifier = JavaClassImpl@858['Object']
    memberScope = DeserializedClassMemberScope@851
    nullable = 'true': Boolean@324
    typeConstructor = DeserializedClassTypeConstructor@852
}

LazyJavaClassifierType@899['Object'] {
    arguments = ArrayList@900[empty]
    classifier = JavaClassImpl@882['Object']
    memberScope = DeserializedClassMemberScope@851
    nullable = 'true': Boolean@324
    typeConstructor = DeserializedClassTypeConstructor@852
}

LazyJavaClassifierType@901['Object'] {
    arguments = ArrayList@902[empty]
    classifier = JavaClassImpl@876['Object']
    memberScope = DeserializedClassMemberScope@851
    nullable = 'true': Boolean@324
    typeConstructor = DeserializedClassTypeConstructor@852
}

LazyJavaClassifierType@903['Object'] {
    arguments = ArrayList@904[empty]
    classifier = JavaClassImpl@861['Object']
    memberScope = DeserializedClassMemberScope@851
    nullable = 'true': Boolean@324
    typeConstructor = DeserializedClassTypeConstructor@852
}

LazyJavaClassifierType@905['Object'] {
    arguments = ArrayList@906[empty]
    classifier = JavaClassImpl@888['Object']
    memberScope = DeserializedClassMemberScope@851
    nullable = 'true': Boolean@324
    typeConstructor = DeserializedClassTypeConstructor@852
}

LazyJavaClassifierType@907['Object'] {
    arguments = ArrayList@908[empty]
    classifier = JavaClassImpl@891['Object']
    memberScope = DeserializedClassMemberScope@851
    nullable = 'true': Boolean@324
    typeConstructor = DeserializedClassTypeConstructor@852
}

LazyJavaClassifierType@909['Object'] {
    arguments = ArrayList@910[empty]
    classifier = JavaClassImpl@870['Object']
    memberScope = DeserializedClassMemberScope@851
    nullable = 'true': Boolean@324
    typeConstructor = DeserializedClassTypeConstructor@852
}

LazyJavaClassifierType@911['Object'] {
    arguments = ArrayList@912[empty]
    classifier = JavaClassImpl@879['Object']
    memberScope = DeserializedClassMemberScope@851
    nullable = 'true': Boolean@324
    typeConstructor = DeserializedClassTypeConstructor@852
}

LazyJavaClassifierType@913['Object'] {
    arguments = ArrayList@914[empty]
    classifier = JavaClassImpl@885['Object']
    memberScope = DeserializedClassMemberScope@851
    nullable = 'true': Boolean@324
    typeConstructor = DeserializedClassTypeConstructor@852
}

LazyJavaClassifierType@915['Object'] {
    arguments = ArrayList@916[empty]
    classifier = JavaClassImpl@850['Object']
    memberScope = DeserializedClassMemberScope@851
    nullable = 'true': Boolean@324
    typeConstructor = DeserializedClassTypeConstructor@852
}

LazyJavaClassifierType@917['Object'] {
    arguments = ArrayList@918[empty]
    classifier = JavaClassImpl@867['Object']
    memberScope = DeserializedClassMemberScope@851
    nullable = 'true': Boolean@324
    typeConstructor = DeserializedClassTypeConstructor@852
}

LazyJavaClassifierType@919['Object'] {
    arguments = ArrayList@920[empty]
    classifier = JavaClassImpl@855['Object']
    memberScope = DeserializedClassMemberScope@851
    nullable = 'true': Boolean@324
    typeConstructor = DeserializedClassTypeConstructor@852
}

LazyJavaClassifierType@921['Object'] {
    arguments = ArrayList@922[empty]
    classifier = JavaClassImpl@864['Object']
    memberScope = DeserializedClassMemberScope@851
    nullable = 'true': Boolean@324
    typeConstructor = DeserializedClassTypeConstructor@852
}

LazyJavaClassifierType@923['Object'] {
    arguments = ArrayList@924[empty]
    classifier = JavaClassImpl@894['Object']
    memberScope = DeserializedClassMemberScope@851
    nullable = 'true': Boolean@324
    typeConstructor = DeserializedClassTypeConstructor@852
}

LazyJavaClassifierType@925['Object'] {
    classifier = JavaClassImpl@926['Object']
    typeConstructor = DeserializedClassTypeConstructor@852
}

LazyJavaClassifierType@927['Object'] {
    classifier = JavaClassImpl@928['Object']
    typeConstructor = DeserializedClassTypeConstructor@852
}

LazyJavaClassifierType@929['ObjectInputStream'] {
    arguments = ArrayList@930[empty]
    classifier = JavaClassImpl@931['ObjectInputStream']
    memberScope = LazyJavaClassMemberScope@932
    nullable = 'false': Boolean@299
    typeConstructor = LazyJavaClassTypeConstructor@260['ObjectInputStream']
}

LazyJavaClassifierType@933['ObjectInputStream'] {
    arguments = ArrayList@934[empty]
    classifier = JavaClassImpl@931['ObjectInputStream']
    memberScope = LazyJavaClassMemberScope@932
    nullable = 'true': Boolean@324
    typeConstructor = LazyJavaClassTypeConstructor@260['ObjectInputStream']
}

LazyJavaClassifierType@935['ObjectOutputStream'] {
    arguments = ArrayList@936[empty]
    classifier = JavaClassImpl@937['ObjectOutputStream']
    memberScope = LazyJavaClassMemberScope@938
    nullable = 'false': Boolean@299
    typeConstructor = LazyJavaClassTypeConstructor@262['ObjectOutputStream']
}

LazyJavaClassifierType@939['ObjectOutputStream'] {
    arguments = ArrayList@940[empty]
    classifier = JavaClassImpl@937['ObjectOutputStream']
    memberScope = LazyJavaClassMemberScope@938
    nullable = 'true': Boolean@324
    typeConstructor = LazyJavaClassTypeConstructor@262['ObjectOutputStream']
}

LazyJavaClassifierType@941['Serializable'] {
    arguments = ArrayList@942[empty]
    classifier = JavaClassImpl@943['Serializable']
    memberScope = LazyJavaClassMemberScope@265
    nullable = 'false': Boolean@299
    typeConstructor = LazyJavaClassTypeConstructor@273['Serializable']
}

LazyJavaClassifierType@944['Set<Entry<K, V>>'] {
    arguments = ArrayList@945[1] { TypeProjectionImpl@946 }
    classifier = JavaClassImpl@947['Set']
    memberScope = SubstitutingScope@948
    nullable = 'false': Boolean@299
    typeConstructor = DeserializedClassTypeConstructor@949
}

LazyJavaClassifierType@950['Set<Entry<K, V>>'] {
    arguments = ArrayList@951[1] { TypeProjectionImpl@952 }
    classifier = JavaClassImpl@953['Set']
    memberScope = SubstitutingScope@954
    nullable = 'false': Boolean@299
    typeConstructor = DeserializedClassTypeConstructor@949
}

LazyJavaClassifierType@955['Set<Entry<K, V>>'] {
    arguments = ArrayList@956[1] { TypeProjectionImpl@957 }
    classifier = JavaClassImpl@958['Set']
    memberScope = SubstitutingScope@959
    nullable = 'false': Boolean@299
    typeConstructor = DeserializedClassTypeConstructor@949
}

LazyJavaClassifierType@960['Set<Entry<K, V>>'] {
    arguments = ArrayList@961[1] { TypeProjectionImpl@962 }
    classifier = JavaClassImpl@963['Set']
    memberScope = SubstitutingScope@964
    nullable = 'false': Boolean@299
    typeConstructor = DeserializedClassTypeConstructor@949
}

LazyJavaClassifierType@965['Set<Entry<K, V>>'] {
    arguments = ArrayList@966[1] { TypeProjectionImpl@967 }
    classifier = JavaClassImpl@953['Set']
    memberScope = SubstitutingScope@968
    nullable = 'true': Boolean@324
    typeConstructor = DeserializedClassTypeConstructor@969
}

LazyJavaClassifierType@970['Set<Entry<K, V>>'] {
    arguments = ArrayList@971[1] { TypeProjectionImpl@972 }
    classifier = JavaClassImpl@947['Set']
    memberScope = SubstitutingScope@973
    nullable = 'true': Boolean@324
    typeConstructor = DeserializedClassTypeConstructor@969
}

LazyJavaClassifierType@974['Set<Entry<K, V>>'] {
    arguments = ArrayList@975[1] { TypeProjectionImpl@976 }
    classifier = JavaClassImpl@963['Set']
    memberScope = SubstitutingScope@977
    nullable = 'true': Boolean@324
    typeConstructor = DeserializedClassTypeConstructor@969
}

LazyJavaClassifierType@978['Set<Entry<K, V>>'] {
    arguments = ArrayList@979[1] { TypeProjectionImpl@980 }
    classifier = JavaClassImpl@958['Set']
    memberScope = SubstitutingScope@981
    nullable = 'true': Boolean@324
    typeConstructor = DeserializedClassTypeConstructor@969
}

LazyJavaClassifierType@982['Set<K>'] {
    arguments = ArrayList@983[1] { TypeProjectionImpl@984 }
    classifier = JavaClassImpl@985['Set']
    memberScope = SubstitutingScope@986
    nullable = 'false': Boolean@299
    typeConstructor = DeserializedClassTypeConstructor@949
}

LazyJavaClassifierType@987['Set<K>'] {
    arguments = ArrayList@988[1] { TypeProjectionImpl@989 }
    classifier = JavaClassImpl@990['Set']
    memberScope = SubstitutingScope@991
    nullable = 'false': Boolean@299
    typeConstructor = DeserializedClassTypeConstructor@949
}

LazyJavaClassifierType@992['Set<K>'] {
    arguments = ArrayList@993[1] { TypeProjectionImpl@994 }
    classifier = JavaClassImpl@995['Set']
    memberScope = SubstitutingScope@996
    nullable = 'false': Boolean@299
    typeConstructor = DeserializedClassTypeConstructor@949
}

LazyJavaClassifierType@997['Set<K>'] {
    arguments = ArrayList@998[1] { TypeProjectionImpl@999 }
    classifier = JavaClassImpl@990['Set']
    memberScope = SubstitutingScope@1000
    nullable = 'true': Boolean@324
    typeConstructor = DeserializedClassTypeConstructor@969
}

LazyJavaClassifierType@1001['Set<K>'] {
    arguments = ArrayList@1002[1] { TypeProjectionImpl@1003 }
    classifier = JavaClassImpl@985['Set']
    memberScope = SubstitutingScope@1004
    nullable = 'true': Boolean@324
    typeConstructor = DeserializedClassTypeConstructor@969
}

LazyJavaClassifierType@1005['Set<K>'] {
    arguments = ArrayList@1006[1] { TypeProjectionImpl@1007 }
    classifier = JavaClassImpl@995['Set']
    memberScope = SubstitutingScope@1008
    nullable = 'true': Boolean@324
    typeConstructor = DeserializedClassTypeConstructor@969
}

LazyJavaClassifierType@1009['String'] {
    arguments = ArrayList@1010[empty]
    classifier = JavaClassImpl@1011['String']
    memberScope = DeserializedClassMemberScope@1012
    nullable = 'false': Boolean@299
    typeConstructor = DeserializedClassTypeConstructor@1013
}

LazyJavaClassifierType@1014['String'] {
    arguments = ArrayList@1015[empty]
    classifier = JavaClassImpl@1011['String']
    memberScope = DeserializedClassMemberScope@1012
    nullable = 'true': Boolean@324
    typeConstructor = DeserializedClassTypeConstructor@1013
}

LazyJavaClassifierType@1016['V'] {
    arguments = ArrayList@1017[empty]
    classifier = JavaTypeParameterImpl@1018['V']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1019
}

LazyJavaClassifierType@1020['V'] {
    arguments = ArrayList@1021[empty]
    classifier = JavaTypeParameterImpl@1022['V']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1019
}

LazyJavaClassifierType@1023['V'] {
    arguments = ArrayList@1024[empty]
    classifier = JavaTypeParameterImpl@1025['V']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1019
}

LazyJavaClassifierType@1026['V'] {
    arguments = ArrayList@1027[empty]
    classifier = JavaTypeParameterImpl@1028['V']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1019
}

LazyJavaClassifierType@1029['V'] {
    arguments = ArrayList@1030[empty]
    classifier = JavaTypeParameterImpl@1031['V']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1019
}

LazyJavaClassifierType@1032['V'] {
    arguments = ArrayList@1033[empty]
    classifier = JavaTypeParameterImpl@1034['V']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1019
}

LazyJavaClassifierType@1035['V'] {
    arguments = ArrayList@1036[empty]
    classifier = JavaTypeParameterImpl@1037['V']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1019
}

LazyJavaClassifierType@1038['V'] {
    arguments = ArrayList@1039[empty]
    classifier = JavaTypeParameterImpl@1040['V']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1019
}

LazyJavaClassifierType@1041['V'] {
    arguments = ArrayList@1042[empty]
    classifier = JavaTypeParameterImpl@1043['V']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1019
}

LazyJavaClassifierType@1044['V'] {
    arguments = ArrayList@1045[empty]
    classifier = JavaTypeParameterImpl@1046['V']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1019
}

LazyJavaClassifierType@1047['V'] {
    arguments = ArrayList@1048[empty]
    classifier = JavaTypeParameterImpl@1049['V']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1050
}

LazyJavaClassifierType@1051['V'] {
    arguments = ArrayList@1052[empty]
    classifier = JavaTypeParameterImpl@1053['V']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1019
}

LazyJavaClassifierType@1054['V'] {
    arguments = ArrayList@1055[empty]
    classifier = JavaTypeParameterImpl@1056['V']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1019
}

LazyJavaClassifierType@1057['V'] {
    arguments = ArrayList@1058[empty]
    classifier = JavaTypeParameterImpl@1059['V']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1050
}

LazyJavaClassifierType@1060['V'] {
    arguments = ArrayList@1061[empty]
    classifier = JavaTypeParameterImpl@1062['V']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1019
}

LazyJavaClassifierType@1063['V'] {
    arguments = ArrayList@1064[empty]
    classifier = JavaTypeParameterImpl@1065['V']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1019
}

LazyJavaClassifierType@1066['V'] {
    arguments = ArrayList@1067[empty]
    classifier = JavaTypeParameterImpl@1068['V']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1019
}

LazyJavaClassifierType@1069['V'] {
    arguments = ArrayList@1070[empty]
    classifier = JavaTypeParameterImpl@1071['V']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1019
}

LazyJavaClassifierType@1072['V'] {
    arguments = ArrayList@1073[empty]
    classifier = JavaTypeParameterImpl@1074['V']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1019
}

LazyJavaClassifierType@1075['V'] {
    arguments = ArrayList@1076[empty]
    classifier = JavaTypeParameterImpl@1077['V']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1019
}

LazyJavaClassifierType@1078['V'] {
    arguments = ArrayList@1079[empty]
    classifier = JavaTypeParameterImpl@1080['V']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1019
}

LazyJavaClassifierType@1081['V'] {
    arguments = ArrayList@1082[empty]
    classifier = JavaTypeParameterImpl@1083['V']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1019
}

LazyJavaClassifierType@1084['V'] {
    arguments = ArrayList@1085[empty]
    classifier = JavaTypeParameterImpl@1086['V']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1019
}

LazyJavaClassifierType@1087['V'] {
    arguments = ArrayList@1088[empty]
    classifier = JavaTypeParameterImpl@1089['V']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1019
}

LazyJavaClassifierType@1090['V'] {
    arguments = ArrayList@1091[empty]
    classifier = JavaTypeParameterImpl@1092['V']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1019
}

LazyJavaClassifierType@1093['V'] {
    arguments = ArrayList@1094[empty]
    classifier = JavaTypeParameterImpl@1095['V']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1019
}

LazyJavaClassifierType@1096['V'] {
    arguments = ArrayList@1097[empty]
    classifier = JavaTypeParameterImpl@1098['V']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1050
}

LazyJavaClassifierType@1099['V'] {
    arguments = ArrayList@1100[empty]
    classifier = JavaTypeParameterImpl@1101['V']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1050
}

LazyJavaClassifierType@1102['V'] {
    arguments = ArrayList@1103[empty]
    classifier = JavaTypeParameterImpl@1104['V']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1019
}

LazyJavaClassifierType@1105['V'] {
    arguments = ArrayList@1106[empty]
    classifier = JavaTypeParameterImpl@1107['V']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1050
}

LazyJavaClassifierType@1108['V'] {
    arguments = ArrayList@1109[empty]
    classifier = JavaTypeParameterImpl@1110['V']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1019
}

LazyJavaClassifierType@1111['V'] {
    arguments = ArrayList@1112[empty]
    classifier = JavaTypeParameterImpl@1113['V']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1019
}

LazyJavaClassifierType@1114['V'] {
    arguments = ArrayList@1115[empty]
    classifier = JavaTypeParameterImpl@1116['V']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1050
}

LazyJavaClassifierType@1117['V'] {
    arguments = ArrayList@1118[empty]
    classifier = JavaTypeParameterImpl@1119['V']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1019
}

LazyJavaClassifierType@1120['V'] {
    arguments = ArrayList@1121[empty]
    classifier = JavaTypeParameterImpl@1122['V']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1019
}

LazyJavaClassifierType@1123['V'] {
    arguments = ArrayList@1124[empty]
    classifier = JavaTypeParameterImpl@1125['V']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1050
}

LazyJavaClassifierType@1126['V'] {
    arguments = ArrayList@1127[empty]
    classifier = JavaTypeParameterImpl@1128['V']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1019
}

LazyJavaClassifierType@1129['V'] {
    arguments = ArrayList@1130[empty]
    classifier = JavaTypeParameterImpl@1131['V']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1019
}

LazyJavaClassifierType@1132['V'] {
    arguments = ArrayList@1133[empty]
    classifier = JavaTypeParameterImpl@1134['V']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1050
}

LazyJavaClassifierType@1135['V'] {
    arguments = ArrayList@1136[empty]
    classifier = JavaTypeParameterImpl@1137['V']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1019
}

LazyJavaClassifierType@1138['V'] {
    arguments = ArrayList@1139[empty]
    classifier = JavaTypeParameterImpl@1140['V']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1019
}

LazyJavaClassifierType@1141['V'] {
    arguments = ArrayList@1142[empty]
    classifier = JavaTypeParameterImpl@1143['V']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1019
}

LazyJavaClassifierType@1144['V'] {
    arguments = ArrayList@1145[empty]
    classifier = JavaTypeParameterImpl@1146['V']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1019
}

LazyJavaClassifierType@1147['V'] {
    arguments = ArrayList@1148[empty]
    classifier = JavaTypeParameterImpl@1149['V']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1050
}

LazyJavaClassifierType@1150['V'] {
    arguments = ArrayList@1151[empty]
    classifier = JavaTypeParameterImpl@1152['V']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1019
}

LazyJavaClassifierType@1153['V'] {
    arguments = ArrayList@1154[empty]
    classifier = JavaTypeParameterImpl@1155['V']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1019
}

LazyJavaClassifierType@1156['V'] {
    arguments = ArrayList@1157[empty]
    classifier = JavaTypeParameterImpl@1158['V']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1019
}

LazyJavaClassifierType@1159['V'] {
    arguments = ArrayList@1160[empty]
    classifier = JavaTypeParameterImpl@1161['V']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1019
}

LazyJavaClassifierType@1162['V'] {
    arguments = ArrayList@1163[empty]
    classifier = JavaTypeParameterImpl@1164['V']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1050
}

LazyJavaClassifierType@1165['V'] {
    arguments = ArrayList@1166[empty]
    classifier = JavaTypeParameterImpl@1167['V']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1019
}

LazyJavaClassifierType@1168['V'] {
    arguments = ArrayList@1169[empty]
    classifier = JavaTypeParameterImpl@1170['V']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1050
}

LazyJavaClassifierType@1171['V'] {
    arguments = ArrayList@1172[empty]
    classifier = JavaTypeParameterImpl@1173['V']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1050
}

LazyJavaClassifierType@1174['V'] {
    arguments = ArrayList@1175[empty]
    classifier = JavaTypeParameterImpl@1176['V']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1019
}

LazyJavaClassifierType@1177['V'] {
    arguments = ArrayList@1178[empty]
    classifier = JavaTypeParameterImpl@1179['V']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1019
}

LazyJavaClassifierType@1180['V'] {
    arguments = ArrayList@1181[empty]
    classifier = JavaTypeParameterImpl@1182['V']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1019
}

LazyJavaClassifierType@1183['V'] {
    arguments = ArrayList@1184[empty]
    classifier = JavaTypeParameterImpl@1185['V']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1019
}

LazyJavaClassifierType@1186['V'] {
    arguments = ArrayList@1187[empty]
    classifier = JavaTypeParameterImpl@1188['V']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1050
}

LazyJavaClassifierType@1189['V'] {
    arguments = ArrayList@1190[empty]
    classifier = JavaTypeParameterImpl@1191['V']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1019
}

LazyJavaClassifierType@1192['V'] {
    arguments = ArrayList@1193[empty]
    classifier = JavaTypeParameterImpl@1194['V']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1050
}

LazyJavaClassifierType@1195['V'] {
    arguments = ArrayList@1196[empty]
    classifier = JavaTypeParameterImpl@1197['V']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1019
}

LazyJavaClassifierType@1198['V'] {
    arguments = ArrayList@1199[empty]
    classifier = JavaTypeParameterImpl@1200['V']
    nullable = 'false': Boolean@299
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1050
}

LazyJavaClassifierType@1201['V'] {
    arguments = ArrayList@1202[empty]
    classifier = JavaTypeParameterImpl@1170['V']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1050
}

LazyJavaClassifierType@1203['V'] {
    arguments = ArrayList@1204[empty]
    classifier = JavaTypeParameterImpl@1194['V']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1050
}

LazyJavaClassifierType@1205['V'] {
    arguments = ArrayList@1206[empty]
    classifier = JavaTypeParameterImpl@1074['V']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1019
}

LazyJavaClassifierType@1207['V'] {
    arguments = ArrayList@1208[empty]
    classifier = JavaTypeParameterImpl@1158['V']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1019
}

LazyJavaClassifierType@1209['V'] {
    arguments = ArrayList@1210[empty]
    classifier = JavaTypeParameterImpl@1098['V']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1050
}

LazyJavaClassifierType@1211['V'] {
    arguments = ArrayList@1212[empty]
    classifier = JavaTypeParameterImpl@1071['V']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1019
}

LazyJavaClassifierType@1213['V'] {
    arguments = ArrayList@1214[empty]
    classifier = JavaTypeParameterImpl@1089['V']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1019
}

LazyJavaClassifierType@1215['V'] {
    arguments = ArrayList@1216[empty]
    classifier = JavaTypeParameterImpl@1046['V']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1019
}

LazyJavaClassifierType@1217['V'] {
    arguments = ArrayList@1218[empty]
    classifier = JavaTypeParameterImpl@1152['V']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1019
}

LazyJavaClassifierType@1219['V'] {
    arguments = ArrayList@1220[empty]
    classifier = JavaTypeParameterImpl@1164['V']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1050
}

LazyJavaClassifierType@1221['V'] {
    arguments = ArrayList@1222[empty]
    classifier = JavaTypeParameterImpl@1176['V']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1019
}

LazyJavaClassifierType@1223['V'] {
    arguments = ArrayList@1224[empty]
    classifier = JavaTypeParameterImpl@1131['V']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1019
}

LazyJavaClassifierType@1225['V'] {
    arguments = ArrayList@1226[empty]
    classifier = JavaTypeParameterImpl@1056['V']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1019
}

LazyJavaClassifierType@1227['V'] {
    arguments = ArrayList@1228[empty]
    classifier = JavaTypeParameterImpl@1083['V']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1019
}

LazyJavaClassifierType@1229['V'] {
    arguments = ArrayList@1230[empty]
    classifier = JavaTypeParameterImpl@1188['V']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1050
}

LazyJavaClassifierType@1231['V'] {
    arguments = ArrayList@1232[empty]
    classifier = JavaTypeParameterImpl@1200['V']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1050
}

LazyJavaClassifierType@1233['V'] {
    arguments = ArrayList@1234[empty]
    classifier = JavaTypeParameterImpl@1179['V']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1019
}

LazyJavaClassifierType@1235['V'] {
    arguments = ArrayList@1236[empty]
    classifier = JavaTypeParameterImpl@1068['V']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1019
}

LazyJavaClassifierType@1237['V'] {
    arguments = ArrayList@1238[empty]
    classifier = JavaTypeParameterImpl@1116['V']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1050
}

LazyJavaClassifierType@1239['V'] {
    arguments = ArrayList@1240[empty]
    classifier = JavaTypeParameterImpl@1062['V']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1019
}

LazyJavaClassifierType@1241['V'] {
    arguments = ArrayList@1242[empty]
    classifier = JavaTypeParameterImpl@1119['V']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1019
}

LazyJavaClassifierType@1243['V'] {
    arguments = ArrayList@1244[empty]
    classifier = JavaTypeParameterImpl@1018['V']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1019
}

LazyJavaClassifierType@1245['V'] {
    arguments = ArrayList@1246[empty]
    classifier = JavaTypeParameterImpl@1167['V']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1019
}

LazyJavaClassifierType@1247['V'] {
    arguments = ArrayList@1248[empty]
    classifier = JavaTypeParameterImpl@1197['V']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1019
}

LazyJavaClassifierType@1249['V'] {
    arguments = ArrayList@1250[empty]
    classifier = JavaTypeParameterImpl@1077['V']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1019
}

LazyJavaClassifierType@1251['V'] {
    arguments = ArrayList@1252[empty]
    classifier = JavaTypeParameterImpl@1043['V']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1019
}

LazyJavaClassifierType@1253['V'] {
    arguments = ArrayList@1254[empty]
    classifier = JavaTypeParameterImpl@1137['V']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1019
}

LazyJavaClassifierType@1255['V'] {
    arguments = ArrayList@1256[empty]
    classifier = JavaTypeParameterImpl@1025['V']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1019
}

LazyJavaClassifierType@1257['V'] {
    arguments = ArrayList@1258[empty]
    classifier = JavaTypeParameterImpl@1092['V']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1019
}

LazyJavaClassifierType@1259['V'] {
    arguments = ArrayList@1260[empty]
    classifier = JavaTypeParameterImpl@1161['V']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1019
}

LazyJavaClassifierType@1261['V'] {
    arguments = ArrayList@1262[empty]
    classifier = JavaTypeParameterImpl@1031['V']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1019
}

LazyJavaClassifierType@1263['V'] {
    arguments = ArrayList@1264[empty]
    classifier = JavaTypeParameterImpl@1028['V']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1019
}

LazyJavaClassifierType@1265['V'] {
    arguments = ArrayList@1266[empty]
    classifier = JavaTypeParameterImpl@1034['V']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1019
}

LazyJavaClassifierType@1267['V'] {
    arguments = ArrayList@1268[empty]
    classifier = JavaTypeParameterImpl@1113['V']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1019
}

LazyJavaClassifierType@1269['V'] {
    arguments = ArrayList@1270[empty]
    classifier = JavaTypeParameterImpl@1122['V']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1019
}

LazyJavaClassifierType@1271['V'] {
    arguments = ArrayList@1272[empty]
    classifier = JavaTypeParameterImpl@1040['V']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1019
}

LazyJavaClassifierType@1273['V'] {
    arguments = ArrayList@1274[empty]
    classifier = JavaTypeParameterImpl@1140['V']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1019
}

LazyJavaClassifierType@1275['V'] {
    arguments = ArrayList@1276[empty]
    classifier = JavaTypeParameterImpl@1049['V']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1050
}

LazyJavaClassifierType@1277['V'] {
    arguments = ArrayList@1278[empty]
    classifier = JavaTypeParameterImpl@1110['V']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1019
}

LazyJavaClassifierType@1279['V'] {
    arguments = ArrayList@1280[empty]
    classifier = JavaTypeParameterImpl@1080['V']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1019
}

LazyJavaClassifierType@1281['V'] {
    arguments = ArrayList@1282[empty]
    classifier = JavaTypeParameterImpl@1022['V']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1019
}

LazyJavaClassifierType@1283['V'] {
    arguments = ArrayList@1284[empty]
    classifier = JavaTypeParameterImpl@1095['V']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1019
}

LazyJavaClassifierType@1285['V'] {
    arguments = ArrayList@1286[empty]
    classifier = JavaTypeParameterImpl@1173['V']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1050
}

LazyJavaClassifierType@1287['V'] {
    arguments = ArrayList@1288[empty]
    classifier = JavaTypeParameterImpl@1125['V']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1050
}

LazyJavaClassifierType@1289['V'] {
    arguments = ArrayList@1290[empty]
    classifier = JavaTypeParameterImpl@1037['V']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1019
}

LazyJavaClassifierType@1291['V'] {
    arguments = ArrayList@1292[empty]
    classifier = JavaTypeParameterImpl@1059['V']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1050
}

LazyJavaClassifierType@1293['V'] {
    arguments = ArrayList@1294[empty]
    classifier = JavaTypeParameterImpl@1182['V']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1019
}

LazyJavaClassifierType@1295['V'] {
    arguments = ArrayList@1296[empty]
    classifier = JavaTypeParameterImpl@1086['V']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1019
}

LazyJavaClassifierType@1297['V'] {
    arguments = ArrayList@1298[empty]
    classifier = JavaTypeParameterImpl@1134['V']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1050
}

LazyJavaClassifierType@1299['V'] {
    arguments = ArrayList@1300[empty]
    classifier = JavaTypeParameterImpl@1053['V']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1019
}

LazyJavaClassifierType@1301['V'] {
    arguments = ArrayList@1302[empty]
    classifier = JavaTypeParameterImpl@1101['V']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1050
}

LazyJavaClassifierType@1303['V'] {
    arguments = ArrayList@1304[empty]
    classifier = JavaTypeParameterImpl@1128['V']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1019
}

LazyJavaClassifierType@1305['V'] {
    arguments = ArrayList@1306[empty]
    classifier = JavaTypeParameterImpl@1149['V']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1050
}

LazyJavaClassifierType@1307['V'] {
    arguments = ArrayList@1308[empty]
    classifier = JavaTypeParameterImpl@1185['V']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1019
}

LazyJavaClassifierType@1309['V'] {
    arguments = ArrayList@1310[empty]
    classifier = JavaTypeParameterImpl@1146['V']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1019
}

LazyJavaClassifierType@1311['V'] {
    arguments = ArrayList@1312[empty]
    classifier = JavaTypeParameterImpl@1104['V']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1019
}

LazyJavaClassifierType@1313['V'] {
    arguments = ArrayList@1314[empty]
    classifier = JavaTypeParameterImpl@1107['V']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1050
}

LazyJavaClassifierType@1315['V'] {
    arguments = ArrayList@1316[empty]
    classifier = JavaTypeParameterImpl@1155['V']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1019
}

LazyJavaClassifierType@1317['V'] {
    arguments = ArrayList@1318[empty]
    classifier = JavaTypeParameterImpl@1065['V']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1019
}

LazyJavaClassifierType@1319['V'] {
    arguments = ArrayList@1320[empty]
    classifier = JavaTypeParameterImpl@1191['V']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1019
}

LazyJavaClassifierType@1321['V'] {
    arguments = ArrayList@1322[empty]
    classifier = JavaTypeParameterImpl@1143['V']
    nullable = 'true': Boolean@324
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1019
}

LazyJavaPackageFragmentProvider@1323 {
    packageFragments('<root>': FqName@1324) = LazyJavaPackageFragment@1325['<root>']
    packageFragments('ExtMap': FqName@1326) = null
    packageFragments('HashMapEx': FqName@1327) = null
    packageFragments('K': FqName@1328) = null
    packageFragments('Map': FqName@1329) = null
    packageFragments('V': FqName@1330) = null
    packageFragments('java': FqName@1331) = LazyJavaPackageFragment@1332['java']
    packageFragments('java.io': FqName@1333) = LazyJavaPackageFragment@1334['io']
    packageFragments('java.lang': FqName@1335) = LazyJavaPackageFragment@1336['lang']
    packageFragments('java.lang.ExtMap': FqName@1337) = null
    packageFragments('java.lang.K': FqName@1338) = null
    packageFragments('java.lang.Map': FqName@1339) = null
    packageFragments('java.lang.V': FqName@1340) = null
    packageFragments('java.util': FqName@1341) = LazyJavaPackageFragment@1342['util']
    packageFragments('java.util.HashMap': FqName@1343) = null
    packageFragments('kotlin': FqName@1344) = null
    packageFragments('kotlin.ExtMap': FqName@1345) = null
    packageFragments('kotlin.K': FqName@1346) = null
    packageFragments('kotlin.Map': FqName@1347) = null
    packageFragments('kotlin.V': FqName@1348) = null
    packageFragments('kotlin.io': FqName@1349) = null
    packageFragments('kotlin.jvm': FqName@1350) = null
    topLevelClasses(JavaClassImpl@297['AbstractMap']) = LazyJavaClassDescriptor@0['AbstractMap']
    topLevelClasses(JavaClassImpl@1351['HashMap']) = LazyJavaClassDescriptor@107['HashMap']
    topLevelClasses(JavaClassImpl@931['ObjectInputStream']) = LazyJavaClassDescriptor@259['ObjectInputStream']
    topLevelClasses(JavaClassImpl@937['ObjectOutputStream']) = LazyJavaClassDescriptor@261['ObjectOutputStream']
    topLevelClasses(JavaClassImpl@943['Serializable']) = LazyJavaClassDescriptor@263['Serializable']
}

LazyJavaPackageFragment@1325['<root>'] {
    classes('Map': Name@1352) = null // through LazyPackageFragmentScopeForJavaPackage@1353
    classes('java': Name@1354) = null // through LazyPackageFragmentScopeForJavaPackage@1353
}

LazyJavaPackageFragment@1332['java'] {
    classes('lang': Name@1355) = null // through LazyPackageFragmentScopeForJavaPackage@1356
    classes('util': Name@1357) = null // through LazyPackageFragmentScopeForJavaPackage@1356
    deserializedPackageScope = Empty@1358 // through LazyPackageFragmentScopeForJavaPackage@1356
    functions('lang': Name@1359) = EmptyList@3[empty] // through LazyPackageFragmentScopeForJavaPackage@1356
    memberIndex = computeMemberIndex$1@1360 // through LazyPackageFragmentScopeForJavaPackage@1356
}

LazyJavaPackageFragment@1336['lang'] {
    classes('java': Name@1354) = null // through LazyPackageFragmentScopeForJavaPackage@1361
}

LazyJavaPackageFragment@1342['util'] {
    classes('HashMap': Name@1362) = LazyJavaClassDescriptor@107['HashMap'] // through LazyPackageFragmentScopeForJavaPackage@1363
}

LazyJavaTypeParameterDescriptor@283['K'] {
    defaultType = JetTypeImpl@1364['K']
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@533
    upperBounds = LinkedHashSet@1365[1] { NullableType@1366 }
    upperBoundsAsType = NullableType@1366
}

LazyJavaTypeParameterDescriptor@275['K'] {
    defaultType = JetTypeImpl@1367['K']
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@546
    upperBounds = LinkedHashSet@1368[1] { NullableType@1369 }
    upperBoundsAsType = NullableType@1369
}

LazyJavaTypeParameterDescriptor@280['K'] {
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1370
    upperBounds = LinkedHashSet@1371[1] { NullableType@1372 }
    upperBoundsAsType = NullableType@1372
}

LazyJavaTypeParameterDescriptor@276['V'] {
    defaultType = JetTypeImpl@1373['V']
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1050
    upperBounds = LinkedHashSet@1374[1] { NullableType@1375 }
    upperBoundsAsType = NullableType@1375
}

LazyJavaTypeParameterDescriptor@284['V'] {
    defaultType = JetTypeImpl@1376['V']
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1019
    upperBounds = LinkedHashSet@1377[1] { NullableType@1378 }
    upperBoundsAsType = NullableType@1378
}

LazyJavaTypeParameterDescriptor@281['V'] {
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1379
    upperBounds = LinkedHashSet@1380[1] { NullableType@1381 }
    upperBoundsAsType = NullableType@1381
}

LazyJavaTypeParameterResolver@1382 {
    resolve(JavaTypeParameterImpl@1383['K']) = LazyJavaTypeParameterDescriptor@283['K']
    resolve(JavaTypeParameterImpl@1384['V']) = LazyJavaTypeParameterDescriptor@284['V']
}

LazyJavaTypeParameterResolver@1385 {
    resolve(JavaTypeParameterImpl@1386['K']) = LazyJavaTypeParameterDescriptor@280['K']
    resolve(JavaTypeParameterImpl@1387['V']) = LazyJavaTypeParameterDescriptor@281['V']
}

LazyJavaTypeParameterResolver@1388 {
    resolve(JavaTypeParameterImpl@1389['K']) = LazyJavaTypeParameterDescriptor@275['K']
    resolve(JavaTypeParameterImpl@1390['V']) = LazyJavaTypeParameterDescriptor@276['V']
}

LazyJavaTypeParameterResolver@1391 {
    resolve(JavaTypeParameterImpl@636['K']) = null
    resolve(JavaTypeParameterImpl@1092['V']) = null
}

LazyJavaTypeParameterResolver@1392 {
    resolve(JavaTypeParameterImpl@564['K']) = null
    resolve(JavaTypeParameterImpl@1074['V']) = null
}

LazyJavaTypeParameterResolver@1393 {
    resolve(JavaTypeParameterImpl@561['K']) = null
    resolve(JavaTypeParameterImpl@1182['V']) = null
}

LazyJavaTypeParameterResolver@1394 {
    resolve(JavaTypeParameterImpl@639['K']) = null
    resolve(JavaTypeParameterImpl@1025['V']) = null
}

LazyJavaTypeParameterResolver@1395 {
    resolve(JavaTypeParameterImpl@618['K']) = null
    resolve(JavaTypeParameterImpl@1155['V']) = null
}

LazyJavaTypeParameterResolver@1396 {
    resolve(JavaTypeParameterImpl@624['K']) = null
    resolve(JavaTypeParameterImpl@1089['V']) = null
}

LazyJavaTypeParameterResolver@1397 {
    resolve(JavaTypeParameterImpl@651['K']) = null
    resolve(JavaTypeParameterImpl@1040['V']) = null
}

LazyJavaTypeParameterResolver@1398 {
    resolve(JavaTypeParameterImpl@633['K']) = null
    resolve(JavaTypeParameterImpl@1116['V']) = null
}

LazyJavaTypeParameterResolver@1399 {
    resolve(JavaTypeParameterImpl@621['K']) = null
    resolve(JavaTypeParameterImpl@1191['V']) = null
}

LazyJavaTypeParameterResolver@1400 {
    resolve(JavaTypeParameterImpl@654['K']) = null
    resolve(JavaTypeParameterImpl@1125['V']) = null
}

LazyJavaTypeParameterResolver@1401 {
    resolve(JavaTypeParameterImpl@684['K']) = null
    resolve(JavaTypeParameterImpl@1137['V']) = null
}

LazyJavaTypeParameterResolver@1402 {
    resolve(JavaTypeParameterImpl@591['K']) = null
    resolve(JavaTypeParameterImpl@1161['V']) = null
}

LazyJavaTypeParameterResolver@1403 {
    resolve(JavaTypeParameterImpl@627['K']) = null
    resolve(JavaTypeParameterImpl@1170['V']) = null
}

LazyJavaTypeParameterResolver@1404 {
    resolve(JavaTypeParameterImpl@600['K']) = null
    resolve(JavaTypeParameterImpl@1197['V']) = null
}

LazyJavaTypeParameterResolver@1405 {
    resolve(JavaTypeParameterImpl@597['K']) = null
    resolve(JavaTypeParameterImpl@1080['V']) = null
}

LazyJavaTypeParameterResolver@1406 {
    resolve(JavaTypeParameterImpl@663['K']) = null
}

LazyJavaTypeParameterResolver@1407 {
    resolve(JavaTypeParameterImpl@645['K']) = null
}

LazyJavaTypeParameterResolver@1408 {
    resolve(JavaTypeParameterImpl@648['K']) = null
}

LazyJavaTypeParameterResolver@1409 {
    resolve(JavaTypeParameterImpl@1179['V']) = null
}

LazyJavaTypeParameterResolver@1410 {
    resolve(JavaTypeParameterImpl@1049['V']) = null
}

LazyJavaTypeParameterResolver@1411 {
    resolve(JavaTypeParameterImpl@1065['V']) = null
}

LazyJavaTypeParameterResolver@1412 {
    resolve(JavaTypeParameterImpl@1119['V']) = null
}

LazyJavaTypeParameterResolver@1413 {
    resolve(JavaTypeParameterImpl@1098['V']) = null
}

LazyJavaTypeParameterResolver@1414 {
    resolve(JavaTypeParameterImpl@1152['V']) = null
}

LazyJavaTypeParameterResolver@1415 {
    resolve(JavaTypeParameterImpl@1110['V']) = null
}

LazyJavaTypeParameterResolver@1416 {
    resolve(JavaTypeParameterImpl@1053['V']) = null
}

LazyJavaTypeParameterResolver@1417 {
    resolve(JavaTypeParameterImpl@1107['V']) = null
}

ResolutionTaskHolder@1418 {
    <name not found> = ArrayList@1419[4] { ResolutionCandidate@1420, ResolutionCandidate@1421, ResolutionCandidate@1422, ... }
    <name not found> = ArrayList@1423[4] { ResolutionCandidate@1420, ResolutionCandidate@1421, ResolutionCandidate@1422, ... }
}
