LazyJavaClassDescriptor@0['J'] {
    defaultType = JetTypeImpl@1['J<1>']
    enumEntryIndex = LinkedHashMap@2 // through LazyJavaClassMemberScope@3
    functions('foo': Name@4) = ArrayList@5[1] { JavaMethodDescriptor@6['foo'] } // through LazyJavaClassMemberScope@3
    memberIndex = computeMemberIndex$1@7 // through LazyJavaClassMemberScope@3
    nestedClassIndex = LinkedHashMap@8 // through LazyJavaClassMemberScope@3
    nestedClasses('foo': Name@4) = null // through LazyJavaClassMemberScope@3
    thisAsReceiverParameter = LazyClassReceiverParameterDescriptor@9['<this>']
    typeConstructor = LazyJavaClassTypeConstructor@10['J']
}

LazyJavaClassDescriptor@11['Ref'] {
    enumEntryIndex = LinkedHashMap@12 // through LazyJavaClassMemberScope@13
    functionTypeForSamInterface = null
    functions('create': Name@14) = ArrayList@15[1] { JavaMethodDescriptor@16['create'] } // through LazyJavaStaticClassScope@17
    functions('create': Name@14) = EmptyList@18[empty] // through LazyJavaClassMemberScope@13
    memberIndex = computeMemberIndex$1@19 // through LazyJavaClassMemberScope@13
    memberIndex = computeMemberIndex$1@20 // through LazyJavaStaticClassScope@17
    nestedClassIndex = LinkedHashMap@21 // through LazyJavaClassMemberScope@13
    nestedClasses('create': Name@14) = null // through LazyJavaClassMemberScope@13
    properties('create': Name@14) = EmptyList@18[empty] // through LazyJavaClassMemberScope@13
    properties('create': Name@14) = EmptyList@18[empty] // through LazyJavaStaticClassScope@17
    typeConstructor = LazyJavaClassTypeConstructor@22['Ref']
}

LazyJavaClassTypeConstructor@10['J'] {
    parameters = ArrayList@23[1] { LazyJavaTypeParameterDescriptor@24['T'] }
    supertypes = ArrayList@25[1] { JetTypeImpl@26['Any'] }
}

LazyJavaClassTypeConstructor@22['Ref'] {
    parameters = ArrayList@27[1] { LazyJavaTypeParameterDescriptor@28['T'] }
    supertypes = ArrayList@29[1] { JetTypeImpl@26['Any'] }
}

LazyJavaClassifierType@30['Object'] {
    classifier = JavaClassImpl@31['Object']
    typeConstructor = DeserializedClassTypeConstructor@32
}

LazyJavaClassifierType@33['Object'] {
    classifier = JavaClassImpl@34['Object']
    typeConstructor = DeserializedClassTypeConstructor@32
}

LazyJavaClassifierType@35['Ref<T>'] {
    arguments = ArrayList@36[1] { TypeProjectionImpl@37 }
    classifier = JavaClassImpl@38['Ref']
    memberScope = SubstitutingScope@39
    nullable = 'false': Boolean@40
    typeConstructor = LazyJavaClassTypeConstructor@22['Ref']
}

LazyJavaClassifierType@41['Ref<T>'] {
    arguments = ArrayList@42[1] { TypeProjectionImpl@43 }
    classifier = JavaClassImpl@38['Ref']
    memberScope = SubstitutingScope@44
    nullable = 'true': Boolean@45
    typeConstructor = LazyJavaClassTypeConstructor@22['Ref']
}

LazyJavaClassifierType@46['Ref<T[]>'] {
    arguments = ArrayList@47[1] { TypeProjectionImpl@48 }
    classifier = JavaClassImpl@49['Ref']
    memberScope = SubstitutingScope@50
    nullable = 'false': Boolean@40
    typeConstructor = LazyJavaClassTypeConstructor@22['Ref']
}

LazyJavaClassifierType@51['Ref<T[]>'] {
    arguments = ArrayList@52[1] { TypeProjectionImpl@53 }
    classifier = JavaClassImpl@49['Ref']
    memberScope = SubstitutingScope@54
    nullable = 'true': Boolean@45
    typeConstructor = LazyJavaClassTypeConstructor@22['Ref']
}

LazyJavaClassifierType@55['T'] {
    arguments = ArrayList@56[empty]
    classifier = JavaTypeParameterImpl@57['T']
    nullable = 'false': Boolean@40
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@58
}

LazyJavaClassifierType@59['T'] {
    arguments = ArrayList@60[empty]
    classifier = JavaTypeParameterImpl@61['T']
    nullable = 'false': Boolean@40
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@62
}

LazyJavaClassifierType@63['T'] {
    arguments = ArrayList@64[empty]
    classifier = JavaTypeParameterImpl@65['T']
    nullable = 'false': Boolean@40
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@62
}

LazyJavaClassifierType@66['T'] {
    arguments = ArrayList@67[empty]
    classifier = JavaTypeParameterImpl@68['T']
    nullable = 'false': Boolean@40
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@58
}

LazyJavaClassifierType@69['T'] {
    arguments = ArrayList@70[empty]
    classifier = JavaTypeParameterImpl@65['T']
    nullable = 'true': Boolean@45
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@62
}

LazyJavaClassifierType@71['T'] {
    arguments = ArrayList@72[empty]
    classifier = JavaTypeParameterImpl@57['T']
    nullable = 'true': Boolean@45
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@58
}

LazyJavaClassifierType@73['T'] {
    arguments = ArrayList@74[empty]
    classifier = JavaTypeParameterImpl@68['T']
    nullable = 'true': Boolean@45
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@58
}

LazyJavaClassifierType@75['T'] {
    arguments = ArrayList@76[empty]
    classifier = JavaTypeParameterImpl@61['T']
    nullable = 'true': Boolean@45
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@62
}

LazyJavaPackageFragmentProvider@77 {
    packageFragments('<root>': FqName@78) = LazyJavaPackageFragment@79['<root>']
    packageFragments('Array': FqName@80) = null
    packageFragments('J': FqName@81) = null
    packageFragments('Ref': FqName@82) = null
    packageFragments('String': FqName@83) = null
    packageFragments('java': FqName@84) = LazyJavaPackageFragment@85['java']
    packageFragments('java.lang': FqName@86) = LazyJavaPackageFragment@87['lang']
    packageFragments('java.lang.Array': FqName@88) = null
    packageFragments('java.lang.J': FqName@89) = null
    packageFragments('java.lang.Ref': FqName@90) = null
    packageFragments('java.lang.String': FqName@91) = null
    packageFragments('kotlin': FqName@92) = null
    packageFragments('kotlin.Array': FqName@93) = null
    packageFragments('kotlin.J': FqName@94) = null
    packageFragments('kotlin.Ref': FqName@95) = null
    packageFragments('kotlin.String': FqName@96) = null
    packageFragments('kotlin.io': FqName@97) = null
    packageFragments('kotlin.jvm': FqName@98) = null
    packageFragments('p': FqName@99) = LazyJavaPackageFragment@100['p']
    packageFragments('p.Array': FqName@101) = null
    packageFragments('p.J': FqName@102) = null
    packageFragments('p.Ref': FqName@103) = null
    packageFragments('p.String': FqName@104) = null
    topLevelClasses(JavaClassImpl@105['J']) = LazyJavaClassDescriptor@0['J']
    topLevelClasses(JavaClassImpl@106['Ref']) = LazyJavaClassDescriptor@11['Ref']
}

LazyJavaPackageFragment@79['<root>'] {
    classes('Array': Name@107) = null // through LazyPackageFragmentScopeForJavaPackage@108
    classes('J': Name@109) = null // through LazyPackageFragmentScopeForJavaPackage@108
    classes('Ref': Name@110) = null // through LazyPackageFragmentScopeForJavaPackage@108
    classes('String': Name@111) = null // through LazyPackageFragmentScopeForJavaPackage@108
    classes('p': Name@112) = null // through LazyPackageFragmentScopeForJavaPackage@108
    deserializedPackageScope = Empty@113 // through LazyPackageFragmentScopeForJavaPackage@108
    functions('p': Name@114) = EmptyList@18[empty] // through LazyPackageFragmentScopeForJavaPackage@108
    memberIndex = computeMemberIndex$1@115 // through LazyPackageFragmentScopeForJavaPackage@108
}

LazyJavaPackageFragment@85['java'] {
    classes('lang': Name@116) = null // through LazyPackageFragmentScopeForJavaPackage@117
    deserializedPackageScope = Empty@113 // through LazyPackageFragmentScopeForJavaPackage@117
    functions('lang': Name@118) = EmptyList@18[empty] // through LazyPackageFragmentScopeForJavaPackage@117
    memberIndex = computeMemberIndex$1@119 // through LazyPackageFragmentScopeForJavaPackage@117
}

LazyJavaPackageFragment@87['lang'] {
    deserializedPackageScope = Empty@113 // through LazyPackageFragmentScopeForJavaPackage@120
}

LazyJavaPackageFragment@100['p'] {
    classes('Array': Name@107) = null // through LazyPackageFragmentScopeForJavaPackage@121
    classes('J': Name@109) = LazyJavaClassDescriptor@0['J'] // through LazyPackageFragmentScopeForJavaPackage@121
    classes('Ref': Name@110) = LazyJavaClassDescriptor@11['Ref'] // through LazyPackageFragmentScopeForJavaPackage@121
    classes('String': Name@111) = null // through LazyPackageFragmentScopeForJavaPackage@121
    deserializedPackageScope = Empty@113 // through LazyPackageFragmentScopeForJavaPackage@121
}

LazyJavaTypeParameterDescriptor@24['T'] {
    defaultType = JetTypeImpl@122['T']
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@58
    upperBounds = LinkedHashSet@123[1] { NullableType@124 }
}

LazyJavaTypeParameterDescriptor@125['T'] {
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@62
    upperBounds = LinkedHashSet@126[1] { NullableType@127 }
}

LazyJavaTypeParameterDescriptor@28['T'] {
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@128
}

LazyJavaTypeParameterResolver@129 {
    resolve(JavaTypeParameterImpl@130['T']) = LazyJavaTypeParameterDescriptor@125['T']
}

LazyJavaTypeParameterResolver@131 {
    resolve(JavaTypeParameterImpl@132['T']) = LazyJavaTypeParameterDescriptor@28['T']
}

LazyJavaTypeParameterResolver@133 {
    resolve(JavaTypeParameterImpl@134['T']) = LazyJavaTypeParameterDescriptor@24['T']
}

LazyJavaTypeParameterResolver@135 {
    resolve(JavaTypeParameterImpl@57['T']) = null
}

ResolutionTaskHolder@136 {
    <name not found> = ArrayList@137[1] { ResolutionCandidate@138 }
    <name not found> = ArrayList@139[1] { ResolutionCandidate@138 }
    <name not found> = EmptyList@18[empty]
    <name not found> = EmptyList@18[empty]
    <name not found> = EmptyList@18[empty]
    <name not found> = EmptyList@18[empty]
}

ResolutionTaskHolder@140 {
    <name not found> = ArrayList@141[1] { ResolutionCandidate@142 }
    <name not found> = ArrayList@143[1] { ResolutionCandidate@142 }
}

ResolutionTaskHolder@144 {
    <name not found> = ArrayList@145[1] { ResolutionCandidate@146 }
    <name not found> = ArrayList@147[1] { ResolutionCandidate@146 }
}

ResolutionTaskHolder@148 {
    <name not found> = ArrayList@149[1] { ResolutionCandidate@150 }
    <name not found> = ArrayList@151[1] { ResolutionCandidate@150 }
}

ResolutionTaskHolder@152 {
    <name not found> = EmptyList@18[empty]
    <name not found> = EmptyList@18[empty]
    <name not found> = EmptyList@18[empty]
    <name not found> = EmptyList@18[empty]
    <name not found> = EmptyList@18[empty]
    <name not found> = EmptyList@18[empty]
    <name not found> = EmptyList@18[empty]
    <name not found> = EmptyList@18[empty]
    <name not found> = EmptyList@18[empty]
    <name not found> = EmptyList@18[empty]
}
