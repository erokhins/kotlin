LazyJavaClassDescriptor@0['SAM'] {
    functionTypeForSamInterface = JetTypeImpl@1['Function0<1>']
    thisAsReceiverParameter = LazyClassReceiverParameterDescriptor@2['<this>']
    typeConstructor = LazyJavaClassTypeConstructor@3['SAM']
}

LazyJavaClassDescriptor@4['Util'] {
    enumEntryIndex = LinkedHashMap@5 // through LazyJavaClassMemberScope@6
    functions('sam': Name@7) = ArrayList@8[2] { JavaMethodDescriptor@9['sam'], SamAdapterFunctionDescriptor@10['sam'] } // through LazyJavaStaticClassScope@11
    functions('sam': Name@7) = EmptyList@12[empty] // through LazyJavaClassMemberScope@6
    memberIndex = computeMemberIndex$1@13 // through LazyJavaClassMemberScope@6
    memberIndex = computeMemberIndex$1@14 // through LazyJavaStaticClassScope@11
    nestedClassIndex = LinkedHashMap@15 // through LazyJavaClassMemberScope@6
    nestedClasses('sam': Name@7) = null // through LazyJavaClassMemberScope@6
    properties('sam': Name@7) = EmptyList@12[empty] // through LazyJavaClassMemberScope@6
    properties('sam': Name@7) = EmptyList@12[empty] // through LazyJavaStaticClassScope@11
    typeConstructor = LazyJavaClassTypeConstructor@16['Util']
}

LazyJavaClassDescriptor@17['Void'] {
    typeConstructor = LazyJavaClassTypeConstructor@18['Void']
}

LazyJavaClassTypeConstructor@3['SAM'] {
    parameters = ArrayList@19[1] { LazyJavaTypeParameterDescriptor@20['R'] }
    supertypes = ArrayList@21[1] { JetTypeImpl@22['Any'] }
}

LazyJavaClassTypeConstructor@16['Util'] {
    supertypes = ArrayList@23[1] { JetTypeImpl@22['Any'] }
}

LazyJavaClassTypeConstructor@18['Void'] {
    parameters = ArrayList@24[empty]
}

LazyJavaClassifierType@25['Object'] {
    classifier = JavaClassImpl@26['Object']
    typeConstructor = DeserializedClassTypeConstructor@27
}

LazyJavaClassifierType@28['Object'] {
    classifier = JavaClassImpl@29['Object']
    typeConstructor = DeserializedClassTypeConstructor@27
}

LazyJavaClassifierType@30['R'] {
    arguments = ArrayList@31[empty]
    classifier = JavaTypeParameterImpl@32['R']
    nullable = 'false': Boolean@33
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@34
}

LazyJavaClassifierType@35['R'] {
    arguments = ArrayList@36[empty]
    classifier = JavaTypeParameterImpl@32['R']
    nullable = 'true': Boolean@37
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@34
}

LazyJavaClassifierType@38['SAM<Void>'] {
    arguments = ArrayList@39[1] { TypeProjectionImpl@40 }
    classifier = JavaClassImpl@41['SAM']
    nullable = 'false': Boolean@33
    typeConstructor = LazyJavaClassTypeConstructor@3['SAM']
}

LazyJavaClassifierType@42['SAM<Void>'] {
    arguments = ArrayList@43[1] { TypeProjectionImpl@44 }
    classifier = JavaClassImpl@41['SAM']
    nullable = 'true': Boolean@37
    typeConstructor = LazyJavaClassTypeConstructor@3['SAM']
}

LazyJavaClassifierType@45['Void'] {
    arguments = ArrayList@46[empty]
    classifier = JavaClassImpl@47['Void']
    nullable = 'false': Boolean@33
    typeConstructor = LazyJavaClassTypeConstructor@18['Void']
}

LazyJavaClassifierType@48['Void'] {
    arguments = ArrayList@49[empty]
    classifier = JavaClassImpl@50['Void']
    nullable = 'false': Boolean@33
    typeConstructor = LazyJavaClassTypeConstructor@18['Void']
}

LazyJavaClassifierType@51['Void'] {
    arguments = ArrayList@52[empty]
    classifier = JavaClassImpl@47['Void']
    nullable = 'true': Boolean@37
    typeConstructor = LazyJavaClassTypeConstructor@18['Void']
}

LazyJavaClassifierType@53['Void'] {
    arguments = ArrayList@54[empty]
    classifier = JavaClassImpl@50['Void']
    nullable = 'true': Boolean@37
    typeConstructor = LazyJavaClassTypeConstructor@18['Void']
}

LazyJavaPackageFragmentProvider@55 {
    packageFragments('<root>': FqName@56) = LazyJavaPackageFragment@57['<root>']
    packageFragments('Util': FqName@58) = null
    packageFragments('java': FqName@59) = LazyJavaPackageFragment@60['java']
    packageFragments('java.lang': FqName@61) = LazyJavaPackageFragment@62['lang']
    packageFragments('java.lang.Util': FqName@63) = null
    packageFragments('kotlin': FqName@64) = null
    packageFragments('kotlin.Util': FqName@65) = null
    packageFragments('kotlin.io': FqName@66) = null
    packageFragments('kotlin.jvm': FqName@67) = null
    packageFragments('p': FqName@68) = LazyJavaPackageFragment@69['p']
    packageFragments('p.Util': FqName@70) = null
    topLevelClasses(JavaClassImpl@41['SAM']) = LazyJavaClassDescriptor@0['SAM']
    topLevelClasses(JavaClassImpl@71['Util']) = LazyJavaClassDescriptor@4['Util']
    topLevelClasses(JavaClassImpl@50['Void']) = LazyJavaClassDescriptor@17['Void']
}

LazyJavaPackageFragment@57['<root>'] {
    classes('Util': Name@72) = null // through LazyPackageFragmentScopeForJavaPackage@73
    classes('p': Name@74) = null // through LazyPackageFragmentScopeForJavaPackage@73
    deserializedPackageScope = Empty@75 // through LazyPackageFragmentScopeForJavaPackage@73
    functions('p': Name@76) = EmptyList@12[empty] // through LazyPackageFragmentScopeForJavaPackage@73
    memberIndex = computeMemberIndex$1@77 // through LazyPackageFragmentScopeForJavaPackage@73
}

LazyJavaPackageFragment@60['java'] {
    classes('lang': Name@78) = null // through LazyPackageFragmentScopeForJavaPackage@79
    deserializedPackageScope = Empty@75 // through LazyPackageFragmentScopeForJavaPackage@79
    functions('lang': Name@80) = EmptyList@12[empty] // through LazyPackageFragmentScopeForJavaPackage@79
    memberIndex = computeMemberIndex$1@81 // through LazyPackageFragmentScopeForJavaPackage@79
}

LazyJavaPackageFragment@62['lang'] {
    deserializedPackageScope = Empty@75 // through LazyPackageFragmentScopeForJavaPackage@82
}

LazyJavaPackageFragment@69['p'] {
    classes('Util': Name@72) = LazyJavaClassDescriptor@4['Util'] // through LazyPackageFragmentScopeForJavaPackage@83
    deserializedPackageScope = Empty@75 // through LazyPackageFragmentScopeForJavaPackage@83
}

LazyJavaTypeParameterDescriptor@20['R'] {
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@34
    upperBounds = LinkedHashSet@84[1] { NullableType@85 }
}

LazyJavaTypeParameterResolver@86 {
    resolve(JavaTypeParameterImpl@87['R']) = LazyJavaTypeParameterDescriptor@20['R']
}

LazyJavaTypeParameterResolver@88 {
    resolve(JavaTypeParameterImpl@32['R']) = null
}

ResolutionTaskHolder@89 {
    <name not found> = ArrayList@90[1] { ResolutionCandidate@91 }
    <name not found> = ArrayList@92[1] { ResolutionCandidate@93 }
    <name not found> = ArrayList@94[2] { ResolutionCandidate@91, ResolutionCandidate@93 }
    <name not found> = EmptyList@12[empty]
    <name not found> = EmptyList@12[empty]
    <name not found> = EmptyList@12[empty]
    <name not found> = EmptyList@12[empty]
    <name not found> = EmptyList@12[empty]
    <name not found> = EmptyList@12[empty]
    <name not found> = EmptyList@12[empty]
    <name not found> = EmptyList@12[empty]
}

ResolutionTaskHolder@95 {
    <name not found> = EmptyList@12[empty]
    <name not found> = EmptyList@12[empty]
    <name not found> = EmptyList@12[empty]
    <name not found> = EmptyList@12[empty]
    <name not found> = EmptyList@12[empty]
    <name not found> = EmptyList@12[empty]
    <name not found> = EmptyList@12[empty]
    <name not found> = EmptyList@12[empty]
    <name not found> = EmptyList@12[empty]
    <name not found> = EmptyList@12[empty]
}
