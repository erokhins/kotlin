DescriptorResolver@0 {
    <name not found> = JetTypeImpl@1['Function1<2>']
    <name not found> = null
}

LazyJavaClassDescriptor@2['Exception'] {
    constructors = ArrayList@3[5] { JavaConstructorDescriptor@4['<init>'], JavaConstructorDescriptor@5['<init>'], JavaConstructorDescriptor@6['<init>'], ... } // through LazyJavaClassMemberScope@7
    defaultType = JetTypeImpl@8['Exception']
    functionTypeForSamInterface = null
    typeConstructor = LazyJavaClassTypeConstructor@9['Exception']
}

LazyJavaClassTypeConstructor@9['Exception'] {
    parameters = ArrayList@10[empty]
    supertypes = ArrayList@11[1] { LazyJavaClassifierType@12['Throwable'] }
}

LazyJavaClassifierType@13['String'] {
    arguments = ArrayList@14[empty]
    classifier = JavaClassImpl@15['String']
    nullable = 'false': Boolean@16
    typeConstructor = DeserializedClassTypeConstructor@17
}

LazyJavaClassifierType@18['String'] {
    arguments = ArrayList@19[empty]
    classifier = JavaClassImpl@20['String']
    nullable = 'false': Boolean@16
    typeConstructor = DeserializedClassTypeConstructor@17
}

LazyJavaClassifierType@21['String'] {
    arguments = ArrayList@22[empty]
    classifier = JavaClassImpl@23['String']
    nullable = 'false': Boolean@16
    typeConstructor = DeserializedClassTypeConstructor@17
}

LazyJavaClassifierType@24['String'] {
    arguments = ArrayList@25[empty]
    classifier = JavaClassImpl@20['String']
    nullable = 'true': Boolean@26
    typeConstructor = DeserializedClassTypeConstructor@17
}

LazyJavaClassifierType@27['String'] {
    arguments = ArrayList@28[empty]
    classifier = JavaClassImpl@15['String']
    nullable = 'true': Boolean@26
    typeConstructor = DeserializedClassTypeConstructor@17
}

LazyJavaClassifierType@29['String'] {
    arguments = ArrayList@30[empty]
    classifier = JavaClassImpl@23['String']
    nullable = 'true': Boolean@26
    typeConstructor = DeserializedClassTypeConstructor@17
}

LazyJavaClassifierType@31['Throwable'] {
    arguments = ArrayList@32[empty]
    classifier = JavaClassImpl@33['Throwable']
    nullable = 'false': Boolean@16
    typeConstructor = DeserializedClassTypeConstructor@34
}

LazyJavaClassifierType@35['Throwable'] {
    arguments = ArrayList@36[empty]
    classifier = JavaClassImpl@37['Throwable']
    nullable = 'false': Boolean@16
    typeConstructor = DeserializedClassTypeConstructor@34
}

LazyJavaClassifierType@38['Throwable'] {
    arguments = ArrayList@39[empty]
    classifier = JavaClassImpl@40['Throwable']
    nullable = 'false': Boolean@16
    typeConstructor = DeserializedClassTypeConstructor@34
}

LazyJavaClassifierType@41['Throwable'] {
    arguments = ArrayList@42[empty]
    classifier = JavaClassImpl@37['Throwable']
    nullable = 'true': Boolean@26
    typeConstructor = DeserializedClassTypeConstructor@34
}

LazyJavaClassifierType@43['Throwable'] {
    arguments = ArrayList@44[empty]
    classifier = JavaClassImpl@40['Throwable']
    nullable = 'true': Boolean@26
    typeConstructor = DeserializedClassTypeConstructor@34
}

LazyJavaClassifierType@45['Throwable'] {
    arguments = ArrayList@46[empty]
    classifier = JavaClassImpl@33['Throwable']
    nullable = 'true': Boolean@26
    typeConstructor = DeserializedClassTypeConstructor@34
}

LazyJavaClassifierType@12['Throwable'] {
    arguments = ArrayList@47[empty]
    classifier = JavaClassImpl@48['Throwable']
    typeConstructor = DeserializedClassTypeConstructor@34
}

LazyJavaPackageFragmentProvider@49 {
    packageFragments('<root>': FqName@50) = LazyJavaPackageFragment@51['<root>']
    packageFragments('A': FqName@52) = null
    packageFragments('Any': FqName@53) = null
    packageFragments('In': FqName@54) = null
    packageFragments('Int': FqName@55) = null
    packageFragments('Out': FqName@56) = null
    packageFragments('T': FqName@57) = null
    packageFragments('Unit': FqName@58) = null
    packageFragments('_': FqName@59) = null
    packageFragments('java': FqName@60) = LazyJavaPackageFragment@61['java']
    packageFragments('java.lang': FqName@62) = LazyJavaPackageFragment@63['lang']
    packageFragments('java.lang.A': FqName@64) = null
    packageFragments('java.lang.Any': FqName@65) = null
    packageFragments('java.lang.In': FqName@66) = null
    packageFragments('java.lang.Int': FqName@67) = null
    packageFragments('java.lang.Out': FqName@68) = null
    packageFragments('java.lang.T': FqName@69) = null
    packageFragments('java.lang.Unit': FqName@70) = null
    packageFragments('java.lang._': FqName@71) = null
    packageFragments('kotlin': FqName@72) = null
    packageFragments('kotlin.A': FqName@73) = null
    packageFragments('kotlin.Any': FqName@74) = null
    packageFragments('kotlin.In': FqName@75) = null
    packageFragments('kotlin.Int': FqName@76) = null
    packageFragments('kotlin.Out': FqName@77) = null
    packageFragments('kotlin.T': FqName@78) = null
    packageFragments('kotlin.Unit': FqName@79) = null
    packageFragments('kotlin._': FqName@80) = null
    packageFragments('kotlin.io': FqName@81) = null
    packageFragments('kotlin.jvm': FqName@82) = null
    packageFragments('tests': FqName@83) = null
    packageFragments('tests._checkType': FqName@84) = null
    packageFragments('tests._checkType.A': FqName@85) = null
    packageFragments('tests._checkType.Any': FqName@86) = null
    packageFragments('tests._checkType.In': FqName@87) = null
    packageFragments('tests._checkType.Int': FqName@88) = null
    packageFragments('tests._checkType.Out': FqName@89) = null
    packageFragments('tests._checkType.T': FqName@90) = null
    packageFragments('tests._checkType.Unit': FqName@91) = null
    packageFragments('tests._checkType._': FqName@92) = null
    topLevelClasses(JavaClassImpl@93['Exception']) = LazyJavaClassDescriptor@2['Exception']
}

LazyJavaPackageFragment@51['<root>'] {
    classes('Any': Name@94) = null // through LazyPackageFragmentScopeForJavaPackage@95
    classes('Exception': Name@96) = null // through LazyPackageFragmentScopeForJavaPackage@95
    classes('Int': Name@97) = null // through LazyPackageFragmentScopeForJavaPackage@95
    classes('_': Name@98) = null // through LazyPackageFragmentScopeForJavaPackage@95
    classes('checkType': Name@99) = null // through LazyPackageFragmentScopeForJavaPackage@95
    classes('doA': Name@100) = null // through LazyPackageFragmentScopeForJavaPackage@95
    classes('doIn': Name@101) = null // through LazyPackageFragmentScopeForJavaPackage@95
    classes('doOut': Name@102) = null // through LazyPackageFragmentScopeForJavaPackage@95
    classes('doT': Name@103) = null // through LazyPackageFragmentScopeForJavaPackage@95
    classes('tests': Name@104) = null // through LazyPackageFragmentScopeForJavaPackage@95
    deserializedPackageScope = Empty@105 // through LazyPackageFragmentScopeForJavaPackage@95
    functions('Exception': Name@96) = EmptyList@106[empty] // through LazyPackageFragmentScopeForJavaPackage@95
    functions('checkType': Name@99) = EmptyList@106[empty] // through LazyPackageFragmentScopeForJavaPackage@95
    functions('doA': Name@100) = EmptyList@106[empty] // through LazyPackageFragmentScopeForJavaPackage@95
    functions('doIn': Name@101) = EmptyList@106[empty] // through LazyPackageFragmentScopeForJavaPackage@95
    functions('doOut': Name@102) = EmptyList@106[empty] // through LazyPackageFragmentScopeForJavaPackage@95
    functions('doT': Name@103) = EmptyList@106[empty] // through LazyPackageFragmentScopeForJavaPackage@95
    functions('tests': Name@107) = EmptyList@106[empty] // through LazyPackageFragmentScopeForJavaPackage@95
    memberIndex = computeMemberIndex$1@108 // through LazyPackageFragmentScopeForJavaPackage@95
}

LazyJavaPackageFragment@61['java'] {
    classes('lang': Name@109) = null // through LazyPackageFragmentScopeForJavaPackage@110
    deserializedPackageScope = Empty@105 // through LazyPackageFragmentScopeForJavaPackage@110
    functions('lang': Name@111) = EmptyList@106[empty] // through LazyPackageFragmentScopeForJavaPackage@110
    memberIndex = computeMemberIndex$1@112 // through LazyPackageFragmentScopeForJavaPackage@110
}

LazyJavaPackageFragment@63['lang'] {
    classes('Exception': Name@96) = LazyJavaClassDescriptor@2['Exception'] // through LazyPackageFragmentScopeForJavaPackage@113
    classes('checkType': Name@99) = null // through LazyPackageFragmentScopeForJavaPackage@113
    classes('doA': Name@100) = null // through LazyPackageFragmentScopeForJavaPackage@113
    classes('doIn': Name@101) = null // through LazyPackageFragmentScopeForJavaPackage@113
    classes('doOut': Name@102) = null // through LazyPackageFragmentScopeForJavaPackage@113
    classes('doT': Name@103) = null // through LazyPackageFragmentScopeForJavaPackage@113
    deserializedPackageScope = Empty@105 // through LazyPackageFragmentScopeForJavaPackage@113
    functions('Exception': Name@96) = EmptyList@106[empty] // through LazyPackageFragmentScopeForJavaPackage@113
    functions('checkType': Name@99) = EmptyList@106[empty] // through LazyPackageFragmentScopeForJavaPackage@113
    functions('doA': Name@100) = EmptyList@106[empty] // through LazyPackageFragmentScopeForJavaPackage@113
    functions('doIn': Name@101) = EmptyList@106[empty] // through LazyPackageFragmentScopeForJavaPackage@113
    functions('doOut': Name@102) = EmptyList@106[empty] // through LazyPackageFragmentScopeForJavaPackage@113
    functions('doT': Name@103) = EmptyList@106[empty] // through LazyPackageFragmentScopeForJavaPackage@113
    memberIndex = computeMemberIndex$1@114 // through LazyPackageFragmentScopeForJavaPackage@113
}

ResolutionTaskHolder@115 {
    <name not found> = ArrayList@116[1] { ResolutionCandidate@117 }
    <name not found> = ArrayList@118[1] { ResolutionCandidate@117 }
    <name not found> = EmptyList@106[empty]
    <name not found> = EmptyList@106[empty]
    <name not found> = EmptyList@106[empty]
    <name not found> = EmptyList@106[empty]
}

ResolutionTaskHolder@119 {
    <name not found> = ArrayList@120[1] { ResolutionCandidate@121 }
    <name not found> = ArrayList@122[1] { ResolutionCandidate@121 }
    <name not found> = EmptyList@106[empty]
    <name not found> = EmptyList@106[empty]
    <name not found> = EmptyList@106[empty]
    <name not found> = EmptyList@106[empty]
}

ResolutionTaskHolder@123 {
    <name not found> = ArrayList@124[1] { ResolutionCandidate@125 }
    <name not found> = ArrayList@126[1] { ResolutionCandidate@125 }
    <name not found> = EmptyList@106[empty]
    <name not found> = EmptyList@106[empty]
    <name not found> = EmptyList@106[empty]
    <name not found> = EmptyList@106[empty]
}

ResolutionTaskHolder@127 {
    <name not found> = ArrayList@128[1] { ResolutionCandidate@129 }
    <name not found> = ArrayList@130[1] { ResolutionCandidate@129 }
    <name not found> = EmptyList@106[empty]
    <name not found> = EmptyList@106[empty]
    <name not found> = EmptyList@106[empty]
    <name not found> = EmptyList@106[empty]
}

ResolutionTaskHolder@131 {
    <name not found> = ArrayList@132[1] { ResolutionCandidate@133 }
    <name not found> = ArrayList@134[1] { ResolutionCandidate@133 }
    <name not found> = EmptyList@106[empty]
    <name not found> = EmptyList@106[empty]
    <name not found> = EmptyList@106[empty]
    <name not found> = EmptyList@106[empty]
}

ResolutionTaskHolder@135 {
    <name not found> = ArrayList@136[1] { ResolutionCandidate@137 }
    <name not found> = ArrayList@138[1] { ResolutionCandidate@137 }
}

ResolutionTaskHolder@139 {
    <name not found> = ArrayList@140[1] { ResolutionCandidate@141 }
    <name not found> = ArrayList@142[1] { ResolutionCandidate@141 }
}

ResolutionTaskHolder@143 {
    <name not found> = ArrayList@144[1] { ResolutionCandidate@145 }
    <name not found> = ArrayList@146[1] { ResolutionCandidate@145 }
}

ResolutionTaskHolder@147 {
    <name not found> = ArrayList@148[1] { ResolutionCandidate@149 }
    <name not found> = ArrayList@150[1] { ResolutionCandidate@149 }
}

ResolutionTaskHolder@151 {
    <name not found> = ArrayList@152[1] { ResolutionCandidate@153 }
    <name not found> = ArrayList@154[1] { ResolutionCandidate@153 }
}

ResolutionTaskHolder@155 {
    <name not found> = ArrayList@156[1] { ResolutionCandidate@157 }
    <name not found> = ArrayList@158[1] { ResolutionCandidate@157 }
}

ResolutionTaskHolder@159 {
    <name not found> = ArrayList@160[1] { ResolutionCandidate@161 }
    <name not found> = ArrayList@162[1] { ResolutionCandidate@161 }
}

ResolutionTaskHolder@163 {
    <name not found> = ArrayList@164[1] { ResolutionCandidate@165 }
    <name not found> = ArrayList@166[1] { ResolutionCandidate@165 }
}

ResolutionTaskHolder@167 {
    <name not found> = ArrayList@168[1] { ResolutionCandidate@169 }
    <name not found> = ArrayList@170[1] { ResolutionCandidate@169 }
}

ResolutionTaskHolder@171 {
    <name not found> = ArrayList@172[1] { ResolutionCandidate@173 }
    <name not found> = ArrayList@174[1] { ResolutionCandidate@173 }
}

ResolutionTaskHolder@175 {
    <name not found> = ArrayList@176[4] { ResolutionCandidate@177, ResolutionCandidate@178, ResolutionCandidate@179, ... }
    <name not found> = ArrayList@180[5] { ResolutionCandidate@177, ResolutionCandidate@178, ResolutionCandidate@179, ... }
    <name not found> = EmptyList@106[empty]
    <name not found> = EmptyList@106[empty]
    <name not found> = EmptyList@106[empty]
    <name not found> = EmptyList@106[empty]
}

ResolutionTaskHolder@181 {
    <name not found> = ArrayList@182[4] { ResolutionCandidate@183, ResolutionCandidate@184, ResolutionCandidate@185, ... }
    <name not found> = ArrayList@186[5] { ResolutionCandidate@183, ResolutionCandidate@184, ResolutionCandidate@185, ... }
    <name not found> = EmptyList@106[empty]
    <name not found> = EmptyList@106[empty]
    <name not found> = EmptyList@106[empty]
    <name not found> = EmptyList@106[empty]
}

ResolutionTaskHolder@187 {
    <name not found> = ArrayList@188[4] { ResolutionCandidate@189, ResolutionCandidate@190, ResolutionCandidate@191, ... }
    <name not found> = ArrayList@192[5] { ResolutionCandidate@189, ResolutionCandidate@190, ResolutionCandidate@191, ... }
    <name not found> = EmptyList@106[empty]
    <name not found> = EmptyList@106[empty]
    <name not found> = EmptyList@106[empty]
    <name not found> = EmptyList@106[empty]
}

ResolutionTaskHolder@193 {
    <name not found> = ArrayList@194[4] { ResolutionCandidate@195, ResolutionCandidate@196, ResolutionCandidate@197, ... }
    <name not found> = ArrayList@198[5] { ResolutionCandidate@195, ResolutionCandidate@196, ResolutionCandidate@197, ... }
    <name not found> = EmptyList@106[empty]
    <name not found> = EmptyList@106[empty]
    <name not found> = EmptyList@106[empty]
    <name not found> = EmptyList@106[empty]
}
