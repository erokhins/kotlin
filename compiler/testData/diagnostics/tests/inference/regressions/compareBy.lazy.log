LazyJavaClassDescriptor@0['Exception'] {
    constructors = ArrayList@1[5] { JavaConstructorDescriptor@2['<init>'], JavaConstructorDescriptor@3['<init>'], JavaConstructorDescriptor@4['<init>'], ... } // through LazyJavaClassMemberScope@5
    defaultType = JetTypeImpl@6['Exception']
    functionTypeForSamInterface = null
    typeConstructor = LazyJavaClassTypeConstructor@7['Exception']
}

LazyJavaClassTypeConstructor@7['Exception'] {
    parameters = ArrayList@8[empty]
    supertypes = ArrayList@9[1] { LazyJavaClassifierType@10['Throwable'] }
}

LazyJavaClassifierType@11['String'] {
    arguments = ArrayList@12[empty]
    classifier = JavaClassImpl@13['String']
    nullable = 'false': Boolean@14
    typeConstructor = DeserializedClassTypeConstructor@15
}

LazyJavaClassifierType@16['String'] {
    arguments = ArrayList@17[empty]
    classifier = JavaClassImpl@18['String']
    nullable = 'false': Boolean@14
    typeConstructor = DeserializedClassTypeConstructor@15
}

LazyJavaClassifierType@19['String'] {
    arguments = ArrayList@20[empty]
    classifier = JavaClassImpl@21['String']
    nullable = 'false': Boolean@14
    typeConstructor = DeserializedClassTypeConstructor@15
}

LazyJavaClassifierType@22['String'] {
    arguments = ArrayList@23[empty]
    classifier = JavaClassImpl@18['String']
    nullable = 'true': Boolean@24
    typeConstructor = DeserializedClassTypeConstructor@15
}

LazyJavaClassifierType@25['String'] {
    arguments = ArrayList@26[empty]
    classifier = JavaClassImpl@21['String']
    nullable = 'true': Boolean@24
    typeConstructor = DeserializedClassTypeConstructor@15
}

LazyJavaClassifierType@27['String'] {
    arguments = ArrayList@28[empty]
    classifier = JavaClassImpl@13['String']
    nullable = 'true': Boolean@24
    typeConstructor = DeserializedClassTypeConstructor@15
}

LazyJavaClassifierType@29['Throwable'] {
    arguments = ArrayList@30[empty]
    classifier = JavaClassImpl@31['Throwable']
    nullable = 'false': Boolean@14
    typeConstructor = DeserializedClassTypeConstructor@32
}

LazyJavaClassifierType@33['Throwable'] {
    arguments = ArrayList@34[empty]
    classifier = JavaClassImpl@35['Throwable']
    nullable = 'false': Boolean@14
    typeConstructor = DeserializedClassTypeConstructor@32
}

LazyJavaClassifierType@36['Throwable'] {
    arguments = ArrayList@37[empty]
    classifier = JavaClassImpl@38['Throwable']
    nullable = 'false': Boolean@14
    typeConstructor = DeserializedClassTypeConstructor@32
}

LazyJavaClassifierType@39['Throwable'] {
    arguments = ArrayList@40[empty]
    classifier = JavaClassImpl@35['Throwable']
    nullable = 'true': Boolean@24
    typeConstructor = DeserializedClassTypeConstructor@32
}

LazyJavaClassifierType@41['Throwable'] {
    arguments = ArrayList@42[empty]
    classifier = JavaClassImpl@31['Throwable']
    nullable = 'true': Boolean@24
    typeConstructor = DeserializedClassTypeConstructor@32
}

LazyJavaClassifierType@43['Throwable'] {
    arguments = ArrayList@44[empty]
    classifier = JavaClassImpl@38['Throwable']
    nullable = 'true': Boolean@24
    typeConstructor = DeserializedClassTypeConstructor@32
}

LazyJavaClassifierType@10['Throwable'] {
    arguments = ArrayList@45[empty]
    classifier = JavaClassImpl@46['Throwable']
    typeConstructor = DeserializedClassTypeConstructor@32
}

LazyJavaPackageFragmentProvider@47 {
    packageFragments('<root>': FqName@48) = LazyJavaPackageFragment@49['<root>']
    packageFragments('Any': FqName@50) = null
    packageFragments('Comparable': FqName@51) = null
    packageFragments('Int': FqName@52) = null
    packageFragments('Item': FqName@53) = null
    packageFragments('String': FqName@54) = null
    packageFragments('T': FqName@55) = null
    packageFragments('java': FqName@56) = LazyJavaPackageFragment@57['java']
    packageFragments('java.lang': FqName@58) = LazyJavaPackageFragment@59['lang']
    packageFragments('java.lang.Any': FqName@60) = null
    packageFragments('java.lang.Comparable': FqName@61) = null
    packageFragments('java.lang.Int': FqName@62) = null
    packageFragments('java.lang.Item': FqName@63) = null
    packageFragments('java.lang.String': FqName@64) = null
    packageFragments('java.lang.T': FqName@65) = null
    packageFragments('kotlin': FqName@66) = null
    packageFragments('kotlin.Any': FqName@67) = null
    packageFragments('kotlin.Comparable': FqName@68) = null
    packageFragments('kotlin.Int': FqName@69) = null
    packageFragments('kotlin.Item': FqName@70) = null
    packageFragments('kotlin.String': FqName@71) = null
    packageFragments('kotlin.T': FqName@72) = null
    packageFragments('kotlin.io': FqName@73) = null
    packageFragments('kotlin.jvm': FqName@74) = null
    topLevelClasses(JavaClassImpl@75['Exception']) = LazyJavaClassDescriptor@0['Exception']
}

LazyJavaPackageFragment@49['<root>'] {
    classes('Any': Name@76) = null // through LazyPackageFragmentScopeForJavaPackage@77
    classes('Comparable': Name@78) = null // through LazyPackageFragmentScopeForJavaPackage@77
    classes('Exception': Name@79) = null // through LazyPackageFragmentScopeForJavaPackage@77
    classes('Int': Name@80) = null // through LazyPackageFragmentScopeForJavaPackage@77
    classes('String': Name@81) = null // through LazyPackageFragmentScopeForJavaPackage@77
    classes('compareBy': Name@82) = null // through LazyPackageFragmentScopeForJavaPackage@77
    classes('name': Name@83) = null // through LazyPackageFragmentScopeForJavaPackage@77
    classes('rating': Name@84) = null // through LazyPackageFragmentScopeForJavaPackage@77
    deserializedPackageScope = Empty@85 // through LazyPackageFragmentScopeForJavaPackage@77
    functions('Exception': Name@79) = EmptyList@86[empty] // through LazyPackageFragmentScopeForJavaPackage@77
    functions('compareBy': Name@82) = EmptyList@86[empty] // through LazyPackageFragmentScopeForJavaPackage@77
    memberIndex = computeMemberIndex$1@87 // through LazyPackageFragmentScopeForJavaPackage@77
}

LazyJavaPackageFragment@57['java'] {
    classes('lang': Name@88) = null // through LazyPackageFragmentScopeForJavaPackage@89
    deserializedPackageScope = Empty@85 // through LazyPackageFragmentScopeForJavaPackage@89
    functions('lang': Name@90) = EmptyList@86[empty] // through LazyPackageFragmentScopeForJavaPackage@89
    memberIndex = computeMemberIndex$1@91 // through LazyPackageFragmentScopeForJavaPackage@89
}

LazyJavaPackageFragment@59['lang'] {
    classes('Exception': Name@79) = LazyJavaClassDescriptor@0['Exception'] // through LazyPackageFragmentScopeForJavaPackage@92
    classes('compareBy': Name@82) = null // through LazyPackageFragmentScopeForJavaPackage@92
    classes('name': Name@83) = null // through LazyPackageFragmentScopeForJavaPackage@92
    classes('rating': Name@84) = null // through LazyPackageFragmentScopeForJavaPackage@92
    deserializedPackageScope = Empty@85 // through LazyPackageFragmentScopeForJavaPackage@92
    functions('Exception': Name@79) = EmptyList@86[empty] // through LazyPackageFragmentScopeForJavaPackage@92
    functions('compareBy': Name@82) = EmptyList@86[empty] // through LazyPackageFragmentScopeForJavaPackage@92
    memberIndex = computeMemberIndex$1@93 // through LazyPackageFragmentScopeForJavaPackage@92
}

ResolutionTaskHolder@94 {
    <name not found> = ArrayList@95[1] { ResolutionCandidate@96 }
    <name not found> = ArrayList@97[1] { ResolutionCandidate@96 }
    <name not found> = EmptyList@86[empty]
    <name not found> = EmptyList@86[empty]
    <name not found> = EmptyList@86[empty]
    <name not found> = EmptyList@86[empty]
    <name not found> = EmptyList@86[empty]
    <name not found> = EmptyList@86[empty]
    <name not found> = EmptyList@86[empty]
    <name not found> = EmptyList@86[empty]
    <name not found> = EmptyList@86[empty]
    <name not found> = EmptyList@86[empty]
    <name not found> = EmptyList@86[empty]
    <name not found> = EmptyList@86[empty]
    <name not found> = EmptyList@86[empty]
    <name not found> = EmptyList@86[empty]
    <name not found> = EmptyList@86[empty]
    <name not found> = EmptyList@86[empty]
}

ResolutionTaskHolder@98 {
    <name not found> = ArrayList@99[1] { ResolutionCandidate@100 }
    <name not found> = ArrayList@101[1] { ResolutionCandidate@100 }
    <name not found> = EmptyList@86[empty]
    <name not found> = EmptyList@86[empty]
}

ResolutionTaskHolder@102 {
    <name not found> = ArrayList@103[1] { ResolutionCandidate@104 }
    <name not found> = ArrayList@105[1] { ResolutionCandidate@104 }
    <name not found> = EmptyList@86[empty]
    <name not found> = EmptyList@86[empty]
}

ResolutionTaskHolder@106 {
    <name not found> = ArrayList@107[1] { ResolutionCandidate@108 }
    <name not found> = ArrayList@109[1] { ResolutionCandidate@108 }
}

ResolutionTaskHolder@110 {
    <name not found> = ArrayList@111[4] { ResolutionCandidate@112, ResolutionCandidate@113, ResolutionCandidate@114, ... }
    <name not found> = ArrayList@115[5] { ResolutionCandidate@112, ResolutionCandidate@113, ResolutionCandidate@114, ... }
    <name not found> = EmptyList@86[empty]
    <name not found> = EmptyList@86[empty]
    <name not found> = EmptyList@86[empty]
    <name not found> = EmptyList@86[empty]
}
