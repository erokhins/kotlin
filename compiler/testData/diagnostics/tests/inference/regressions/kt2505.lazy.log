LazyJavaClassDescriptor@0['Exception'] {
    constructors = ArrayList@1[5] { JavaConstructorDescriptor@2['<init>'], JavaConstructorDescriptor@3['<init>'], JavaConstructorDescriptor@4['<init>'], ... } // through LazyJavaClassMemberScope@5
    defaultType = JetTypeImpl@6['Exception']
    functionTypeForSamInterface = null
    typeConstructor = LazyJavaClassTypeConstructor@7['Exception']
}

LazyJavaClassTypeConstructor@7['Exception'] {
    parameters = ArrayList@8[empty]
    supertypes = ArrayList@9[1] { LazyJavaClassifierType@10['Throwable'] }
}

LazyJavaClassifierType@11['String'] {
    arguments = ArrayList@12[empty]
    classifier = JavaClassImpl@13['String']
    nullable = 'false': Boolean@14
    typeConstructor = DeserializedClassTypeConstructor@15
}

LazyJavaClassifierType@16['String'] {
    arguments = ArrayList@17[empty]
    classifier = JavaClassImpl@18['String']
    nullable = 'false': Boolean@14
    typeConstructor = DeserializedClassTypeConstructor@15
}

LazyJavaClassifierType@19['String'] {
    arguments = ArrayList@20[empty]
    classifier = JavaClassImpl@21['String']
    nullable = 'false': Boolean@14
    typeConstructor = DeserializedClassTypeConstructor@15
}

LazyJavaClassifierType@22['String'] {
    arguments = ArrayList@23[empty]
    classifier = JavaClassImpl@18['String']
    nullable = 'true': Boolean@24
    typeConstructor = DeserializedClassTypeConstructor@15
}

LazyJavaClassifierType@25['String'] {
    arguments = ArrayList@26[empty]
    classifier = JavaClassImpl@13['String']
    nullable = 'true': Boolean@24
    typeConstructor = DeserializedClassTypeConstructor@15
}

LazyJavaClassifierType@27['String'] {
    arguments = ArrayList@28[empty]
    classifier = JavaClassImpl@21['String']
    nullable = 'true': Boolean@24
    typeConstructor = DeserializedClassTypeConstructor@15
}

LazyJavaClassifierType@29['Throwable'] {
    arguments = ArrayList@30[empty]
    classifier = JavaClassImpl@31['Throwable']
    nullable = 'false': Boolean@14
    typeConstructor = DeserializedClassTypeConstructor@32
}

LazyJavaClassifierType@33['Throwable'] {
    arguments = ArrayList@34[empty]
    classifier = JavaClassImpl@35['Throwable']
    nullable = 'false': Boolean@14
    typeConstructor = DeserializedClassTypeConstructor@32
}

LazyJavaClassifierType@36['Throwable'] {
    arguments = ArrayList@37[empty]
    classifier = JavaClassImpl@38['Throwable']
    nullable = 'false': Boolean@14
    typeConstructor = DeserializedClassTypeConstructor@32
}

LazyJavaClassifierType@39['Throwable'] {
    arguments = ArrayList@40[empty]
    classifier = JavaClassImpl@38['Throwable']
    nullable = 'true': Boolean@24
    typeConstructor = DeserializedClassTypeConstructor@32
}

LazyJavaClassifierType@41['Throwable'] {
    arguments = ArrayList@42[empty]
    classifier = JavaClassImpl@31['Throwable']
    nullable = 'true': Boolean@24
    typeConstructor = DeserializedClassTypeConstructor@32
}

LazyJavaClassifierType@43['Throwable'] {
    arguments = ArrayList@44[empty]
    classifier = JavaClassImpl@35['Throwable']
    nullable = 'true': Boolean@24
    typeConstructor = DeserializedClassTypeConstructor@32
}

LazyJavaClassifierType@10['Throwable'] {
    arguments = ArrayList@45[empty]
    classifier = JavaClassImpl@46['Throwable']
    typeConstructor = DeserializedClassTypeConstructor@32
}

LazyJavaPackageFragmentProvider@47 {
    packageFragments('<root>': FqName@48) = LazyJavaPackageFragment@49['<root>']
    packageFragments('Any': FqName@50) = null
    packageFragments('HttpResponse': FqName@51) = null
    packageFragments('MyClass': FqName@52) = null
    packageFragments('MyType': FqName@53) = null
    packageFragments('R': FqName@54) = null
    packageFragments('T': FqName@55) = null
    packageFragments('a': FqName@56) = null
    packageFragments('a.Any': FqName@57) = null
    packageFragments('a.HttpResponse': FqName@58) = null
    packageFragments('a.MyClass': FqName@59) = null
    packageFragments('a.MyType': FqName@60) = null
    packageFragments('a.R': FqName@61) = null
    packageFragments('a.T': FqName@62) = null
    packageFragments('java': FqName@63) = LazyJavaPackageFragment@64['java']
    packageFragments('java.lang': FqName@65) = LazyJavaPackageFragment@66['lang']
    packageFragments('java.lang.Any': FqName@67) = null
    packageFragments('java.lang.HttpResponse': FqName@68) = null
    packageFragments('java.lang.MyClass': FqName@69) = null
    packageFragments('java.lang.MyType': FqName@70) = null
    packageFragments('java.lang.R': FqName@71) = null
    packageFragments('java.lang.T': FqName@72) = null
    packageFragments('kotlin': FqName@73) = null
    packageFragments('kotlin.Any': FqName@74) = null
    packageFragments('kotlin.HttpResponse': FqName@75) = null
    packageFragments('kotlin.MyClass': FqName@76) = null
    packageFragments('kotlin.MyType': FqName@77) = null
    packageFragments('kotlin.R': FqName@78) = null
    packageFragments('kotlin.T': FqName@79) = null
    packageFragments('kotlin.io': FqName@80) = null
    packageFragments('kotlin.jvm': FqName@81) = null
    topLevelClasses(JavaClassImpl@82['Exception']) = LazyJavaClassDescriptor@0['Exception']
}

LazyJavaPackageFragment@64['java'] {
    classes('lang': Name@83) = null // through LazyPackageFragmentScopeForJavaPackage@84
    deserializedPackageScope = Empty@85 // through LazyPackageFragmentScopeForJavaPackage@84
    functions('lang': Name@86) = EmptyList@87[empty] // through LazyPackageFragmentScopeForJavaPackage@84
    memberIndex = computeMemberIndex$1@88 // through LazyPackageFragmentScopeForJavaPackage@84
}

LazyJavaPackageFragment@66['lang'] {
    classes('Exception': Name@89) = LazyJavaClassDescriptor@0['Exception'] // through LazyPackageFragmentScopeForJavaPackage@90
    deserializedPackageScope = Empty@85 // through LazyPackageFragmentScopeForJavaPackage@90
    functions('Exception': Name@89) = EmptyList@87[empty] // through LazyPackageFragmentScopeForJavaPackage@90
    memberIndex = computeMemberIndex$1@91 // through LazyPackageFragmentScopeForJavaPackage@90
}

ResolutionTaskHolder@92 {
    <name not found> = ArrayList@93[1] { ResolutionCandidate@94 }
    <name not found> = ArrayList@95[1] { ResolutionCandidate@94 }
}

ResolutionTaskHolder@96 {
    <name not found> = ArrayList@97[1] { ResolutionCandidate@98 }
    <name not found> = ArrayList@99[1] { ResolutionCandidate@98 }
}

ResolutionTaskHolder@100 {
    <name not found> = ArrayList@101[1] { ResolutionCandidate@102 }
    <name not found> = ArrayList@103[1] { ResolutionCandidate@102 }
}

ResolutionTaskHolder@104 {
    <name not found> = ArrayList@105[2] { ResolutionCandidate@106, ResolutionCandidate@107 }
    <name not found> = ArrayList@108[2] { ResolutionCandidate@106, ResolutionCandidate@107 }
}

ResolutionTaskHolder@109 {
    <name not found> = ArrayList@110[4] { ResolutionCandidate@111, ResolutionCandidate@112, ResolutionCandidate@113, ... }
    <name not found> = ArrayList@114[5] { ResolutionCandidate@111, ResolutionCandidate@112, ResolutionCandidate@113, ... }
    <name not found> = EmptyList@87[empty]
    <name not found> = EmptyList@87[empty]
    <name not found> = EmptyList@87[empty]
    <name not found> = EmptyList@87[empty]
    <name not found> = EmptyList@87[empty]
    <name not found> = EmptyList@87[empty]
    <name not found> = EmptyList@87[empty]
    <name not found> = EmptyList@87[empty]
    <name not found> = EmptyList@87[empty]
    <name not found> = EmptyList@87[empty]
    <name not found> = EmptyList@87[empty]
    <name not found> = EmptyList@87[empty]
    <name not found> = EmptyList@87[empty]
    <name not found> = EmptyList@87[empty]
    <name not found> = EmptyList@87[empty]
    <name not found> = EmptyList@87[empty]
}
