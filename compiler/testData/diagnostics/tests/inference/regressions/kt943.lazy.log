DescriptorResolver@0 {
    <name not found> = null
}

LazyAnnotationDescriptor@1 {
    resolutionResults = OverloadResolutionResultsImpl@2
    type = JetTypeImpl@3['inline']
    valueArguments(ValueParameterDescriptorImpl@4['strategy']) = null
}

LazyJavaClassDescriptor@5['Collections'] {
    enumEntryIndex = LinkedHashMap@6 // through LazyJavaClassMemberScope@7
    functionTypeForSamInterface = null
    functions('comparator': Name@8) = EmptyList@9[empty] // through LazyJavaClassMemberScope@7
    functions('comparator': Name@8) = EmptyList@9[empty] // through LazyJavaStaticClassScope@10
    functions('max': Name@11) = ArrayList@12[3] { JavaMethodDescriptor@13['max'], JavaMethodDescriptor@14['max'], SamAdapterFunctionDescriptor@15['max'] } // through LazyJavaStaticClassScope@10
    functions('max': Name@11) = EmptyList@9[empty] // through LazyJavaClassMemberScope@7
    functions('sure': Name@16) = EmptyList@9[empty] // through LazyJavaClassMemberScope@7
    functions('sure': Name@16) = EmptyList@9[empty] // through LazyJavaStaticClassScope@10
    memberIndex = computeMemberIndex$1@17 // through LazyJavaClassMemberScope@7
    memberIndex = computeMemberIndex$1@18 // through LazyJavaStaticClassScope@10
    nestedClassIndex = LinkedHashMap@19 // through LazyJavaClassMemberScope@7
    nestedClasses('Any': Name@20) = null // through LazyJavaClassMemberScope@7
    nestedClasses('Int': Name@21) = null // through LazyJavaClassMemberScope@7
    nestedClasses('List': Name@22) = null // through LazyJavaClassMemberScope@7
    nestedClasses('String': Name@23) = null // through LazyJavaClassMemberScope@7
    nestedClasses('comparator': Name@8) = null // through LazyJavaClassMemberScope@7
    nestedClasses('inline': Name@24) = null // through LazyJavaClassMemberScope@7
    nestedClasses('max': Name@11) = null // through LazyJavaClassMemberScope@7
    nestedClasses('sure': Name@16) = null // through LazyJavaClassMemberScope@7
    properties('comparator': Name@8) = EmptyList@9[empty] // through LazyJavaClassMemberScope@7
    properties('comparator': Name@8) = EmptyList@9[empty] // through LazyJavaStaticClassScope@10
    properties('max': Name@11) = EmptyList@9[empty] // through LazyJavaClassMemberScope@7
    properties('max': Name@11) = EmptyList@9[empty] // through LazyJavaStaticClassScope@10
    typeConstructor = LazyJavaClassTypeConstructor@25['Collections']
}

LazyJavaClassDescriptor@26['Comparator'] {
    functionTypeForSamInterface = JetTypeImpl@27['Function2<3>']
    thisAsReceiverParameter = LazyClassReceiverParameterDescriptor@28['<this>']
    typeConstructor = LazyJavaClassTypeConstructor@29['Comparator']
}

LazyJavaClassTypeConstructor@25['Collections'] {
    supertypes = ArrayList@30[1] { JetTypeImpl@31['Any'] }
}

LazyJavaClassTypeConstructor@29['Comparator'] {
    parameters = ArrayList@32[1] { LazyJavaTypeParameterDescriptor@33['T'] }
    supertypes = ArrayList@34[1] { JetTypeImpl@31['Any'] }
}

LazyJavaClassifierType@35['Collection<? extends T>'] {
    arguments = ArrayList@36[1] { TypeProjectionImpl@37 }
    classifier = JavaClassImpl@38['Collection']
    memberScope = SubstitutingScope@39
    nullable = 'false': Boolean@40
    typeConstructor = DeserializedClassTypeConstructor@41
}

LazyJavaClassifierType@42['Collection<? extends T>'] {
    arguments = ArrayList@43[1] { TypeProjectionImpl@44 }
    classifier = JavaClassImpl@45['Collection']
    memberScope = SubstitutingScope@46
    nullable = 'false': Boolean@40
    typeConstructor = DeserializedClassTypeConstructor@41
}

LazyJavaClassifierType@47['Collection<? extends T>'] {
    arguments = ArrayList@48[1] { TypeProjectionImpl@49 }
    classifier = JavaClassImpl@38['Collection']
    memberScope = SubstitutingScope@50
    nullable = 'true': Boolean@51
    typeConstructor = DeserializedClassTypeConstructor@52
}

LazyJavaClassifierType@53['Collection<? extends T>'] {
    arguments = ArrayList@54[1] { TypeProjectionImpl@55 }
    classifier = JavaClassImpl@45['Collection']
    memberScope = SubstitutingScope@56
    nullable = 'true': Boolean@51
    typeConstructor = DeserializedClassTypeConstructor@52
}

LazyJavaClassifierType@57['Comparable<? super T>'] {
    arguments = ArrayList@58[1] { TypeProjectionImpl@59 }
    classifier = JavaClassImpl@60['Comparable']
    memberScope = SubstitutingScope@61
    nullable = 'false': Boolean@40
    typeConstructor = DeserializedClassTypeConstructor@62
}

LazyJavaClassifierType@63['Comparable<? super T>'] {
    arguments = ArrayList@64[1] { TypeProjectionImpl@65 }
    classifier = JavaClassImpl@60['Comparable']
    memberScope = SubstitutingScope@66
    nullable = 'true': Boolean@51
    typeConstructor = DeserializedClassTypeConstructor@62
}

LazyJavaClassifierType@67['Comparator<? super T>'] {
    arguments = ArrayList@68[1] { TypeProjectionImpl@69 }
    classifier = JavaClassImpl@70['Comparator']
    memberScope = SubstitutingScope@71
    nullable = 'false': Boolean@40
    typeConstructor = LazyJavaClassTypeConstructor@29['Comparator']
}

LazyJavaClassifierType@72['Comparator<? super T>'] {
    arguments = ArrayList@73[1] { TypeProjectionImpl@74 }
    classifier = JavaClassImpl@70['Comparator']
    memberScope = SubstitutingScope@75
    nullable = 'true': Boolean@51
    typeConstructor = LazyJavaClassTypeConstructor@29['Comparator']
}

LazyJavaClassifierType@76['Object'] {
    arguments = ArrayList@77[empty]
    classifier = JavaClassImpl@78['Object']
    memberScope = DeserializedClassMemberScope@79
    nullable = 'false': Boolean@40
    typeConstructor = DeserializedClassTypeConstructor@80
}

LazyJavaClassifierType@81['Object'] {
    arguments = ArrayList@82[empty]
    classifier = JavaClassImpl@78['Object']
    memberScope = DeserializedClassMemberScope@79
    nullable = 'true': Boolean@51
    typeConstructor = DeserializedClassTypeConstructor@80
}

LazyJavaClassifierType@83['Object'] {
    classifier = JavaClassImpl@84['Object']
    typeConstructor = DeserializedClassTypeConstructor@80
}

LazyJavaClassifierType@85['Object'] {
    classifier = JavaClassImpl@86['Object']
    typeConstructor = DeserializedClassTypeConstructor@80
}

LazyJavaClassifierType@87['T'] {
    arguments = ArrayList@88[empty]
    classifier = JavaTypeParameterImpl@89['T']
    nullable = 'false': Boolean@40
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@90
}

LazyJavaClassifierType@91['T'] {
    arguments = ArrayList@92[empty]
    classifier = JavaTypeParameterImpl@93['T']
    nullable = 'false': Boolean@40
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@94
}

LazyJavaClassifierType@95['T'] {
    arguments = ArrayList@96[empty]
    classifier = JavaTypeParameterImpl@97['T']
    nullable = 'false': Boolean@40
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@90
}

LazyJavaClassifierType@98['T'] {
    arguments = ArrayList@99[empty]
    classifier = JavaTypeParameterImpl@100['T']
    nullable = 'false': Boolean@40
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@101
}

LazyJavaClassifierType@102['T'] {
    arguments = ArrayList@103[empty]
    classifier = JavaTypeParameterImpl@104['T']
    nullable = 'false': Boolean@40
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@94
}

LazyJavaClassifierType@105['T'] {
    arguments = ArrayList@106[empty]
    classifier = JavaTypeParameterImpl@107['T']
    nullable = 'false': Boolean@40
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@94
}

LazyJavaClassifierType@108['T'] {
    arguments = ArrayList@109[empty]
    classifier = JavaTypeParameterImpl@110['T']
    nullable = 'false': Boolean@40
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@90
}

LazyJavaClassifierType@111['T'] {
    arguments = ArrayList@112[empty]
    classifier = JavaTypeParameterImpl@113['T']
    nullable = 'false': Boolean@40
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@90
}

LazyJavaClassifierType@114['T'] {
    arguments = ArrayList@115[empty]
    classifier = JavaTypeParameterImpl@116['T']
    nullable = 'false': Boolean@40
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@94
}

LazyJavaClassifierType@117['T'] {
    arguments = ArrayList@118[empty]
    classifier = JavaTypeParameterImpl@119['T']
    nullable = 'false': Boolean@40
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@94
}

LazyJavaClassifierType@120['T'] {
    arguments = ArrayList@121[empty]
    classifier = JavaTypeParameterImpl@122['T']
    nullable = 'false': Boolean@40
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@90
}

LazyJavaClassifierType@123['T'] {
    arguments = ArrayList@124[empty]
    classifier = JavaTypeParameterImpl@125['T']
    nullable = 'false': Boolean@40
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@101
}

LazyJavaClassifierType@126['T'] {
    arguments = ArrayList@127[empty]
    classifier = JavaTypeParameterImpl@107['T']
    nullable = 'true': Boolean@51
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@94
}

LazyJavaClassifierType@128['T'] {
    arguments = ArrayList@129[empty]
    classifier = JavaTypeParameterImpl@89['T']
    nullable = 'true': Boolean@51
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@90
}

LazyJavaClassifierType@130['T'] {
    arguments = ArrayList@131[empty]
    classifier = JavaTypeParameterImpl@113['T']
    nullable = 'true': Boolean@51
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@90
}

LazyJavaClassifierType@132['T'] {
    arguments = ArrayList@133[empty]
    classifier = JavaTypeParameterImpl@100['T']
    nullable = 'true': Boolean@51
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@101
}

LazyJavaClassifierType@134['T'] {
    arguments = ArrayList@135[empty]
    classifier = JavaTypeParameterImpl@119['T']
    nullable = 'true': Boolean@51
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@94
}

LazyJavaClassifierType@136['T'] {
    arguments = ArrayList@137[empty]
    classifier = JavaTypeParameterImpl@104['T']
    nullable = 'true': Boolean@51
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@94
}

LazyJavaClassifierType@138['T'] {
    arguments = ArrayList@139[empty]
    classifier = JavaTypeParameterImpl@93['T']
    nullable = 'true': Boolean@51
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@94
}

LazyJavaClassifierType@140['T'] {
    arguments = ArrayList@141[empty]
    classifier = JavaTypeParameterImpl@125['T']
    nullable = 'true': Boolean@51
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@101
}

LazyJavaClassifierType@142['T'] {
    arguments = ArrayList@143[empty]
    classifier = JavaTypeParameterImpl@110['T']
    nullable = 'true': Boolean@51
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@90
}

LazyJavaClassifierType@144['T'] {
    arguments = ArrayList@145[empty]
    classifier = JavaTypeParameterImpl@116['T']
    nullable = 'true': Boolean@51
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@94
}

LazyJavaClassifierType@146['T'] {
    arguments = ArrayList@147[empty]
    classifier = JavaTypeParameterImpl@122['T']
    nullable = 'true': Boolean@51
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@90
}

LazyJavaClassifierType@148['T'] {
    arguments = ArrayList@149[empty]
    classifier = JavaTypeParameterImpl@97['T']
    nullable = 'true': Boolean@51
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@90
}

LazyJavaPackageFragmentProvider@150 {
    packageFragments('<root>': FqName@151) = LazyJavaPackageFragment@152['<root>']
    packageFragments('Any': FqName@153) = null
    packageFragments('Comparator': FqName@154) = null
    packageFragments('Int': FqName@155) = null
    packageFragments('List': FqName@156) = null
    packageFragments('String': FqName@157) = null
    packageFragments('T': FqName@158) = null
    packageFragments('inline': FqName@159) = null
    packageFragments('java': FqName@160) = LazyJavaPackageFragment@161['java']
    packageFragments('java.lang': FqName@162) = LazyJavaPackageFragment@163['lang']
    packageFragments('java.lang.Any': FqName@164) = null
    packageFragments('java.lang.Comparator': FqName@165) = null
    packageFragments('java.lang.Int': FqName@166) = null
    packageFragments('java.lang.List': FqName@167) = null
    packageFragments('java.lang.String': FqName@168) = null
    packageFragments('java.lang.T': FqName@169) = null
    packageFragments('java.lang.inline': FqName@170) = null
    packageFragments('java.util': FqName@171) = LazyJavaPackageFragment@172['util']
    packageFragments('java.util.Any': FqName@173) = null
    packageFragments('java.util.Collections': FqName@174) = null
    packageFragments('java.util.Comparator': FqName@175) = null
    packageFragments('java.util.Int': FqName@176) = null
    packageFragments('java.util.List': FqName@177) = null
    packageFragments('java.util.String': FqName@178) = null
    packageFragments('java.util.T': FqName@179) = null
    packageFragments('java.util.inline': FqName@180) = null
    packageFragments('kotlin': FqName@181) = null
    packageFragments('kotlin.Any': FqName@182) = null
    packageFragments('kotlin.Comparator': FqName@183) = null
    packageFragments('kotlin.Int': FqName@184) = null
    packageFragments('kotlin.List': FqName@185) = null
    packageFragments('kotlin.String': FqName@186) = null
    packageFragments('kotlin.T': FqName@187) = null
    packageFragments('kotlin.inline': FqName@188) = null
    packageFragments('kotlin.io': FqName@189) = null
    packageFragments('kotlin.jvm': FqName@190) = null
    packageFragments('maze': FqName@191) = null
    packageFragments('maze.Any': FqName@192) = null
    packageFragments('maze.Comparator': FqName@193) = null
    packageFragments('maze.Int': FqName@194) = null
    packageFragments('maze.List': FqName@195) = null
    packageFragments('maze.String': FqName@196) = null
    packageFragments('maze.T': FqName@197) = null
    packageFragments('maze.inline': FqName@198) = null
    topLevelClasses(JavaClassImpl@199['Collections']) = LazyJavaClassDescriptor@5['Collections']
    topLevelClasses(JavaClassImpl@200['Comparator']) = LazyJavaClassDescriptor@26['Comparator']
    topLevelClasses(JavaClassImpl@201['List']) = LazyJavaClassDescriptor@202['List']
}

LazyJavaPackageFragment@161['java'] {
    classes('lang': Name@203) = null // through LazyPackageFragmentScopeForJavaPackage@204
    classes('util': Name@205) = null // through LazyPackageFragmentScopeForJavaPackage@204
    deserializedPackageScope = Empty@206 // through LazyPackageFragmentScopeForJavaPackage@204
    functions('lang': Name@207) = EmptyList@9[empty] // through LazyPackageFragmentScopeForJavaPackage@204
    functions('util': Name@208) = EmptyList@9[empty] // through LazyPackageFragmentScopeForJavaPackage@204
    memberIndex = computeMemberIndex$1@209 // through LazyPackageFragmentScopeForJavaPackage@204
}

LazyJavaPackageFragment@163['lang'] {
    classes('comparator': Name@8) = null // through LazyPackageFragmentScopeForJavaPackage@210
    classes('max': Name@11) = null // through LazyPackageFragmentScopeForJavaPackage@210
    classes('sure': Name@16) = null // through LazyPackageFragmentScopeForJavaPackage@210
    deserializedPackageScope = Empty@206 // through LazyPackageFragmentScopeForJavaPackage@210
    functions('comparator': Name@8) = EmptyList@9[empty] // through LazyPackageFragmentScopeForJavaPackage@210
    functions('max': Name@11) = EmptyList@9[empty] // through LazyPackageFragmentScopeForJavaPackage@210
    functions('sure': Name@16) = EmptyList@9[empty] // through LazyPackageFragmentScopeForJavaPackage@210
    memberIndex = computeMemberIndex$1@211 // through LazyPackageFragmentScopeForJavaPackage@210
}

LazyJavaPackageFragment@172['util'] {
    classes('Any': Name@20) = null // through LazyPackageFragmentScopeForJavaPackage@212
    classes('Collections': Name@213) = LazyJavaClassDescriptor@5['Collections'] // through LazyPackageFragmentScopeForJavaPackage@212
    classes('Comparator': Name@214) = LazyJavaClassDescriptor@26['Comparator'] // through LazyPackageFragmentScopeForJavaPackage@212
    classes('Int': Name@21) = null // through LazyPackageFragmentScopeForJavaPackage@212
    classes('List': Name@22) = LazyJavaClassDescriptor@202['List'] // through LazyPackageFragmentScopeForJavaPackage@212
    classes('String': Name@23) = null // through LazyPackageFragmentScopeForJavaPackage@212
    classes('comparator': Name@8) = null // through LazyPackageFragmentScopeForJavaPackage@212
    classes('inline': Name@24) = null // through LazyPackageFragmentScopeForJavaPackage@212
    classes('max': Name@11) = null // through LazyPackageFragmentScopeForJavaPackage@212
    classes('sure': Name@16) = null // through LazyPackageFragmentScopeForJavaPackage@212
    deserializedPackageScope = Empty@206 // through LazyPackageFragmentScopeForJavaPackage@212
    functions('Collections': Name@215) = EmptyList@9[empty] // through LazyPackageFragmentScopeForJavaPackage@212
    functions('comparator': Name@8) = EmptyList@9[empty] // through LazyPackageFragmentScopeForJavaPackage@212
    functions('max': Name@11) = EmptyList@9[empty] // through LazyPackageFragmentScopeForJavaPackage@212
    functions('sure': Name@16) = EmptyList@9[empty] // through LazyPackageFragmentScopeForJavaPackage@212
    memberIndex = computeMemberIndex$1@216 // through LazyPackageFragmentScopeForJavaPackage@212
}

LazyJavaTypeParameterDescriptor@217['T'] {
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@90
    upperBounds = LinkedHashSet@218[1] { NullableType@219 }
    upperBoundsAsType = NullableType@219
}

LazyJavaTypeParameterDescriptor@33['T'] {
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@101
    upperBounds = LinkedHashSet@220[1] { NullableType@221 }
    upperBoundsAsType = NullableType@221
}

LazyJavaTypeParameterDescriptor@222['T'] {
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@94
    upperBounds = LinkedHashSet@223[2] { DelegatingFlexibleType@224, DelegatingFlexibleType@225 }
    upperBoundsAsType = NotNullType@226
}

LazyJavaTypeParameterResolver@227 {
    resolve(JavaTypeParameterImpl@228['T']) = LazyJavaTypeParameterDescriptor@217['T']
}

LazyJavaTypeParameterResolver@229 {
    resolve(JavaTypeParameterImpl@230['T']) = LazyJavaTypeParameterDescriptor@33['T']
}

LazyJavaTypeParameterResolver@231 {
    resolve(JavaTypeParameterImpl@232['T']) = LazyJavaTypeParameterDescriptor@222['T']
}

LazyJavaTypeParameterResolver@233 {
    resolve(JavaTypeParameterImpl@100['T']) = null
}

ResolutionTaskHolder@234 {
    <name not found> = ArrayList@235[1] { ResolutionCandidate@236 }
    <name not found> = ArrayList@237[1] { ResolutionCandidate@236 }
    <name not found> = EmptyList@9[empty]
    <name not found> = EmptyList@9[empty]
    <name not found> = EmptyList@9[empty]
    <name not found> = EmptyList@9[empty]
}

ResolutionTaskHolder@238 {
    <name not found> = ArrayList@239[1] { ResolutionCandidate@240 }
    <name not found> = ArrayList@241[1] { ResolutionCandidate@240 }
    <name not found> = EmptyList@9[empty]
    <name not found> = EmptyList@9[empty]
    <name not found> = EmptyList@9[empty]
    <name not found> = EmptyList@9[empty]
}

ResolutionTaskHolder@242 {
    <name not found> = ArrayList@243[1] { ResolutionCandidate@244 }
    <name not found> = ArrayList@245[1] { ResolutionCandidate@244 }
}

ResolutionTaskHolder@246 {
    <name not found> = ArrayList@247[1] { ResolutionCandidate@248 }
    <name not found> = ArrayList@249[1] { ResolutionCandidate@248 }
}

ResolutionTaskHolder@250 {
    <name not found> = ArrayList@251[1] { ResolutionCandidate@252 }
    <name not found> = ArrayList@253[1] { ResolutionCandidate@252 }
}

ResolutionTaskHolder@254 {
    <name not found> = ArrayList@255[1] { ResolutionCandidate@256 }
    <name not found> = ArrayList@257[1] { ResolutionCandidate@256 }
}

ResolutionTaskHolder@258 {
    <name not found> = ArrayList@259[1] { ResolutionCandidate@260 }
    <name not found> = ArrayList@261[1] { ResolutionCandidate@260 }
}

ResolutionTaskHolder@262 {
    <name not found> = ArrayList@263[1] { ResolutionCandidate@264 }
    <name not found> = ArrayList@265[1] { ResolutionCandidate@264 }
}

ResolutionTaskHolder@266 {
    <name not found> = ArrayList@267[1] { ResolutionCandidate@268 }
    <name not found> = ArrayList@269[1] { ResolutionCandidate@268 }
}

ResolutionTaskHolder@270 {
    <name not found> = ArrayList@271[1] { ResolutionCandidate@272 }
    <name not found> = ArrayList@273[1] { ResolutionCandidate@272 }
}

ResolutionTaskHolder@274 {
    <name not found> = ArrayList@275[1] { ResolutionCandidate@276 }
    <name not found> = ArrayList@277[1] { ResolutionCandidate@276 }
}

ResolutionTaskHolder@278 {
    <name not found> = ArrayList@279[1] { ResolutionCandidate@280 }
    <name not found> = ArrayList@281[1] { ResolutionCandidate@280 }
}

ResolutionTaskHolder@282 {
    <name not found> = ArrayList@283[2] { ResolutionCandidate@284, ResolutionCandidate@285 }
    <name not found> = ArrayList@286[3] { ResolutionCandidate@284, ResolutionCandidate@285, ResolutionCandidate@287 }
    <name not found> = EmptyList@9[empty]
    <name not found> = EmptyList@9[empty]
    <name not found> = EmptyList@9[empty]
    <name not found> = EmptyList@9[empty]
}

ResolutionTaskHolder@288 {
    <name not found> = ArrayList@289[8] { ResolutionCandidate@290, ResolutionCandidate@291, ResolutionCandidate@292, ... }
    <name not found> = ArrayList@293[8] { ResolutionCandidate@290, ResolutionCandidate@291, ResolutionCandidate@292, ... }
}
