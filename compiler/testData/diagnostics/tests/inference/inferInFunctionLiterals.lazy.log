LazyJavaClassDescriptor@0['AbstractCollection'] {
    typeConstructor = LazyJavaClassTypeConstructor@1['AbstractCollection']
}

LazyJavaClassDescriptor@2['AbstractList'] {
    typeConstructor = LazyJavaClassTypeConstructor@3['AbstractList']
}

LazyJavaClassDescriptor@4['ArrayList'] {
    typeConstructor = LazyJavaClassTypeConstructor@5['ArrayList']
}

LazyJavaClassDescriptor@6['RandomAccess'] {
    typeConstructor = LazyJavaClassTypeConstructor@7['RandomAccess']
}

LazyJavaClassDescriptor@8['Serializable'] {
    typeConstructor = LazyJavaClassTypeConstructor@9['Serializable']
}

LazyJavaClassTypeConstructor@1['AbstractCollection'] {
    parameters = ArrayList@10[1] { LazyJavaTypeParameterDescriptor@11['E'] }
    supertypes = ArrayList@12[1] { LazyJavaClassifierType@13['Collection<E>'] }
}

LazyJavaClassTypeConstructor@3['AbstractList'] {
    parameters = ArrayList@14[1] { LazyJavaTypeParameterDescriptor@15['E'] }
    supertypes = ArrayList@16[2] { LazyJavaClassifierType@17['AbstractCollection<E>'], LazyJavaClassifierType@18['List<E>'] }
}

LazyJavaClassTypeConstructor@5['ArrayList'] {
    parameters = ArrayList@19[1] { LazyJavaTypeParameterDescriptor@20['E'] }
    supertypes = ArrayList@21[5] { LazyJavaClassifierType@22['AbstractList<E>'], LazyJavaClassifierType@23['List<E>'], LazyJavaClassifierType@24['RandomAccess'], ... }
}

LazyJavaClassTypeConstructor@7['RandomAccess'] {
    parameters = ArrayList@25[empty]
    supertypes = ArrayList@26[1] { JetTypeImpl@27['Any'] }
}

LazyJavaClassTypeConstructor@9['Serializable'] {
    parameters = ArrayList@28[empty]
    supertypes = ArrayList@29[1] { JetTypeImpl@27['Any'] }
}

LazyJavaClassifierType@17['AbstractCollection<E>'] {
    arguments = ArrayList@30[1] { TypeProjectionImpl@31 }
    classifier = JavaClassImpl@32['AbstractCollection']
    memberScope = SubstitutingScope@33
    nullable = 'false': Boolean@34
    typeConstructor = LazyJavaClassTypeConstructor@1['AbstractCollection']
}

LazyJavaClassifierType@22['AbstractList<E>'] {
    arguments = ArrayList@35[1] { TypeProjectionImpl@36 }
    classifier = JavaClassImpl@37['AbstractList']
    memberScope = SubstitutingScope@38
    nullable = 'false': Boolean@34
    typeConstructor = LazyJavaClassTypeConstructor@3['AbstractList']
}

LazyJavaClassifierType@39['Cloneable'] {
    arguments = ArrayList@40[empty]
    classifier = JavaClassImpl@41['Cloneable']
    memberScope = DeserializedClassMemberScope@42
    nullable = 'false': Boolean@34
    typeConstructor = DeserializedClassTypeConstructor@43
}

LazyJavaClassifierType@13['Collection<E>'] {
    arguments = ArrayList@44[1] { TypeProjectionImpl@45 }
    classifier = JavaClassImpl@46['Collection']
    memberScope = SubstitutingScope@47
    nullable = 'false': Boolean@34
    typeConstructor = DeserializedClassTypeConstructor@48
}

LazyJavaClassifierType@49['E'] {
    arguments = ArrayList@50[empty]
    classifier = JavaTypeParameterImpl@51['E']
    nullable = 'false': Boolean@34
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@52
}

LazyJavaClassifierType@53['E'] {
    arguments = ArrayList@54[empty]
    classifier = JavaTypeParameterImpl@55['E']
    nullable = 'false': Boolean@34
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@56
}

LazyJavaClassifierType@57['E'] {
    arguments = ArrayList@58[empty]
    classifier = JavaTypeParameterImpl@59['E']
    nullable = 'false': Boolean@34
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@52
}

LazyJavaClassifierType@60['E'] {
    arguments = ArrayList@61[empty]
    classifier = JavaTypeParameterImpl@62['E']
    nullable = 'false': Boolean@34
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@63
}

LazyJavaClassifierType@64['E'] {
    arguments = ArrayList@65[empty]
    classifier = JavaTypeParameterImpl@66['E']
    nullable = 'false': Boolean@34
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@56
}

LazyJavaClassifierType@67['E'] {
    arguments = ArrayList@68[empty]
    classifier = JavaTypeParameterImpl@59['E']
    nullable = 'true': Boolean@69
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@52
}

LazyJavaClassifierType@70['E'] {
    arguments = ArrayList@71[empty]
    classifier = JavaTypeParameterImpl@51['E']
    nullable = 'true': Boolean@69
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@52
}

LazyJavaClassifierType@72['E'] {
    arguments = ArrayList@73[empty]
    classifier = JavaTypeParameterImpl@55['E']
    nullable = 'true': Boolean@69
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@56
}

LazyJavaClassifierType@74['E'] {
    arguments = ArrayList@75[empty]
    classifier = JavaTypeParameterImpl@66['E']
    nullable = 'true': Boolean@69
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@56
}

LazyJavaClassifierType@76['E'] {
    arguments = ArrayList@77[empty]
    classifier = JavaTypeParameterImpl@62['E']
    nullable = 'true': Boolean@69
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@63
}

LazyJavaClassifierType@18['List<E>'] {
    arguments = ArrayList@78[1] { TypeProjectionImpl@79 }
    classifier = JavaClassImpl@80['List']
    memberScope = SubstitutingScope@81
    nullable = 'false': Boolean@34
    typeConstructor = DeserializedClassTypeConstructor@82
}

LazyJavaClassifierType@23['List<E>'] {
    arguments = ArrayList@83[1] { TypeProjectionImpl@84 }
    classifier = JavaClassImpl@85['List']
    memberScope = SubstitutingScope@86
    nullable = 'false': Boolean@34
    typeConstructor = DeserializedClassTypeConstructor@82
}

LazyJavaClassifierType@87['Object'] {
    classifier = JavaClassImpl@88['Object']
    typeConstructor = DeserializedClassTypeConstructor@89
}

LazyJavaClassifierType@90['Object'] {
    classifier = JavaClassImpl@91['Object']
    typeConstructor = DeserializedClassTypeConstructor@89
}

LazyJavaClassifierType@92['Object'] {
    classifier = JavaClassImpl@93['Object']
    typeConstructor = DeserializedClassTypeConstructor@89
}

LazyJavaClassifierType@24['RandomAccess'] {
    arguments = ArrayList@94[empty]
    classifier = JavaClassImpl@95['RandomAccess']
    memberScope = LazyJavaClassMemberScope@96
    nullable = 'false': Boolean@34
    typeConstructor = LazyJavaClassTypeConstructor@7['RandomAccess']
}

LazyJavaClassifierType@97['Serializable'] {
    arguments = ArrayList@98[empty]
    classifier = JavaClassImpl@99['Serializable']
    memberScope = LazyJavaClassMemberScope@100
    nullable = 'false': Boolean@34
    typeConstructor = LazyJavaClassTypeConstructor@9['Serializable']
}

LazyJavaPackageFragmentProvider@101 {
    packageFragments('<root>': FqName@102) = LazyJavaPackageFragment@103['<root>']
    packageFragments('ArrayList': FqName@104) = null
    packageFragments('Int': FqName@105) = null
    packageFragments('List': FqName@106) = null
    packageFragments('T': FqName@107) = null
    packageFragments('java': FqName@108) = LazyJavaPackageFragment@109['java']
    packageFragments('java.io': FqName@110) = LazyJavaPackageFragment@111['io']
    packageFragments('java.lang': FqName@112) = LazyJavaPackageFragment@113['lang']
    packageFragments('java.lang.ArrayList': FqName@114) = null
    packageFragments('java.lang.Int': FqName@115) = null
    packageFragments('java.lang.List': FqName@116) = null
    packageFragments('java.lang.T': FqName@117) = null
    packageFragments('java.util': FqName@118) = LazyJavaPackageFragment@119['util']
    packageFragments('java.util.ArrayList': FqName@120) = null
    packageFragments('java.util.Int': FqName@121) = null
    packageFragments('java.util.List': FqName@122) = null
    packageFragments('java.util.T': FqName@123) = null
    packageFragments('kotlin': FqName@124) = null
    packageFragments('kotlin.ArrayList': FqName@125) = null
    packageFragments('kotlin.Int': FqName@126) = null
    packageFragments('kotlin.List': FqName@127) = null
    packageFragments('kotlin.T': FqName@128) = null
    packageFragments('kotlin.io': FqName@129) = null
    packageFragments('kotlin.jvm': FqName@130) = null
    packageFragments('n': FqName@131) = null
    packageFragments('n.ArrayList': FqName@132) = null
    packageFragments('n.Int': FqName@133) = null
    packageFragments('n.List': FqName@134) = null
    packageFragments('n.T': FqName@135) = null
    topLevelClasses(JavaClassImpl@32['AbstractCollection']) = LazyJavaClassDescriptor@0['AbstractCollection']
    topLevelClasses(JavaClassImpl@37['AbstractList']) = LazyJavaClassDescriptor@2['AbstractList']
    topLevelClasses(JavaClassImpl@136['ArrayList']) = LazyJavaClassDescriptor@4['ArrayList']
    topLevelClasses(JavaClassImpl@137['List']) = LazyJavaClassDescriptor@138['List']
    topLevelClasses(JavaClassImpl@95['RandomAccess']) = LazyJavaClassDescriptor@6['RandomAccess']
    topLevelClasses(JavaClassImpl@99['Serializable']) = LazyJavaClassDescriptor@8['Serializable']
}

LazyJavaPackageFragment@109['java'] {
    classes('lang': Name@139) = null // through LazyPackageFragmentScopeForJavaPackage@140
    classes('util': Name@141) = null // through LazyPackageFragmentScopeForJavaPackage@140
    deserializedPackageScope = Empty@142 // through LazyPackageFragmentScopeForJavaPackage@140
    functions('lang': Name@143) = EmptyList@144[empty] // through LazyPackageFragmentScopeForJavaPackage@140
    functions('util': Name@145) = EmptyList@144[empty] // through LazyPackageFragmentScopeForJavaPackage@140
    memberIndex = computeMemberIndex$1@146 // through LazyPackageFragmentScopeForJavaPackage@140
}

LazyJavaPackageFragment@113['lang'] {
    classes('expected': Name@147) = null // through LazyPackageFragmentScopeForJavaPackage@148
    classes('reverse': Name@149) = null // through LazyPackageFragmentScopeForJavaPackage@148
    deserializedPackageScope = Empty@142 // through LazyPackageFragmentScopeForJavaPackage@148
    functions('expected': Name@147) = EmptyList@144[empty] // through LazyPackageFragmentScopeForJavaPackage@148
    functions('reverse': Name@149) = EmptyList@144[empty] // through LazyPackageFragmentScopeForJavaPackage@148
    memberIndex = computeMemberIndex$1@150 // through LazyPackageFragmentScopeForJavaPackage@148
}

LazyJavaPackageFragment@119['util'] {
    classes('ArrayList': Name@151) = LazyJavaClassDescriptor@4['ArrayList'] // through LazyPackageFragmentScopeForJavaPackage@152
    classes('Int': Name@153) = null // through LazyPackageFragmentScopeForJavaPackage@152
    classes('List': Name@154) = LazyJavaClassDescriptor@138['List'] // through LazyPackageFragmentScopeForJavaPackage@152
    classes('expected': Name@147) = null // through LazyPackageFragmentScopeForJavaPackage@152
    classes('reverse': Name@149) = null // through LazyPackageFragmentScopeForJavaPackage@152
    deserializedPackageScope = Empty@142 // through LazyPackageFragmentScopeForJavaPackage@152
    functions('expected': Name@147) = EmptyList@144[empty] // through LazyPackageFragmentScopeForJavaPackage@152
    functions('reverse': Name@149) = EmptyList@144[empty] // through LazyPackageFragmentScopeForJavaPackage@152
    memberIndex = computeMemberIndex$1@155 // through LazyPackageFragmentScopeForJavaPackage@152
}

LazyJavaTypeParameterDescriptor@20['E'] {
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@52
    upperBounds = LinkedHashSet@156[1] { NullableType@157 }
}

LazyJavaTypeParameterDescriptor@15['E'] {
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@56
}

LazyJavaTypeParameterDescriptor@11['E'] {
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@63
}

LazyJavaTypeParameterResolver@158 {
    resolve(JavaTypeParameterImpl@159['E']) = LazyJavaTypeParameterDescriptor@20['E']
}

LazyJavaTypeParameterResolver@160 {
    resolve(JavaTypeParameterImpl@161['E']) = LazyJavaTypeParameterDescriptor@15['E']
}

LazyJavaTypeParameterResolver@162 {
    resolve(JavaTypeParameterImpl@163['E']) = LazyJavaTypeParameterDescriptor@11['E']
}

ResolutionTaskHolder@164 {
    <name not found> = ArrayList@165[1] { ResolutionCandidate@166 }
    <name not found> = ArrayList@167[1] { ResolutionCandidate@166 }
    <name not found> = EmptyList@144[empty]
    <name not found> = EmptyList@144[empty]
    <name not found> = EmptyList@144[empty]
    <name not found> = EmptyList@144[empty]
}

ResolutionTaskHolder@168 {
    <name not found> = ArrayList@169[1] { ResolutionCandidate@170 }
    <name not found> = ArrayList@171[1] { ResolutionCandidate@170 }
    <name not found> = EmptyList@144[empty]
    <name not found> = EmptyList@144[empty]
    <name not found> = EmptyList@144[empty]
    <name not found> = EmptyList@144[empty]
}

ResolutionTaskHolder@172 {
    <name not found> = ArrayList@173[1] { ResolutionCandidate@174 }
    <name not found> = ArrayList@175[1] { ResolutionCandidate@174 }
    <name not found> = EmptyList@144[empty]
    <name not found> = EmptyList@144[empty]
    <name not found> = EmptyList@144[empty]
    <name not found> = EmptyList@144[empty]
}

ResolutionTaskHolder@176 {
    <name not found> = ArrayList@177[1] { ResolutionCandidate@178 }
    <name not found> = ArrayList@179[1] { ResolutionCandidate@178 }
}

ResolutionTaskHolder@180 {
    <name not found> = ArrayList@181[1] { ResolutionCandidate@182 }
    <name not found> = ArrayList@183[1] { ResolutionCandidate@182 }
}

ResolutionTaskHolder@184 {
    <name not found> = ArrayList@185[1] { ResolutionCandidate@186 }
    <name not found> = ArrayList@187[1] { ResolutionCandidate@186 }
}

ResolutionTaskHolder@188 {
    <name not found> = ArrayList@189[1] { ResolutionCandidate@190 }
    <name not found> = ArrayList@191[1] { ResolutionCandidate@190 }
}
