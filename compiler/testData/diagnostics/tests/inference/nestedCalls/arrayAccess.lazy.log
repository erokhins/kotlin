DescriptorResolver@0 {
    <name not found> = JetTypeImpl@1['List<1>']
}

LazyJavaClassDescriptor@2['Exception'] {
    constructors = ArrayList@3[5] { JavaConstructorDescriptor@4['<init>'], JavaConstructorDescriptor@5['<init>'], JavaConstructorDescriptor@6['<init>'], ... } // through LazyJavaClassMemberScope@7
    defaultType = JetTypeImpl@8['Exception']
    functionTypeForSamInterface = null
    typeConstructor = LazyJavaClassTypeConstructor@9['Exception']
}

LazyJavaClassTypeConstructor@9['Exception'] {
    parameters = ArrayList@10[empty]
    supertypes = ArrayList@11[1] { LazyJavaClassifierType@12['Throwable'] }
}

LazyJavaClassifierType@13['String'] {
    arguments = ArrayList@14[empty]
    classifier = JavaClassImpl@15['String']
    nullable = 'false': Boolean@16
    typeConstructor = DeserializedClassTypeConstructor@17
}

LazyJavaClassifierType@18['String'] {
    arguments = ArrayList@19[empty]
    classifier = JavaClassImpl@20['String']
    nullable = 'false': Boolean@16
    typeConstructor = DeserializedClassTypeConstructor@17
}

LazyJavaClassifierType@21['String'] {
    arguments = ArrayList@22[empty]
    classifier = JavaClassImpl@23['String']
    nullable = 'false': Boolean@16
    typeConstructor = DeserializedClassTypeConstructor@17
}

LazyJavaClassifierType@24['String'] {
    arguments = ArrayList@25[empty]
    classifier = JavaClassImpl@15['String']
    nullable = 'true': Boolean@26
    typeConstructor = DeserializedClassTypeConstructor@17
}

LazyJavaClassifierType@27['String'] {
    arguments = ArrayList@28[empty]
    classifier = JavaClassImpl@20['String']
    nullable = 'true': Boolean@26
    typeConstructor = DeserializedClassTypeConstructor@17
}

LazyJavaClassifierType@29['String'] {
    arguments = ArrayList@30[empty]
    classifier = JavaClassImpl@23['String']
    nullable = 'true': Boolean@26
    typeConstructor = DeserializedClassTypeConstructor@17
}

LazyJavaClassifierType@31['Throwable'] {
    arguments = ArrayList@32[empty]
    classifier = JavaClassImpl@33['Throwable']
    nullable = 'false': Boolean@16
    typeConstructor = DeserializedClassTypeConstructor@34
}

LazyJavaClassifierType@35['Throwable'] {
    arguments = ArrayList@36[empty]
    classifier = JavaClassImpl@37['Throwable']
    nullable = 'false': Boolean@16
    typeConstructor = DeserializedClassTypeConstructor@34
}

LazyJavaClassifierType@38['Throwable'] {
    arguments = ArrayList@39[empty]
    classifier = JavaClassImpl@40['Throwable']
    nullable = 'false': Boolean@16
    typeConstructor = DeserializedClassTypeConstructor@34
}

LazyJavaClassifierType@41['Throwable'] {
    arguments = ArrayList@42[empty]
    classifier = JavaClassImpl@37['Throwable']
    nullable = 'true': Boolean@26
    typeConstructor = DeserializedClassTypeConstructor@34
}

LazyJavaClassifierType@43['Throwable'] {
    arguments = ArrayList@44[empty]
    classifier = JavaClassImpl@40['Throwable']
    nullable = 'true': Boolean@26
    typeConstructor = DeserializedClassTypeConstructor@34
}

LazyJavaClassifierType@45['Throwable'] {
    arguments = ArrayList@46[empty]
    classifier = JavaClassImpl@33['Throwable']
    nullable = 'true': Boolean@26
    typeConstructor = DeserializedClassTypeConstructor@34
}

LazyJavaClassifierType@12['Throwable'] {
    arguments = ArrayList@47[empty]
    classifier = JavaClassImpl@48['Throwable']
    typeConstructor = DeserializedClassTypeConstructor@34
}

LazyJavaPackageFragmentProvider@49 {
    packageFragments('<root>': FqName@50) = LazyJavaPackageFragment@51['<root>']
    packageFragments('A': FqName@52) = null
    packageFragments('Int': FqName@53) = null
    packageFragments('List': FqName@54) = null
    packageFragments('T': FqName@55) = null
    packageFragments('b': FqName@56) = null
    packageFragments('b.A': FqName@57) = null
    packageFragments('b.Int': FqName@58) = null
    packageFragments('b.List': FqName@59) = null
    packageFragments('b.T': FqName@60) = null
    packageFragments('java': FqName@61) = LazyJavaPackageFragment@62['java']
    packageFragments('java.lang': FqName@63) = LazyJavaPackageFragment@64['lang']
    packageFragments('java.lang.A': FqName@65) = null
    packageFragments('java.lang.Int': FqName@66) = null
    packageFragments('java.lang.List': FqName@67) = null
    packageFragments('java.lang.T': FqName@68) = null
    packageFragments('kotlin': FqName@69) = null
    packageFragments('kotlin.A': FqName@70) = null
    packageFragments('kotlin.Int': FqName@71) = null
    packageFragments('kotlin.List': FqName@72) = null
    packageFragments('kotlin.T': FqName@73) = null
    packageFragments('kotlin.io': FqName@74) = null
    packageFragments('kotlin.jvm': FqName@75) = null
    topLevelClasses(JavaClassImpl@76['Exception']) = LazyJavaClassDescriptor@2['Exception']
}

LazyJavaPackageFragment@62['java'] {
    classes('lang': Name@77) = null // through LazyPackageFragmentScopeForJavaPackage@78
    deserializedPackageScope = Empty@79 // through LazyPackageFragmentScopeForJavaPackage@78
    functions('lang': Name@80) = EmptyList@81[empty] // through LazyPackageFragmentScopeForJavaPackage@78
    memberIndex = computeMemberIndex$1@82 // through LazyPackageFragmentScopeForJavaPackage@78
}

LazyJavaPackageFragment@64['lang'] {
    classes('Exception': Name@83) = LazyJavaClassDescriptor@2['Exception'] // through LazyPackageFragmentScopeForJavaPackage@84
    classes('bar': Name@85) = null // through LazyPackageFragmentScopeForJavaPackage@84
    deserializedPackageScope = Empty@79 // through LazyPackageFragmentScopeForJavaPackage@84
    functions('Exception': Name@83) = EmptyList@81[empty] // through LazyPackageFragmentScopeForJavaPackage@84
    functions('bar': Name@85) = EmptyList@81[empty] // through LazyPackageFragmentScopeForJavaPackage@84
    memberIndex = computeMemberIndex$1@86 // through LazyPackageFragmentScopeForJavaPackage@84
}

ResolutionTaskHolder@87 {
    <name not found> = ArrayList@88[1] { ResolutionCandidate@89 }
    <name not found> = ArrayList@90[1] { ResolutionCandidate@89 }
    <name not found> = EmptyList@81[empty]
    <name not found> = EmptyList@81[empty]
    <name not found> = EmptyList@81[empty]
    <name not found> = EmptyList@81[empty]
}

ResolutionTaskHolder@91 {
    <name not found> = ArrayList@92[1] { ResolutionCandidate@93 }
    <name not found> = ArrayList@94[1] { ResolutionCandidate@93 }
}

ResolutionTaskHolder@95 {
    <name not found> = ArrayList@96[1] { ResolutionCandidate@97 }
    <name not found> = ArrayList@98[1] { ResolutionCandidate@97 }
}

ResolutionTaskHolder@99 {
    <name not found> = ArrayList@100[1] { ResolutionCandidate@101 }
    <name not found> = ArrayList@102[1] { ResolutionCandidate@101 }
}

ResolutionTaskHolder@103 {
    <name not found> = ArrayList@104[1] { ResolutionCandidate@105 }
    <name not found> = ArrayList@106[1] { ResolutionCandidate@105 }
}

ResolutionTaskHolder@107 {
    <name not found> = ArrayList@108[4] { ResolutionCandidate@109, ResolutionCandidate@110, ResolutionCandidate@111, ... }
    <name not found> = ArrayList@112[5] { ResolutionCandidate@109, ResolutionCandidate@110, ResolutionCandidate@111, ... }
    <name not found> = EmptyList@81[empty]
    <name not found> = EmptyList@81[empty]
    <name not found> = EmptyList@81[empty]
    <name not found> = EmptyList@81[empty]
    <name not found> = EmptyList@81[empty]
    <name not found> = EmptyList@81[empty]
    <name not found> = EmptyList@81[empty]
    <name not found> = EmptyList@81[empty]
    <name not found> = EmptyList@81[empty]
    <name not found> = EmptyList@81[empty]
    <name not found> = EmptyList@81[empty]
    <name not found> = EmptyList@81[empty]
    <name not found> = EmptyList@81[empty]
    <name not found> = EmptyList@81[empty]
    <name not found> = EmptyList@81[empty]
    <name not found> = EmptyList@81[empty]
}
