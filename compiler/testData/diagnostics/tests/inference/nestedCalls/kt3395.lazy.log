DescriptorResolver@0 {
    <name not found> = JetTypeImpl@1['T']
    <name not found> = StringValue@2
}

LazyJavaClassDescriptor@3['AbstractCollection'] {
    typeConstructor = LazyJavaClassTypeConstructor@4['AbstractCollection']
}

LazyJavaClassDescriptor@5['AbstractList'] {
    typeConstructor = LazyJavaClassTypeConstructor@6['AbstractList']
}

LazyJavaClassDescriptor@7['ArrayList'] {
    constructors = ArrayList@8[3] { JavaConstructorDescriptor@9['<init>'], JavaConstructorDescriptor@10['<init>'], JavaConstructorDescriptor@11['<init>'] } // through LazyJavaClassMemberScope@12
    defaultType = JetTypeImpl@13['ArrayList<1>']
    functionTypeForSamInterface = null
    typeConstructor = LazyJavaClassTypeConstructor@14['ArrayList']
}

LazyJavaClassDescriptor@15['Exception'] {
    constructors = ArrayList@16[5] { JavaConstructorDescriptor@17['<init>'], JavaConstructorDescriptor@18['<init>'], JavaConstructorDescriptor@19['<init>'], ... } // through LazyJavaClassMemberScope@20
    defaultType = JetTypeImpl@21['Exception']
    functionTypeForSamInterface = null
    typeConstructor = LazyJavaClassTypeConstructor@22['Exception']
}

LazyJavaClassDescriptor@23['RandomAccess'] {
    typeConstructor = LazyJavaClassTypeConstructor@24['RandomAccess']
}

LazyJavaClassDescriptor@25['Serializable'] {
    typeConstructor = LazyJavaClassTypeConstructor@26['Serializable']
}

LazyJavaClassTypeConstructor@4['AbstractCollection'] {
    supertypes = ArrayList@27[1] { LazyJavaClassifierType@28['Collection<E>'] }
}

LazyJavaClassTypeConstructor@6['AbstractList'] {
    parameters = ArrayList@29[1] { LazyJavaTypeParameterDescriptor@30['E'] }
    supertypes = ArrayList@31[2] { LazyJavaClassifierType@32['AbstractCollection<E>'], LazyJavaClassifierType@33['List<E>'] }
}

LazyJavaClassTypeConstructor@14['ArrayList'] {
    parameters = ArrayList@34[1] { LazyJavaTypeParameterDescriptor@35['E'] }
    supertypes = ArrayList@36[5] { LazyJavaClassifierType@37['AbstractList<E>'], LazyJavaClassifierType@38['List<E>'], LazyJavaClassifierType@39['RandomAccess'], ... }
}

LazyJavaClassTypeConstructor@22['Exception'] {
    parameters = ArrayList@40[empty]
    supertypes = ArrayList@41[1] { LazyJavaClassifierType@42['Throwable'] }
}

LazyJavaClassifierType@32['AbstractCollection<E>'] {
    classifier = JavaClassImpl@43['AbstractCollection']
    typeConstructor = LazyJavaClassTypeConstructor@4['AbstractCollection']
}

LazyJavaClassifierType@37['AbstractList<E>'] {
    arguments = ArrayList@44[1] { TypeProjectionImpl@45 }
    classifier = JavaClassImpl@46['AbstractList']
    typeConstructor = LazyJavaClassTypeConstructor@6['AbstractList']
}

LazyJavaClassifierType@47['Cloneable'] {
    classifier = JavaClassImpl@48['Cloneable']
    typeConstructor = DeserializedClassTypeConstructor@49
}

LazyJavaClassifierType@50['Collection<? extends E>'] {
    arguments = ArrayList@51[1] { TypeProjectionImpl@52 }
    classifier = JavaClassImpl@53['Collection']
    memberScope = SubstitutingScope@54
    nullable = 'false': Boolean@55
    typeConstructor = DeserializedClassTypeConstructor@56
}

LazyJavaClassifierType@57['Collection<? extends E>'] {
    arguments = ArrayList@58[1] { TypeProjectionImpl@59 }
    classifier = JavaClassImpl@53['Collection']
    memberScope = SubstitutingScope@60
    nullable = 'true': Boolean@61
    typeConstructor = DeserializedClassTypeConstructor@62
}

LazyJavaClassifierType@28['Collection<E>'] {
    classifier = JavaClassImpl@63['Collection']
    typeConstructor = DeserializedClassTypeConstructor@56
}

LazyJavaClassifierType@64['E'] {
    arguments = ArrayList@65[empty]
    classifier = JavaTypeParameterImpl@66['E']
    nullable = 'false': Boolean@55
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@67
}

LazyJavaClassifierType@68['E'] {
    arguments = ArrayList@69[empty]
    classifier = JavaTypeParameterImpl@70['E']
    nullable = 'false': Boolean@55
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@71
}

LazyJavaClassifierType@72['E'] {
    arguments = ArrayList@73[empty]
    classifier = JavaTypeParameterImpl@74['E']
    nullable = 'false': Boolean@55
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@71
}

LazyJavaClassifierType@75['E'] {
    arguments = ArrayList@76[empty]
    classifier = JavaTypeParameterImpl@77['E']
    nullable = 'false': Boolean@55
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@71
}

LazyJavaClassifierType@78['E'] {
    arguments = ArrayList@79[empty]
    classifier = JavaTypeParameterImpl@66['E']
    nullable = 'true': Boolean@61
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@67
}

LazyJavaClassifierType@80['E'] {
    arguments = ArrayList@81[empty]
    classifier = JavaTypeParameterImpl@77['E']
    nullable = 'true': Boolean@61
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@71
}

LazyJavaClassifierType@82['E'] {
    arguments = ArrayList@83[empty]
    classifier = JavaTypeParameterImpl@70['E']
    nullable = 'true': Boolean@61
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@71
}

LazyJavaClassifierType@84['E'] {
    arguments = ArrayList@85[empty]
    classifier = JavaTypeParameterImpl@74['E']
    nullable = 'true': Boolean@61
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@71
}

LazyJavaClassifierType@33['List<E>'] {
    arguments = ArrayList@86[1] { TypeProjectionImpl@87 }
    classifier = JavaClassImpl@88['List']
    typeConstructor = DeserializedClassTypeConstructor@89
}

LazyJavaClassifierType@38['List<E>'] {
    classifier = JavaClassImpl@90['List']
    typeConstructor = DeserializedClassTypeConstructor@89
}

LazyJavaClassifierType@91['Object'] {
    classifier = JavaClassImpl@92['Object']
    typeConstructor = DeserializedClassTypeConstructor@93
}

LazyJavaClassifierType@39['RandomAccess'] {
    classifier = JavaClassImpl@94['RandomAccess']
    typeConstructor = LazyJavaClassTypeConstructor@24['RandomAccess']
}

LazyJavaClassifierType@95['Serializable'] {
    classifier = JavaClassImpl@96['Serializable']
    typeConstructor = LazyJavaClassTypeConstructor@26['Serializable']
}

LazyJavaClassifierType@97['String'] {
    arguments = ArrayList@98[empty]
    classifier = JavaClassImpl@99['String']
    nullable = 'false': Boolean@55
    typeConstructor = DeserializedClassTypeConstructor@100
}

LazyJavaClassifierType@101['String'] {
    arguments = ArrayList@102[empty]
    classifier = JavaClassImpl@103['String']
    nullable = 'false': Boolean@55
    typeConstructor = DeserializedClassTypeConstructor@100
}

LazyJavaClassifierType@104['String'] {
    arguments = ArrayList@105[empty]
    classifier = JavaClassImpl@106['String']
    nullable = 'false': Boolean@55
    typeConstructor = DeserializedClassTypeConstructor@100
}

LazyJavaClassifierType@107['String'] {
    arguments = ArrayList@108[empty]
    classifier = JavaClassImpl@106['String']
    nullable = 'true': Boolean@61
    typeConstructor = DeserializedClassTypeConstructor@100
}

LazyJavaClassifierType@109['String'] {
    arguments = ArrayList@110[empty]
    classifier = JavaClassImpl@103['String']
    nullable = 'true': Boolean@61
    typeConstructor = DeserializedClassTypeConstructor@100
}

LazyJavaClassifierType@111['String'] {
    arguments = ArrayList@112[empty]
    classifier = JavaClassImpl@99['String']
    nullable = 'true': Boolean@61
    typeConstructor = DeserializedClassTypeConstructor@100
}

LazyJavaClassifierType@113['Throwable'] {
    arguments = ArrayList@114[empty]
    classifier = JavaClassImpl@115['Throwable']
    nullable = 'false': Boolean@55
    typeConstructor = DeserializedClassTypeConstructor@116
}

LazyJavaClassifierType@117['Throwable'] {
    arguments = ArrayList@118[empty]
    classifier = JavaClassImpl@119['Throwable']
    nullable = 'false': Boolean@55
    typeConstructor = DeserializedClassTypeConstructor@116
}

LazyJavaClassifierType@120['Throwable'] {
    arguments = ArrayList@121[empty]
    classifier = JavaClassImpl@122['Throwable']
    nullable = 'false': Boolean@55
    typeConstructor = DeserializedClassTypeConstructor@116
}

LazyJavaClassifierType@123['Throwable'] {
    arguments = ArrayList@124[empty]
    classifier = JavaClassImpl@119['Throwable']
    nullable = 'true': Boolean@61
    typeConstructor = DeserializedClassTypeConstructor@116
}

LazyJavaClassifierType@125['Throwable'] {
    arguments = ArrayList@126[empty]
    classifier = JavaClassImpl@115['Throwable']
    nullable = 'true': Boolean@61
    typeConstructor = DeserializedClassTypeConstructor@116
}

LazyJavaClassifierType@127['Throwable'] {
    arguments = ArrayList@128[empty]
    classifier = JavaClassImpl@122['Throwable']
    nullable = 'true': Boolean@61
    typeConstructor = DeserializedClassTypeConstructor@116
}

LazyJavaClassifierType@42['Throwable'] {
    arguments = ArrayList@129[empty]
    classifier = JavaClassImpl@130['Throwable']
    typeConstructor = DeserializedClassTypeConstructor@116
}

LazyJavaPackageFragmentProvider@131 {
    packageFragments('<root>': FqName@132) = LazyJavaPackageFragment@133['<root>']
    packageFragments('A': FqName@134) = null
    packageFragments('Any': FqName@135) = null
    packageFragments('B': FqName@136) = null
    packageFragments('Int': FqName@137) = null
    packageFragments('K': FqName@138) = null
    packageFragments('List': FqName@139) = null
    packageFragments('Map': FqName@140) = null
    packageFragments('Pair': FqName@141) = null
    packageFragments('String': FqName@142) = null
    packageFragments('T': FqName@143) = null
    packageFragments('V': FqName@144) = null
    packageFragments('b': FqName@145) = null
    packageFragments('b.A': FqName@146) = null
    packageFragments('b.Any': FqName@147) = null
    packageFragments('b.B': FqName@148) = null
    packageFragments('b.Int': FqName@149) = null
    packageFragments('b.K': FqName@150) = null
    packageFragments('b.List': FqName@151) = null
    packageFragments('b.Map': FqName@152) = null
    packageFragments('b.Pair': FqName@153) = null
    packageFragments('b.String': FqName@154) = null
    packageFragments('b.T': FqName@155) = null
    packageFragments('b.V': FqName@156) = null
    packageFragments('java': FqName@157) = LazyJavaPackageFragment@158['java']
    packageFragments('java.io': FqName@159) = LazyJavaPackageFragment@160['io']
    packageFragments('java.lang': FqName@161) = LazyJavaPackageFragment@162['lang']
    packageFragments('java.lang.A': FqName@163) = null
    packageFragments('java.lang.Any': FqName@164) = null
    packageFragments('java.lang.B': FqName@165) = null
    packageFragments('java.lang.Int': FqName@166) = null
    packageFragments('java.lang.K': FqName@167) = null
    packageFragments('java.lang.List': FqName@168) = null
    packageFragments('java.lang.Map': FqName@169) = null
    packageFragments('java.lang.Pair': FqName@170) = null
    packageFragments('java.lang.String': FqName@171) = null
    packageFragments('java.lang.T': FqName@172) = null
    packageFragments('java.lang.V': FqName@173) = null
    packageFragments('java.util': FqName@174) = LazyJavaPackageFragment@175['util']
    packageFragments('java.util.ArrayList': FqName@176) = null
    packageFragments('kotlin': FqName@177) = null
    packageFragments('kotlin.A': FqName@178) = null
    packageFragments('kotlin.Any': FqName@179) = null
    packageFragments('kotlin.B': FqName@180) = null
    packageFragments('kotlin.Int': FqName@181) = null
    packageFragments('kotlin.K': FqName@182) = null
    packageFragments('kotlin.List': FqName@183) = null
    packageFragments('kotlin.Map': FqName@184) = null
    packageFragments('kotlin.Pair': FqName@185) = null
    packageFragments('kotlin.String': FqName@186) = null
    packageFragments('kotlin.T': FqName@187) = null
    packageFragments('kotlin.V': FqName@188) = null
    packageFragments('kotlin.io': FqName@189) = null
    packageFragments('kotlin.jvm': FqName@190) = null
    topLevelClasses(JavaClassImpl@43['AbstractCollection']) = LazyJavaClassDescriptor@3['AbstractCollection']
    topLevelClasses(JavaClassImpl@46['AbstractList']) = LazyJavaClassDescriptor@5['AbstractList']
    topLevelClasses(JavaClassImpl@191['ArrayList']) = LazyJavaClassDescriptor@7['ArrayList']
    topLevelClasses(JavaClassImpl@192['Exception']) = LazyJavaClassDescriptor@15['Exception']
    topLevelClasses(JavaClassImpl@94['RandomAccess']) = LazyJavaClassDescriptor@23['RandomAccess']
    topLevelClasses(JavaClassImpl@96['Serializable']) = LazyJavaClassDescriptor@25['Serializable']
}

LazyJavaPackageFragment@158['java'] {
    classes('lang': Name@193) = null // through LazyPackageFragmentScopeForJavaPackage@194
    classes('util': Name@195) = null // through LazyPackageFragmentScopeForJavaPackage@194
    deserializedPackageScope = Empty@196 // through LazyPackageFragmentScopeForJavaPackage@194
    functions('lang': Name@197) = EmptyList@198[empty] // through LazyPackageFragmentScopeForJavaPackage@194
    functions('util': Name@199) = EmptyList@198[empty] // through LazyPackageFragmentScopeForJavaPackage@194
    memberIndex = computeMemberIndex$1@200 // through LazyPackageFragmentScopeForJavaPackage@194
}

LazyJavaPackageFragment@162['lang'] {
    classes('ArrayList': Name@201) = null // through LazyPackageFragmentScopeForJavaPackage@202
    classes('Exception': Name@203) = LazyJavaClassDescriptor@15['Exception'] // through LazyPackageFragmentScopeForJavaPackage@202
    classes('foo': Name@204) = null // through LazyPackageFragmentScopeForJavaPackage@202
    classes('mapOf': Name@205) = null // through LazyPackageFragmentScopeForJavaPackage@202
    classes('println': Name@206) = null // through LazyPackageFragmentScopeForJavaPackage@202
    classes('query': Name@207) = null // through LazyPackageFragmentScopeForJavaPackage@202
    classes('to': Name@208) = null // through LazyPackageFragmentScopeForJavaPackage@202
    deserializedPackageScope = Empty@196 // through LazyPackageFragmentScopeForJavaPackage@202
    functions('ArrayList': Name@201) = EmptyList@198[empty] // through LazyPackageFragmentScopeForJavaPackage@202
    functions('Exception': Name@203) = EmptyList@198[empty] // through LazyPackageFragmentScopeForJavaPackage@202
    functions('foo': Name@204) = EmptyList@198[empty] // through LazyPackageFragmentScopeForJavaPackage@202
    functions('mapOf': Name@205) = EmptyList@198[empty] // through LazyPackageFragmentScopeForJavaPackage@202
    functions('println': Name@206) = EmptyList@198[empty] // through LazyPackageFragmentScopeForJavaPackage@202
    functions('query': Name@207) = EmptyList@198[empty] // through LazyPackageFragmentScopeForJavaPackage@202
    functions('to': Name@208) = EmptyList@198[empty] // through LazyPackageFragmentScopeForJavaPackage@202
    memberIndex = computeMemberIndex$1@209 // through LazyPackageFragmentScopeForJavaPackage@202
}

LazyJavaPackageFragment@175['util'] {
    classes('ArrayList': Name@210) = LazyJavaClassDescriptor@7['ArrayList'] // through LazyPackageFragmentScopeForJavaPackage@211
    deserializedPackageScope = Empty@196 // through LazyPackageFragmentScopeForJavaPackage@211
    functions('ArrayList': Name@212) = EmptyList@198[empty] // through LazyPackageFragmentScopeForJavaPackage@211
    memberIndex = computeMemberIndex$1@213 // through LazyPackageFragmentScopeForJavaPackage@211
}

LazyJavaTypeParameterDescriptor@35['E'] {
    defaultType = JetTypeImpl@214['E']
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@71
    upperBounds = LinkedHashSet@215[1] { NullableType@216 }
}

LazyJavaTypeParameterDescriptor@30['E'] {
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@67
}

LazyJavaTypeParameterResolver@217 {
    resolve(JavaTypeParameterImpl@218['E']) = LazyJavaTypeParameterDescriptor@35['E']
}

LazyJavaTypeParameterResolver@219 {
    resolve(JavaTypeParameterImpl@66['E']) = LazyJavaTypeParameterDescriptor@30['E']
}

ResolutionTaskHolder@220 {
    <name not found> = ArrayList@221[1] { ResolutionCandidate@222 }
    <name not found> = ArrayList@223[1] { ResolutionCandidate@222 }
    <name not found> = EmptyList@198[empty]
    <name not found> = EmptyList@198[empty]
    <name not found> = EmptyList@198[empty]
    <name not found> = EmptyList@198[empty]
}

ResolutionTaskHolder@224 {
    <name not found> = ArrayList@225[1] { ResolutionCandidate@226 }
    <name not found> = ArrayList@227[1] { ResolutionCandidate@226 }
    <name not found> = EmptyList@198[empty]
    <name not found> = EmptyList@198[empty]
    <name not found> = EmptyList@198[empty]
    <name not found> = EmptyList@198[empty]
}

ResolutionTaskHolder@228 {
    <name not found> = ArrayList@229[1] { ResolutionCandidate@230 }
    <name not found> = ArrayList@231[1] { ResolutionCandidate@230 }
    <name not found> = EmptyList@198[empty]
    <name not found> = EmptyList@198[empty]
    <name not found> = EmptyList@198[empty]
    <name not found> = EmptyList@198[empty]
}

ResolutionTaskHolder@232 {
    <name not found> = ArrayList@233[1] { ResolutionCandidate@234 }
    <name not found> = ArrayList@235[1] { ResolutionCandidate@234 }
    <name not found> = EmptyList@198[empty]
    <name not found> = EmptyList@198[empty]
    <name not found> = EmptyList@198[empty]
    <name not found> = EmptyList@198[empty]
}

ResolutionTaskHolder@236 {
    <name not found> = ArrayList@237[1] { ResolutionCandidate@238 }
    <name not found> = ArrayList@239[1] { ResolutionCandidate@238 }
    <name not found> = EmptyList@198[empty]
    <name not found> = EmptyList@198[empty]
    <name not found> = EmptyList@198[empty]
    <name not found> = EmptyList@198[empty]
}

ResolutionTaskHolder@240 {
    <name not found> = ArrayList@241[1] { ResolutionCandidate@242 }
    <name not found> = ArrayList@243[1] { ResolutionCandidate@242 }
    <name not found> = EmptyList@198[empty]
    <name not found> = EmptyList@198[empty]
    <name not found> = EmptyList@198[empty]
    <name not found> = EmptyList@198[empty]
}

ResolutionTaskHolder@244 {
    <name not found> = ArrayList@245[1] { ResolutionCandidate@246 }
    <name not found> = ArrayList@247[1] { ResolutionCandidate@246 }
    <name not found> = EmptyList@198[empty]
    <name not found> = EmptyList@198[empty]
    <name not found> = EmptyList@198[empty]
    <name not found> = EmptyList@198[empty]
}

ResolutionTaskHolder@248 {
    <name not found> = ArrayList@249[1] { ResolutionCandidate@250 }
    <name not found> = ArrayList@251[1] { ResolutionCandidate@250 }
    <name not found> = EmptyList@198[empty]
    <name not found> = EmptyList@198[empty]
    <name not found> = EmptyList@198[empty]
    <name not found> = EmptyList@198[empty]
}

ResolutionTaskHolder@252 {
    <name not found> = ArrayList@253[1] { ResolutionCandidate@254 }
    <name not found> = ArrayList@255[1] { ResolutionCandidate@254 }
    <name not found> = EmptyList@198[empty]
    <name not found> = EmptyList@198[empty]
    <name not found> = EmptyList@198[empty]
    <name not found> = EmptyList@198[empty]
}

ResolutionTaskHolder@256 {
    <name not found> = ArrayList@257[1] { ResolutionCandidate@258 }
    <name not found> = ArrayList@259[1] { ResolutionCandidate@258 }
}

ResolutionTaskHolder@260 {
    <name not found> = ArrayList@261[1] { ResolutionCandidate@262 }
    <name not found> = ArrayList@263[1] { ResolutionCandidate@262 }
}

ResolutionTaskHolder@264 {
    <name not found> = ArrayList@265[1] { ResolutionCandidate@266 }
    <name not found> = ArrayList@267[1] { ResolutionCandidate@266 }
}

ResolutionTaskHolder@268 {
    <name not found> = ArrayList@269[1] { ResolutionCandidate@270 }
    <name not found> = ArrayList@271[1] { ResolutionCandidate@270 }
}

ResolutionTaskHolder@272 {
    <name not found> = ArrayList@273[1] { ResolutionCandidate@274 }
    <name not found> = ArrayList@275[1] { ResolutionCandidate@274 }
}

ResolutionTaskHolder@276 {
    <name not found> = ArrayList@277[1] { ResolutionCandidate@278 }
    <name not found> = ArrayList@279[1] { ResolutionCandidate@278 }
}

ResolutionTaskHolder@280 {
    <name not found> = ArrayList@281[1] { ResolutionCandidate@282 }
    <name not found> = ArrayList@283[1] { ResolutionCandidate@282 }
}

ResolutionTaskHolder@284 {
    <name not found> = ArrayList@285[3] { ResolutionCandidate@286, ResolutionCandidate@287, ResolutionCandidate@288 }
    <name not found> = ArrayList@289[3] { ResolutionCandidate@286, ResolutionCandidate@287, ResolutionCandidate@288 }
    <name not found> = EmptyList@198[empty]
    <name not found> = EmptyList@198[empty]
    <name not found> = EmptyList@198[empty]
    <name not found> = EmptyList@198[empty]
}

ResolutionTaskHolder@290 {
    <name not found> = ArrayList@291[4] { ResolutionCandidate@292, ResolutionCandidate@293, ResolutionCandidate@294, ... }
    <name not found> = ArrayList@295[5] { ResolutionCandidate@292, ResolutionCandidate@293, ResolutionCandidate@294, ... }
    <name not found> = EmptyList@198[empty]
    <name not found> = EmptyList@198[empty]
    <name not found> = EmptyList@198[empty]
    <name not found> = EmptyList@198[empty]
    <name not found> = EmptyList@198[empty]
    <name not found> = EmptyList@198[empty]
    <name not found> = EmptyList@198[empty]
    <name not found> = EmptyList@198[empty]
    <name not found> = EmptyList@198[empty]
    <name not found> = EmptyList@198[empty]
    <name not found> = EmptyList@198[empty]
    <name not found> = EmptyList@198[empty]
    <name not found> = EmptyList@198[empty]
    <name not found> = EmptyList@198[empty]
    <name not found> = EmptyList@198[empty]
    <name not found> = EmptyList@198[empty]
}

ResolutionTaskHolder@296 {
    <name not found> = ArrayList@297[4] { ResolutionCandidate@298, ResolutionCandidate@299, ResolutionCandidate@300, ... }
    <name not found> = ArrayList@301[5] { ResolutionCandidate@298, ResolutionCandidate@299, ResolutionCandidate@300, ... }
    <name not found> = EmptyList@198[empty]
    <name not found> = EmptyList@198[empty]
    <name not found> = EmptyList@198[empty]
    <name not found> = EmptyList@198[empty]
}

ResolutionTaskHolder@302 {
    <name not found> = ArrayList@303[4] { ResolutionCandidate@304, ResolutionCandidate@305, ResolutionCandidate@306, ... }
    <name not found> = ArrayList@307[5] { ResolutionCandidate@304, ResolutionCandidate@305, ResolutionCandidate@306, ... }
    <name not found> = EmptyList@198[empty]
    <name not found> = EmptyList@198[empty]
    <name not found> = EmptyList@198[empty]
    <name not found> = EmptyList@198[empty]
}
