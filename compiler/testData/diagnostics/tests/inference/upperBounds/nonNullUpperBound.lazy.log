LazyJavaClassDescriptor@0['Exception'] {
    constructors = ArrayList@1[5] { JavaConstructorDescriptor@2['<init>'], JavaConstructorDescriptor@3['<init>'], JavaConstructorDescriptor@4['<init>'], ... } // through LazyJavaClassMemberScope@5
    defaultType = JetTypeImpl@6['Exception']
    functionTypeForSamInterface = null
    typeConstructor = LazyJavaClassTypeConstructor@7['Exception']
}

LazyJavaClassTypeConstructor@7['Exception'] {
    parameters = ArrayList@8[empty]
    supertypes = ArrayList@9[1] { LazyJavaClassifierType@10['Throwable'] }
}

LazyJavaClassifierType@11['String'] {
    arguments = ArrayList@12[empty]
    classifier = JavaClassImpl@13['String']
    nullable = 'false': Boolean@14
    typeConstructor = DeserializedClassTypeConstructor@15
}

LazyJavaClassifierType@16['String'] {
    arguments = ArrayList@17[empty]
    classifier = JavaClassImpl@18['String']
    nullable = 'false': Boolean@14
    typeConstructor = DeserializedClassTypeConstructor@15
}

LazyJavaClassifierType@19['String'] {
    arguments = ArrayList@20[empty]
    classifier = JavaClassImpl@21['String']
    nullable = 'false': Boolean@14
    typeConstructor = DeserializedClassTypeConstructor@15
}

LazyJavaClassifierType@22['String'] {
    arguments = ArrayList@23[empty]
    classifier = JavaClassImpl@21['String']
    nullable = 'true': Boolean@24
    typeConstructor = DeserializedClassTypeConstructor@15
}

LazyJavaClassifierType@25['String'] {
    arguments = ArrayList@26[empty]
    classifier = JavaClassImpl@13['String']
    nullable = 'true': Boolean@24
    typeConstructor = DeserializedClassTypeConstructor@15
}

LazyJavaClassifierType@27['String'] {
    arguments = ArrayList@28[empty]
    classifier = JavaClassImpl@18['String']
    nullable = 'true': Boolean@24
    typeConstructor = DeserializedClassTypeConstructor@15
}

LazyJavaClassifierType@29['Throwable'] {
    arguments = ArrayList@30[empty]
    classifier = JavaClassImpl@31['Throwable']
    nullable = 'false': Boolean@14
    typeConstructor = DeserializedClassTypeConstructor@32
}

LazyJavaClassifierType@33['Throwable'] {
    arguments = ArrayList@34[empty]
    classifier = JavaClassImpl@35['Throwable']
    nullable = 'false': Boolean@14
    typeConstructor = DeserializedClassTypeConstructor@32
}

LazyJavaClassifierType@36['Throwable'] {
    arguments = ArrayList@37[empty]
    classifier = JavaClassImpl@38['Throwable']
    nullable = 'false': Boolean@14
    typeConstructor = DeserializedClassTypeConstructor@32
}

LazyJavaClassifierType@39['Throwable'] {
    arguments = ArrayList@40[empty]
    classifier = JavaClassImpl@35['Throwable']
    nullable = 'true': Boolean@24
    typeConstructor = DeserializedClassTypeConstructor@32
}

LazyJavaClassifierType@41['Throwable'] {
    arguments = ArrayList@42[empty]
    classifier = JavaClassImpl@31['Throwable']
    nullable = 'true': Boolean@24
    typeConstructor = DeserializedClassTypeConstructor@32
}

LazyJavaClassifierType@43['Throwable'] {
    arguments = ArrayList@44[empty]
    classifier = JavaClassImpl@38['Throwable']
    nullable = 'true': Boolean@24
    typeConstructor = DeserializedClassTypeConstructor@32
}

LazyJavaClassifierType@10['Throwable'] {
    arguments = ArrayList@45[empty]
    classifier = JavaClassImpl@46['Throwable']
    typeConstructor = DeserializedClassTypeConstructor@32
}

LazyJavaPackageFragmentProvider@47 {
    packageFragments('<root>': FqName@48) = LazyJavaPackageFragment@49['<root>']
    packageFragments('A': FqName@50) = null
    packageFragments('Any': FqName@51) = null
    packageFragments('R': FqName@52) = null
    packageFragments('T': FqName@53) = null
    packageFragments('java': FqName@54) = LazyJavaPackageFragment@55['java']
    packageFragments('java.lang': FqName@56) = LazyJavaPackageFragment@57['lang']
    packageFragments('java.lang.A': FqName@58) = null
    packageFragments('java.lang.Any': FqName@59) = null
    packageFragments('java.lang.R': FqName@60) = null
    packageFragments('java.lang.T': FqName@61) = null
    packageFragments('kotlin': FqName@62) = null
    packageFragments('kotlin.A': FqName@63) = null
    packageFragments('kotlin.Any': FqName@64) = null
    packageFragments('kotlin.R': FqName@65) = null
    packageFragments('kotlin.T': FqName@66) = null
    packageFragments('kotlin.io': FqName@67) = null
    packageFragments('kotlin.jvm': FqName@68) = null
    topLevelClasses(JavaClassImpl@69['Exception']) = LazyJavaClassDescriptor@0['Exception']
}

LazyJavaPackageFragment@49['<root>'] {
    classes('Any': Name@70) = null // through LazyPackageFragmentScopeForJavaPackage@71
    classes('Exception': Name@72) = null // through LazyPackageFragmentScopeForJavaPackage@71
    classes('unescape': Name@73) = null // through LazyPackageFragmentScopeForJavaPackage@71
    classes('unescapeA': Name@74) = null // through LazyPackageFragmentScopeForJavaPackage@71
    deserializedPackageScope = Empty@75 // through LazyPackageFragmentScopeForJavaPackage@71
    functions('Exception': Name@72) = EmptyList@76[empty] // through LazyPackageFragmentScopeForJavaPackage@71
    functions('unescape': Name@73) = EmptyList@76[empty] // through LazyPackageFragmentScopeForJavaPackage@71
    functions('unescapeA': Name@74) = EmptyList@76[empty] // through LazyPackageFragmentScopeForJavaPackage@71
    memberIndex = computeMemberIndex$1@77 // through LazyPackageFragmentScopeForJavaPackage@71
}

LazyJavaPackageFragment@55['java'] {
    classes('lang': Name@78) = null // through LazyPackageFragmentScopeForJavaPackage@79
    deserializedPackageScope = Empty@75 // through LazyPackageFragmentScopeForJavaPackage@79
    functions('lang': Name@80) = EmptyList@76[empty] // through LazyPackageFragmentScopeForJavaPackage@79
    memberIndex = computeMemberIndex$1@81 // through LazyPackageFragmentScopeForJavaPackage@79
}

LazyJavaPackageFragment@57['lang'] {
    classes('Exception': Name@72) = LazyJavaClassDescriptor@0['Exception'] // through LazyPackageFragmentScopeForJavaPackage@82
    classes('unescape': Name@73) = null // through LazyPackageFragmentScopeForJavaPackage@82
    classes('unescapeA': Name@74) = null // through LazyPackageFragmentScopeForJavaPackage@82
    deserializedPackageScope = Empty@75 // through LazyPackageFragmentScopeForJavaPackage@82
    functions('Exception': Name@72) = EmptyList@76[empty] // through LazyPackageFragmentScopeForJavaPackage@82
    functions('unescape': Name@73) = EmptyList@76[empty] // through LazyPackageFragmentScopeForJavaPackage@82
    functions('unescapeA': Name@74) = EmptyList@76[empty] // through LazyPackageFragmentScopeForJavaPackage@82
    memberIndex = computeMemberIndex$1@83 // through LazyPackageFragmentScopeForJavaPackage@82
}

ResolutionTaskHolder@84 {
    <name not found> = ArrayList@85[1] { ResolutionCandidate@86 }
    <name not found> = ArrayList@87[1] { ResolutionCandidate@86 }
    <name not found> = EmptyList@76[empty]
    <name not found> = EmptyList@76[empty]
    <name not found> = EmptyList@76[empty]
    <name not found> = EmptyList@76[empty]
}

ResolutionTaskHolder@88 {
    <name not found> = ArrayList@89[1] { ResolutionCandidate@90 }
    <name not found> = ArrayList@91[1] { ResolutionCandidate@90 }
    <name not found> = EmptyList@76[empty]
    <name not found> = EmptyList@76[empty]
    <name not found> = EmptyList@76[empty]
    <name not found> = EmptyList@76[empty]
}

ResolutionTaskHolder@92 {
    <name not found> = ArrayList@93[1] { ResolutionCandidate@94 }
    <name not found> = ArrayList@95[1] { ResolutionCandidate@94 }
}

ResolutionTaskHolder@96 {
    <name not found> = ArrayList@97[1] { ResolutionCandidate@98 }
    <name not found> = ArrayList@99[1] { ResolutionCandidate@98 }
}

ResolutionTaskHolder@100 {
    <name not found> = ArrayList@101[1] { ResolutionCandidate@102 }
    <name not found> = ArrayList@103[1] { ResolutionCandidate@102 }
}

ResolutionTaskHolder@104 {
    <name not found> = ArrayList@105[1] { ResolutionCandidate@106 }
    <name not found> = ArrayList@107[1] { ResolutionCandidate@106 }
}

ResolutionTaskHolder@108 {
    <name not found> = ArrayList@109[4] { ResolutionCandidate@110, ResolutionCandidate@111, ResolutionCandidate@112, ... }
    <name not found> = ArrayList@113[5] { ResolutionCandidate@110, ResolutionCandidate@111, ResolutionCandidate@112, ... }
    <name not found> = EmptyList@76[empty]
    <name not found> = EmptyList@76[empty]
    <name not found> = EmptyList@76[empty]
    <name not found> = EmptyList@76[empty]
}

ResolutionTaskHolder@114 {
    <name not found> = ArrayList@115[4] { ResolutionCandidate@116, ResolutionCandidate@117, ResolutionCandidate@118, ... }
    <name not found> = ArrayList@119[5] { ResolutionCandidate@116, ResolutionCandidate@117, ResolutionCandidate@118, ... }
    <name not found> = EmptyList@76[empty]
    <name not found> = EmptyList@76[empty]
    <name not found> = EmptyList@76[empty]
    <name not found> = EmptyList@76[empty]
}
