LazyAnnotationDescriptor@0 {
    resolutionResults = OverloadResolutionResultsImpl@1
    type = JetTypeImpl@2['inline']
    valueArguments(ValueParameterDescriptorImpl@3['strategy']) = null
}

LazyJavaClassDescriptor@4['Comparator'] {
    allDescriptors = ArrayList@5[4] { JavaMethodDescriptor@6['compare'], DeserializedSimpleFunctionDescriptor@7['hashCode'], DeserializedSimpleFunctionDescriptor@8['toString'], ... } // through LazyJavaClassMemberScope@9
    annotations = LazyJavaAnnotations@10
    defaultType = JetTypeImpl@11['Comparator<1>']
    enumEntryIndex = LinkedHashMap@12 // through LazyJavaClassMemberScope@9
    functionTypeForSamInterface = JetTypeImpl@13['Function2<3>']
    functions('clone': Name@14) = EmptyList@15[empty] // through LazyJavaClassMemberScope@9
    functions('compare': Name@16) = ArrayList@17[1] { JavaMethodDescriptor@6['compare'] } // through LazyJavaClassMemberScope@9
    functions('equals': Name@18) = ArrayList@19[1] { DeserializedSimpleFunctionDescriptor@20['equals'] } // through LazyJavaClassMemberScope@9
    functions('finalize': Name@21) = EmptyList@15[empty] // through LazyJavaClassMemberScope@9
    functions('getClass': Name@22) = EmptyList@15[empty] // through LazyJavaClassMemberScope@9
    functions('hashCode': Name@23) = ArrayList@24[1] { DeserializedSimpleFunctionDescriptor@7['hashCode'] } // through LazyJavaClassMemberScope@9
    functions('notify': Name@25) = EmptyList@15[empty] // through LazyJavaClassMemberScope@9
    functions('notifyAll': Name@26) = EmptyList@15[empty] // through LazyJavaClassMemberScope@9
    functions('toString': Name@27) = ArrayList@28[1] { DeserializedSimpleFunctionDescriptor@8['toString'] } // through LazyJavaClassMemberScope@9
    functions('wait': Name@29) = EmptyList@15[empty] // through LazyJavaClassMemberScope@9
    memberIndex = computeMemberIndex$1@30 // through LazyJavaClassMemberScope@9
    nestedClassIndex = LinkedHashMap@31 // through LazyJavaClassMemberScope@9
    thisAsReceiverParameter = LazyClassReceiverParameterDescriptor@32['<this>']
    typeConstructor = LazyJavaClassTypeConstructor@33['Comparator']
}

LazyJavaClassDescriptor@34['Date'] {
    defaultType = JetTypeImpl@35['Date']
    enumEntryIndex = LinkedHashMap@36 // through LazyJavaClassMemberScope@37
    functionTypeForSamInterface = null
    functions('compareTo': Name@38) = ArrayList@39[1] { JavaMethodDescriptor@40['compareTo'] } // through LazyJavaClassMemberScope@37
    functions('equals': Name@41) = ArrayList@42[1] { JavaMethodDescriptor@43['equals'] } // through LazyJavaClassMemberScope@37
    memberIndex = computeMemberIndex$1@44 // through LazyJavaClassMemberScope@37
    nestedClassIndex = LinkedHashMap@45 // through LazyJavaClassMemberScope@37
    nestedClasses('compareTo': Name@38) = null // through LazyJavaClassMemberScope@37
    nestedClasses('equals': Name@41) = null // through LazyJavaClassMemberScope@37
    properties('equals': Name@41) = EmptyList@15[empty] // through LazyJavaClassMemberScope@37
    thisAsReceiverParameter = LazyClassReceiverParameterDescriptor@46['<this>']
    typeConstructor = LazyJavaClassTypeConstructor@47['Date']
}

LazyJavaClassDescriptor@48['Serializable'] {
    defaultType = JetTypeImpl@49['Serializable']
    functions('compareTo': Name@50) = EmptyList@15[empty] // through LazyJavaClassMemberScope@51
    functions('equals': Name@52) = ArrayList@53[1] { DeserializedSimpleFunctionDescriptor@54['equals'] } // through LazyJavaClassMemberScope@51
    memberIndex = computeMemberIndex$1@55 // through LazyJavaClassMemberScope@51
    properties('equals': Name@41) = EmptyList@15[empty] // through LazyJavaClassMemberScope@51
    typeConstructor = LazyJavaClassTypeConstructor@56['Serializable']
}

LazyJavaClassTypeConstructor@33['Comparator'] {
    parameters = ArrayList@57[1] { LazyJavaTypeParameterDescriptor@58['T'] }
    supertypes = ArrayList@59[1] { JetTypeImpl@60['Any'] }
}

LazyJavaClassTypeConstructor@47['Date'] {
    parameters = ArrayList@61[empty]
    supertypes = ArrayList@62[3] { LazyJavaClassifierType@63['Serializable'], LazyJavaClassifierType@64['Cloneable'], LazyJavaClassifierType@65['Comparable<Date>'] }
}

LazyJavaClassTypeConstructor@56['Serializable'] {
    parameters = ArrayList@66[empty]
    supertypes = ArrayList@67[1] { JetTypeImpl@60['Any'] }
}

LazyJavaClassifierType@64['Cloneable'] {
    arguments = ArrayList@68[empty]
    classifier = JavaClassImpl@69['Cloneable']
    memberScope = DeserializedClassMemberScope@70
    typeConstructor = DeserializedClassTypeConstructor@71
}

LazyJavaClassifierType@65['Comparable<Date>'] {
    arguments = ArrayList@72[1] { TypeProjectionImpl@73 }
    classifier = JavaClassImpl@74['Comparable']
    memberScope = SubstitutingScope@75
    typeConstructor = DeserializedClassTypeConstructor@76
}

LazyJavaClassifierType@77['Date'] {
    arguments = ArrayList@78[empty]
    classifier = JavaClassImpl@79['Date']
    memberScope = LazyJavaClassMemberScope@37
    nullable = 'false': Boolean@80
    typeConstructor = LazyJavaClassTypeConstructor@47['Date']
}

LazyJavaClassifierType@81['Date'] {
    arguments = ArrayList@82[empty]
    classifier = JavaClassImpl@79['Date']
    memberScope = LazyJavaClassMemberScope@37
    nullable = 'true': Boolean@83
    typeConstructor = LazyJavaClassTypeConstructor@47['Date']
}

LazyJavaClassifierType@84['Date'] {
    arguments = ArrayList@85[empty]
    classifier = JavaClassImpl@86['Date']
    nullable = 'false': Boolean@80
    typeConstructor = LazyJavaClassTypeConstructor@47['Date']
}

LazyJavaClassifierType@87['Date'] {
    arguments = ArrayList@88[empty]
    classifier = JavaClassImpl@86['Date']
    nullable = 'true': Boolean@83
    typeConstructor = LazyJavaClassTypeConstructor@47['Date']
}

LazyJavaClassifierType@89['Object'] {
    arguments = ArrayList@90[empty]
    classifier = JavaClassImpl@91['Object']
    nullable = 'false': Boolean@80
    typeConstructor = DeserializedClassTypeConstructor@92
}

LazyJavaClassifierType@93['Object'] {
    arguments = ArrayList@94[empty]
    classifier = JavaClassImpl@91['Object']
    nullable = 'true': Boolean@83
    typeConstructor = DeserializedClassTypeConstructor@92
}

LazyJavaClassifierType@95['Object'] {
    classifier = JavaClassImpl@96['Object']
    typeConstructor = DeserializedClassTypeConstructor@92
}

LazyJavaClassifierType@97['Object'] {
    classifier = JavaClassImpl@98['Object']
    typeConstructor = DeserializedClassTypeConstructor@92
}

LazyJavaClassifierType@99['Object'] {
    classifier = JavaClassImpl@100['Object']
    typeConstructor = DeserializedClassTypeConstructor@92
}

LazyJavaClassifierType@63['Serializable'] {
    arguments = ArrayList@101[empty]
    classifier = JavaClassImpl@102['Serializable']
    memberScope = LazyJavaClassMemberScope@51
    typeConstructor = LazyJavaClassTypeConstructor@56['Serializable']
}

LazyJavaClassifierType@103['T'] {
    arguments = ArrayList@104[empty]
    classifier = JavaTypeParameterImpl@105['T']
    nullable = 'false': Boolean@80
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@106
}

LazyJavaClassifierType@107['T'] {
    arguments = ArrayList@108[empty]
    classifier = JavaTypeParameterImpl@109['T']
    nullable = 'false': Boolean@80
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@106
}

LazyJavaClassifierType@110['T'] {
    arguments = ArrayList@111[empty]
    classifier = JavaTypeParameterImpl@112['T']
    nullable = 'false': Boolean@80
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@106
}

LazyJavaClassifierType@113['T'] {
    arguments = ArrayList@114[empty]
    classifier = JavaTypeParameterImpl@115['T']
    nullable = 'false': Boolean@80
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@106
}

LazyJavaClassifierType@116['T'] {
    arguments = ArrayList@117[empty]
    classifier = JavaTypeParameterImpl@109['T']
    nullable = 'true': Boolean@83
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@106
}

LazyJavaClassifierType@118['T'] {
    arguments = ArrayList@119[empty]
    classifier = JavaTypeParameterImpl@112['T']
    nullable = 'true': Boolean@83
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@106
}

LazyJavaClassifierType@120['T'] {
    arguments = ArrayList@121[empty]
    classifier = JavaTypeParameterImpl@105['T']
    nullable = 'true': Boolean@83
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@106
}

LazyJavaClassifierType@122['T'] {
    arguments = ArrayList@123[empty]
    classifier = JavaTypeParameterImpl@115['T']
    nullable = 'true': Boolean@83
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@106
}

LazyJavaPackageFragmentProvider@124 {
    packageFragments('<root>': FqName@125) = LazyJavaPackageFragment@126['<root>']
    packageFragments('Any': FqName@127) = null
    packageFragments('Comparator': FqName@128) = null
    packageFragments('Date': FqName@129) = null
    packageFragments('Int': FqName@130) = null
    packageFragments('T': FqName@131) = null
    packageFragments('U': FqName@132) = null
    packageFragments('a': FqName@133) = null
    packageFragments('a.Any': FqName@134) = null
    packageFragments('a.Comparator': FqName@135) = null
    packageFragments('a.Date': FqName@136) = null
    packageFragments('a.Int': FqName@137) = null
    packageFragments('a.T': FqName@138) = null
    packageFragments('a.U': FqName@139) = null
    packageFragments('a.inline': FqName@140) = null
    packageFragments('inline': FqName@141) = null
    packageFragments('java': FqName@142) = LazyJavaPackageFragment@143['java']
    packageFragments('java.io': FqName@144) = LazyJavaPackageFragment@145['io']
    packageFragments('java.lang': FqName@146) = LazyJavaPackageFragment@147['lang']
    packageFragments('java.lang.Any': FqName@148) = null
    packageFragments('java.lang.Comparator': FqName@149) = null
    packageFragments('java.lang.Date': FqName@150) = null
    packageFragments('java.lang.Int': FqName@151) = null
    packageFragments('java.lang.T': FqName@152) = null
    packageFragments('java.lang.U': FqName@153) = null
    packageFragments('java.lang.inline': FqName@154) = null
    packageFragments('java.util': FqName@155) = LazyJavaPackageFragment@156['util']
    packageFragments('java.util.Comparator': FqName@157) = null
    packageFragments('java.util.Date': FqName@158) = null
    packageFragments('kotlin': FqName@159) = null
    packageFragments('kotlin.Any': FqName@160) = null
    packageFragments('kotlin.Comparator': FqName@161) = null
    packageFragments('kotlin.Date': FqName@162) = null
    packageFragments('kotlin.Int': FqName@163) = null
    packageFragments('kotlin.T': FqName@164) = null
    packageFragments('kotlin.U': FqName@165) = null
    packageFragments('kotlin.inline': FqName@166) = null
    packageFragments('kotlin.io': FqName@167) = null
    packageFragments('kotlin.jvm': FqName@168) = null
    topLevelClasses(JavaClassImpl@169['Comparator']) = LazyJavaClassDescriptor@4['Comparator']
    topLevelClasses(JavaClassImpl@170['Date']) = LazyJavaClassDescriptor@34['Date']
    topLevelClasses(JavaClassImpl@102['Serializable']) = LazyJavaClassDescriptor@48['Serializable']
}

LazyJavaPackageFragment@143['java'] {
    classes('lang': Name@171) = null // through LazyPackageFragmentScopeForJavaPackage@172
    classes('util': Name@173) = null // through LazyPackageFragmentScopeForJavaPackage@172
    deserializedPackageScope = Empty@174 // through LazyPackageFragmentScopeForJavaPackage@172
    functions('lang': Name@175) = EmptyList@15[empty] // through LazyPackageFragmentScopeForJavaPackage@172
    functions('util': Name@176) = EmptyList@15[empty] // through LazyPackageFragmentScopeForJavaPackage@172
    memberIndex = computeMemberIndex$1@177 // through LazyPackageFragmentScopeForJavaPackage@172
}

LazyJavaPackageFragment@147['lang'] {
    classes('U': Name@178) = null // through LazyPackageFragmentScopeForJavaPackage@179
    classes('comparator': Name@180) = null // through LazyPackageFragmentScopeForJavaPackage@179
    classes('equals': Name@41) = null // through LazyPackageFragmentScopeForJavaPackage@179
    deserializedPackageScope = Empty@174 // through LazyPackageFragmentScopeForJavaPackage@179
    functions('comparator': Name@180) = EmptyList@15[empty] // through LazyPackageFragmentScopeForJavaPackage@179
    functions('equals': Name@41) = EmptyList@15[empty] // through LazyPackageFragmentScopeForJavaPackage@179
    memberIndex = computeMemberIndex$1@181 // through LazyPackageFragmentScopeForJavaPackage@179
}

LazyJavaPackageFragment@156['util'] {
    classes('Comparator': Name@182) = LazyJavaClassDescriptor@4['Comparator'] // through LazyPackageFragmentScopeForJavaPackage@183
    classes('Date': Name@184) = LazyJavaClassDescriptor@34['Date'] // through LazyPackageFragmentScopeForJavaPackage@183
    deserializedPackageScope = Empty@174 // through LazyPackageFragmentScopeForJavaPackage@183
    functions('Comparator': Name@185) = ArrayList@186[1] { SamConstructorDescriptor@187['Comparator'] } // through LazyPackageFragmentScopeForJavaPackage@183
    functions('Date': Name@188) = EmptyList@15[empty] // through LazyPackageFragmentScopeForJavaPackage@183
    memberIndex = computeMemberIndex$1@189 // through LazyPackageFragmentScopeForJavaPackage@183
}

LazyJavaTypeParameterDescriptor@58['T'] {
    defaultType = JetTypeImpl@190['T']
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@106
    upperBounds = LinkedHashSet@191[1] { NullableType@192 }
}

LazyJavaTypeParameterResolver@193 {
    resolve(JavaTypeParameterImpl@194['T']) = LazyJavaTypeParameterDescriptor@58['T']
}

LazyJavaTypeParameterResolver@195 {
    resolve(JavaTypeParameterImpl@109['T']) = null
}

LazyJavaTypeParameterResolver@196 {
    resolve(JavaTypeParameterImpl@105['T']) = null
}

ResolutionTaskHolder@197 {
    <name not found> = ArrayList@198[1] { ResolutionCandidate@199 }
    <name not found> = ArrayList@200[1] { ResolutionCandidate@199 }
    <name not found> = ArrayList@201[1] { ResolutionCandidate@202 }
    <name not found> = ArrayList@203[1] { ResolutionCandidate@202 }
    <name not found> = EmptyList@15[empty]
    <name not found> = EmptyList@15[empty]
}

ResolutionTaskHolder@204 {
    <name not found> = ArrayList@205[1] { ResolutionCandidate@206 }
    <name not found> = ArrayList@207[1] { ResolutionCandidate@206 }
    <name not found> = ArrayList@208[1] { ResolutionCandidate@209 }
    <name not found> = ArrayList@210[1] { ResolutionCandidate@209 }
    <name not found> = EmptyList@15[empty]
    <name not found> = EmptyList@15[empty]
}

ResolutionTaskHolder@211 {
    <name not found> = ArrayList@212[1] { ResolutionCandidate@213 }
    <name not found> = ArrayList@214[1] { ResolutionCandidate@213 }
    <name not found> = EmptyList@15[empty]
    <name not found> = EmptyList@15[empty]
    <name not found> = EmptyList@15[empty]
    <name not found> = EmptyList@15[empty]
}

ResolutionTaskHolder@215 {
    <name not found> = ArrayList@216[1] { ResolutionCandidate@217 }
    <name not found> = ArrayList@218[1] { ResolutionCandidate@217 }
}

ResolutionTaskHolder@219 {
    <name not found> = ArrayList@220[1] { ResolutionCandidate@221 }
    <name not found> = ArrayList@222[1] { ResolutionCandidate@221 }
}

ResolutionTaskHolder@223 {
    <name not found> = ArrayList@224[1] { ResolutionCandidate@225 }
    <name not found> = ArrayList@226[1] { ResolutionCandidate@225 }
}

ResolutionTaskHolder@227 {
    <name not found> = ArrayList@228[1] { ResolutionCandidate@229 }
    <name not found> = ArrayList@230[1] { ResolutionCandidate@229 }
}

ResolutionTaskHolder@231 {
    <name not found> = ArrayList@232[1] { ResolutionCandidate@233 }
    <name not found> = ArrayList@234[1] { ResolutionCandidate@233 }
}

ResolutionTaskHolder@235 {
    <name not found> = ArrayList@236[1] { ResolutionCandidate@237 }
    <name not found> = ArrayList@238[1] { ResolutionCandidate@237 }
}

ResolutionTaskHolder@239 {
    <name not found> = ArrayList@240[1] { ResolutionCandidate@241 }
    <name not found> = ArrayList@242[1] { ResolutionCandidate@241 }
}

ResolutionTaskHolder@243 {
    <name not found> = ArrayList@244[1] { ResolutionCandidate@245 }
    <name not found> = ArrayList@246[1] { ResolutionCandidate@245 }
}

ResolutionTaskHolder@247 {
    <name not found> = ArrayList@248[1] { ResolutionCandidate@249 }
    <name not found> = ArrayList@250[1] { ResolutionCandidate@249 }
}

ResolutionTaskHolder@251 {
    <name not found> = ArrayList@252[1] { ResolutionCandidate@253 }
    <name not found> = ArrayList@254[1] { ResolutionCandidate@253 }
}

ResolutionTaskHolder@255 {
    <name not found> = ArrayList@256[2] { ResolutionCandidate@257, ResolutionCandidate@258 }
    <name not found> = ArrayList@259[2] { ResolutionCandidate@257, ResolutionCandidate@258 }
}

ResolutionTaskHolder@260 {
    <name not found> = ArrayList@261[7] { ResolutionCandidate@262, ResolutionCandidate@263, ResolutionCandidate@264, ... }
    <name not found> = ArrayList@265[7] { ResolutionCandidate@262, ResolutionCandidate@263, ResolutionCandidate@264, ... }
}

ResolutionTaskHolder@266 {
    <name not found> = ArrayList@267[8] { ResolutionCandidate@268, ResolutionCandidate@269, ResolutionCandidate@270, ... }
    <name not found> = ArrayList@271[8] { ResolutionCandidate@268, ResolutionCandidate@269, ResolutionCandidate@270, ... }
}
