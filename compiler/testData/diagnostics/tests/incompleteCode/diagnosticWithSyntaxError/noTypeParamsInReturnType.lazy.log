LazyJavaClassDescriptor@0['Exception'] {
    constructors = ArrayList@1[5] { JavaConstructorDescriptor@2['<init>'], JavaConstructorDescriptor@3['<init>'], JavaConstructorDescriptor@4['<init>'], ... } // through LazyJavaClassMemberScope@5
    defaultType = JetTypeImpl@6['Exception']
    functionTypeForSamInterface = null
    typeConstructor = LazyJavaClassTypeConstructor@7['Exception']
}

LazyJavaClassTypeConstructor@7['Exception'] {
    parameters = ArrayList@8[empty]
    supertypes = ArrayList@9[1] { LazyJavaClassifierType@10['Throwable'] }
}

LazyJavaClassifierType@11['String'] {
    arguments = ArrayList@12[empty]
    classifier = JavaClassImpl@13['String']
    nullable = 'false': Boolean@14
    typeConstructor = DeserializedClassTypeConstructor@15
}

LazyJavaClassifierType@16['String'] {
    arguments = ArrayList@17[empty]
    classifier = JavaClassImpl@18['String']
    nullable = 'false': Boolean@14
    typeConstructor = DeserializedClassTypeConstructor@15
}

LazyJavaClassifierType@19['String'] {
    arguments = ArrayList@20[empty]
    classifier = JavaClassImpl@21['String']
    nullable = 'false': Boolean@14
    typeConstructor = DeserializedClassTypeConstructor@15
}

LazyJavaClassifierType@22['String'] {
    arguments = ArrayList@23[empty]
    classifier = JavaClassImpl@13['String']
    nullable = 'true': Boolean@24
    typeConstructor = DeserializedClassTypeConstructor@15
}

LazyJavaClassifierType@25['String'] {
    arguments = ArrayList@26[empty]
    classifier = JavaClassImpl@18['String']
    nullable = 'true': Boolean@24
    typeConstructor = DeserializedClassTypeConstructor@15
}

LazyJavaClassifierType@27['String'] {
    arguments = ArrayList@28[empty]
    classifier = JavaClassImpl@21['String']
    nullable = 'true': Boolean@24
    typeConstructor = DeserializedClassTypeConstructor@15
}

LazyJavaClassifierType@29['Throwable'] {
    arguments = ArrayList@30[empty]
    classifier = JavaClassImpl@31['Throwable']
    nullable = 'false': Boolean@14
    typeConstructor = DeserializedClassTypeConstructor@32
}

LazyJavaClassifierType@33['Throwable'] {
    arguments = ArrayList@34[empty]
    classifier = JavaClassImpl@35['Throwable']
    nullable = 'false': Boolean@14
    typeConstructor = DeserializedClassTypeConstructor@32
}

LazyJavaClassifierType@36['Throwable'] {
    arguments = ArrayList@37[empty]
    classifier = JavaClassImpl@38['Throwable']
    nullable = 'false': Boolean@14
    typeConstructor = DeserializedClassTypeConstructor@32
}

LazyJavaClassifierType@39['Throwable'] {
    arguments = ArrayList@40[empty]
    classifier = JavaClassImpl@35['Throwable']
    nullable = 'true': Boolean@24
    typeConstructor = DeserializedClassTypeConstructor@32
}

LazyJavaClassifierType@41['Throwable'] {
    arguments = ArrayList@42[empty]
    classifier = JavaClassImpl@31['Throwable']
    nullable = 'true': Boolean@24
    typeConstructor = DeserializedClassTypeConstructor@32
}

LazyJavaClassifierType@43['Throwable'] {
    arguments = ArrayList@44[empty]
    classifier = JavaClassImpl@38['Throwable']
    nullable = 'true': Boolean@24
    typeConstructor = DeserializedClassTypeConstructor@32
}

LazyJavaClassifierType@10['Throwable'] {
    arguments = ArrayList@45[empty]
    classifier = JavaClassImpl@46['Throwable']
    typeConstructor = DeserializedClassTypeConstructor@32
}

LazyJavaPackageFragmentProvider@47 {
    packageFragments('<root>': FqName@48) = LazyJavaPackageFragment@49['<root>']
    packageFragments('F': FqName@50) = null
    packageFragments('G': FqName@51) = null
    packageFragments('Map': FqName@52) = null
    packageFragments('R': FqName@53) = null
    packageFragments('T': FqName@54) = null
    packageFragments('b': FqName@55) = null
    packageFragments('b.F': FqName@56) = null
    packageFragments('b.G': FqName@57) = null
    packageFragments('b.Map': FqName@58) = null
    packageFragments('b.R': FqName@59) = null
    packageFragments('b.T': FqName@60) = null
    packageFragments('java': FqName@61) = LazyJavaPackageFragment@62['java']
    packageFragments('java.lang': FqName@63) = LazyJavaPackageFragment@64['lang']
    packageFragments('java.lang.F': FqName@65) = null
    packageFragments('java.lang.G': FqName@66) = null
    packageFragments('java.lang.Map': FqName@67) = null
    packageFragments('java.lang.R': FqName@68) = null
    packageFragments('java.lang.T': FqName@69) = null
    packageFragments('kotlin': FqName@70) = null
    packageFragments('kotlin.F': FqName@71) = null
    packageFragments('kotlin.G': FqName@72) = null
    packageFragments('kotlin.Map': FqName@73) = null
    packageFragments('kotlin.R': FqName@74) = null
    packageFragments('kotlin.T': FqName@75) = null
    packageFragments('kotlin.io': FqName@76) = null
    packageFragments('kotlin.jvm': FqName@77) = null
    topLevelClasses(JavaClassImpl@78['Exception']) = LazyJavaClassDescriptor@0['Exception']
}

LazyJavaPackageFragment@62['java'] {
    classes('lang': Name@79) = null // through LazyPackageFragmentScopeForJavaPackage@80
    deserializedPackageScope = Empty@81 // through LazyPackageFragmentScopeForJavaPackage@80
    functions('lang': Name@82) = EmptyList@83[empty] // through LazyPackageFragmentScopeForJavaPackage@80
    memberIndex = computeMemberIndex$1@84 // through LazyPackageFragmentScopeForJavaPackage@80
}

LazyJavaPackageFragment@64['lang'] {
    classes('Exception': Name@85) = LazyJavaClassDescriptor@0['Exception'] // through LazyPackageFragmentScopeForJavaPackage@86
    classes('foo': Name@87) = null // through LazyPackageFragmentScopeForJavaPackage@86
    classes('getMap': Name@88) = null // through LazyPackageFragmentScopeForJavaPackage@86
    deserializedPackageScope = Empty@81 // through LazyPackageFragmentScopeForJavaPackage@86
    functions('Exception': Name@85) = EmptyList@83[empty] // through LazyPackageFragmentScopeForJavaPackage@86
    functions('foo': Name@87) = EmptyList@83[empty] // through LazyPackageFragmentScopeForJavaPackage@86
    functions('getMap': Name@88) = EmptyList@83[empty] // through LazyPackageFragmentScopeForJavaPackage@86
    memberIndex = computeMemberIndex$1@89 // through LazyPackageFragmentScopeForJavaPackage@86
}

ResolutionTaskHolder@90 {
    <name not found> = ArrayList@91[1] { ResolutionCandidate@92 }
    <name not found> = ArrayList@93[1] { ResolutionCandidate@92 }
    <name not found> = EmptyList@83[empty]
    <name not found> = EmptyList@83[empty]
    <name not found> = EmptyList@83[empty]
    <name not found> = EmptyList@83[empty]
    <name not found> = EmptyList@83[empty]
    <name not found> = EmptyList@83[empty]
    <name not found> = EmptyList@83[empty]
    <name not found> = EmptyList@83[empty]
    <name not found> = EmptyList@83[empty]
    <name not found> = EmptyList@83[empty]
    <name not found> = EmptyList@83[empty]
    <name not found> = EmptyList@83[empty]
    <name not found> = EmptyList@83[empty]
    <name not found> = EmptyList@83[empty]
    <name not found> = EmptyList@83[empty]
    <name not found> = EmptyList@83[empty]
    <name not found> = EmptyList@83[empty]
    <name not found> = EmptyList@83[empty]
}

ResolutionTaskHolder@94 {
    <name not found> = ArrayList@95[1] { ResolutionCandidate@96 }
    <name not found> = ArrayList@97[1] { ResolutionCandidate@96 }
    <name not found> = EmptyList@83[empty]
    <name not found> = EmptyList@83[empty]
    <name not found> = EmptyList@83[empty]
    <name not found> = EmptyList@83[empty]
}

ResolutionTaskHolder@98 {
    <name not found> = ArrayList@99[4] { ResolutionCandidate@100, ResolutionCandidate@101, ResolutionCandidate@102, ... }
    <name not found> = ArrayList@103[5] { ResolutionCandidate@100, ResolutionCandidate@101, ResolutionCandidate@102, ... }
    <name not found> = EmptyList@83[empty]
    <name not found> = EmptyList@83[empty]
    <name not found> = EmptyList@83[empty]
    <name not found> = EmptyList@83[empty]
}

ResolutionTaskHolder@104 {
    <name not found> = ArrayList@105[4] { ResolutionCandidate@106, ResolutionCandidate@107, ResolutionCandidate@108, ... }
    <name not found> = ArrayList@109[5] { ResolutionCandidate@106, ResolutionCandidate@107, ResolutionCandidate@108, ... }
    <name not found> = EmptyList@83[empty]
    <name not found> = EmptyList@83[empty]
    <name not found> = EmptyList@83[empty]
    <name not found> = EmptyList@83[empty]
}
