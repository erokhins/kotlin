LazyJavaClassDescriptor@0['J'] {
    enumEntryIndex = LinkedHashMap@1 // through LazyJavaClassMemberScope@2
    functions('foo': Name@3) = ArrayList@4[2] { JavaMethodDescriptor@5['foo'], SamAdapterFunctionDescriptor@6['foo'] } // through LazyJavaStaticClassScope@7
    functions('foo': Name@3) = EmptyList@8[empty] // through LazyJavaClassMemberScope@2
    memberIndex = computeMemberIndex$1@9 // through LazyJavaClassMemberScope@2
    memberIndex = computeMemberIndex$1@10 // through LazyJavaStaticClassScope@7
    nestedClassIndex = LinkedHashMap@11 // through LazyJavaClassMemberScope@2
    nestedClasses('foo': Name@3) = null // through LazyJavaClassMemberScope@2
    properties('foo': Name@3) = EmptyList@8[empty] // through LazyJavaClassMemberScope@2
    properties('foo': Name@3) = EmptyList@8[empty] // through LazyJavaStaticClassScope@7
    typeConstructor = LazyJavaClassTypeConstructor@12['J']
}

LazyJavaClassDescriptor@13['Runnable'] {
    functionTypeForSamInterface = JetTypeImpl@14['Function0<1>']
    thisAsReceiverParameter = LazyClassReceiverParameterDescriptor@15['<this>']
    typeConstructor = LazyJavaClassTypeConstructor@16['Runnable']
}

LazyJavaClassTypeConstructor@12['J'] {
    supertypes = ArrayList@17[1] { JetTypeImpl@18['Any'] }
}

LazyJavaClassTypeConstructor@16['Runnable'] {
    parameters = ArrayList@19[empty]
    supertypes = ArrayList@20[1] { JetTypeImpl@18['Any'] }
}

LazyJavaClassifierType@21['Boolean'] {
    arguments = ArrayList@22[empty]
    classifier = JavaClassImpl@23['Boolean']
    nullable = 'false': Boolean@24
    typeConstructor = DeserializedClassTypeConstructor@25
}

LazyJavaClassifierType@26['Boolean'] {
    arguments = ArrayList@27[empty]
    classifier = JavaClassImpl@23['Boolean']
    nullable = 'true': Boolean@28
    typeConstructor = DeserializedClassTypeConstructor@25
}

LazyJavaClassifierType@29['Object'] {
    classifier = JavaClassImpl@30['Object']
    typeConstructor = DeserializedClassTypeConstructor@31
}

LazyJavaClassifierType@32['Object'] {
    classifier = JavaClassImpl@33['Object']
    typeConstructor = DeserializedClassTypeConstructor@31
}

LazyJavaClassifierType@34['Runnable'] {
    arguments = ArrayList@35[empty]
    classifier = JavaClassImpl@36['Runnable']
    nullable = 'false': Boolean@24
    typeConstructor = LazyJavaClassTypeConstructor@16['Runnable']
}

LazyJavaClassifierType@37['Runnable'] {
    arguments = ArrayList@38[empty]
    classifier = JavaClassImpl@36['Runnable']
    nullable = 'true': Boolean@28
    typeConstructor = LazyJavaClassTypeConstructor@16['Runnable']
}

LazyJavaClassifierType@39['String'] {
    arguments = ArrayList@40[empty]
    classifier = JavaClassImpl@41['String']
    nullable = 'false': Boolean@24
    typeConstructor = DeserializedClassTypeConstructor@42
}

LazyJavaClassifierType@43['String'] {
    arguments = ArrayList@44[empty]
    classifier = JavaClassImpl@41['String']
    nullable = 'true': Boolean@28
    typeConstructor = DeserializedClassTypeConstructor@42
}

LazyJavaPackageFragmentProvider@45 {
    packageFragments('<root>': FqName@46) = LazyJavaPackageFragment@47['<root>']
    packageFragments('J': FqName@48) = null
    packageFragments('java': FqName@49) = LazyJavaPackageFragment@50['java']
    packageFragments('java.lang': FqName@51) = LazyJavaPackageFragment@52['lang']
    packageFragments('java.lang.J': FqName@53) = null
    packageFragments('kotlin': FqName@54) = null
    packageFragments('kotlin.J': FqName@55) = null
    packageFragments('kotlin.io': FqName@56) = null
    packageFragments('kotlin.jvm': FqName@57) = null
    packageFragments('test': FqName@58) = LazyJavaPackageFragment@59['test']
    packageFragments('test.J': FqName@60) = null
    topLevelClasses(JavaClassImpl@61['J']) = LazyJavaClassDescriptor@0['J']
    topLevelClasses(JavaClassImpl@36['Runnable']) = LazyJavaClassDescriptor@13['Runnable']
}

LazyJavaPackageFragment@50['java'] {
    classes('lang': Name@62) = null // through LazyPackageFragmentScopeForJavaPackage@63
    deserializedPackageScope = Empty@64 // through LazyPackageFragmentScopeForJavaPackage@63
    functions('lang': Name@65) = EmptyList@8[empty] // through LazyPackageFragmentScopeForJavaPackage@63
    memberIndex = computeMemberIndex$1@66 // through LazyPackageFragmentScopeForJavaPackage@63
}

LazyJavaPackageFragment@52['lang'] {
    deserializedPackageScope = Empty@64 // through LazyPackageFragmentScopeForJavaPackage@67
}

LazyJavaPackageFragment@59['test'] {
    classes('J': Name@68) = LazyJavaClassDescriptor@0['J'] // through LazyPackageFragmentScopeForJavaPackage@69
    deserializedPackageScope = Empty@64 // through LazyPackageFragmentScopeForJavaPackage@69
}

ResolutionTaskHolder@70 {
    <name not found> = ArrayList@71[1] { ResolutionCandidate@72 }
    <name not found> = ArrayList@73[1] { ResolutionCandidate@74 }
    <name not found> = ArrayList@75[2] { ResolutionCandidate@72, ResolutionCandidate@74 }
    <name not found> = EmptyList@8[empty]
    <name not found> = EmptyList@8[empty]
    <name not found> = EmptyList@8[empty]
    <name not found> = EmptyList@8[empty]
    <name not found> = EmptyList@8[empty]
    <name not found> = EmptyList@8[empty]
    <name not found> = EmptyList@8[empty]
    <name not found> = EmptyList@8[empty]
}

ResolutionTaskHolder@76 {
    <name not found> = EmptyList@8[empty]
    <name not found> = EmptyList@8[empty]
    <name not found> = EmptyList@8[empty]
    <name not found> = EmptyList@8[empty]
    <name not found> = EmptyList@8[empty]
    <name not found> = EmptyList@8[empty]
    <name not found> = EmptyList@8[empty]
    <name not found> = EmptyList@8[empty]
    <name not found> = EmptyList@8[empty]
    <name not found> = EmptyList@8[empty]
}
