DescriptorResolver@0 {
    <name not found> = IntValue@1
}

LazyJavaClassDescriptor@2['AbstractCollection'] {
    defaultType = JetTypeImpl@3['AbstractCollection<1>']
    functions('Itr': Name@4) = EmptyList@5[empty] // through LazyJavaClassMemberScope@6
    functions('ListItr': Name@7) = EmptyList@5[empty] // through LazyJavaClassMemberScope@6
    functions('SubList': Name@8) = EmptyList@5[empty] // through LazyJavaClassMemberScope@6
    functions('add': Name@9) = ArrayList@10[1] { JavaMethodDescriptor@11['add'] } // through LazyJavaClassMemberScope@6
    functions('addAll': Name@12) = ArrayList@13[1] { JavaMethodDescriptor@14['addAll'] } // through LazyJavaClassMemberScope@6
    functions('batchRemove': Name@15) = EmptyList@5[empty] // through LazyJavaClassMemberScope@6
    functions('clear': Name@16) = ArrayList@17[1] { JavaMethodDescriptor@18['clear'] } // through LazyJavaClassMemberScope@6
    functions('clone': Name@19) = EmptyList@5[empty] // through LazyJavaClassMemberScope@6
    functions('contains': Name@20) = ArrayList@21[1] { JavaMethodDescriptor@22['contains'] } // through LazyJavaClassMemberScope@6
    functions('containsAll': Name@23) = ArrayList@24[1] { JavaMethodDescriptor@25['containsAll'] } // through LazyJavaClassMemberScope@6
    functions('elementData': Name@26) = EmptyList@5[empty] // through LazyJavaClassMemberScope@6
    functions('ensureCapacity': Name@27) = EmptyList@5[empty] // through LazyJavaClassMemberScope@6
    functions('ensureCapacityInternal': Name@28) = EmptyList@5[empty] // through LazyJavaClassMemberScope@6
    functions('equals': Name@29) = ArrayList@30[1] { DeserializedSimpleFunctionDescriptor@31['equals'] } // through LazyJavaClassMemberScope@6
    functions('fastRemove': Name@32) = EmptyList@5[empty] // through LazyJavaClassMemberScope@6
    functions('finalize': Name@33) = EmptyList@5[empty] // through LazyJavaClassMemberScope@6
    functions('get': Name@34) = EmptyList@5[empty] // through LazyJavaClassMemberScope@6
    functions('getClass': Name@35) = EmptyList@5[empty] // through LazyJavaClassMemberScope@6
    functions('grow': Name@36) = EmptyList@5[empty] // through LazyJavaClassMemberScope@6
    functions('hashCode': Name@37) = ArrayList@38[1] { DeserializedSimpleFunctionDescriptor@39['hashCode'] } // through LazyJavaClassMemberScope@6
    functions('indexOf': Name@40) = EmptyList@5[empty] // through LazyJavaClassMemberScope@6
    functions('isEmpty': Name@41) = ArrayList@42[1] { JavaMethodDescriptor@43['isEmpty'] } // through LazyJavaClassMemberScope@6
    functions('iterator': Name@44) = ArrayList@45[1] { JavaMethodDescriptor@46['iterator'] } // through LazyJavaClassMemberScope@6
    functions('lastIndexOf': Name@47) = EmptyList@5[empty] // through LazyJavaClassMemberScope@6
    functions('listIterator': Name@48) = EmptyList@5[empty] // through LazyJavaClassMemberScope@6
    functions('notify': Name@49) = EmptyList@5[empty] // through LazyJavaClassMemberScope@6
    functions('notifyAll': Name@50) = EmptyList@5[empty] // through LazyJavaClassMemberScope@6
    functions('outOfBoundsMsg': Name@51) = EmptyList@5[empty] // through LazyJavaClassMemberScope@6
    functions('rangeCheck': Name@52) = EmptyList@5[empty] // through LazyJavaClassMemberScope@6
    functions('rangeCheckForAdd': Name@53) = EmptyList@5[empty] // through LazyJavaClassMemberScope@6
    functions('readObject': Name@54) = EmptyList@5[empty] // through LazyJavaClassMemberScope@6
    functions('remove': Name@55) = ArrayList@56[1] { JavaMethodDescriptor@57['remove'] } // through LazyJavaClassMemberScope@6
    functions('removeAll': Name@58) = ArrayList@59[1] { JavaMethodDescriptor@60['removeAll'] } // through LazyJavaClassMemberScope@6
    functions('removeRange': Name@61) = EmptyList@5[empty] // through LazyJavaClassMemberScope@6
    functions('retainAll': Name@62) = ArrayList@63[1] { JavaMethodDescriptor@64['retainAll'] } // through LazyJavaClassMemberScope@6
    functions('set': Name@65) = EmptyList@5[empty] // through LazyJavaClassMemberScope@6
    functions('size': Name@66) = ArrayList@67[1] { JavaMethodDescriptor@68['size'] } // through LazyJavaClassMemberScope@6
    functions('subList': Name@69) = EmptyList@5[empty] // through LazyJavaClassMemberScope@6
    functions('toArray': Name@70) = ArrayList@71[2] { JavaMethodDescriptor@72['toArray'], JavaMethodDescriptor@73['toArray'] } // through LazyJavaClassMemberScope@6
    functions('toString': Name@74) = ArrayList@75[1] { JavaMethodDescriptor@76['toString'] } // through LazyJavaClassMemberScope@6
    functions('trimToSize': Name@77) = EmptyList@5[empty] // through LazyJavaClassMemberScope@6
    functions('wait': Name@78) = EmptyList@5[empty] // through LazyJavaClassMemberScope@6
    functions('writeObject': Name@79) = EmptyList@5[empty] // through LazyJavaClassMemberScope@6
    memberIndex = computeMemberIndex$1@80 // through LazyJavaClassMemberScope@6
    properties('elementData': Name@81) = EmptyList@5[empty] // through LazyJavaClassMemberScope@6
    properties('modCount': Name@82) = EmptyList@5[empty] // through LazyJavaClassMemberScope@6
    properties('size': Name@83) = EmptyList@5[empty] // through LazyJavaClassMemberScope@6
    thisAsReceiverParameter = LazyClassReceiverParameterDescriptor@84['<this>']
    typeConstructor = LazyJavaClassTypeConstructor@85['AbstractCollection']
}

LazyJavaClassDescriptor@86['AbstractList'] {
    defaultType = JetTypeImpl@87['AbstractList<1>']
    functions('Itr': Name@4) = EmptyList@5[empty] // through LazyJavaClassMemberScope@88
    functions('ListItr': Name@7) = EmptyList@5[empty] // through LazyJavaClassMemberScope@88
    functions('SubList': Name@8) = EmptyList@5[empty] // through LazyJavaClassMemberScope@88
    functions('add': Name@89) = ArrayList@90[2] { JavaMethodDescriptor@91['add'], JavaMethodDescriptor@92['add'] } // through LazyJavaClassMemberScope@88
    functions('addAll': Name@93) = ArrayList@94[2] { JavaMethodDescriptor@95['addAll'], DeserializedSimpleFunctionDescriptor@96['addAll'] } // through LazyJavaClassMemberScope@88
    functions('batchRemove': Name@15) = EmptyList@5[empty] // through LazyJavaClassMemberScope@88
    functions('clear': Name@97) = ArrayList@98[1] { JavaMethodDescriptor@99['clear'] } // through LazyJavaClassMemberScope@88
    functions('clone': Name@19) = EmptyList@5[empty] // through LazyJavaClassMemberScope@88
    functions('contains': Name@20) = ArrayList@100[1] { DeserializedSimpleFunctionDescriptor@101['contains'] } // through LazyJavaClassMemberScope@88
    functions('containsAll': Name@23) = ArrayList@102[1] { DeserializedSimpleFunctionDescriptor@103['containsAll'] } // through LazyJavaClassMemberScope@88
    functions('elementData': Name@26) = EmptyList@5[empty] // through LazyJavaClassMemberScope@88
    functions('ensureCapacity': Name@27) = EmptyList@5[empty] // through LazyJavaClassMemberScope@88
    functions('ensureCapacityInternal': Name@28) = EmptyList@5[empty] // through LazyJavaClassMemberScope@88
    functions('equals': Name@104) = ArrayList@105[1] { JavaMethodDescriptor@106['equals'] } // through LazyJavaClassMemberScope@88
    functions('fastRemove': Name@32) = EmptyList@5[empty] // through LazyJavaClassMemberScope@88
    functions('finalize': Name@33) = EmptyList@5[empty] // through LazyJavaClassMemberScope@88
    functions('get': Name@107) = ArrayList@108[1] { JavaMethodDescriptor@109['get'] } // through LazyJavaClassMemberScope@88
    functions('getClass': Name@35) = EmptyList@5[empty] // through LazyJavaClassMemberScope@88
    functions('grow': Name@36) = EmptyList@5[empty] // through LazyJavaClassMemberScope@88
    functions('hashCode': Name@110) = ArrayList@111[1] { JavaMethodDescriptor@112['hashCode'] } // through LazyJavaClassMemberScope@88
    functions('indexOf': Name@113) = ArrayList@114[1] { JavaMethodDescriptor@115['indexOf'] } // through LazyJavaClassMemberScope@88
    functions('isEmpty': Name@41) = ArrayList@116[1] { DeserializedSimpleFunctionDescriptor@117['isEmpty'] } // through LazyJavaClassMemberScope@88
    functions('iterator': Name@118) = ArrayList@119[1] { JavaMethodDescriptor@120['iterator'] } // through LazyJavaClassMemberScope@88
    functions('lastIndexOf': Name@121) = ArrayList@122[1] { JavaMethodDescriptor@123['lastIndexOf'] } // through LazyJavaClassMemberScope@88
    functions('listIterator': Name@124) = ArrayList@125[2] { JavaMethodDescriptor@126['listIterator'], JavaMethodDescriptor@127['listIterator'] } // through LazyJavaClassMemberScope@88
    functions('notify': Name@49) = EmptyList@5[empty] // through LazyJavaClassMemberScope@88
    functions('notifyAll': Name@50) = EmptyList@5[empty] // through LazyJavaClassMemberScope@88
    functions('outOfBoundsMsg': Name@128) = ArrayList@129[1] { JavaMethodDescriptor@130['outOfBoundsMsg'] } // through LazyJavaClassMemberScope@88
    functions('rangeCheck': Name@52) = EmptyList@5[empty] // through LazyJavaClassMemberScope@88
    functions('rangeCheckForAdd': Name@131) = ArrayList@132[1] { JavaMethodDescriptor@133['rangeCheckForAdd'] } // through LazyJavaClassMemberScope@88
    functions('readObject': Name@54) = EmptyList@5[empty] // through LazyJavaClassMemberScope@88
    functions('remove': Name@134) = ArrayList@135[2] { JavaMethodDescriptor@136['remove'], DeserializedSimpleFunctionDescriptor@137['remove'] } // through LazyJavaClassMemberScope@88
    functions('removeAll': Name@58) = ArrayList@138[1] { DeserializedSimpleFunctionDescriptor@139['removeAll'] } // through LazyJavaClassMemberScope@88
    functions('removeRange': Name@140) = ArrayList@141[1] { JavaMethodDescriptor@142['removeRange'] } // through LazyJavaClassMemberScope@88
    functions('retainAll': Name@62) = ArrayList@143[1] { DeserializedSimpleFunctionDescriptor@144['retainAll'] } // through LazyJavaClassMemberScope@88
    functions('set': Name@145) = ArrayList@146[1] { JavaMethodDescriptor@147['set'] } // through LazyJavaClassMemberScope@88
    functions('size': Name@66) = ArrayList@148[1] { DeserializedSimpleFunctionDescriptor@149['size'] } // through LazyJavaClassMemberScope@88
    functions('subList': Name@150) = ArrayList@151[1] { JavaMethodDescriptor@152['subList'] } // through LazyJavaClassMemberScope@88
    functions('toArray': Name@70) = ArrayList@153[2] { JavaMethodDescriptor@154['toArray'], JavaMethodDescriptor@155['toArray'] } // through LazyJavaClassMemberScope@88
    functions('toString': Name@74) = ArrayList@156[1] { DeserializedSimpleFunctionDescriptor@157['toString'] } // through LazyJavaClassMemberScope@88
    functions('trimToSize': Name@77) = EmptyList@5[empty] // through LazyJavaClassMemberScope@88
    functions('wait': Name@78) = EmptyList@5[empty] // through LazyJavaClassMemberScope@88
    functions('writeObject': Name@79) = EmptyList@5[empty] // through LazyJavaClassMemberScope@88
    memberIndex = computeMemberIndex$1@158 // through LazyJavaClassMemberScope@88
    properties('elementData': Name@81) = EmptyList@5[empty] // through LazyJavaClassMemberScope@88
    properties('modCount': Name@82) = ArrayList@159[1] { JavaPropertyDescriptor@160['modCount'] } // through LazyJavaClassMemberScope@88
    properties('size': Name@83) = EmptyList@5[empty] // through LazyJavaClassMemberScope@88
    thisAsReceiverParameter = LazyClassReceiverParameterDescriptor@161['<this>']
    typeConstructor = LazyJavaClassTypeConstructor@162['AbstractList']
}

LazyJavaClassDescriptor@163['ArrayList'] {
    allDescriptors = ArrayList@164[46] { LazyJavaClassDescriptor@165['SubList'], LazyJavaClassDescriptor@166['ListItr'], LazyJavaClassDescriptor@167['Itr'], ... } // through LazyJavaClassMemberScope@168
    constructors = ArrayList@169[3] { JavaConstructorDescriptor@170['<init>'], JavaConstructorDescriptor@171['<init>'], JavaConstructorDescriptor@172['<init>'] } // through LazyJavaClassMemberScope@168
    defaultType = JetTypeImpl@173['ArrayList<1>']
    enumEntryIndex = LinkedHashMap@174 // through LazyJavaClassMemberScope@168
    functions('Itr': Name@4) = EmptyList@5[empty] // through LazyJavaClassMemberScope@168
    functions('ListItr': Name@7) = EmptyList@5[empty] // through LazyJavaClassMemberScope@168
    functions('SubList': Name@8) = EmptyList@5[empty] // through LazyJavaClassMemberScope@168
    functions('add': Name@175) = ArrayList@176[2] { JavaMethodDescriptor@177['add'], JavaMethodDescriptor@178['add'] } // through LazyJavaClassMemberScope@168
    functions('addAll': Name@179) = ArrayList@180[2] { JavaMethodDescriptor@181['addAll'], JavaMethodDescriptor@182['addAll'] } // through LazyJavaClassMemberScope@168
    functions('batchRemove': Name@183) = ArrayList@184[1] { JavaMethodDescriptor@185['batchRemove'] } // through LazyJavaClassMemberScope@168
    functions('clear': Name@186) = ArrayList@187[1] { JavaMethodDescriptor@188['clear'] } // through LazyJavaClassMemberScope@168
    functions('clone': Name@189) = ArrayList@190[1] { JavaMethodDescriptor@191['clone'] } // through LazyJavaClassMemberScope@168
    functions('contains': Name@192) = ArrayList@193[1] { JavaMethodDescriptor@194['contains'] } // through LazyJavaClassMemberScope@168
    functions('containsAll': Name@23) = ArrayList@195[1] { DeserializedSimpleFunctionDescriptor@196['containsAll'] } // through LazyJavaClassMemberScope@168
    functions('elementData': Name@197) = ArrayList@198[1] { JavaMethodDescriptor@199['elementData'] } // through LazyJavaClassMemberScope@168
    functions('ensureCapacity': Name@200) = ArrayList@201[1] { JavaMethodDescriptor@202['ensureCapacity'] } // through LazyJavaClassMemberScope@168
    functions('ensureCapacityInternal': Name@203) = ArrayList@204[1] { JavaMethodDescriptor@205['ensureCapacityInternal'] } // through LazyJavaClassMemberScope@168
    functions('equals': Name@104) = ArrayList@206[1] { DeserializedSimpleFunctionDescriptor@207['equals'] } // through LazyJavaClassMemberScope@168
    functions('fastRemove': Name@208) = ArrayList@209[1] { JavaMethodDescriptor@210['fastRemove'] } // through LazyJavaClassMemberScope@168
    functions('finalize': Name@33) = EmptyList@5[empty] // through LazyJavaClassMemberScope@168
    functions('get': Name@211) = ArrayList@212[1] { JavaMethodDescriptor@213['get'] } // through LazyJavaClassMemberScope@168
    functions('getClass': Name@35) = EmptyList@5[empty] // through LazyJavaClassMemberScope@168
    functions('grow': Name@214) = ArrayList@215[1] { JavaMethodDescriptor@216['grow'] } // through LazyJavaClassMemberScope@168
    functions('hashCode': Name@110) = ArrayList@217[1] { DeserializedSimpleFunctionDescriptor@218['hashCode'] } // through LazyJavaClassMemberScope@168
    functions('indexOf': Name@219) = ArrayList@220[1] { JavaMethodDescriptor@221['indexOf'] } // through LazyJavaClassMemberScope@168
    functions('isEmpty': Name@222) = ArrayList@223[1] { JavaMethodDescriptor@224['isEmpty'] } // through LazyJavaClassMemberScope@168
    functions('iterator': Name@225) = ArrayList@226[1] { JavaMethodDescriptor@227['iterator'] } // through LazyJavaClassMemberScope@168
    functions('lastIndexOf': Name@228) = ArrayList@229[1] { JavaMethodDescriptor@230['lastIndexOf'] } // through LazyJavaClassMemberScope@168
    functions('listIterator': Name@231) = ArrayList@232[2] { JavaMethodDescriptor@233['listIterator'], JavaMethodDescriptor@234['listIterator'] } // through LazyJavaClassMemberScope@168
    functions('notify': Name@49) = EmptyList@5[empty] // through LazyJavaClassMemberScope@168
    functions('notifyAll': Name@50) = EmptyList@5[empty] // through LazyJavaClassMemberScope@168
    functions('outOfBoundsMsg': Name@235) = ArrayList@236[1] { JavaMethodDescriptor@237['outOfBoundsMsg'] } // through LazyJavaClassMemberScope@168
    functions('rangeCheck': Name@238) = ArrayList@239[1] { JavaMethodDescriptor@240['rangeCheck'] } // through LazyJavaClassMemberScope@168
    functions('rangeCheckForAdd': Name@241) = ArrayList@242[1] { JavaMethodDescriptor@243['rangeCheckForAdd'] } // through LazyJavaClassMemberScope@168
    functions('readObject': Name@244) = ArrayList@245[1] { JavaMethodDescriptor@246['readObject'] } // through LazyJavaClassMemberScope@168
    functions('remove': Name@247) = ArrayList@248[2] { JavaMethodDescriptor@249['remove'], JavaMethodDescriptor@250['remove'] } // through LazyJavaClassMemberScope@168
    functions('removeAll': Name@251) = ArrayList@252[1] { JavaMethodDescriptor@253['removeAll'] } // through LazyJavaClassMemberScope@168
    functions('removeRange': Name@254) = ArrayList@255[1] { JavaMethodDescriptor@256['removeRange'] } // through LazyJavaClassMemberScope@168
    functions('retainAll': Name@257) = ArrayList@258[1] { JavaMethodDescriptor@259['retainAll'] } // through LazyJavaClassMemberScope@168
    functions('set': Name@260) = ArrayList@261[1] { JavaMethodDescriptor@262['set'] } // through LazyJavaClassMemberScope@168
    functions('size': Name@263) = ArrayList@264[1] { JavaMethodDescriptor@265['size'] } // through LazyJavaClassMemberScope@168
    functions('subList': Name@266) = ArrayList@267[1] { JavaMethodDescriptor@268['subList'] } // through LazyJavaClassMemberScope@168
    functions('toArray': Name@269) = ArrayList@270[2] { JavaMethodDescriptor@271['toArray'], JavaMethodDescriptor@272['toArray'] } // through LazyJavaClassMemberScope@168
    functions('toString': Name@74) = ArrayList@273[1] { DeserializedSimpleFunctionDescriptor@274['toString'] } // through LazyJavaClassMemberScope@168
    functions('trimToSize': Name@275) = ArrayList@276[1] { JavaMethodDescriptor@277['trimToSize'] } // through LazyJavaClassMemberScope@168
    functions('wait': Name@78) = EmptyList@5[empty] // through LazyJavaClassMemberScope@168
    functions('writeObject': Name@278) = ArrayList@279[1] { JavaMethodDescriptor@280['writeObject'] } // through LazyJavaClassMemberScope@168
    memberIndex = computeMemberIndex$1@281 // through LazyJavaClassMemberScope@168
    nestedClassIndex = LinkedHashMap@282 // through LazyJavaClassMemberScope@168
    nestedClasses('Itr': Name@4) = LazyJavaClassDescriptor@167['Itr'] // through LazyJavaClassMemberScope@168
    nestedClasses('ListItr': Name@7) = LazyJavaClassDescriptor@166['ListItr'] // through LazyJavaClassMemberScope@168
    nestedClasses('SubList': Name@8) = LazyJavaClassDescriptor@165['SubList'] // through LazyJavaClassMemberScope@168
    properties('elementData': Name@81) = ArrayList@283[1] { JavaPropertyDescriptor@284['elementData'] } // through LazyJavaClassMemberScope@168
    properties('modCount': Name@82) = ArrayList@285[1] { PropertyDescriptorImpl@286['modCount'] } // through LazyJavaClassMemberScope@168
    properties('size': Name@83) = ArrayList@287[1] { JavaPropertyDescriptor@288['size'] } // through LazyJavaClassMemberScope@168
    thisAsReceiverParameter = LazyClassReceiverParameterDescriptor@289['<this>']
    typeConstructor = LazyJavaClassTypeConstructor@290['ArrayList']
}

LazyJavaClassDescriptor@291['ObjectInputStream'] {
    functionTypeForSamInterface = null
    typeConstructor = LazyJavaClassTypeConstructor@292['ObjectInputStream']
}

LazyJavaClassDescriptor@293['ObjectOutputStream'] {
    functionTypeForSamInterface = null
    typeConstructor = LazyJavaClassTypeConstructor@294['ObjectOutputStream']
}

LazyJavaClassDescriptor@295['RandomAccess'] {
    defaultType = JetTypeImpl@296['RandomAccess']
    functions('Itr': Name@4) = EmptyList@5[empty] // through LazyJavaClassMemberScope@297
    functions('ListItr': Name@7) = EmptyList@5[empty] // through LazyJavaClassMemberScope@297
    functions('SubList': Name@8) = EmptyList@5[empty] // through LazyJavaClassMemberScope@297
    functions('add': Name@89) = EmptyList@5[empty] // through LazyJavaClassMemberScope@297
    functions('addAll': Name@93) = EmptyList@5[empty] // through LazyJavaClassMemberScope@297
    functions('batchRemove': Name@15) = EmptyList@5[empty] // through LazyJavaClassMemberScope@297
    functions('clear': Name@97) = EmptyList@5[empty] // through LazyJavaClassMemberScope@297
    functions('clone': Name@19) = EmptyList@5[empty] // through LazyJavaClassMemberScope@297
    functions('contains': Name@20) = EmptyList@5[empty] // through LazyJavaClassMemberScope@297
    functions('containsAll': Name@23) = EmptyList@5[empty] // through LazyJavaClassMemberScope@297
    functions('elementData': Name@26) = EmptyList@5[empty] // through LazyJavaClassMemberScope@297
    functions('ensureCapacity': Name@27) = EmptyList@5[empty] // through LazyJavaClassMemberScope@297
    functions('ensureCapacityInternal': Name@28) = EmptyList@5[empty] // through LazyJavaClassMemberScope@297
    functions('equals': Name@104) = ArrayList@298[1] { DeserializedSimpleFunctionDescriptor@299['equals'] } // through LazyJavaClassMemberScope@297
    functions('fastRemove': Name@32) = EmptyList@5[empty] // through LazyJavaClassMemberScope@297
    functions('finalize': Name@33) = EmptyList@5[empty] // through LazyJavaClassMemberScope@297
    functions('get': Name@107) = EmptyList@5[empty] // through LazyJavaClassMemberScope@297
    functions('getClass': Name@35) = EmptyList@5[empty] // through LazyJavaClassMemberScope@297
    functions('grow': Name@36) = EmptyList@5[empty] // through LazyJavaClassMemberScope@297
    functions('hashCode': Name@110) = ArrayList@300[1] { DeserializedSimpleFunctionDescriptor@301['hashCode'] } // through LazyJavaClassMemberScope@297
    functions('indexOf': Name@113) = EmptyList@5[empty] // through LazyJavaClassMemberScope@297
    functions('isEmpty': Name@41) = EmptyList@5[empty] // through LazyJavaClassMemberScope@297
    functions('iterator': Name@118) = EmptyList@5[empty] // through LazyJavaClassMemberScope@297
    functions('lastIndexOf': Name@121) = EmptyList@5[empty] // through LazyJavaClassMemberScope@297
    functions('listIterator': Name@124) = EmptyList@5[empty] // through LazyJavaClassMemberScope@297
    functions('notify': Name@49) = EmptyList@5[empty] // through LazyJavaClassMemberScope@297
    functions('notifyAll': Name@50) = EmptyList@5[empty] // through LazyJavaClassMemberScope@297
    functions('outOfBoundsMsg': Name@128) = EmptyList@5[empty] // through LazyJavaClassMemberScope@297
    functions('rangeCheck': Name@52) = EmptyList@5[empty] // through LazyJavaClassMemberScope@297
    functions('rangeCheckForAdd': Name@131) = EmptyList@5[empty] // through LazyJavaClassMemberScope@297
    functions('readObject': Name@54) = EmptyList@5[empty] // through LazyJavaClassMemberScope@297
    functions('remove': Name@134) = EmptyList@5[empty] // through LazyJavaClassMemberScope@297
    functions('removeAll': Name@58) = EmptyList@5[empty] // through LazyJavaClassMemberScope@297
    functions('removeRange': Name@140) = EmptyList@5[empty] // through LazyJavaClassMemberScope@297
    functions('retainAll': Name@62) = EmptyList@5[empty] // through LazyJavaClassMemberScope@297
    functions('set': Name@145) = EmptyList@5[empty] // through LazyJavaClassMemberScope@297
    functions('size': Name@66) = EmptyList@5[empty] // through LazyJavaClassMemberScope@297
    functions('subList': Name@150) = EmptyList@5[empty] // through LazyJavaClassMemberScope@297
    functions('toArray': Name@70) = EmptyList@5[empty] // through LazyJavaClassMemberScope@297
    functions('toString': Name@74) = ArrayList@302[1] { DeserializedSimpleFunctionDescriptor@303['toString'] } // through LazyJavaClassMemberScope@297
    functions('trimToSize': Name@77) = EmptyList@5[empty] // through LazyJavaClassMemberScope@297
    functions('wait': Name@78) = EmptyList@5[empty] // through LazyJavaClassMemberScope@297
    functions('writeObject': Name@79) = EmptyList@5[empty] // through LazyJavaClassMemberScope@297
    memberIndex = computeMemberIndex$1@304 // through LazyJavaClassMemberScope@297
    properties('elementData': Name@81) = EmptyList@5[empty] // through LazyJavaClassMemberScope@297
    properties('modCount': Name@82) = EmptyList@5[empty] // through LazyJavaClassMemberScope@297
    properties('size': Name@83) = EmptyList@5[empty] // through LazyJavaClassMemberScope@297
    typeConstructor = LazyJavaClassTypeConstructor@305['RandomAccess']
}

LazyJavaClassDescriptor@306['Serializable'] {
    defaultType = JetTypeImpl@307['Serializable']
    functions('Itr': Name@4) = EmptyList@5[empty] // through LazyJavaClassMemberScope@308
    functions('ListItr': Name@7) = EmptyList@5[empty] // through LazyJavaClassMemberScope@308
    functions('SubList': Name@8) = EmptyList@5[empty] // through LazyJavaClassMemberScope@308
    functions('add': Name@89) = EmptyList@5[empty] // through LazyJavaClassMemberScope@308
    functions('addAll': Name@93) = EmptyList@5[empty] // through LazyJavaClassMemberScope@308
    functions('batchRemove': Name@15) = EmptyList@5[empty] // through LazyJavaClassMemberScope@308
    functions('clear': Name@97) = EmptyList@5[empty] // through LazyJavaClassMemberScope@308
    functions('clone': Name@19) = EmptyList@5[empty] // through LazyJavaClassMemberScope@308
    functions('contains': Name@20) = EmptyList@5[empty] // through LazyJavaClassMemberScope@308
    functions('containsAll': Name@23) = EmptyList@5[empty] // through LazyJavaClassMemberScope@308
    functions('elementData': Name@26) = EmptyList@5[empty] // through LazyJavaClassMemberScope@308
    functions('ensureCapacity': Name@27) = EmptyList@5[empty] // through LazyJavaClassMemberScope@308
    functions('ensureCapacityInternal': Name@28) = EmptyList@5[empty] // through LazyJavaClassMemberScope@308
    functions('equals': Name@104) = ArrayList@309[1] { DeserializedSimpleFunctionDescriptor@310['equals'] } // through LazyJavaClassMemberScope@308
    functions('fastRemove': Name@32) = EmptyList@5[empty] // through LazyJavaClassMemberScope@308
    functions('finalize': Name@33) = EmptyList@5[empty] // through LazyJavaClassMemberScope@308
    functions('get': Name@107) = EmptyList@5[empty] // through LazyJavaClassMemberScope@308
    functions('getClass': Name@35) = EmptyList@5[empty] // through LazyJavaClassMemberScope@308
    functions('grow': Name@36) = EmptyList@5[empty] // through LazyJavaClassMemberScope@308
    functions('hashCode': Name@110) = ArrayList@311[1] { DeserializedSimpleFunctionDescriptor@312['hashCode'] } // through LazyJavaClassMemberScope@308
    functions('indexOf': Name@113) = EmptyList@5[empty] // through LazyJavaClassMemberScope@308
    functions('isEmpty': Name@41) = EmptyList@5[empty] // through LazyJavaClassMemberScope@308
    functions('iterator': Name@118) = EmptyList@5[empty] // through LazyJavaClassMemberScope@308
    functions('lastIndexOf': Name@121) = EmptyList@5[empty] // through LazyJavaClassMemberScope@308
    functions('listIterator': Name@124) = EmptyList@5[empty] // through LazyJavaClassMemberScope@308
    functions('notify': Name@49) = EmptyList@5[empty] // through LazyJavaClassMemberScope@308
    functions('notifyAll': Name@50) = EmptyList@5[empty] // through LazyJavaClassMemberScope@308
    functions('outOfBoundsMsg': Name@128) = EmptyList@5[empty] // through LazyJavaClassMemberScope@308
    functions('rangeCheck': Name@52) = EmptyList@5[empty] // through LazyJavaClassMemberScope@308
    functions('rangeCheckForAdd': Name@131) = EmptyList@5[empty] // through LazyJavaClassMemberScope@308
    functions('readObject': Name@54) = EmptyList@5[empty] // through LazyJavaClassMemberScope@308
    functions('remove': Name@134) = EmptyList@5[empty] // through LazyJavaClassMemberScope@308
    functions('removeAll': Name@58) = EmptyList@5[empty] // through LazyJavaClassMemberScope@308
    functions('removeRange': Name@140) = EmptyList@5[empty] // through LazyJavaClassMemberScope@308
    functions('retainAll': Name@62) = EmptyList@5[empty] // through LazyJavaClassMemberScope@308
    functions('set': Name@145) = EmptyList@5[empty] // through LazyJavaClassMemberScope@308
    functions('size': Name@66) = EmptyList@5[empty] // through LazyJavaClassMemberScope@308
    functions('subList': Name@150) = EmptyList@5[empty] // through LazyJavaClassMemberScope@308
    functions('toArray': Name@70) = EmptyList@5[empty] // through LazyJavaClassMemberScope@308
    functions('toString': Name@74) = ArrayList@313[1] { DeserializedSimpleFunctionDescriptor@314['toString'] } // through LazyJavaClassMemberScope@308
    functions('trimToSize': Name@77) = EmptyList@5[empty] // through LazyJavaClassMemberScope@308
    functions('wait': Name@78) = EmptyList@5[empty] // through LazyJavaClassMemberScope@308
    functions('writeObject': Name@79) = EmptyList@5[empty] // through LazyJavaClassMemberScope@308
    memberIndex = computeMemberIndex$1@315 // through LazyJavaClassMemberScope@308
    properties('elementData': Name@81) = EmptyList@5[empty] // through LazyJavaClassMemberScope@308
    properties('modCount': Name@82) = EmptyList@5[empty] // through LazyJavaClassMemberScope@308
    properties('size': Name@83) = EmptyList@5[empty] // through LazyJavaClassMemberScope@308
    typeConstructor = LazyJavaClassTypeConstructor@316['Serializable']
}

LazyJavaClassTypeConstructor@85['AbstractCollection'] {
    parameters = ArrayList@317[1] { LazyJavaTypeParameterDescriptor@318['E'] }
    supertypes = ArrayList@319[1] { LazyJavaClassifierType@320['Collection<E>'] }
}

LazyJavaClassTypeConstructor@162['AbstractList'] {
    parameters = ArrayList@321[1] { LazyJavaTypeParameterDescriptor@322['E'] }
    supertypes = ArrayList@323[2] { LazyJavaClassifierType@324['AbstractCollection<E>'], LazyJavaClassifierType@325['List<E>'] }
}

LazyJavaClassTypeConstructor@290['ArrayList'] {
    parameters = ArrayList@326[1] { LazyJavaTypeParameterDescriptor@327['E'] }
    supertypes = ArrayList@328[5] { LazyJavaClassifierType@329['AbstractList<E>'], LazyJavaClassifierType@330['List<E>'], LazyJavaClassifierType@331['RandomAccess'], ... }
}

LazyJavaClassTypeConstructor@292['ObjectInputStream'] {
    parameters = ArrayList@332[empty]
}

LazyJavaClassTypeConstructor@294['ObjectOutputStream'] {
    parameters = ArrayList@333[empty]
}

LazyJavaClassTypeConstructor@305['RandomAccess'] {
    parameters = ArrayList@334[empty]
    supertypes = ArrayList@335[1] { JetTypeImpl@336['Any'] }
}

LazyJavaClassTypeConstructor@316['Serializable'] {
    parameters = ArrayList@337[empty]
    supertypes = ArrayList@338[1] { JetTypeImpl@336['Any'] }
}

LazyJavaClassifierType@324['AbstractCollection<E>'] {
    arguments = ArrayList@339[1] { TypeProjectionImpl@340 }
    classifier = JavaClassImpl@341['AbstractCollection']
    memberScope = SubstitutingScope@342
    nullable = 'false': Boolean@343
    typeConstructor = LazyJavaClassTypeConstructor@85['AbstractCollection']
}

LazyJavaClassifierType@329['AbstractList<E>'] {
    arguments = ArrayList@344[1] { TypeProjectionImpl@345 }
    classifier = JavaClassImpl@346['AbstractList']
    memberScope = SubstitutingScope@347
    nullable = 'false': Boolean@343
    typeConstructor = LazyJavaClassTypeConstructor@162['AbstractList']
}

LazyJavaClassifierType@348['Cloneable'] {
    arguments = ArrayList@349[empty]
    classifier = JavaClassImpl@350['Cloneable']
    memberScope = DeserializedClassMemberScope@351
    nullable = 'false': Boolean@343
    typeConstructor = DeserializedClassTypeConstructor@352
}

LazyJavaClassifierType@353['Collection<? extends E>'] {
    arguments = ArrayList@354[1] { TypeProjectionImpl@355 }
    classifier = JavaClassImpl@356['Collection']
    memberScope = SubstitutingScope@357
    nullable = 'false': Boolean@343
    typeConstructor = DeserializedClassTypeConstructor@358
}

LazyJavaClassifierType@359['Collection<? extends E>'] {
    arguments = ArrayList@360[1] { TypeProjectionImpl@361 }
    classifier = JavaClassImpl@362['Collection']
    memberScope = SubstitutingScope@363
    nullable = 'false': Boolean@343
    typeConstructor = DeserializedClassTypeConstructor@358
}

LazyJavaClassifierType@364['Collection<? extends E>'] {
    arguments = ArrayList@365[1] { TypeProjectionImpl@366 }
    classifier = JavaClassImpl@367['Collection']
    memberScope = SubstitutingScope@368
    nullable = 'false': Boolean@343
    typeConstructor = DeserializedClassTypeConstructor@358
}

LazyJavaClassifierType@369['Collection<? extends E>'] {
    arguments = ArrayList@370[1] { TypeProjectionImpl@371 }
    classifier = JavaClassImpl@372['Collection']
    memberScope = SubstitutingScope@373
    nullable = 'false': Boolean@343
    typeConstructor = DeserializedClassTypeConstructor@358
}

LazyJavaClassifierType@374['Collection<? extends E>'] {
    arguments = ArrayList@375[1] { TypeProjectionImpl@376 }
    classifier = JavaClassImpl@377['Collection']
    memberScope = SubstitutingScope@378
    nullable = 'false': Boolean@343
    typeConstructor = DeserializedClassTypeConstructor@358
}

LazyJavaClassifierType@379['Collection<? extends E>'] {
    arguments = ArrayList@380[1] { TypeProjectionImpl@381 }
    classifier = JavaClassImpl@377['Collection']
    memberScope = SubstitutingScope@382
    nullable = 'true': Boolean@383
    typeConstructor = DeserializedClassTypeConstructor@384
}

LazyJavaClassifierType@385['Collection<? extends E>'] {
    arguments = ArrayList@386[1] { TypeProjectionImpl@387 }
    classifier = JavaClassImpl@362['Collection']
    memberScope = SubstitutingScope@388
    nullable = 'true': Boolean@383
    typeConstructor = DeserializedClassTypeConstructor@384
}

LazyJavaClassifierType@389['Collection<? extends E>'] {
    arguments = ArrayList@390[1] { TypeProjectionImpl@391 }
    classifier = JavaClassImpl@356['Collection']
    memberScope = SubstitutingScope@392
    nullable = 'true': Boolean@383
    typeConstructor = DeserializedClassTypeConstructor@384
}

LazyJavaClassifierType@393['Collection<? extends E>'] {
    arguments = ArrayList@394[1] { TypeProjectionImpl@395 }
    classifier = JavaClassImpl@372['Collection']
    memberScope = SubstitutingScope@396
    nullable = 'true': Boolean@383
    typeConstructor = DeserializedClassTypeConstructor@384
}

LazyJavaClassifierType@397['Collection<? extends E>'] {
    arguments = ArrayList@398[1] { TypeProjectionImpl@399 }
    classifier = JavaClassImpl@367['Collection']
    memberScope = SubstitutingScope@400
    nullable = 'true': Boolean@383
    typeConstructor = DeserializedClassTypeConstructor@384
}

LazyJavaClassifierType@401['Collection<?>'] {
    arguments = ArrayList@402[1] { LazyStarProjection@403 }
    classifier = JavaClassImpl@404['Collection']
    memberScope = SubstitutingScope@405
    nullable = 'false': Boolean@343
    typeConstructor = DeserializedClassTypeConstructor@358
}

LazyJavaClassifierType@406['Collection<?>'] {
    arguments = ArrayList@407[1] { LazyStarProjection@408 }
    classifier = JavaClassImpl@409['Collection']
    memberScope = SubstitutingScope@410
    nullable = 'false': Boolean@343
    typeConstructor = DeserializedClassTypeConstructor@358
}

LazyJavaClassifierType@411['Collection<?>'] {
    arguments = ArrayList@412[1] { LazyStarProjection@413 }
    classifier = JavaClassImpl@414['Collection']
    memberScope = SubstitutingScope@415
    nullable = 'false': Boolean@343
    typeConstructor = DeserializedClassTypeConstructor@358
}

LazyJavaClassifierType@416['Collection<?>'] {
    arguments = ArrayList@417[1] { LazyStarProjection@418 }
    classifier = JavaClassImpl@419['Collection']
    memberScope = SubstitutingScope@420
    nullable = 'false': Boolean@343
    typeConstructor = DeserializedClassTypeConstructor@358
}

LazyJavaClassifierType@421['Collection<?>'] {
    arguments = ArrayList@422[1] { LazyStarProjection@423 }
    classifier = JavaClassImpl@424['Collection']
    memberScope = SubstitutingScope@425
    nullable = 'false': Boolean@343
    typeConstructor = DeserializedClassTypeConstructor@358
}

LazyJavaClassifierType@426['Collection<?>'] {
    arguments = ArrayList@427[1] { LazyStarProjection@428 }
    classifier = JavaClassImpl@429['Collection']
    memberScope = SubstitutingScope@430
    nullable = 'false': Boolean@343
    typeConstructor = DeserializedClassTypeConstructor@358
}

LazyJavaClassifierType@431['Collection<?>'] {
    arguments = ArrayList@432[1] { LazyStarProjection@433 }
    classifier = JavaClassImpl@429['Collection']
    memberScope = SubstitutingScope@434
    nullable = 'true': Boolean@383
    typeConstructor = DeserializedClassTypeConstructor@384
}

LazyJavaClassifierType@435['Collection<?>'] {
    arguments = ArrayList@436[1] { LazyStarProjection@437 }
    classifier = JavaClassImpl@409['Collection']
    memberScope = SubstitutingScope@438
    nullable = 'true': Boolean@383
    typeConstructor = DeserializedClassTypeConstructor@384
}

LazyJavaClassifierType@439['Collection<?>'] {
    arguments = ArrayList@440[1] { LazyStarProjection@441 }
    classifier = JavaClassImpl@424['Collection']
    memberScope = SubstitutingScope@442
    nullable = 'true': Boolean@383
    typeConstructor = DeserializedClassTypeConstructor@384
}

LazyJavaClassifierType@443['Collection<?>'] {
    arguments = ArrayList@444[1] { LazyStarProjection@445 }
    classifier = JavaClassImpl@414['Collection']
    memberScope = SubstitutingScope@446
    nullable = 'true': Boolean@383
    typeConstructor = DeserializedClassTypeConstructor@384
}

LazyJavaClassifierType@447['Collection<?>'] {
    arguments = ArrayList@448[1] { LazyStarProjection@449 }
    classifier = JavaClassImpl@419['Collection']
    memberScope = SubstitutingScope@450
    nullable = 'true': Boolean@383
    typeConstructor = DeserializedClassTypeConstructor@384
}

LazyJavaClassifierType@451['Collection<?>'] {
    arguments = ArrayList@452[1] { LazyStarProjection@453 }
    classifier = JavaClassImpl@404['Collection']
    memberScope = SubstitutingScope@454
    nullable = 'true': Boolean@383
    typeConstructor = DeserializedClassTypeConstructor@384
}

LazyJavaClassifierType@320['Collection<E>'] {
    arguments = ArrayList@455[1] { TypeProjectionImpl@456 }
    classifier = JavaClassImpl@457['Collection']
    memberScope = SubstitutingScope@458
    nullable = 'false': Boolean@343
    typeConstructor = DeserializedClassTypeConstructor@358
}

LazyJavaClassifierType@459['E'] {
    arguments = ArrayList@460[empty]
    classifier = JavaTypeParameterImpl@461['E']
    memberScope = LazyScopeAdapter@462
    nullable = 'false': Boolean@343
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@463
}

LazyJavaClassifierType@464['E'] {
    arguments = ArrayList@465[empty]
    classifier = JavaTypeParameterImpl@466['E']
    nullable = 'false': Boolean@343
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@467
}

LazyJavaClassifierType@468['E'] {
    arguments = ArrayList@469[empty]
    classifier = JavaTypeParameterImpl@470['E']
    nullable = 'false': Boolean@343
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@463
}

LazyJavaClassifierType@471['E'] {
    arguments = ArrayList@472[empty]
    classifier = JavaTypeParameterImpl@473['E']
    nullable = 'false': Boolean@343
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@467
}

LazyJavaClassifierType@474['E'] {
    arguments = ArrayList@475[empty]
    classifier = JavaTypeParameterImpl@476['E']
    nullable = 'false': Boolean@343
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@463
}

LazyJavaClassifierType@477['E'] {
    arguments = ArrayList@478[empty]
    classifier = JavaTypeParameterImpl@479['E']
    nullable = 'false': Boolean@343
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@467
}

LazyJavaClassifierType@480['E'] {
    arguments = ArrayList@481[empty]
    classifier = JavaTypeParameterImpl@482['E']
    nullable = 'false': Boolean@343
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@467
}

LazyJavaClassifierType@483['E'] {
    arguments = ArrayList@484[empty]
    classifier = JavaTypeParameterImpl@485['E']
    nullable = 'false': Boolean@343
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@486
}

LazyJavaClassifierType@487['E'] {
    arguments = ArrayList@488[empty]
    classifier = JavaTypeParameterImpl@489['E']
    nullable = 'false': Boolean@343
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@467
}

LazyJavaClassifierType@490['E'] {
    arguments = ArrayList@491[empty]
    classifier = JavaTypeParameterImpl@492['E']
    nullable = 'false': Boolean@343
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@486
}

LazyJavaClassifierType@493['E'] {
    arguments = ArrayList@494[empty]
    classifier = JavaTypeParameterImpl@495['E']
    nullable = 'false': Boolean@343
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@467
}

LazyJavaClassifierType@496['E'] {
    arguments = ArrayList@497[empty]
    classifier = JavaTypeParameterImpl@498['E']
    nullable = 'false': Boolean@343
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@467
}

LazyJavaClassifierType@499['E'] {
    arguments = ArrayList@500[empty]
    classifier = JavaTypeParameterImpl@501['E']
    nullable = 'false': Boolean@343
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@467
}

LazyJavaClassifierType@502['E'] {
    arguments = ArrayList@503[empty]
    classifier = JavaTypeParameterImpl@504['E']
    nullable = 'false': Boolean@343
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@463
}

LazyJavaClassifierType@505['E'] {
    arguments = ArrayList@506[empty]
    classifier = JavaTypeParameterImpl@507['E']
    nullable = 'false': Boolean@343
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@486
}

LazyJavaClassifierType@508['E'] {
    arguments = ArrayList@509[empty]
    classifier = JavaTypeParameterImpl@510['E']
    nullable = 'false': Boolean@343
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@463
}

LazyJavaClassifierType@511['E'] {
    arguments = ArrayList@512[empty]
    classifier = JavaTypeParameterImpl@513['E']
    nullable = 'false': Boolean@343
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@463
}

LazyJavaClassifierType@514['E'] {
    arguments = ArrayList@515[empty]
    classifier = JavaTypeParameterImpl@516['E']
    nullable = 'false': Boolean@343
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@463
}

LazyJavaClassifierType@517['E'] {
    arguments = ArrayList@518[empty]
    classifier = JavaTypeParameterImpl@519['E']
    nullable = 'false': Boolean@343
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@467
}

LazyJavaClassifierType@520['E'] {
    arguments = ArrayList@521[empty]
    classifier = JavaTypeParameterImpl@522['E']
    nullable = 'false': Boolean@343
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@486
}

LazyJavaClassifierType@523['E'] {
    arguments = ArrayList@524[empty]
    classifier = JavaTypeParameterImpl@525['E']
    nullable = 'false': Boolean@343
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@467
}

LazyJavaClassifierType@526['E'] {
    arguments = ArrayList@527[empty]
    classifier = JavaTypeParameterImpl@528['E']
    nullable = 'false': Boolean@343
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@463
}

LazyJavaClassifierType@529['E'] {
    arguments = ArrayList@530[empty]
    classifier = JavaTypeParameterImpl@531['E']
    nullable = 'false': Boolean@343
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@463
}

LazyJavaClassifierType@532['E'] {
    arguments = ArrayList@533[empty]
    classifier = JavaTypeParameterImpl@534['E']
    nullable = 'false': Boolean@343
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@486
}

LazyJavaClassifierType@535['E'] {
    arguments = ArrayList@536[empty]
    classifier = JavaTypeParameterImpl@537['E']
    nullable = 'false': Boolean@343
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@467
}

LazyJavaClassifierType@538['E'] {
    arguments = ArrayList@539[empty]
    classifier = JavaTypeParameterImpl@540['E']
    nullable = 'false': Boolean@343
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@463
}

LazyJavaClassifierType@541['E'] {
    arguments = ArrayList@542[empty]
    classifier = JavaTypeParameterImpl@543['E']
    nullable = 'false': Boolean@343
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@463
}

LazyJavaClassifierType@544['E'] {
    arguments = ArrayList@545[empty]
    classifier = JavaTypeParameterImpl@546['E']
    nullable = 'false': Boolean@343
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@463
}

LazyJavaClassifierType@547['E'] {
    arguments = ArrayList@548[empty]
    classifier = JavaTypeParameterImpl@549['E']
    nullable = 'false': Boolean@343
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@467
}

LazyJavaClassifierType@550['E'] {
    arguments = ArrayList@551[empty]
    classifier = JavaTypeParameterImpl@552['E']
    nullable = 'false': Boolean@343
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@467
}

LazyJavaClassifierType@553['E'] {
    arguments = ArrayList@554[empty]
    classifier = JavaTypeParameterImpl@555['E']
    nullable = 'false': Boolean@343
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@467
}

LazyJavaClassifierType@556['E'] {
    arguments = ArrayList@557[empty]
    classifier = JavaTypeParameterImpl@558['E']
    nullable = 'false': Boolean@343
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@463
}

LazyJavaClassifierType@559['E'] {
    arguments = ArrayList@560[empty]
    classifier = JavaTypeParameterImpl@561['E']
    nullable = 'false': Boolean@343
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@467
}

LazyJavaClassifierType@562['E'] {
    arguments = ArrayList@563[empty]
    classifier = JavaTypeParameterImpl@564['E']
    nullable = 'false': Boolean@343
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@467
}

LazyJavaClassifierType@565['E'] {
    arguments = ArrayList@566[empty]
    classifier = JavaTypeParameterImpl@567['E']
    nullable = 'false': Boolean@343
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@463
}

LazyJavaClassifierType@568['E'] {
    arguments = ArrayList@569[empty]
    classifier = JavaTypeParameterImpl@570['E']
    nullable = 'false': Boolean@343
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@486
}

LazyJavaClassifierType@571['E'] {
    arguments = ArrayList@572[empty]
    classifier = JavaTypeParameterImpl@573['E']
    nullable = 'false': Boolean@343
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@463
}

LazyJavaClassifierType@574['E'] {
    arguments = ArrayList@575[empty]
    classifier = JavaTypeParameterImpl@576['E']
    nullable = 'false': Boolean@343
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@463
}

LazyJavaClassifierType@577['E'] {
    arguments = ArrayList@578[empty]
    classifier = JavaTypeParameterImpl@579['E']
    nullable = 'false': Boolean@343
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@467
}

LazyJavaClassifierType@580['E'] {
    arguments = ArrayList@581[empty]
    classifier = JavaTypeParameterImpl@582['E']
    nullable = 'false': Boolean@343
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@467
}

LazyJavaClassifierType@583['E'] {
    arguments = ArrayList@584[empty]
    classifier = JavaTypeParameterImpl@585['E']
    nullable = 'false': Boolean@343
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@463
}

LazyJavaClassifierType@586['E'] {
    arguments = ArrayList@587[empty]
    classifier = JavaTypeParameterImpl@588['E']
    nullable = 'false': Boolean@343
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@467
}

LazyJavaClassifierType@589['E'] {
    arguments = ArrayList@590[empty]
    classifier = JavaTypeParameterImpl@591['E']
    nullable = 'false': Boolean@343
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@463
}

LazyJavaClassifierType@592['E'] {
    arguments = ArrayList@593[empty]
    classifier = JavaTypeParameterImpl@594['E']
    nullable = 'false': Boolean@343
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@467
}

LazyJavaClassifierType@595['E'] {
    arguments = ArrayList@596[empty]
    classifier = JavaTypeParameterImpl@597['E']
    nullable = 'false': Boolean@343
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@467
}

LazyJavaClassifierType@598['E'] {
    arguments = ArrayList@599[empty]
    classifier = JavaTypeParameterImpl@600['E']
    nullable = 'false': Boolean@343
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@467
}

LazyJavaClassifierType@601['E'] {
    arguments = ArrayList@602[empty]
    classifier = JavaTypeParameterImpl@603['E']
    nullable = 'false': Boolean@343
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@467
}

LazyJavaClassifierType@604['E'] {
    arguments = ArrayList@605[empty]
    classifier = JavaTypeParameterImpl@461['E']
    nullable = 'true': Boolean@383
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@463
}

LazyJavaClassifierType@606['E'] {
    arguments = ArrayList@607[empty]
    classifier = JavaTypeParameterImpl@476['E']
    nullable = 'true': Boolean@383
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@463
}

LazyJavaClassifierType@608['E'] {
    arguments = ArrayList@609[empty]
    classifier = JavaTypeParameterImpl@561['E']
    nullable = 'true': Boolean@383
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@467
}

LazyJavaClassifierType@610['E'] {
    arguments = ArrayList@611[empty]
    classifier = JavaTypeParameterImpl@570['E']
    nullable = 'true': Boolean@383
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@486
}

LazyJavaClassifierType@612['E'] {
    arguments = ArrayList@613[empty]
    classifier = JavaTypeParameterImpl@466['E']
    nullable = 'true': Boolean@383
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@467
}

LazyJavaClassifierType@614['E'] {
    arguments = ArrayList@615[empty]
    classifier = JavaTypeParameterImpl@594['E']
    nullable = 'true': Boolean@383
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@467
}

LazyJavaClassifierType@616['E'] {
    arguments = ArrayList@617[empty]
    classifier = JavaTypeParameterImpl@513['E']
    nullable = 'true': Boolean@383
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@463
}

LazyJavaClassifierType@618['E'] {
    arguments = ArrayList@619[empty]
    classifier = JavaTypeParameterImpl@534['E']
    nullable = 'true': Boolean@383
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@486
}

LazyJavaClassifierType@620['E'] {
    arguments = ArrayList@621[empty]
    classifier = JavaTypeParameterImpl@482['E']
    nullable = 'true': Boolean@383
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@467
}

LazyJavaClassifierType@622['E'] {
    arguments = ArrayList@623[empty]
    classifier = JavaTypeParameterImpl@470['E']
    nullable = 'true': Boolean@383
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@463
}

LazyJavaClassifierType@624['E'] {
    arguments = ArrayList@625[empty]
    classifier = JavaTypeParameterImpl@510['E']
    nullable = 'true': Boolean@383
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@463
}

LazyJavaClassifierType@626['E'] {
    arguments = ArrayList@627[empty]
    classifier = JavaTypeParameterImpl@573['E']
    nullable = 'true': Boolean@383
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@463
}

LazyJavaClassifierType@628['E'] {
    arguments = ArrayList@629[empty]
    classifier = JavaTypeParameterImpl@501['E']
    nullable = 'true': Boolean@383
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@467
}

LazyJavaClassifierType@630['E'] {
    arguments = ArrayList@631[empty]
    classifier = JavaTypeParameterImpl@597['E']
    nullable = 'true': Boolean@383
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@467
}

LazyJavaClassifierType@632['E'] {
    arguments = ArrayList@633[empty]
    classifier = JavaTypeParameterImpl@528['E']
    nullable = 'true': Boolean@383
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@463
}

LazyJavaClassifierType@634['E'] {
    arguments = ArrayList@635[empty]
    classifier = JavaTypeParameterImpl@519['E']
    nullable = 'true': Boolean@383
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@467
}

LazyJavaClassifierType@636['E'] {
    arguments = ArrayList@637[empty]
    classifier = JavaTypeParameterImpl@516['E']
    nullable = 'true': Boolean@383
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@463
}

LazyJavaClassifierType@638['E'] {
    arguments = ArrayList@639[empty]
    classifier = JavaTypeParameterImpl@576['E']
    nullable = 'true': Boolean@383
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@463
}

LazyJavaClassifierType@640['E'] {
    arguments = ArrayList@641[empty]
    classifier = JavaTypeParameterImpl@492['E']
    nullable = 'true': Boolean@383
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@486
}

LazyJavaClassifierType@642['E'] {
    arguments = ArrayList@643[empty]
    classifier = JavaTypeParameterImpl@591['E']
    nullable = 'true': Boolean@383
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@463
}

LazyJavaClassifierType@644['E'] {
    arguments = ArrayList@645[empty]
    classifier = JavaTypeParameterImpl@525['E']
    nullable = 'true': Boolean@383
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@467
}

LazyJavaClassifierType@646['E'] {
    arguments = ArrayList@647[empty]
    classifier = JavaTypeParameterImpl@498['E']
    nullable = 'true': Boolean@383
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@467
}

LazyJavaClassifierType@648['E'] {
    arguments = ArrayList@649[empty]
    classifier = JavaTypeParameterImpl@504['E']
    nullable = 'true': Boolean@383
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@463
}

LazyJavaClassifierType@650['E'] {
    arguments = ArrayList@651[empty]
    classifier = JavaTypeParameterImpl@531['E']
    nullable = 'true': Boolean@383
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@463
}

LazyJavaClassifierType@652['E'] {
    arguments = ArrayList@653[empty]
    classifier = JavaTypeParameterImpl@537['E']
    nullable = 'true': Boolean@383
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@467
}

LazyJavaClassifierType@654['E'] {
    arguments = ArrayList@655[empty]
    classifier = JavaTypeParameterImpl@555['E']
    nullable = 'true': Boolean@383
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@467
}

LazyJavaClassifierType@656['E'] {
    arguments = ArrayList@657[empty]
    classifier = JavaTypeParameterImpl@588['E']
    nullable = 'true': Boolean@383
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@467
}

LazyJavaClassifierType@658['E'] {
    arguments = ArrayList@659[empty]
    classifier = JavaTypeParameterImpl@540['E']
    nullable = 'true': Boolean@383
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@463
}

LazyJavaClassifierType@660['E'] {
    arguments = ArrayList@661[empty]
    classifier = JavaTypeParameterImpl@507['E']
    nullable = 'true': Boolean@383
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@486
}

LazyJavaClassifierType@662['E'] {
    arguments = ArrayList@663[empty]
    classifier = JavaTypeParameterImpl@489['E']
    nullable = 'true': Boolean@383
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@467
}

LazyJavaClassifierType@664['E'] {
    arguments = ArrayList@665[empty]
    classifier = JavaTypeParameterImpl@567['E']
    nullable = 'true': Boolean@383
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@463
}

LazyJavaClassifierType@666['E'] {
    arguments = ArrayList@667[empty]
    classifier = JavaTypeParameterImpl@600['E']
    nullable = 'true': Boolean@383
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@467
}

LazyJavaClassifierType@668['E'] {
    arguments = ArrayList@669[empty]
    classifier = JavaTypeParameterImpl@543['E']
    nullable = 'true': Boolean@383
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@463
}

LazyJavaClassifierType@670['E'] {
    arguments = ArrayList@671[empty]
    classifier = JavaTypeParameterImpl@522['E']
    nullable = 'true': Boolean@383
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@486
}

LazyJavaClassifierType@672['E'] {
    arguments = ArrayList@673[empty]
    classifier = JavaTypeParameterImpl@603['E']
    nullable = 'true': Boolean@383
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@467
}

LazyJavaClassifierType@674['E'] {
    arguments = ArrayList@675[empty]
    classifier = JavaTypeParameterImpl@485['E']
    nullable = 'true': Boolean@383
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@486
}

LazyJavaClassifierType@676['E'] {
    arguments = ArrayList@677[empty]
    classifier = JavaTypeParameterImpl@495['E']
    nullable = 'true': Boolean@383
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@467
}

LazyJavaClassifierType@678['E'] {
    arguments = ArrayList@679[empty]
    classifier = JavaTypeParameterImpl@549['E']
    nullable = 'true': Boolean@383
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@467
}

LazyJavaClassifierType@680['E'] {
    arguments = ArrayList@681[empty]
    classifier = JavaTypeParameterImpl@585['E']
    nullable = 'true': Boolean@383
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@463
}

LazyJavaClassifierType@682['E'] {
    arguments = ArrayList@683[empty]
    classifier = JavaTypeParameterImpl@473['E']
    nullable = 'true': Boolean@383
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@467
}

LazyJavaClassifierType@684['E'] {
    arguments = ArrayList@685[empty]
    classifier = JavaTypeParameterImpl@546['E']
    nullable = 'true': Boolean@383
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@463
}

LazyJavaClassifierType@686['E'] {
    arguments = ArrayList@687[empty]
    classifier = JavaTypeParameterImpl@564['E']
    nullable = 'true': Boolean@383
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@467
}

LazyJavaClassifierType@688['E'] {
    arguments = ArrayList@689[empty]
    classifier = JavaTypeParameterImpl@558['E']
    nullable = 'true': Boolean@383
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@463
}

LazyJavaClassifierType@690['E'] {
    arguments = ArrayList@691[empty]
    classifier = JavaTypeParameterImpl@479['E']
    nullable = 'true': Boolean@383
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@467
}

LazyJavaClassifierType@692['E'] {
    arguments = ArrayList@693[empty]
    classifier = JavaTypeParameterImpl@582['E']
    nullable = 'true': Boolean@383
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@467
}

LazyJavaClassifierType@694['E'] {
    arguments = ArrayList@695[empty]
    classifier = JavaTypeParameterImpl@579['E']
    nullable = 'true': Boolean@383
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@467
}

LazyJavaClassifierType@696['E'] {
    arguments = ArrayList@697[empty]
    classifier = JavaTypeParameterImpl@552['E']
    nullable = 'true': Boolean@383
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@467
}

LazyJavaClassifierType@698['Iterator<E>'] {
    arguments = ArrayList@699[1] { TypeProjectionImpl@700 }
    classifier = JavaClassImpl@701['Iterator']
    memberScope = SubstitutingScope@702
    nullable = 'false': Boolean@343
    typeConstructor = DeserializedClassTypeConstructor@703
}

LazyJavaClassifierType@704['Iterator<E>'] {
    arguments = ArrayList@705[1] { TypeProjectionImpl@706 }
    classifier = JavaClassImpl@707['Iterator']
    memberScope = SubstitutingScope@708
    nullable = 'false': Boolean@343
    typeConstructor = DeserializedClassTypeConstructor@703
}

LazyJavaClassifierType@709['Iterator<E>'] {
    arguments = ArrayList@710[1] { TypeProjectionImpl@711 }
    classifier = JavaClassImpl@712['Iterator']
    memberScope = SubstitutingScope@713
    nullable = 'false': Boolean@343
    typeConstructor = DeserializedClassTypeConstructor@703
}

LazyJavaClassifierType@714['Iterator<E>'] {
    arguments = ArrayList@715[1] { TypeProjectionImpl@716 }
    classifier = JavaClassImpl@701['Iterator']
    memberScope = SubstitutingScope@717
    nullable = 'true': Boolean@383
    typeConstructor = DeserializedClassTypeConstructor@718
}

LazyJavaClassifierType@719['Iterator<E>'] {
    arguments = ArrayList@720[1] { TypeProjectionImpl@721 }
    classifier = JavaClassImpl@712['Iterator']
    memberScope = SubstitutingScope@722
    nullable = 'true': Boolean@383
    typeConstructor = DeserializedClassTypeConstructor@718
}

LazyJavaClassifierType@723['Iterator<E>'] {
    arguments = ArrayList@724[1] { TypeProjectionImpl@725 }
    classifier = JavaClassImpl@707['Iterator']
    memberScope = SubstitutingScope@726
    nullable = 'true': Boolean@383
    typeConstructor = DeserializedClassTypeConstructor@718
}

LazyJavaClassifierType@330['List<E>'] {
    arguments = ArrayList@727[1] { TypeProjectionImpl@728 }
    classifier = JavaClassImpl@729['List']
    memberScope = SubstitutingScope@730
    nullable = 'false': Boolean@343
    typeConstructor = DeserializedClassTypeConstructor@731
}

LazyJavaClassifierType@325['List<E>'] {
    arguments = ArrayList@732[1] { TypeProjectionImpl@733 }
    classifier = JavaClassImpl@734['List']
    memberScope = SubstitutingScope@735
    nullable = 'false': Boolean@343
    typeConstructor = DeserializedClassTypeConstructor@731
}

LazyJavaClassifierType@736['List<E>'] {
    arguments = ArrayList@737[1] { TypeProjectionImpl@738 }
    classifier = JavaClassImpl@739['List']
    memberScope = SubstitutingScope@740
    nullable = 'false': Boolean@343
    typeConstructor = DeserializedClassTypeConstructor@731
}

LazyJavaClassifierType@741['List<E>'] {
    arguments = ArrayList@742[1] { TypeProjectionImpl@743 }
    classifier = JavaClassImpl@744['List']
    memberScope = SubstitutingScope@745
    nullable = 'false': Boolean@343
    typeConstructor = DeserializedClassTypeConstructor@731
}

LazyJavaClassifierType@746['List<E>'] {
    arguments = ArrayList@747[1] { TypeProjectionImpl@748 }
    classifier = JavaClassImpl@744['List']
    memberScope = SubstitutingScope@749
    nullable = 'true': Boolean@383
    typeConstructor = DeserializedClassTypeConstructor@750
}

LazyJavaClassifierType@751['List<E>'] {
    arguments = ArrayList@752[1] { TypeProjectionImpl@753 }
    classifier = JavaClassImpl@739['List']
    memberScope = SubstitutingScope@754
    nullable = 'true': Boolean@383
    typeConstructor = DeserializedClassTypeConstructor@750
}

LazyJavaClassifierType@755['ListIterator<E>'] {
    arguments = ArrayList@756[1] { TypeProjectionImpl@757 }
    classifier = JavaClassImpl@758['ListIterator']
    memberScope = SubstitutingScope@759
    nullable = 'false': Boolean@343
    typeConstructor = DeserializedClassTypeConstructor@760
}

LazyJavaClassifierType@761['ListIterator<E>'] {
    arguments = ArrayList@762[1] { TypeProjectionImpl@763 }
    classifier = JavaClassImpl@764['ListIterator']
    memberScope = SubstitutingScope@765
    nullable = 'false': Boolean@343
    typeConstructor = DeserializedClassTypeConstructor@760
}

LazyJavaClassifierType@766['ListIterator<E>'] {
    arguments = ArrayList@767[1] { TypeProjectionImpl@768 }
    classifier = JavaClassImpl@769['ListIterator']
    memberScope = SubstitutingScope@770
    nullable = 'false': Boolean@343
    typeConstructor = DeserializedClassTypeConstructor@760
}

LazyJavaClassifierType@771['ListIterator<E>'] {
    arguments = ArrayList@772[1] { TypeProjectionImpl@773 }
    classifier = JavaClassImpl@774['ListIterator']
    memberScope = SubstitutingScope@775
    nullable = 'false': Boolean@343
    typeConstructor = DeserializedClassTypeConstructor@760
}

LazyJavaClassifierType@776['ListIterator<E>'] {
    arguments = ArrayList@777[1] { TypeProjectionImpl@778 }
    classifier = JavaClassImpl@758['ListIterator']
    memberScope = SubstitutingScope@779
    nullable = 'true': Boolean@383
    typeConstructor = DeserializedClassTypeConstructor@780
}

LazyJavaClassifierType@781['ListIterator<E>'] {
    arguments = ArrayList@782[1] { TypeProjectionImpl@783 }
    classifier = JavaClassImpl@769['ListIterator']
    memberScope = SubstitutingScope@784
    nullable = 'true': Boolean@383
    typeConstructor = DeserializedClassTypeConstructor@780
}

LazyJavaClassifierType@785['ListIterator<E>'] {
    arguments = ArrayList@786[1] { TypeProjectionImpl@787 }
    classifier = JavaClassImpl@774['ListIterator']
    memberScope = SubstitutingScope@788
    nullable = 'true': Boolean@383
    typeConstructor = DeserializedClassTypeConstructor@780
}

LazyJavaClassifierType@789['ListIterator<E>'] {
    arguments = ArrayList@790[1] { TypeProjectionImpl@791 }
    classifier = JavaClassImpl@764['ListIterator']
    memberScope = SubstitutingScope@792
    nullable = 'true': Boolean@383
    typeConstructor = DeserializedClassTypeConstructor@780
}

LazyJavaClassifierType@793['Object'] {
    arguments = ArrayList@794[empty]
    classifier = JavaClassImpl@795['Object']
    memberScope = DeserializedClassMemberScope@796
    nullable = 'false': Boolean@343
    typeConstructor = DeserializedClassTypeConstructor@797
}

LazyJavaClassifierType@798['Object'] {
    arguments = ArrayList@799[empty]
    classifier = JavaClassImpl@800['Object']
    memberScope = DeserializedClassMemberScope@796
    nullable = 'false': Boolean@343
    typeConstructor = DeserializedClassTypeConstructor@797
}

LazyJavaClassifierType@801['Object'] {
    arguments = ArrayList@802[empty]
    classifier = JavaClassImpl@803['Object']
    memberScope = DeserializedClassMemberScope@796
    nullable = 'false': Boolean@343
    typeConstructor = DeserializedClassTypeConstructor@797
}

LazyJavaClassifierType@804['Object'] {
    arguments = ArrayList@805[empty]
    classifier = JavaClassImpl@806['Object']
    memberScope = DeserializedClassMemberScope@796
    nullable = 'false': Boolean@343
    typeConstructor = DeserializedClassTypeConstructor@797
}

LazyJavaClassifierType@807['Object'] {
    arguments = ArrayList@808[empty]
    classifier = JavaClassImpl@809['Object']
    memberScope = DeserializedClassMemberScope@796
    nullable = 'false': Boolean@343
    typeConstructor = DeserializedClassTypeConstructor@797
}

LazyJavaClassifierType@810['Object'] {
    arguments = ArrayList@811[empty]
    classifier = JavaClassImpl@812['Object']
    memberScope = DeserializedClassMemberScope@796
    nullable = 'false': Boolean@343
    typeConstructor = DeserializedClassTypeConstructor@797
}

LazyJavaClassifierType@813['Object'] {
    arguments = ArrayList@814[empty]
    classifier = JavaClassImpl@815['Object']
    memberScope = DeserializedClassMemberScope@796
    nullable = 'false': Boolean@343
    typeConstructor = DeserializedClassTypeConstructor@797
}

LazyJavaClassifierType@816['Object'] {
    arguments = ArrayList@817[empty]
    classifier = JavaClassImpl@818['Object']
    memberScope = DeserializedClassMemberScope@796
    nullable = 'false': Boolean@343
    typeConstructor = DeserializedClassTypeConstructor@797
}

LazyJavaClassifierType@819['Object'] {
    arguments = ArrayList@820[empty]
    classifier = JavaClassImpl@821['Object']
    memberScope = DeserializedClassMemberScope@796
    nullable = 'false': Boolean@343
    typeConstructor = DeserializedClassTypeConstructor@797
}

LazyJavaClassifierType@822['Object'] {
    arguments = ArrayList@823[empty]
    classifier = JavaClassImpl@824['Object']
    memberScope = DeserializedClassMemberScope@796
    nullable = 'false': Boolean@343
    typeConstructor = DeserializedClassTypeConstructor@797
}

LazyJavaClassifierType@825['Object'] {
    arguments = ArrayList@826[empty]
    classifier = JavaClassImpl@827['Object']
    memberScope = DeserializedClassMemberScope@796
    nullable = 'false': Boolean@343
    typeConstructor = DeserializedClassTypeConstructor@797
}

LazyJavaClassifierType@828['Object'] {
    arguments = ArrayList@829[empty]
    classifier = JavaClassImpl@830['Object']
    memberScope = DeserializedClassMemberScope@796
    nullable = 'false': Boolean@343
    typeConstructor = DeserializedClassTypeConstructor@797
}

LazyJavaClassifierType@831['Object'] {
    arguments = ArrayList@832[empty]
    classifier = JavaClassImpl@833['Object']
    memberScope = DeserializedClassMemberScope@796
    nullable = 'false': Boolean@343
    typeConstructor = DeserializedClassTypeConstructor@797
}

LazyJavaClassifierType@834['Object'] {
    arguments = ArrayList@835[empty]
    classifier = JavaClassImpl@833['Object']
    memberScope = DeserializedClassMemberScope@796
    nullable = 'true': Boolean@383
    typeConstructor = DeserializedClassTypeConstructor@797
}

LazyJavaClassifierType@836['Object'] {
    arguments = ArrayList@837[empty]
    classifier = JavaClassImpl@824['Object']
    memberScope = DeserializedClassMemberScope@796
    nullable = 'true': Boolean@383
    typeConstructor = DeserializedClassTypeConstructor@797
}

LazyJavaClassifierType@838['Object'] {
    arguments = ArrayList@839[empty]
    classifier = JavaClassImpl@803['Object']
    memberScope = DeserializedClassMemberScope@796
    nullable = 'true': Boolean@383
    typeConstructor = DeserializedClassTypeConstructor@797
}

LazyJavaClassifierType@840['Object'] {
    arguments = ArrayList@841[empty]
    classifier = JavaClassImpl@795['Object']
    memberScope = DeserializedClassMemberScope@796
    nullable = 'true': Boolean@383
    typeConstructor = DeserializedClassTypeConstructor@797
}

LazyJavaClassifierType@842['Object'] {
    arguments = ArrayList@843[empty]
    classifier = JavaClassImpl@821['Object']
    memberScope = DeserializedClassMemberScope@796
    nullable = 'true': Boolean@383
    typeConstructor = DeserializedClassTypeConstructor@797
}

LazyJavaClassifierType@844['Object'] {
    arguments = ArrayList@845[empty]
    classifier = JavaClassImpl@800['Object']
    memberScope = DeserializedClassMemberScope@796
    nullable = 'true': Boolean@383
    typeConstructor = DeserializedClassTypeConstructor@797
}

LazyJavaClassifierType@846['Object'] {
    arguments = ArrayList@847[empty]
    classifier = JavaClassImpl@812['Object']
    memberScope = DeserializedClassMemberScope@796
    nullable = 'true': Boolean@383
    typeConstructor = DeserializedClassTypeConstructor@797
}

LazyJavaClassifierType@848['Object'] {
    arguments = ArrayList@849[empty]
    classifier = JavaClassImpl@827['Object']
    memberScope = DeserializedClassMemberScope@796
    nullable = 'true': Boolean@383
    typeConstructor = DeserializedClassTypeConstructor@797
}

LazyJavaClassifierType@850['Object'] {
    arguments = ArrayList@851[empty]
    classifier = JavaClassImpl@809['Object']
    memberScope = DeserializedClassMemberScope@796
    nullable = 'true': Boolean@383
    typeConstructor = DeserializedClassTypeConstructor@797
}

LazyJavaClassifierType@852['Object'] {
    arguments = ArrayList@853[empty]
    classifier = JavaClassImpl@806['Object']
    memberScope = DeserializedClassMemberScope@796
    nullable = 'true': Boolean@383
    typeConstructor = DeserializedClassTypeConstructor@797
}

LazyJavaClassifierType@854['Object'] {
    arguments = ArrayList@855[empty]
    classifier = JavaClassImpl@818['Object']
    memberScope = DeserializedClassMemberScope@796
    nullable = 'true': Boolean@383
    typeConstructor = DeserializedClassTypeConstructor@797
}

LazyJavaClassifierType@856['Object'] {
    arguments = ArrayList@857[empty]
    classifier = JavaClassImpl@830['Object']
    memberScope = DeserializedClassMemberScope@796
    nullable = 'true': Boolean@383
    typeConstructor = DeserializedClassTypeConstructor@797
}

LazyJavaClassifierType@858['Object'] {
    arguments = ArrayList@859[empty]
    classifier = JavaClassImpl@815['Object']
    memberScope = DeserializedClassMemberScope@796
    nullable = 'true': Boolean@383
    typeConstructor = DeserializedClassTypeConstructor@797
}

LazyJavaClassifierType@860['Object'] {
    classifier = JavaClassImpl@861['Object']
    typeConstructor = DeserializedClassTypeConstructor@797
}

LazyJavaClassifierType@862['Object'] {
    classifier = JavaClassImpl@863['Object']
    typeConstructor = DeserializedClassTypeConstructor@797
}

LazyJavaClassifierType@864['Object'] {
    classifier = JavaClassImpl@865['Object']
    typeConstructor = DeserializedClassTypeConstructor@797
}

LazyJavaClassifierType@866['ObjectInputStream'] {
    arguments = ArrayList@867[empty]
    classifier = JavaClassImpl@868['ObjectInputStream']
    memberScope = LazyJavaClassMemberScope@869
    nullable = 'false': Boolean@343
    typeConstructor = LazyJavaClassTypeConstructor@292['ObjectInputStream']
}

LazyJavaClassifierType@870['ObjectInputStream'] {
    arguments = ArrayList@871[empty]
    classifier = JavaClassImpl@868['ObjectInputStream']
    memberScope = LazyJavaClassMemberScope@869
    nullable = 'true': Boolean@383
    typeConstructor = LazyJavaClassTypeConstructor@292['ObjectInputStream']
}

LazyJavaClassifierType@872['ObjectOutputStream'] {
    arguments = ArrayList@873[empty]
    classifier = JavaClassImpl@874['ObjectOutputStream']
    memberScope = LazyJavaClassMemberScope@875
    nullable = 'false': Boolean@343
    typeConstructor = LazyJavaClassTypeConstructor@294['ObjectOutputStream']
}

LazyJavaClassifierType@876['ObjectOutputStream'] {
    arguments = ArrayList@877[empty]
    classifier = JavaClassImpl@874['ObjectOutputStream']
    memberScope = LazyJavaClassMemberScope@875
    nullable = 'true': Boolean@383
    typeConstructor = LazyJavaClassTypeConstructor@294['ObjectOutputStream']
}

LazyJavaClassifierType@331['RandomAccess'] {
    arguments = ArrayList@878[empty]
    classifier = JavaClassImpl@879['RandomAccess']
    memberScope = LazyJavaClassMemberScope@297
    nullable = 'false': Boolean@343
    typeConstructor = LazyJavaClassTypeConstructor@305['RandomAccess']
}

LazyJavaClassifierType@880['Serializable'] {
    arguments = ArrayList@881[empty]
    classifier = JavaClassImpl@882['Serializable']
    memberScope = LazyJavaClassMemberScope@308
    nullable = 'false': Boolean@343
    typeConstructor = LazyJavaClassTypeConstructor@316['Serializable']
}

LazyJavaClassifierType@883['String'] {
    arguments = ArrayList@884[empty]
    classifier = JavaClassImpl@885['String']
    memberScope = DeserializedClassMemberScope@886
    nullable = 'false': Boolean@343
    typeConstructor = DeserializedClassTypeConstructor@887
}

LazyJavaClassifierType@888['String'] {
    arguments = ArrayList@889[empty]
    classifier = JavaClassImpl@890['String']
    memberScope = DeserializedClassMemberScope@886
    nullable = 'false': Boolean@343
    typeConstructor = DeserializedClassTypeConstructor@887
}

LazyJavaClassifierType@891['String'] {
    arguments = ArrayList@892[empty]
    classifier = JavaClassImpl@893['String']
    memberScope = DeserializedClassMemberScope@886
    nullable = 'false': Boolean@343
    typeConstructor = DeserializedClassTypeConstructor@887
}

LazyJavaClassifierType@894['String'] {
    arguments = ArrayList@895[empty]
    classifier = JavaClassImpl@885['String']
    memberScope = DeserializedClassMemberScope@886
    nullable = 'true': Boolean@383
    typeConstructor = DeserializedClassTypeConstructor@887
}

LazyJavaClassifierType@896['String'] {
    arguments = ArrayList@897[empty]
    classifier = JavaClassImpl@890['String']
    memberScope = DeserializedClassMemberScope@886
    nullable = 'true': Boolean@383
    typeConstructor = DeserializedClassTypeConstructor@887
}

LazyJavaClassifierType@898['String'] {
    arguments = ArrayList@899[empty]
    classifier = JavaClassImpl@893['String']
    memberScope = DeserializedClassMemberScope@886
    nullable = 'true': Boolean@383
    typeConstructor = DeserializedClassTypeConstructor@887
}

LazyJavaClassifierType@900['T'] {
    arguments = ArrayList@901[empty]
    classifier = JavaTypeParameterImpl@902['T']
    nullable = 'false': Boolean@343
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@903
}

LazyJavaClassifierType@904['T'] {
    arguments = ArrayList@905[empty]
    classifier = JavaTypeParameterImpl@906['T']
    nullable = 'false': Boolean@343
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@903
}

LazyJavaClassifierType@907['T'] {
    arguments = ArrayList@908[empty]
    classifier = JavaTypeParameterImpl@909['T']
    nullable = 'false': Boolean@343
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@910
}

LazyJavaClassifierType@911['T'] {
    arguments = ArrayList@912[empty]
    classifier = JavaTypeParameterImpl@913['T']
    nullable = 'false': Boolean@343
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@910
}

LazyJavaClassifierType@914['T'] {
    arguments = ArrayList@915[empty]
    classifier = JavaTypeParameterImpl@906['T']
    nullable = 'true': Boolean@383
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@903
}

LazyJavaClassifierType@916['T'] {
    arguments = ArrayList@917[empty]
    classifier = JavaTypeParameterImpl@902['T']
    nullable = 'true': Boolean@383
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@903
}

LazyJavaClassifierType@918['T'] {
    arguments = ArrayList@919[empty]
    classifier = JavaTypeParameterImpl@913['T']
    nullable = 'true': Boolean@383
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@910
}

LazyJavaClassifierType@920['T'] {
    arguments = ArrayList@921[empty]
    classifier = JavaTypeParameterImpl@909['T']
    nullable = 'true': Boolean@383
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@910
}

LazyJavaPackageFragmentProvider@922 {
    packageFragments('<root>': FqName@923) = LazyJavaPackageFragment@924['<root>']
    packageFragments('Bar': FqName@925) = null
    packageFragments('Barr': FqName@926) = null
    packageFragments('Foo1': FqName@927) = null
    packageFragments('Int': FqName@928) = null
    packageFragments('java': FqName@929) = LazyJavaPackageFragment@930['java']
    packageFragments('java.io': FqName@931) = LazyJavaPackageFragment@932['io']
    packageFragments('java.lang': FqName@933) = LazyJavaPackageFragment@934['lang']
    packageFragments('java.lang.Bar': FqName@935) = null
    packageFragments('java.lang.Int': FqName@936) = null
    packageFragments('java.util': FqName@937) = LazyJavaPackageFragment@938['util']
    packageFragments('java.util.ArrayList': FqName@939) = null
    packageFragments('kotlin': FqName@940) = null
    packageFragments('kotlin.Bar': FqName@941) = null
    packageFragments('kotlin.Int': FqName@942) = null
    packageFragments('kotlin.io': FqName@943) = null
    packageFragments('kotlin.jvm': FqName@944) = null
    topLevelClasses(JavaClassImpl@341['AbstractCollection']) = LazyJavaClassDescriptor@2['AbstractCollection']
    topLevelClasses(JavaClassImpl@346['AbstractList']) = LazyJavaClassDescriptor@86['AbstractList']
    topLevelClasses(JavaClassImpl@945['ArrayList']) = LazyJavaClassDescriptor@163['ArrayList']
    topLevelClasses(JavaClassImpl@868['ObjectInputStream']) = LazyJavaClassDescriptor@291['ObjectInputStream']
    topLevelClasses(JavaClassImpl@874['ObjectOutputStream']) = LazyJavaClassDescriptor@293['ObjectOutputStream']
    topLevelClasses(JavaClassImpl@879['RandomAccess']) = LazyJavaClassDescriptor@295['RandomAccess']
    topLevelClasses(JavaClassImpl@882['Serializable']) = LazyJavaClassDescriptor@306['Serializable']
}

LazyJavaPackageFragment@924['<root>'] {
    classes('Int': Name@946) = null // through LazyPackageFragmentScopeForJavaPackage@947
    classes('java': Name@948) = null // through LazyPackageFragmentScopeForJavaPackage@947
}

LazyJavaPackageFragment@930['java'] {
    classes('lang': Name@949) = null // through LazyPackageFragmentScopeForJavaPackage@950
    classes('util': Name@951) = null // through LazyPackageFragmentScopeForJavaPackage@950
    deserializedPackageScope = Empty@952 // through LazyPackageFragmentScopeForJavaPackage@950
    functions('lang': Name@953) = EmptyList@5[empty] // through LazyPackageFragmentScopeForJavaPackage@950
    memberIndex = computeMemberIndex$1@954 // through LazyPackageFragmentScopeForJavaPackage@950
}

LazyJavaPackageFragment@934['lang'] {
    classes('java': Name@948) = null // through LazyPackageFragmentScopeForJavaPackage@955
}

LazyJavaPackageFragment@938['util'] {
    classes('ArrayList': Name@956) = LazyJavaClassDescriptor@163['ArrayList'] // through LazyPackageFragmentScopeForJavaPackage@957
}

LazyJavaTypeParameterDescriptor@318['E'] {
    defaultType = JetTypeImpl@958['E']
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@486
    upperBounds = LinkedHashSet@959[1] { NullableType@960 }
    upperBoundsAsType = NullableType@960
}

LazyJavaTypeParameterDescriptor@327['E'] {
    defaultType = JetTypeImpl@961['E']
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@467
    upperBounds = LinkedHashSet@962[1] { NullableType@963 }
    upperBoundsAsType = NullableType@963
}

LazyJavaTypeParameterDescriptor@322['E'] {
    defaultType = JetTypeImpl@964['E']
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@463
    upperBounds = LinkedHashSet@965[1] { NullableType@966 }
    upperBoundsAsType = NullableType@966
}

LazyJavaTypeParameterDescriptor@967['T'] {
    defaultType = JetTypeImpl@968['T']
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@903
    upperBounds = LinkedHashSet@969[1] { NullableType@970 }
    upperBoundsAsType = NullableType@970
}

LazyJavaTypeParameterDescriptor@971['T'] {
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@910
    upperBounds = LinkedHashSet@972[1] { NullableType@973 }
    upperBoundsAsType = NullableType@973
}

LazyJavaTypeParameterResolver@974 {
    resolve(JavaTypeParameterImpl@975['E']) = LazyJavaTypeParameterDescriptor@327['E']
}

LazyJavaTypeParameterResolver@976 {
    resolve(JavaTypeParameterImpl@977['E']) = LazyJavaTypeParameterDescriptor@322['E']
}

LazyJavaTypeParameterResolver@978 {
    resolve(JavaTypeParameterImpl@979['E']) = LazyJavaTypeParameterDescriptor@318['E']
}

LazyJavaTypeParameterResolver@980 {
    resolve(JavaTypeParameterImpl@570['E']) = null
}

LazyJavaTypeParameterResolver@981 {
    resolve(JavaTypeParameterImpl@549['E']) = null
}

LazyJavaTypeParameterResolver@982 {
    resolve(JavaTypeParameterImpl@561['E']) = null
}

LazyJavaTypeParameterResolver@983 {
    resolve(JavaTypeParameterImpl@552['E']) = null
}

LazyJavaTypeParameterResolver@984 {
    resolve(JavaTypeParameterImpl@516['E']) = null
}

LazyJavaTypeParameterResolver@985 {
    resolve(JavaTypeParameterImpl@582['E']) = null
}

LazyJavaTypeParameterResolver@986 {
    resolve(JavaTypeParameterImpl@546['E']) = null
}

LazyJavaTypeParameterResolver@987 {
    resolve(JavaTypeParameterImpl@473['E']) = null
}

LazyJavaTypeParameterResolver@988 {
    resolve(JavaTypeParameterImpl@555['E']) = null
}

LazyJavaTypeParameterResolver@989 {
    resolve(JavaTypeParameterImpl@576['E']) = null
}

LazyJavaTypeParameterResolver@990 {
    resolve(JavaTypeParameterImpl@543['E']) = null
}

LazyJavaTypeParameterResolver@991 {
    resolve(JavaTypeParameterImpl@528['E']) = null
}

LazyJavaTypeParameterResolver@992 {
    resolve(JavaTypeParameterImpl@522['E']) = null
}

LazyJavaTypeParameterResolver@993 {
    resolve(JavaTypeParameterImpl@485['E']) = null
}

LazyJavaTypeParameterResolver@994 {
    resolve(JavaTypeParameterImpl@495['E']) = null
}

LazyJavaTypeParameterResolver@995 {
    resolve(JavaTypeParameterImpl@476['E']) = null
}

LazyJavaTypeParameterResolver@996 {
    resolve(JavaTypeParameterImpl@482['E']) = null
}

LazyJavaTypeParameterResolver@997 {
    resolve(JavaTypeParameterImpl@591['E']) = null
}

LazyJavaTypeParameterResolver@998 {
    resolve(JavaTypeParameterImpl@597['E']) = null
}

LazyJavaTypeParameterResolver@999 {
    resolve(JavaTypeParameterImpl@567['E']) = null
}

LazyJavaTypeParameterResolver@1000 {
    resolve(JavaTypeParameterImpl@558['E']) = null
}

LazyJavaTypeParameterResolver@1001 {
    resolve(JavaTypeParameterImpl@564['E']) = null
}

LazyJavaTypeParameterResolver@1002 {
    resolve(JavaTypeParameterImpl@588['E']) = null
}

LazyJavaTypeParameterResolver@1003 {
    resolve(JavaTypeParameterImpl@540['E']) = null
}

LazyJavaTypeParameterResolver@1004 {
    resolve(JavaTypeParameterImpl@525['E']) = null
}

LazyJavaTypeParameterResolver@1005 {
    resolve(JavaTypeParameterImpl@1006['T']) = LazyJavaTypeParameterDescriptor@971['T']
}

LazyJavaTypeParameterResolver@1007 {
    resolve(JavaTypeParameterImpl@1008['T']) = LazyJavaTypeParameterDescriptor@967['T']
}

ResolutionTaskHolder@1009 {
    <name not found> = ArrayList@1010[1] { ResolutionCandidate@1011 }
    <name not found> = ArrayList@1012[1] { ResolutionCandidate@1011 }
}

ResolutionTaskHolder@1013 {
    <name not found> = ArrayList@1014[3] { ResolutionCandidate@1015, ResolutionCandidate@1016, ResolutionCandidate@1017 }
    <name not found> = ArrayList@1018[3] { ResolutionCandidate@1015, ResolutionCandidate@1016, ResolutionCandidate@1017 }
}
