package

internal final class Delegate</*0*/ T> {
    public constructor Delegate</*0*/ T>()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    internal final fun get(/*0*/ t: kotlin.Any, /*1*/ p: kotlin.PropertyMetadata): T
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    internal final fun set(/*0*/ t: kotlin.Any, /*1*/ p: kotlin.PropertyMetadata, /*2*/ value: T): kotlin.Unit
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

internal trait In</*0*/ in T> {
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

internal trait Inv</*0*/ T> {
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

internal trait Out</*0*/ out T> {
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

internal abstract class Test1</*0*/ in I, /*1*/ out O, /*2*/ P> {
    public constructor Test1</*0*/ in I, /*1*/ out O, /*2*/ P>()
    internal final val neOk1: I
    internal final val neOk2: In<O>
    internal final val neOk3: In<In<I>>
    internal final val neOk4: Inv<I>
    internal final val neOk5: Inv<O>
    internal final var neOk6: O
    internal final var neOk7: In<I>
    internal final var neOk8: In<In<O>>
    internal final var neOk9: Out<O>
    internal final val ok1: O
    internal final val ok2: In<I>
    internal final val ok3: In<In<O>>
    internal final val ok4: Inv<P>
    internal final val ok5: P
    internal final val ok6: Out<O>
    internal final var ok7: P
    internal final var ok8: Out<In<P>>
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}