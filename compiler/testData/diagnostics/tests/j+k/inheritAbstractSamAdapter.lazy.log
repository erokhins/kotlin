LazyJavaClassDescriptor@0['A'] {
    defaultType = JetTypeImpl@1['A']
    functions('bar': Name@2) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('clone': Name@5) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('equals': Name@6) = ArrayList@7[1] { DeserializedSimpleFunctionDescriptor@8['equals'] } // through LazyJavaClassMemberScope@4
    functions('finalize': Name@9) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('foo': Name@10) = ArrayList@11[2] { JavaMethodDescriptor@12['foo'], SamAdapterFunctionDescriptor@13['foo'] } // through LazyJavaClassMemberScope@4
    functions('getClass': Name@14) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('hashCode': Name@15) = ArrayList@16[1] { DeserializedSimpleFunctionDescriptor@17['hashCode'] } // through LazyJavaClassMemberScope@4
    functions('notify': Name@18) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('notifyAll': Name@19) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('toString': Name@20) = ArrayList@21[1] { DeserializedSimpleFunctionDescriptor@22['toString'] } // through LazyJavaClassMemberScope@4
    functions('wait': Name@23) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    memberIndex = computeMemberIndex$1@24 // through LazyJavaClassMemberScope@4
    thisAsReceiverParameter = LazyClassReceiverParameterDescriptor@25['<this>']
    typeConstructor = LazyJavaClassTypeConstructor@26['A']
}

LazyJavaClassDescriptor@27['B'] {
    allDescriptors = ArrayList@28[7] { DeserializedSimpleFunctionDescriptor@29['hashCode'], JavaMethodDescriptor@30['foo'], JavaMethodDescriptor@31['foo'], ... } // through LazyJavaClassMemberScope@32
    constructors = stdlib_emptyListClass@33[empty] // through LazyJavaClassMemberScope@32
    defaultType = JetTypeImpl@34['B']
    enumEntryIndex = LinkedHashMap@35 // through LazyJavaClassMemberScope@32
    functions('bar': Name@36) = ArrayList@37[2] { JavaMethodDescriptor@38['bar'], SamAdapterFunctionDescriptor@39['bar'] } // through LazyJavaClassMemberScope@32
    functions('clone': Name@5) = EmptyList@3[empty] // through LazyJavaClassMemberScope@32
    functions('equals': Name@6) = ArrayList@40[1] { DeserializedSimpleFunctionDescriptor@41['equals'] } // through LazyJavaClassMemberScope@32
    functions('finalize': Name@9) = EmptyList@3[empty] // through LazyJavaClassMemberScope@32
    functions('foo': Name@10) = ArrayList@42[2] { JavaMethodDescriptor@30['foo'], JavaMethodDescriptor@31['foo'] } // through LazyJavaClassMemberScope@32
    functions('getClass': Name@14) = EmptyList@3[empty] // through LazyJavaClassMemberScope@32
    functions('hashCode': Name@15) = ArrayList@43[1] { DeserializedSimpleFunctionDescriptor@29['hashCode'] } // through LazyJavaClassMemberScope@32
    functions('notify': Name@18) = EmptyList@3[empty] // through LazyJavaClassMemberScope@32
    functions('notifyAll': Name@19) = EmptyList@3[empty] // through LazyJavaClassMemberScope@32
    functions('toString': Name@20) = ArrayList@44[1] { DeserializedSimpleFunctionDescriptor@45['toString'] } // through LazyJavaClassMemberScope@32
    functions('wait': Name@23) = EmptyList@3[empty] // through LazyJavaClassMemberScope@32
    memberIndex = computeMemberIndex$1@46 // through LazyJavaClassMemberScope@32
    nestedClassIndex = LinkedHashMap@47 // through LazyJavaClassMemberScope@32
    thisAsReceiverParameter = LazyClassReceiverParameterDescriptor@48['<this>']
    typeConstructor = LazyJavaClassTypeConstructor@49['B']
}

LazyJavaClassDescriptor@50['Runnable'] {
    functionTypeForSamInterface = JetTypeImpl@51['Function0<1>']
    thisAsReceiverParameter = LazyClassReceiverParameterDescriptor@52['<this>']
    typeConstructor = LazyJavaClassTypeConstructor@53['Runnable']
}

LazyJavaClassTypeConstructor@26['A'] {
    parameters = ArrayList@54[empty]
    supertypes = ArrayList@55[1] { JetTypeImpl@56['Any'] }
}

LazyJavaClassTypeConstructor@49['B'] {
    parameters = ArrayList@57[empty]
    supertypes = ArrayList@58[1] { LazyJavaClassifierType@59['A'] }
}

LazyJavaClassTypeConstructor@53['Runnable'] {
    parameters = ArrayList@60[empty]
    supertypes = ArrayList@61[1] { JetTypeImpl@56['Any'] }
}

LazyJavaClassifierType@59['A'] {
    arguments = ArrayList@62[empty]
    classifier = JavaClassImpl@63['A']
    memberScope = LazyJavaClassMemberScope@4
    nullable = 'false': Boolean@64
    typeConstructor = LazyJavaClassTypeConstructor@26['A']
}

LazyJavaClassifierType@65['Object'] {
    classifier = JavaClassImpl@66['Object']
    typeConstructor = DeserializedClassTypeConstructor@67
}

LazyJavaClassifierType@68['Object'] {
    classifier = JavaClassImpl@69['Object']
    typeConstructor = DeserializedClassTypeConstructor@67
}

LazyJavaClassifierType@70['Runnable'] {
    arguments = ArrayList@71[empty]
    classifier = JavaClassImpl@72['Runnable']
    nullable = 'false': Boolean@64
    typeConstructor = LazyJavaClassTypeConstructor@53['Runnable']
}

LazyJavaClassifierType@73['Runnable'] {
    arguments = ArrayList@74[empty]
    classifier = JavaClassImpl@75['Runnable']
    nullable = 'false': Boolean@64
    typeConstructor = LazyJavaClassTypeConstructor@53['Runnable']
}

LazyJavaClassifierType@76['Runnable'] {
    arguments = ArrayList@77[empty]
    classifier = JavaClassImpl@72['Runnable']
    nullable = 'true': Boolean@78
    typeConstructor = LazyJavaClassTypeConstructor@53['Runnable']
}

LazyJavaClassifierType@79['Runnable'] {
    arguments = ArrayList@80[empty]
    classifier = JavaClassImpl@75['Runnable']
    nullable = 'true': Boolean@78
    typeConstructor = LazyJavaClassTypeConstructor@53['Runnable']
}

LazyJavaPackageFragmentProvider@81 {
    packageFragments('<root>': FqName@82) = LazyJavaPackageFragment@83['<root>']
    packageFragments('B': FqName@84) = null
    packageFragments('C': FqName@85) = null
    packageFragments('Runnable': FqName@86) = null
    packageFragments('java': FqName@87) = LazyJavaPackageFragment@88['java']
    packageFragments('java.lang': FqName@89) = LazyJavaPackageFragment@90['lang']
    packageFragments('java.lang.B': FqName@91) = null
    packageFragments('java.lang.Runnable': FqName@92) = null
    packageFragments('kotlin': FqName@93) = null
    packageFragments('kotlin.B': FqName@94) = null
    packageFragments('kotlin.Runnable': FqName@95) = null
    packageFragments('kotlin.io': FqName@96) = null
    packageFragments('kotlin.jvm': FqName@97) = null
    topLevelClasses(JavaClassImpl@63['A']) = LazyJavaClassDescriptor@0['A']
    topLevelClasses(JavaClassImpl@98['B']) = LazyJavaClassDescriptor@27['B']
    topLevelClasses(JavaClassImpl@99['Runnable']) = LazyJavaClassDescriptor@50['Runnable']
}

LazyJavaPackageFragment@83['<root>'] {
    classes('B': Name@100) = LazyJavaClassDescriptor@27['B'] // through LazyPackageFragmentScopeForJavaPackage@101
    classes('Runnable': Name@102) = null // through LazyPackageFragmentScopeForJavaPackage@101
}

LazyJavaPackageFragment@88['java'] {
    classes('lang': Name@103) = null // through LazyPackageFragmentScopeForJavaPackage@104
    deserializedPackageScope = Empty@105 // through LazyPackageFragmentScopeForJavaPackage@104
    functions('lang': Name@106) = EmptyList@3[empty] // through LazyPackageFragmentScopeForJavaPackage@104
    memberIndex = computeMemberIndex$1@107 // through LazyPackageFragmentScopeForJavaPackage@104
}

LazyJavaPackageFragment@90['lang'] {
    classes('Runnable': Name@102) = LazyJavaClassDescriptor@50['Runnable'] // through LazyPackageFragmentScopeForJavaPackage@108
}
