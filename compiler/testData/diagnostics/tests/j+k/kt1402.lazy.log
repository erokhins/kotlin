DescriptorResolver@0 {
    <name not found> = JetTypeImpl@1['Inner']
}

LazyJavaClassDescriptor@2['Inner'] {
    constructors = ArrayList@3[1] { JavaConstructorDescriptor@4['<init>'] } // through LazyJavaClassMemberScope@5
    defaultType = JetTypeImpl@6['Inner']
    functionTypeForSamInterface = null
    typeConstructor = LazyJavaClassTypeConstructor@7['Inner']
}

LazyJavaClassDescriptor@8['M'] {
    defaultType = JetTypeImpl@9['M']
    functionTypeForSamInterface = null
    functions('Inner': Name@10) = EmptyList@11[empty] // through LazyJavaClassMemberScope@12
    functions('Inner': Name@13) = EmptyList@11[empty] // through LazyJavaStaticClassScope@14
    memberIndex = computeMemberIndex$1@15 // through LazyJavaClassMemberScope@12
    memberIndex = computeMemberIndex$1@16 // through LazyJavaStaticClassScope@14
    nestedClassIndex = LinkedHashMap@17 // through LazyJavaClassMemberScope@12
    nestedClasses('Inner': Name@18) = LazyJavaClassDescriptor@2['Inner'] // through LazyJavaClassMemberScope@12
    properties('Inner': Name@10) = EmptyList@11[empty] // through LazyJavaClassMemberScope@12
    properties('Inner': Name@13) = EmptyList@11[empty] // through LazyJavaStaticClassScope@14
    typeConstructor = LazyJavaClassTypeConstructor@19['M']
}

LazyJavaClassTypeConstructor@7['Inner'] {
    parameters = ArrayList@20[empty]
}

LazyJavaClassTypeConstructor@19['M'] {
    parameters = ArrayList@21[empty]
    supertypes = ArrayList@22[1] { JetTypeImpl@23['Any'] }
}

LazyJavaClassifierType@24['Object'] {
    classifier = JavaClassImpl@25['Object']
    typeConstructor = DeserializedClassTypeConstructor@26
}

LazyJavaPackageFragmentProvider@27 {
    packageFragments('<root>': FqName@28) = LazyJavaPackageFragment@29['<root>']
    packageFragments('Inner': FqName@30) = null
    packageFragments('a': FqName@31) = LazyJavaPackageFragment@32['a']
    packageFragments('a.M': FqName@33) = null
    packageFragments('b': FqName@34) = null
    packageFragments('b.Inner': FqName@35) = null
    packageFragments('java': FqName@36) = LazyJavaPackageFragment@37['java']
    packageFragments('java.lang': FqName@38) = LazyJavaPackageFragment@39['lang']
    packageFragments('java.lang.Inner': FqName@40) = null
    packageFragments('kotlin': FqName@41) = null
    packageFragments('kotlin.Inner': FqName@42) = null
    packageFragments('kotlin.io': FqName@43) = null
    packageFragments('kotlin.jvm': FqName@44) = null
    topLevelClasses(JavaClassImpl@45['M']) = LazyJavaClassDescriptor@8['M']
}

LazyJavaPackageFragment@32['a'] {
    classes('M': Name@46) = LazyJavaClassDescriptor@8['M'] // through LazyPackageFragmentScopeForJavaPackage@47
    deserializedPackageScope = Empty@48 // through LazyPackageFragmentScopeForJavaPackage@47
    functions('M': Name@49) = EmptyList@11[empty] // through LazyPackageFragmentScopeForJavaPackage@47
    memberIndex = computeMemberIndex$1@50 // through LazyPackageFragmentScopeForJavaPackage@47
}

LazyJavaPackageFragment@37['java'] {
    classes('lang': Name@51) = null // through LazyPackageFragmentScopeForJavaPackage@52
    deserializedPackageScope = Empty@48 // through LazyPackageFragmentScopeForJavaPackage@52
    functions('lang': Name@53) = EmptyList@11[empty] // through LazyPackageFragmentScopeForJavaPackage@52
    memberIndex = computeMemberIndex$1@54 // through LazyPackageFragmentScopeForJavaPackage@52
}

LazyJavaPackageFragment@39['lang'] {
    classes('Inner': Name@55) = null // through LazyPackageFragmentScopeForJavaPackage@56
    classes('doSmth': Name@57) = null // through LazyPackageFragmentScopeForJavaPackage@56
    deserializedPackageScope = Empty@48 // through LazyPackageFragmentScopeForJavaPackage@56
    functions('Inner': Name@55) = EmptyList@11[empty] // through LazyPackageFragmentScopeForJavaPackage@56
    functions('doSmth': Name@57) = EmptyList@11[empty] // through LazyPackageFragmentScopeForJavaPackage@56
    memberIndex = computeMemberIndex$1@58 // through LazyPackageFragmentScopeForJavaPackage@56
}

ResolutionTaskHolder@59 {
    <name not found> = ArrayList@60[1] { ResolutionCandidate@61 }
    <name not found> = ArrayList@62[1] { ResolutionCandidate@61 }
    <name not found> = EmptyList@11[empty]
    <name not found> = EmptyList@11[empty]
    <name not found> = EmptyList@11[empty]
    <name not found> = EmptyList@11[empty]
}

ResolutionTaskHolder@63 {
    <name not found> = ArrayList@64[1] { ResolutionCandidate@65 }
    <name not found> = ArrayList@66[1] { ResolutionCandidate@65 }
    <name not found> = EmptyList@11[empty]
    <name not found> = EmptyList@11[empty]
    <name not found> = EmptyList@11[empty]
    <name not found> = EmptyList@11[empty]
}

ResolutionTaskHolder@67 {
    <name not found> = ArrayList@68[1] { ResolutionCandidate@69 }
    <name not found> = ArrayList@70[1] { ResolutionCandidate@69 }
}
