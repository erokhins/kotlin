LazyJavaClassDescriptor@0['AbstractCollection'] {
    defaultType = JetTypeImpl@1['AbstractCollection<1>']
    functions('Itr': Name@2) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('ListItr': Name@5) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('SubList': Name@6) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('add': Name@7) = ArrayList@8[1] { JavaMethodDescriptor@9['add'] } // through LazyJavaClassMemberScope@4
    functions('addAll': Name@10) = ArrayList@11[1] { JavaMethodDescriptor@12['addAll'] } // through LazyJavaClassMemberScope@4
    functions('batchRemove': Name@13) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('clear': Name@14) = ArrayList@15[1] { JavaMethodDescriptor@16['clear'] } // through LazyJavaClassMemberScope@4
    functions('clone': Name@17) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('contains': Name@18) = ArrayList@19[1] { JavaMethodDescriptor@20['contains'] } // through LazyJavaClassMemberScope@4
    functions('containsAll': Name@21) = ArrayList@22[1] { JavaMethodDescriptor@23['containsAll'] } // through LazyJavaClassMemberScope@4
    functions('elementData': Name@24) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('ensureCapacity': Name@25) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('ensureCapacityInternal': Name@26) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('equals': Name@27) = ArrayList@28[1] { DeserializedSimpleFunctionDescriptor@29['equals'] } // through LazyJavaClassMemberScope@4
    functions('fastRemove': Name@30) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('finalize': Name@31) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('get': Name@32) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('getClass': Name@33) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('grow': Name@34) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('hashCode': Name@35) = ArrayList@36[1] { DeserializedSimpleFunctionDescriptor@37['hashCode'] } // through LazyJavaClassMemberScope@4
    functions('indexOf': Name@38) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('isEmpty': Name@39) = ArrayList@40[1] { JavaMethodDescriptor@41['isEmpty'] } // through LazyJavaClassMemberScope@4
    functions('iterator': Name@42) = ArrayList@43[1] { JavaMethodDescriptor@44['iterator'] } // through LazyJavaClassMemberScope@4
    functions('lastIndexOf': Name@45) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('listIterator': Name@46) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('notify': Name@47) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('notifyAll': Name@48) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('outOfBoundsMsg': Name@49) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('rangeCheck': Name@50) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('rangeCheckForAdd': Name@51) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('readObject': Name@52) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('remove': Name@53) = ArrayList@54[1] { JavaMethodDescriptor@55['remove'] } // through LazyJavaClassMemberScope@4
    functions('removeAll': Name@56) = ArrayList@57[1] { JavaMethodDescriptor@58['removeAll'] } // through LazyJavaClassMemberScope@4
    functions('removeRange': Name@59) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('retainAll': Name@60) = ArrayList@61[1] { JavaMethodDescriptor@62['retainAll'] } // through LazyJavaClassMemberScope@4
    functions('set': Name@63) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('size': Name@64) = ArrayList@65[1] { JavaMethodDescriptor@66['size'] } // through LazyJavaClassMemberScope@4
    functions('subList': Name@67) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('toArray': Name@68) = ArrayList@69[2] { JavaMethodDescriptor@70['toArray'], JavaMethodDescriptor@71['toArray'] } // through LazyJavaClassMemberScope@4
    functions('toString': Name@72) = ArrayList@73[1] { JavaMethodDescriptor@74['toString'] } // through LazyJavaClassMemberScope@4
    functions('trimToSize': Name@75) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('wait': Name@76) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    functions('writeObject': Name@77) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    memberIndex = computeMemberIndex$1@78 // through LazyJavaClassMemberScope@4
    properties('elementData': Name@79) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    properties('modCount': Name@80) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    properties('size': Name@81) = EmptyList@3[empty] // through LazyJavaClassMemberScope@4
    thisAsReceiverParameter = LazyClassReceiverParameterDescriptor@82['<this>']
    typeConstructor = LazyJavaClassTypeConstructor@83['AbstractCollection']
}

LazyJavaClassDescriptor@84['AbstractList'] {
    defaultType = JetTypeImpl@85['AbstractList<1>']
    functions('Itr': Name@2) = EmptyList@3[empty] // through LazyJavaClassMemberScope@86
    functions('ListItr': Name@5) = EmptyList@3[empty] // through LazyJavaClassMemberScope@86
    functions('SubList': Name@6) = EmptyList@3[empty] // through LazyJavaClassMemberScope@86
    functions('add': Name@87) = ArrayList@88[2] { JavaMethodDescriptor@89['add'], JavaMethodDescriptor@90['add'] } // through LazyJavaClassMemberScope@86
    functions('addAll': Name@91) = ArrayList@92[2] { JavaMethodDescriptor@93['addAll'], DeserializedSimpleFunctionDescriptor@94['addAll'] } // through LazyJavaClassMemberScope@86
    functions('batchRemove': Name@13) = EmptyList@3[empty] // through LazyJavaClassMemberScope@86
    functions('clear': Name@95) = ArrayList@96[1] { JavaMethodDescriptor@97['clear'] } // through LazyJavaClassMemberScope@86
    functions('clone': Name@17) = EmptyList@3[empty] // through LazyJavaClassMemberScope@86
    functions('contains': Name@18) = ArrayList@98[1] { DeserializedSimpleFunctionDescriptor@99['contains'] } // through LazyJavaClassMemberScope@86
    functions('containsAll': Name@21) = ArrayList@100[1] { DeserializedSimpleFunctionDescriptor@101['containsAll'] } // through LazyJavaClassMemberScope@86
    functions('elementData': Name@24) = EmptyList@3[empty] // through LazyJavaClassMemberScope@86
    functions('ensureCapacity': Name@25) = EmptyList@3[empty] // through LazyJavaClassMemberScope@86
    functions('ensureCapacityInternal': Name@26) = EmptyList@3[empty] // through LazyJavaClassMemberScope@86
    functions('equals': Name@102) = ArrayList@103[1] { JavaMethodDescriptor@104['equals'] } // through LazyJavaClassMemberScope@86
    functions('fastRemove': Name@30) = EmptyList@3[empty] // through LazyJavaClassMemberScope@86
    functions('finalize': Name@31) = EmptyList@3[empty] // through LazyJavaClassMemberScope@86
    functions('get': Name@105) = ArrayList@106[1] { JavaMethodDescriptor@107['get'] } // through LazyJavaClassMemberScope@86
    functions('getClass': Name@33) = EmptyList@3[empty] // through LazyJavaClassMemberScope@86
    functions('grow': Name@34) = EmptyList@3[empty] // through LazyJavaClassMemberScope@86
    functions('hashCode': Name@108) = ArrayList@109[1] { JavaMethodDescriptor@110['hashCode'] } // through LazyJavaClassMemberScope@86
    functions('indexOf': Name@111) = ArrayList@112[1] { JavaMethodDescriptor@113['indexOf'] } // through LazyJavaClassMemberScope@86
    functions('isEmpty': Name@39) = ArrayList@114[1] { DeserializedSimpleFunctionDescriptor@115['isEmpty'] } // through LazyJavaClassMemberScope@86
    functions('iterator': Name@116) = ArrayList@117[1] { JavaMethodDescriptor@118['iterator'] } // through LazyJavaClassMemberScope@86
    functions('lastIndexOf': Name@119) = ArrayList@120[1] { JavaMethodDescriptor@121['lastIndexOf'] } // through LazyJavaClassMemberScope@86
    functions('listIterator': Name@122) = ArrayList@123[2] { JavaMethodDescriptor@124['listIterator'], JavaMethodDescriptor@125['listIterator'] } // through LazyJavaClassMemberScope@86
    functions('notify': Name@47) = EmptyList@3[empty] // through LazyJavaClassMemberScope@86
    functions('notifyAll': Name@48) = EmptyList@3[empty] // through LazyJavaClassMemberScope@86
    functions('outOfBoundsMsg': Name@126) = ArrayList@127[1] { JavaMethodDescriptor@128['outOfBoundsMsg'] } // through LazyJavaClassMemberScope@86
    functions('rangeCheck': Name@50) = EmptyList@3[empty] // through LazyJavaClassMemberScope@86
    functions('rangeCheckForAdd': Name@129) = ArrayList@130[1] { JavaMethodDescriptor@131['rangeCheckForAdd'] } // through LazyJavaClassMemberScope@86
    functions('readObject': Name@52) = EmptyList@3[empty] // through LazyJavaClassMemberScope@86
    functions('remove': Name@132) = ArrayList@133[2] { JavaMethodDescriptor@134['remove'], DeserializedSimpleFunctionDescriptor@135['remove'] } // through LazyJavaClassMemberScope@86
    functions('removeAll': Name@56) = ArrayList@136[1] { DeserializedSimpleFunctionDescriptor@137['removeAll'] } // through LazyJavaClassMemberScope@86
    functions('removeRange': Name@138) = ArrayList@139[1] { JavaMethodDescriptor@140['removeRange'] } // through LazyJavaClassMemberScope@86
    functions('retainAll': Name@60) = ArrayList@141[1] { DeserializedSimpleFunctionDescriptor@142['retainAll'] } // through LazyJavaClassMemberScope@86
    functions('set': Name@143) = ArrayList@144[1] { JavaMethodDescriptor@145['set'] } // through LazyJavaClassMemberScope@86
    functions('size': Name@64) = ArrayList@146[1] { DeserializedSimpleFunctionDescriptor@147['size'] } // through LazyJavaClassMemberScope@86
    functions('subList': Name@148) = ArrayList@149[1] { JavaMethodDescriptor@150['subList'] } // through LazyJavaClassMemberScope@86
    functions('toArray': Name@68) = ArrayList@151[2] { JavaMethodDescriptor@152['toArray'], JavaMethodDescriptor@153['toArray'] } // through LazyJavaClassMemberScope@86
    functions('toString': Name@72) = ArrayList@154[1] { DeserializedSimpleFunctionDescriptor@155['toString'] } // through LazyJavaClassMemberScope@86
    functions('trimToSize': Name@75) = EmptyList@3[empty] // through LazyJavaClassMemberScope@86
    functions('wait': Name@76) = EmptyList@3[empty] // through LazyJavaClassMemberScope@86
    functions('writeObject': Name@77) = EmptyList@3[empty] // through LazyJavaClassMemberScope@86
    memberIndex = computeMemberIndex$1@156 // through LazyJavaClassMemberScope@86
    properties('elementData': Name@79) = EmptyList@3[empty] // through LazyJavaClassMemberScope@86
    properties('modCount': Name@80) = ArrayList@157[1] { JavaPropertyDescriptor@158['modCount'] } // through LazyJavaClassMemberScope@86
    properties('size': Name@81) = EmptyList@3[empty] // through LazyJavaClassMemberScope@86
    thisAsReceiverParameter = LazyClassReceiverParameterDescriptor@159['<this>']
    typeConstructor = LazyJavaClassTypeConstructor@160['AbstractList']
}

LazyJavaClassDescriptor@161['ArrayList'] {
    allDescriptors = ArrayList@162[46] { LazyJavaClassDescriptor@163['SubList'], LazyJavaClassDescriptor@164['ListItr'], LazyJavaClassDescriptor@165['Itr'], ... } // through LazyJavaClassMemberScope@166
    constructors = ArrayList@167[3] { JavaConstructorDescriptor@168['<init>'], JavaConstructorDescriptor@169['<init>'], JavaConstructorDescriptor@170['<init>'] } // through LazyJavaClassMemberScope@166
    defaultType = JetTypeImpl@171['ArrayList<1>']
    enumEntryIndex = LinkedHashMap@172 // through LazyJavaClassMemberScope@166
    functions('Itr': Name@2) = EmptyList@3[empty] // through LazyJavaClassMemberScope@166
    functions('ListItr': Name@5) = EmptyList@3[empty] // through LazyJavaClassMemberScope@166
    functions('SubList': Name@6) = EmptyList@3[empty] // through LazyJavaClassMemberScope@166
    functions('add': Name@173) = ArrayList@174[2] { JavaMethodDescriptor@175['add'], JavaMethodDescriptor@176['add'] } // through LazyJavaClassMemberScope@166
    functions('addAll': Name@177) = ArrayList@178[2] { JavaMethodDescriptor@179['addAll'], JavaMethodDescriptor@180['addAll'] } // through LazyJavaClassMemberScope@166
    functions('batchRemove': Name@181) = ArrayList@182[1] { JavaMethodDescriptor@183['batchRemove'] } // through LazyJavaClassMemberScope@166
    functions('clear': Name@184) = ArrayList@185[1] { JavaMethodDescriptor@186['clear'] } // through LazyJavaClassMemberScope@166
    functions('clone': Name@187) = ArrayList@188[1] { JavaMethodDescriptor@189['clone'] } // through LazyJavaClassMemberScope@166
    functions('contains': Name@190) = ArrayList@191[1] { JavaMethodDescriptor@192['contains'] } // through LazyJavaClassMemberScope@166
    functions('containsAll': Name@21) = ArrayList@193[1] { DeserializedSimpleFunctionDescriptor@194['containsAll'] } // through LazyJavaClassMemberScope@166
    functions('elementData': Name@195) = ArrayList@196[1] { JavaMethodDescriptor@197['elementData'] } // through LazyJavaClassMemberScope@166
    functions('ensureCapacity': Name@198) = ArrayList@199[1] { JavaMethodDescriptor@200['ensureCapacity'] } // through LazyJavaClassMemberScope@166
    functions('ensureCapacityInternal': Name@201) = ArrayList@202[1] { JavaMethodDescriptor@203['ensureCapacityInternal'] } // through LazyJavaClassMemberScope@166
    functions('equals': Name@102) = ArrayList@204[1] { DeserializedSimpleFunctionDescriptor@205['equals'] } // through LazyJavaClassMemberScope@166
    functions('fastRemove': Name@206) = ArrayList@207[1] { JavaMethodDescriptor@208['fastRemove'] } // through LazyJavaClassMemberScope@166
    functions('finalize': Name@31) = EmptyList@3[empty] // through LazyJavaClassMemberScope@166
    functions('get': Name@209) = ArrayList@210[1] { JavaMethodDescriptor@211['get'] } // through LazyJavaClassMemberScope@166
    functions('getClass': Name@33) = EmptyList@3[empty] // through LazyJavaClassMemberScope@166
    functions('grow': Name@212) = ArrayList@213[1] { JavaMethodDescriptor@214['grow'] } // through LazyJavaClassMemberScope@166
    functions('hashCode': Name@108) = ArrayList@215[1] { DeserializedSimpleFunctionDescriptor@216['hashCode'] } // through LazyJavaClassMemberScope@166
    functions('indexOf': Name@217) = ArrayList@218[1] { JavaMethodDescriptor@219['indexOf'] } // through LazyJavaClassMemberScope@166
    functions('isEmpty': Name@220) = ArrayList@221[1] { JavaMethodDescriptor@222['isEmpty'] } // through LazyJavaClassMemberScope@166
    functions('iterator': Name@223) = ArrayList@224[1] { JavaMethodDescriptor@225['iterator'] } // through LazyJavaClassMemberScope@166
    functions('lastIndexOf': Name@226) = ArrayList@227[1] { JavaMethodDescriptor@228['lastIndexOf'] } // through LazyJavaClassMemberScope@166
    functions('listIterator': Name@229) = ArrayList@230[2] { JavaMethodDescriptor@231['listIterator'], JavaMethodDescriptor@232['listIterator'] } // through LazyJavaClassMemberScope@166
    functions('notify': Name@47) = EmptyList@3[empty] // through LazyJavaClassMemberScope@166
    functions('notifyAll': Name@48) = EmptyList@3[empty] // through LazyJavaClassMemberScope@166
    functions('outOfBoundsMsg': Name@233) = ArrayList@234[1] { JavaMethodDescriptor@235['outOfBoundsMsg'] } // through LazyJavaClassMemberScope@166
    functions('rangeCheck': Name@236) = ArrayList@237[1] { JavaMethodDescriptor@238['rangeCheck'] } // through LazyJavaClassMemberScope@166
    functions('rangeCheckForAdd': Name@239) = ArrayList@240[1] { JavaMethodDescriptor@241['rangeCheckForAdd'] } // through LazyJavaClassMemberScope@166
    functions('readObject': Name@242) = ArrayList@243[1] { JavaMethodDescriptor@244['readObject'] } // through LazyJavaClassMemberScope@166
    functions('remove': Name@245) = ArrayList@246[2] { JavaMethodDescriptor@247['remove'], JavaMethodDescriptor@248['remove'] } // through LazyJavaClassMemberScope@166
    functions('removeAll': Name@249) = ArrayList@250[1] { JavaMethodDescriptor@251['removeAll'] } // through LazyJavaClassMemberScope@166
    functions('removeRange': Name@252) = ArrayList@253[1] { JavaMethodDescriptor@254['removeRange'] } // through LazyJavaClassMemberScope@166
    functions('retainAll': Name@255) = ArrayList@256[1] { JavaMethodDescriptor@257['retainAll'] } // through LazyJavaClassMemberScope@166
    functions('set': Name@258) = ArrayList@259[1] { JavaMethodDescriptor@260['set'] } // through LazyJavaClassMemberScope@166
    functions('size': Name@261) = ArrayList@262[1] { JavaMethodDescriptor@263['size'] } // through LazyJavaClassMemberScope@166
    functions('subList': Name@264) = ArrayList@265[1] { JavaMethodDescriptor@266['subList'] } // through LazyJavaClassMemberScope@166
    functions('toArray': Name@267) = ArrayList@268[2] { JavaMethodDescriptor@269['toArray'], JavaMethodDescriptor@270['toArray'] } // through LazyJavaClassMemberScope@166
    functions('toString': Name@72) = ArrayList@271[1] { DeserializedSimpleFunctionDescriptor@272['toString'] } // through LazyJavaClassMemberScope@166
    functions('trimToSize': Name@273) = ArrayList@274[1] { JavaMethodDescriptor@275['trimToSize'] } // through LazyJavaClassMemberScope@166
    functions('wait': Name@76) = EmptyList@3[empty] // through LazyJavaClassMemberScope@166
    functions('writeObject': Name@276) = ArrayList@277[1] { JavaMethodDescriptor@278['writeObject'] } // through LazyJavaClassMemberScope@166
    memberIndex = computeMemberIndex$1@279 // through LazyJavaClassMemberScope@166
    nestedClassIndex = LinkedHashMap@280 // through LazyJavaClassMemberScope@166
    nestedClasses('Itr': Name@2) = LazyJavaClassDescriptor@165['Itr'] // through LazyJavaClassMemberScope@166
    nestedClasses('ListItr': Name@5) = LazyJavaClassDescriptor@164['ListItr'] // through LazyJavaClassMemberScope@166
    nestedClasses('SubList': Name@6) = LazyJavaClassDescriptor@163['SubList'] // through LazyJavaClassMemberScope@166
    properties('elementData': Name@79) = ArrayList@281[1] { JavaPropertyDescriptor@282['elementData'] } // through LazyJavaClassMemberScope@166
    properties('modCount': Name@80) = ArrayList@283[1] { PropertyDescriptorImpl@284['modCount'] } // through LazyJavaClassMemberScope@166
    properties('size': Name@81) = ArrayList@285[1] { JavaPropertyDescriptor@286['size'] } // through LazyJavaClassMemberScope@166
    thisAsReceiverParameter = LazyClassReceiverParameterDescriptor@287['<this>']
    typeConstructor = LazyJavaClassTypeConstructor@288['ArrayList']
}

LazyJavaClassDescriptor@289['B'] {
    defaultType = JetTypeImpl@290['B<1>']
    functions('clone': Name@291) = EmptyList@3[empty] // through LazyJavaClassMemberScope@292
    functions('equals': Name@293) = ArrayList@294[1] { DeserializedSimpleFunctionDescriptor@295['equals'] } // through LazyJavaClassMemberScope@292
    functions('finalize': Name@296) = EmptyList@3[empty] // through LazyJavaClassMemberScope@292
    functions('foo': Name@297) = ArrayList@298[1] { JavaMethodDescriptor@299['foo'] } // through LazyJavaClassMemberScope@292
    functions('getClass': Name@300) = EmptyList@3[empty] // through LazyJavaClassMemberScope@292
    functions('hashCode': Name@301) = ArrayList@302[1] { DeserializedSimpleFunctionDescriptor@303['hashCode'] } // through LazyJavaClassMemberScope@292
    functions('notify': Name@304) = EmptyList@3[empty] // through LazyJavaClassMemberScope@292
    functions('notifyAll': Name@305) = EmptyList@3[empty] // through LazyJavaClassMemberScope@292
    functions('toString': Name@306) = ArrayList@307[1] { DeserializedSimpleFunctionDescriptor@308['toString'] } // through LazyJavaClassMemberScope@292
    functions('wait': Name@309) = EmptyList@3[empty] // through LazyJavaClassMemberScope@292
    memberIndex = computeMemberIndex$1@310 // through LazyJavaClassMemberScope@292
    thisAsReceiverParameter = LazyClassReceiverParameterDescriptor@311['<this>']
    typeConstructor = LazyJavaClassTypeConstructor@312['B']
}

LazyJavaClassDescriptor@313['C'] {
    allDescriptors = ArrayList@314[4] { DeserializedSimpleFunctionDescriptor@315['hashCode'], JavaMethodDescriptor@316['foo'], DeserializedSimpleFunctionDescriptor@317['toString'], ... } // through LazyJavaClassMemberScope@318
    constructors = ArrayList@319[1] { JavaConstructorDescriptor@320['<init>'] } // through LazyJavaClassMemberScope@318
    defaultType = JetTypeImpl@321['C<1>']
    enumEntryIndex = LinkedHashMap@322 // through LazyJavaClassMemberScope@318
    functions('clone': Name@291) = EmptyList@3[empty] // through LazyJavaClassMemberScope@318
    functions('equals': Name@293) = ArrayList@323[1] { DeserializedSimpleFunctionDescriptor@324['equals'] } // through LazyJavaClassMemberScope@318
    functions('finalize': Name@296) = EmptyList@3[empty] // through LazyJavaClassMemberScope@318
    functions('foo': Name@297) = ArrayList@325[1] { JavaMethodDescriptor@316['foo'] } // through LazyJavaClassMemberScope@318
    functions('getClass': Name@300) = EmptyList@3[empty] // through LazyJavaClassMemberScope@318
    functions('hashCode': Name@301) = ArrayList@326[1] { DeserializedSimpleFunctionDescriptor@315['hashCode'] } // through LazyJavaClassMemberScope@318
    functions('notify': Name@304) = EmptyList@3[empty] // through LazyJavaClassMemberScope@318
    functions('notifyAll': Name@305) = EmptyList@3[empty] // through LazyJavaClassMemberScope@318
    functions('toString': Name@306) = ArrayList@327[1] { DeserializedSimpleFunctionDescriptor@317['toString'] } // through LazyJavaClassMemberScope@318
    functions('wait': Name@309) = EmptyList@3[empty] // through LazyJavaClassMemberScope@318
    memberIndex = computeMemberIndex$1@328 // through LazyJavaClassMemberScope@318
    nestedClassIndex = LinkedHashMap@329 // through LazyJavaClassMemberScope@318
    typeConstructor = LazyJavaClassTypeConstructor@330['C']
}

LazyJavaClassDescriptor@331['ObjectInputStream'] {
    functionTypeForSamInterface = null
    typeConstructor = LazyJavaClassTypeConstructor@332['ObjectInputStream']
}

LazyJavaClassDescriptor@333['ObjectOutputStream'] {
    functionTypeForSamInterface = null
    typeConstructor = LazyJavaClassTypeConstructor@334['ObjectOutputStream']
}

LazyJavaClassDescriptor@335['P'] {
    typeConstructor = LazyJavaClassTypeConstructor@336['P']
}

LazyJavaClassDescriptor@337['RandomAccess'] {
    defaultType = JetTypeImpl@338['RandomAccess']
    functions('Itr': Name@2) = EmptyList@3[empty] // through LazyJavaClassMemberScope@339
    functions('ListItr': Name@5) = EmptyList@3[empty] // through LazyJavaClassMemberScope@339
    functions('SubList': Name@6) = EmptyList@3[empty] // through LazyJavaClassMemberScope@339
    functions('add': Name@87) = EmptyList@3[empty] // through LazyJavaClassMemberScope@339
    functions('addAll': Name@91) = EmptyList@3[empty] // through LazyJavaClassMemberScope@339
    functions('batchRemove': Name@13) = EmptyList@3[empty] // through LazyJavaClassMemberScope@339
    functions('clear': Name@95) = EmptyList@3[empty] // through LazyJavaClassMemberScope@339
    functions('clone': Name@17) = EmptyList@3[empty] // through LazyJavaClassMemberScope@339
    functions('contains': Name@18) = EmptyList@3[empty] // through LazyJavaClassMemberScope@339
    functions('containsAll': Name@21) = EmptyList@3[empty] // through LazyJavaClassMemberScope@339
    functions('elementData': Name@24) = EmptyList@3[empty] // through LazyJavaClassMemberScope@339
    functions('ensureCapacity': Name@25) = EmptyList@3[empty] // through LazyJavaClassMemberScope@339
    functions('ensureCapacityInternal': Name@26) = EmptyList@3[empty] // through LazyJavaClassMemberScope@339
    functions('equals': Name@102) = ArrayList@340[1] { DeserializedSimpleFunctionDescriptor@341['equals'] } // through LazyJavaClassMemberScope@339
    functions('fastRemove': Name@30) = EmptyList@3[empty] // through LazyJavaClassMemberScope@339
    functions('finalize': Name@31) = EmptyList@3[empty] // through LazyJavaClassMemberScope@339
    functions('get': Name@105) = EmptyList@3[empty] // through LazyJavaClassMemberScope@339
    functions('getClass': Name@33) = EmptyList@3[empty] // through LazyJavaClassMemberScope@339
    functions('grow': Name@34) = EmptyList@3[empty] // through LazyJavaClassMemberScope@339
    functions('hashCode': Name@108) = ArrayList@342[1] { DeserializedSimpleFunctionDescriptor@343['hashCode'] } // through LazyJavaClassMemberScope@339
    functions('indexOf': Name@111) = EmptyList@3[empty] // through LazyJavaClassMemberScope@339
    functions('isEmpty': Name@39) = EmptyList@3[empty] // through LazyJavaClassMemberScope@339
    functions('iterator': Name@116) = EmptyList@3[empty] // through LazyJavaClassMemberScope@339
    functions('lastIndexOf': Name@119) = EmptyList@3[empty] // through LazyJavaClassMemberScope@339
    functions('listIterator': Name@122) = EmptyList@3[empty] // through LazyJavaClassMemberScope@339
    functions('notify': Name@47) = EmptyList@3[empty] // through LazyJavaClassMemberScope@339
    functions('notifyAll': Name@48) = EmptyList@3[empty] // through LazyJavaClassMemberScope@339
    functions('outOfBoundsMsg': Name@126) = EmptyList@3[empty] // through LazyJavaClassMemberScope@339
    functions('rangeCheck': Name@50) = EmptyList@3[empty] // through LazyJavaClassMemberScope@339
    functions('rangeCheckForAdd': Name@129) = EmptyList@3[empty] // through LazyJavaClassMemberScope@339
    functions('readObject': Name@52) = EmptyList@3[empty] // through LazyJavaClassMemberScope@339
    functions('remove': Name@132) = EmptyList@3[empty] // through LazyJavaClassMemberScope@339
    functions('removeAll': Name@56) = EmptyList@3[empty] // through LazyJavaClassMemberScope@339
    functions('removeRange': Name@138) = EmptyList@3[empty] // through LazyJavaClassMemberScope@339
    functions('retainAll': Name@60) = EmptyList@3[empty] // through LazyJavaClassMemberScope@339
    functions('set': Name@143) = EmptyList@3[empty] // through LazyJavaClassMemberScope@339
    functions('size': Name@64) = EmptyList@3[empty] // through LazyJavaClassMemberScope@339
    functions('subList': Name@148) = EmptyList@3[empty] // through LazyJavaClassMemberScope@339
    functions('toArray': Name@68) = EmptyList@3[empty] // through LazyJavaClassMemberScope@339
    functions('toString': Name@72) = ArrayList@344[1] { DeserializedSimpleFunctionDescriptor@345['toString'] } // through LazyJavaClassMemberScope@339
    functions('trimToSize': Name@75) = EmptyList@3[empty] // through LazyJavaClassMemberScope@339
    functions('wait': Name@76) = EmptyList@3[empty] // through LazyJavaClassMemberScope@339
    functions('writeObject': Name@77) = EmptyList@3[empty] // through LazyJavaClassMemberScope@339
    memberIndex = computeMemberIndex$1@346 // through LazyJavaClassMemberScope@339
    properties('elementData': Name@79) = EmptyList@3[empty] // through LazyJavaClassMemberScope@339
    properties('modCount': Name@80) = EmptyList@3[empty] // through LazyJavaClassMemberScope@339
    properties('size': Name@81) = EmptyList@3[empty] // through LazyJavaClassMemberScope@339
    typeConstructor = LazyJavaClassTypeConstructor@347['RandomAccess']
}

LazyJavaClassDescriptor@348['Serializable'] {
    defaultType = JetTypeImpl@349['Serializable']
    functions('Itr': Name@2) = EmptyList@3[empty] // through LazyJavaClassMemberScope@350
    functions('ListItr': Name@5) = EmptyList@3[empty] // through LazyJavaClassMemberScope@350
    functions('SubList': Name@6) = EmptyList@3[empty] // through LazyJavaClassMemberScope@350
    functions('add': Name@87) = EmptyList@3[empty] // through LazyJavaClassMemberScope@350
    functions('addAll': Name@91) = EmptyList@3[empty] // through LazyJavaClassMemberScope@350
    functions('batchRemove': Name@13) = EmptyList@3[empty] // through LazyJavaClassMemberScope@350
    functions('clear': Name@95) = EmptyList@3[empty] // through LazyJavaClassMemberScope@350
    functions('clone': Name@17) = EmptyList@3[empty] // through LazyJavaClassMemberScope@350
    functions('contains': Name@18) = EmptyList@3[empty] // through LazyJavaClassMemberScope@350
    functions('containsAll': Name@21) = EmptyList@3[empty] // through LazyJavaClassMemberScope@350
    functions('elementData': Name@24) = EmptyList@3[empty] // through LazyJavaClassMemberScope@350
    functions('ensureCapacity': Name@25) = EmptyList@3[empty] // through LazyJavaClassMemberScope@350
    functions('ensureCapacityInternal': Name@26) = EmptyList@3[empty] // through LazyJavaClassMemberScope@350
    functions('equals': Name@102) = ArrayList@351[1] { DeserializedSimpleFunctionDescriptor@352['equals'] } // through LazyJavaClassMemberScope@350
    functions('fastRemove': Name@30) = EmptyList@3[empty] // through LazyJavaClassMemberScope@350
    functions('finalize': Name@31) = EmptyList@3[empty] // through LazyJavaClassMemberScope@350
    functions('get': Name@105) = EmptyList@3[empty] // through LazyJavaClassMemberScope@350
    functions('getClass': Name@33) = EmptyList@3[empty] // through LazyJavaClassMemberScope@350
    functions('grow': Name@34) = EmptyList@3[empty] // through LazyJavaClassMemberScope@350
    functions('hashCode': Name@108) = ArrayList@353[1] { DeserializedSimpleFunctionDescriptor@354['hashCode'] } // through LazyJavaClassMemberScope@350
    functions('indexOf': Name@111) = EmptyList@3[empty] // through LazyJavaClassMemberScope@350
    functions('isEmpty': Name@39) = EmptyList@3[empty] // through LazyJavaClassMemberScope@350
    functions('iterator': Name@116) = EmptyList@3[empty] // through LazyJavaClassMemberScope@350
    functions('lastIndexOf': Name@119) = EmptyList@3[empty] // through LazyJavaClassMemberScope@350
    functions('listIterator': Name@122) = EmptyList@3[empty] // through LazyJavaClassMemberScope@350
    functions('notify': Name@47) = EmptyList@3[empty] // through LazyJavaClassMemberScope@350
    functions('notifyAll': Name@48) = EmptyList@3[empty] // through LazyJavaClassMemberScope@350
    functions('outOfBoundsMsg': Name@126) = EmptyList@3[empty] // through LazyJavaClassMemberScope@350
    functions('rangeCheck': Name@50) = EmptyList@3[empty] // through LazyJavaClassMemberScope@350
    functions('rangeCheckForAdd': Name@129) = EmptyList@3[empty] // through LazyJavaClassMemberScope@350
    functions('readObject': Name@52) = EmptyList@3[empty] // through LazyJavaClassMemberScope@350
    functions('remove': Name@132) = EmptyList@3[empty] // through LazyJavaClassMemberScope@350
    functions('removeAll': Name@56) = EmptyList@3[empty] // through LazyJavaClassMemberScope@350
    functions('removeRange': Name@138) = EmptyList@3[empty] // through LazyJavaClassMemberScope@350
    functions('retainAll': Name@60) = EmptyList@3[empty] // through LazyJavaClassMemberScope@350
    functions('set': Name@143) = EmptyList@3[empty] // through LazyJavaClassMemberScope@350
    functions('size': Name@64) = EmptyList@3[empty] // through LazyJavaClassMemberScope@350
    functions('subList': Name@148) = EmptyList@3[empty] // through LazyJavaClassMemberScope@350
    functions('toArray': Name@68) = EmptyList@3[empty] // through LazyJavaClassMemberScope@350
    functions('toString': Name@72) = ArrayList@355[1] { DeserializedSimpleFunctionDescriptor@356['toString'] } // through LazyJavaClassMemberScope@350
    functions('trimToSize': Name@75) = EmptyList@3[empty] // through LazyJavaClassMemberScope@350
    functions('wait': Name@76) = EmptyList@3[empty] // through LazyJavaClassMemberScope@350
    functions('writeObject': Name@77) = EmptyList@3[empty] // through LazyJavaClassMemberScope@350
    memberIndex = computeMemberIndex$1@357 // through LazyJavaClassMemberScope@350
    properties('elementData': Name@79) = EmptyList@3[empty] // through LazyJavaClassMemberScope@350
    properties('modCount': Name@80) = EmptyList@3[empty] // through LazyJavaClassMemberScope@350
    properties('size': Name@81) = EmptyList@3[empty] // through LazyJavaClassMemberScope@350
    typeConstructor = LazyJavaClassTypeConstructor@358['Serializable']
}

LazyJavaClassTypeConstructor@83['AbstractCollection'] {
    parameters = ArrayList@359[1] { LazyJavaTypeParameterDescriptor@360['E'] }
    supertypes = ArrayList@361[1] { LazyJavaClassifierType@362['Collection<E>'] }
}

LazyJavaClassTypeConstructor@160['AbstractList'] {
    parameters = ArrayList@363[1] { LazyJavaTypeParameterDescriptor@364['E'] }
    supertypes = ArrayList@365[2] { LazyJavaClassifierType@366['AbstractCollection<E>'], LazyJavaClassifierType@367['List<E>'] }
}

LazyJavaClassTypeConstructor@288['ArrayList'] {
    parameters = ArrayList@368[1] { LazyJavaTypeParameterDescriptor@369['E'] }
    supertypes = ArrayList@370[5] { LazyJavaClassifierType@371['AbstractList<E>'], LazyJavaClassifierType@372['List<E>'], LazyJavaClassifierType@373['RandomAccess'], ... }
}

LazyJavaClassTypeConstructor@312['B'] {
    parameters = ArrayList@374[1] { LazyJavaTypeParameterDescriptor@375['TB'] }
    supertypes = ArrayList@376[1] { LazyJavaClassifierType@377['A<TB>'] }
}

LazyJavaClassTypeConstructor@330['C'] {
    parameters = ArrayList@378[1] { LazyJavaTypeParameterDescriptor@379['TC'] }
    supertypes = ArrayList@380[2] { LazyJavaClassifierType@381['B<TC>'], LazyJavaClassifierType@382['A<TC>'] }
}

LazyJavaClassTypeConstructor@332['ObjectInputStream'] {
    parameters = ArrayList@383[empty]
}

LazyJavaClassTypeConstructor@334['ObjectOutputStream'] {
    parameters = ArrayList@384[empty]
}

LazyJavaClassTypeConstructor@336['P'] {
    parameters = ArrayList@385[empty]
    supertypes = ArrayList@386[1] { JetTypeImpl@387['Any'] }
}

LazyJavaClassTypeConstructor@347['RandomAccess'] {
    parameters = ArrayList@388[empty]
    supertypes = ArrayList@389[1] { JetTypeImpl@387['Any'] }
}

LazyJavaClassTypeConstructor@358['Serializable'] {
    parameters = ArrayList@390[empty]
    supertypes = ArrayList@391[1] { JetTypeImpl@387['Any'] }
}

LazyJavaClassifierType@377['A<TB>'] {
    arguments = ArrayList@392[1] { TypeProjectionImpl@393 }
    classifier = JavaClassImpl@394['A']
    memberScope = SubstitutingScope@395
    nullable = 'false': Boolean@396
    typeConstructor = TypeConstructorImpl$1@397
}

LazyJavaClassifierType@398['A<TB>'] {
    arguments = ArrayList@399[1] { TypeProjectionImpl@400 }
    classifier = JavaClassImpl@401['A']
    memberScope = SubstitutingScope@402
    nullable = 'false': Boolean@396
    typeConstructor = TypeConstructorImpl$1@397
}

LazyJavaClassifierType@403['A<TB>'] {
    arguments = ArrayList@404[1] { TypeProjectionImpl@405 }
    classifier = JavaClassImpl@401['A']
    memberScope = SubstitutingScope@406
    nullable = 'true': Boolean@407
    typeConstructor = TypeConstructorImpl$1@397
}

LazyJavaClassifierType@382['A<TC>'] {
    arguments = ArrayList@408[1] { TypeProjectionImpl@409 }
    classifier = JavaClassImpl@410['A']
    memberScope = SubstitutingScope@411
    nullable = 'false': Boolean@396
    typeConstructor = TypeConstructorImpl$1@397
}

LazyJavaClassifierType@366['AbstractCollection<E>'] {
    arguments = ArrayList@412[1] { TypeProjectionImpl@413 }
    classifier = JavaClassImpl@414['AbstractCollection']
    memberScope = SubstitutingScope@415
    nullable = 'false': Boolean@396
    typeConstructor = LazyJavaClassTypeConstructor@83['AbstractCollection']
}

LazyJavaClassifierType@371['AbstractList<E>'] {
    arguments = ArrayList@416[1] { TypeProjectionImpl@417 }
    classifier = JavaClassImpl@418['AbstractList']
    memberScope = SubstitutingScope@419
    nullable = 'false': Boolean@396
    typeConstructor = LazyJavaClassTypeConstructor@160['AbstractList']
}

LazyJavaClassifierType@381['B<TC>'] {
    arguments = ArrayList@420[1] { TypeProjectionImpl@421 }
    classifier = JavaClassImpl@422['B']
    memberScope = SubstitutingScope@423
    nullable = 'false': Boolean@396
    typeConstructor = LazyJavaClassTypeConstructor@312['B']
}

LazyJavaClassifierType@424['Cloneable'] {
    arguments = ArrayList@425[empty]
    classifier = JavaClassImpl@426['Cloneable']
    memberScope = DeserializedClassMemberScope@427
    nullable = 'false': Boolean@396
    typeConstructor = DeserializedClassTypeConstructor@428
}

LazyJavaClassifierType@429['Collection<? extends E>'] {
    arguments = ArrayList@430[1] { TypeProjectionImpl@431 }
    classifier = JavaClassImpl@432['Collection']
    memberScope = SubstitutingScope@433
    nullable = 'false': Boolean@396
    typeConstructor = DeserializedClassTypeConstructor@434
}

LazyJavaClassifierType@435['Collection<? extends E>'] {
    arguments = ArrayList@436[1] { TypeProjectionImpl@437 }
    classifier = JavaClassImpl@438['Collection']
    memberScope = SubstitutingScope@439
    nullable = 'false': Boolean@396
    typeConstructor = DeserializedClassTypeConstructor@434
}

LazyJavaClassifierType@440['Collection<? extends E>'] {
    arguments = ArrayList@441[1] { TypeProjectionImpl@442 }
    classifier = JavaClassImpl@443['Collection']
    memberScope = SubstitutingScope@444
    nullable = 'false': Boolean@396
    typeConstructor = DeserializedClassTypeConstructor@434
}

LazyJavaClassifierType@445['Collection<? extends E>'] {
    arguments = ArrayList@446[1] { TypeProjectionImpl@447 }
    classifier = JavaClassImpl@448['Collection']
    memberScope = SubstitutingScope@449
    nullable = 'false': Boolean@396
    typeConstructor = DeserializedClassTypeConstructor@434
}

LazyJavaClassifierType@450['Collection<? extends E>'] {
    arguments = ArrayList@451[1] { TypeProjectionImpl@452 }
    classifier = JavaClassImpl@453['Collection']
    memberScope = SubstitutingScope@454
    nullable = 'false': Boolean@396
    typeConstructor = DeserializedClassTypeConstructor@434
}

LazyJavaClassifierType@455['Collection<? extends E>'] {
    arguments = ArrayList@456[1] { TypeProjectionImpl@457 }
    classifier = JavaClassImpl@448['Collection']
    memberScope = SubstitutingScope@458
    nullable = 'true': Boolean@407
    typeConstructor = DeserializedClassTypeConstructor@459
}

LazyJavaClassifierType@460['Collection<? extends E>'] {
    arguments = ArrayList@461[1] { TypeProjectionImpl@462 }
    classifier = JavaClassImpl@443['Collection']
    memberScope = SubstitutingScope@463
    nullable = 'true': Boolean@407
    typeConstructor = DeserializedClassTypeConstructor@459
}

LazyJavaClassifierType@464['Collection<? extends E>'] {
    arguments = ArrayList@465[1] { TypeProjectionImpl@466 }
    classifier = JavaClassImpl@432['Collection']
    memberScope = SubstitutingScope@467
    nullable = 'true': Boolean@407
    typeConstructor = DeserializedClassTypeConstructor@459
}

LazyJavaClassifierType@468['Collection<? extends E>'] {
    arguments = ArrayList@469[1] { TypeProjectionImpl@470 }
    classifier = JavaClassImpl@438['Collection']
    memberScope = SubstitutingScope@471
    nullable = 'true': Boolean@407
    typeConstructor = DeserializedClassTypeConstructor@459
}

LazyJavaClassifierType@472['Collection<? extends E>'] {
    arguments = ArrayList@473[1] { TypeProjectionImpl@474 }
    classifier = JavaClassImpl@453['Collection']
    memberScope = SubstitutingScope@475
    nullable = 'true': Boolean@407
    typeConstructor = DeserializedClassTypeConstructor@459
}

LazyJavaClassifierType@476['Collection<?>'] {
    arguments = ArrayList@477[1] { LazyStarProjection@478 }
    classifier = JavaClassImpl@479['Collection']
    memberScope = SubstitutingScope@480
    nullable = 'false': Boolean@396
    typeConstructor = DeserializedClassTypeConstructor@434
}

LazyJavaClassifierType@481['Collection<?>'] {
    arguments = ArrayList@482[1] { LazyStarProjection@483 }
    classifier = JavaClassImpl@484['Collection']
    memberScope = SubstitutingScope@485
    nullable = 'false': Boolean@396
    typeConstructor = DeserializedClassTypeConstructor@434
}

LazyJavaClassifierType@486['Collection<?>'] {
    arguments = ArrayList@487[1] { LazyStarProjection@488 }
    classifier = JavaClassImpl@489['Collection']
    memberScope = SubstitutingScope@490
    nullable = 'false': Boolean@396
    typeConstructor = DeserializedClassTypeConstructor@434
}

LazyJavaClassifierType@491['Collection<?>'] {
    arguments = ArrayList@492[1] { LazyStarProjection@493 }
    classifier = JavaClassImpl@494['Collection']
    memberScope = SubstitutingScope@495
    nullable = 'false': Boolean@396
    typeConstructor = DeserializedClassTypeConstructor@434
}

LazyJavaClassifierType@496['Collection<?>'] {
    arguments = ArrayList@497[1] { LazyStarProjection@498 }
    classifier = JavaClassImpl@499['Collection']
    memberScope = SubstitutingScope@500
    nullable = 'false': Boolean@396
    typeConstructor = DeserializedClassTypeConstructor@434
}

LazyJavaClassifierType@501['Collection<?>'] {
    arguments = ArrayList@502[1] { LazyStarProjection@503 }
    classifier = JavaClassImpl@504['Collection']
    memberScope = SubstitutingScope@505
    nullable = 'false': Boolean@396
    typeConstructor = DeserializedClassTypeConstructor@434
}

LazyJavaClassifierType@506['Collection<?>'] {
    arguments = ArrayList@507[1] { LazyStarProjection@508 }
    classifier = JavaClassImpl@484['Collection']
    memberScope = SubstitutingScope@509
    nullable = 'true': Boolean@407
    typeConstructor = DeserializedClassTypeConstructor@459
}

LazyJavaClassifierType@510['Collection<?>'] {
    arguments = ArrayList@511[1] { LazyStarProjection@512 }
    classifier = JavaClassImpl@494['Collection']
    memberScope = SubstitutingScope@513
    nullable = 'true': Boolean@407
    typeConstructor = DeserializedClassTypeConstructor@459
}

LazyJavaClassifierType@514['Collection<?>'] {
    arguments = ArrayList@515[1] { LazyStarProjection@516 }
    classifier = JavaClassImpl@504['Collection']
    memberScope = SubstitutingScope@517
    nullable = 'true': Boolean@407
    typeConstructor = DeserializedClassTypeConstructor@459
}

LazyJavaClassifierType@518['Collection<?>'] {
    arguments = ArrayList@519[1] { LazyStarProjection@520 }
    classifier = JavaClassImpl@499['Collection']
    memberScope = SubstitutingScope@521
    nullable = 'true': Boolean@407
    typeConstructor = DeserializedClassTypeConstructor@459
}

LazyJavaClassifierType@522['Collection<?>'] {
    arguments = ArrayList@523[1] { LazyStarProjection@524 }
    classifier = JavaClassImpl@489['Collection']
    memberScope = SubstitutingScope@525
    nullable = 'true': Boolean@407
    typeConstructor = DeserializedClassTypeConstructor@459
}

LazyJavaClassifierType@526['Collection<?>'] {
    arguments = ArrayList@527[1] { LazyStarProjection@528 }
    classifier = JavaClassImpl@479['Collection']
    memberScope = SubstitutingScope@529
    nullable = 'true': Boolean@407
    typeConstructor = DeserializedClassTypeConstructor@459
}

LazyJavaClassifierType@362['Collection<E>'] {
    arguments = ArrayList@530[1] { TypeProjectionImpl@531 }
    classifier = JavaClassImpl@532['Collection']
    memberScope = SubstitutingScope@533
    nullable = 'false': Boolean@396
    typeConstructor = DeserializedClassTypeConstructor@434
}

LazyJavaClassifierType@534['E'] {
    arguments = ArrayList@535[empty]
    classifier = JavaTypeParameterImpl@536['E']
    memberScope = LazyScopeAdapter@537
    nullable = 'false': Boolean@396
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@538
}

LazyJavaClassifierType@539['E'] {
    arguments = ArrayList@540[empty]
    classifier = JavaTypeParameterImpl@541['E']
    nullable = 'false': Boolean@396
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@538
}

LazyJavaClassifierType@542['E'] {
    arguments = ArrayList@543[empty]
    classifier = JavaTypeParameterImpl@544['E']
    nullable = 'false': Boolean@396
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@545
}

LazyJavaClassifierType@546['E'] {
    arguments = ArrayList@547[empty]
    classifier = JavaTypeParameterImpl@548['E']
    nullable = 'false': Boolean@396
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@538
}

LazyJavaClassifierType@549['E'] {
    arguments = ArrayList@550[empty]
    classifier = JavaTypeParameterImpl@551['E']
    nullable = 'false': Boolean@396
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@538
}

LazyJavaClassifierType@552['E'] {
    arguments = ArrayList@553[empty]
    classifier = JavaTypeParameterImpl@554['E']
    nullable = 'false': Boolean@396
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@545
}

LazyJavaClassifierType@555['E'] {
    arguments = ArrayList@556[empty]
    classifier = JavaTypeParameterImpl@557['E']
    nullable = 'false': Boolean@396
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@545
}

LazyJavaClassifierType@558['E'] {
    arguments = ArrayList@559[empty]
    classifier = JavaTypeParameterImpl@560['E']
    nullable = 'false': Boolean@396
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@538
}

LazyJavaClassifierType@561['E'] {
    arguments = ArrayList@562[empty]
    classifier = JavaTypeParameterImpl@563['E']
    nullable = 'false': Boolean@396
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@538
}

LazyJavaClassifierType@564['E'] {
    arguments = ArrayList@565[empty]
    classifier = JavaTypeParameterImpl@566['E']
    nullable = 'false': Boolean@396
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@538
}

LazyJavaClassifierType@567['E'] {
    arguments = ArrayList@568[empty]
    classifier = JavaTypeParameterImpl@569['E']
    nullable = 'false': Boolean@396
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@570
}

LazyJavaClassifierType@571['E'] {
    arguments = ArrayList@572[empty]
    classifier = JavaTypeParameterImpl@573['E']
    nullable = 'false': Boolean@396
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@545
}

LazyJavaClassifierType@574['E'] {
    arguments = ArrayList@575[empty]
    classifier = JavaTypeParameterImpl@576['E']
    nullable = 'false': Boolean@396
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@545
}

LazyJavaClassifierType@577['E'] {
    arguments = ArrayList@578[empty]
    classifier = JavaTypeParameterImpl@579['E']
    nullable = 'false': Boolean@396
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@545
}

LazyJavaClassifierType@580['E'] {
    arguments = ArrayList@581[empty]
    classifier = JavaTypeParameterImpl@582['E']
    nullable = 'false': Boolean@396
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@570
}

LazyJavaClassifierType@583['E'] {
    arguments = ArrayList@584[empty]
    classifier = JavaTypeParameterImpl@585['E']
    nullable = 'false': Boolean@396
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@538
}

LazyJavaClassifierType@586['E'] {
    arguments = ArrayList@587[empty]
    classifier = JavaTypeParameterImpl@588['E']
    nullable = 'false': Boolean@396
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@545
}

LazyJavaClassifierType@589['E'] {
    arguments = ArrayList@590[empty]
    classifier = JavaTypeParameterImpl@591['E']
    nullable = 'false': Boolean@396
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@545
}

LazyJavaClassifierType@592['E'] {
    arguments = ArrayList@593[empty]
    classifier = JavaTypeParameterImpl@594['E']
    nullable = 'false': Boolean@396
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@538
}

LazyJavaClassifierType@595['E'] {
    arguments = ArrayList@596[empty]
    classifier = JavaTypeParameterImpl@597['E']
    nullable = 'false': Boolean@396
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@545
}

LazyJavaClassifierType@598['E'] {
    arguments = ArrayList@599[empty]
    classifier = JavaTypeParameterImpl@600['E']
    nullable = 'false': Boolean@396
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@538
}

LazyJavaClassifierType@601['E'] {
    arguments = ArrayList@602[empty]
    classifier = JavaTypeParameterImpl@603['E']
    nullable = 'false': Boolean@396
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@545
}

LazyJavaClassifierType@604['E'] {
    arguments = ArrayList@605[empty]
    classifier = JavaTypeParameterImpl@606['E']
    nullable = 'false': Boolean@396
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@545
}

LazyJavaClassifierType@607['E'] {
    arguments = ArrayList@608[empty]
    classifier = JavaTypeParameterImpl@609['E']
    nullable = 'false': Boolean@396
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@545
}

LazyJavaClassifierType@610['E'] {
    arguments = ArrayList@611[empty]
    classifier = JavaTypeParameterImpl@612['E']
    nullable = 'false': Boolean@396
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@570
}

LazyJavaClassifierType@613['E'] {
    arguments = ArrayList@614[empty]
    classifier = JavaTypeParameterImpl@615['E']
    nullable = 'false': Boolean@396
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@570
}

LazyJavaClassifierType@616['E'] {
    arguments = ArrayList@617[empty]
    classifier = JavaTypeParameterImpl@618['E']
    nullable = 'false': Boolean@396
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@538
}

LazyJavaClassifierType@619['E'] {
    arguments = ArrayList@620[empty]
    classifier = JavaTypeParameterImpl@621['E']
    nullable = 'false': Boolean@396
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@538
}

LazyJavaClassifierType@622['E'] {
    arguments = ArrayList@623[empty]
    classifier = JavaTypeParameterImpl@624['E']
    nullable = 'false': Boolean@396
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@545
}

LazyJavaClassifierType@625['E'] {
    arguments = ArrayList@626[empty]
    classifier = JavaTypeParameterImpl@627['E']
    nullable = 'false': Boolean@396
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@545
}

LazyJavaClassifierType@628['E'] {
    arguments = ArrayList@629[empty]
    classifier = JavaTypeParameterImpl@630['E']
    nullable = 'false': Boolean@396
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@545
}

LazyJavaClassifierType@631['E'] {
    arguments = ArrayList@632[empty]
    classifier = JavaTypeParameterImpl@633['E']
    nullable = 'false': Boolean@396
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@538
}

LazyJavaClassifierType@634['E'] {
    arguments = ArrayList@635[empty]
    classifier = JavaTypeParameterImpl@636['E']
    nullable = 'false': Boolean@396
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@545
}

LazyJavaClassifierType@637['E'] {
    arguments = ArrayList@638[empty]
    classifier = JavaTypeParameterImpl@639['E']
    nullable = 'false': Boolean@396
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@545
}

LazyJavaClassifierType@640['E'] {
    arguments = ArrayList@641[empty]
    classifier = JavaTypeParameterImpl@642['E']
    nullable = 'false': Boolean@396
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@538
}

LazyJavaClassifierType@643['E'] {
    arguments = ArrayList@644[empty]
    classifier = JavaTypeParameterImpl@645['E']
    nullable = 'false': Boolean@396
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@545
}

LazyJavaClassifierType@646['E'] {
    arguments = ArrayList@647[empty]
    classifier = JavaTypeParameterImpl@648['E']
    nullable = 'false': Boolean@396
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@570
}

LazyJavaClassifierType@649['E'] {
    arguments = ArrayList@650[empty]
    classifier = JavaTypeParameterImpl@651['E']
    nullable = 'false': Boolean@396
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@538
}

LazyJavaClassifierType@652['E'] {
    arguments = ArrayList@653[empty]
    classifier = JavaTypeParameterImpl@654['E']
    nullable = 'false': Boolean@396
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@545
}

LazyJavaClassifierType@655['E'] {
    arguments = ArrayList@656[empty]
    classifier = JavaTypeParameterImpl@657['E']
    nullable = 'false': Boolean@396
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@545
}

LazyJavaClassifierType@658['E'] {
    arguments = ArrayList@659[empty]
    classifier = JavaTypeParameterImpl@660['E']
    nullable = 'false': Boolean@396
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@545
}

LazyJavaClassifierType@661['E'] {
    arguments = ArrayList@662[empty]
    classifier = JavaTypeParameterImpl@663['E']
    nullable = 'false': Boolean@396
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@538
}

LazyJavaClassifierType@664['E'] {
    arguments = ArrayList@665[empty]
    classifier = JavaTypeParameterImpl@666['E']
    nullable = 'false': Boolean@396
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@538
}

LazyJavaClassifierType@667['E'] {
    arguments = ArrayList@668[empty]
    classifier = JavaTypeParameterImpl@669['E']
    nullable = 'false': Boolean@396
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@538
}

LazyJavaClassifierType@670['E'] {
    arguments = ArrayList@671[empty]
    classifier = JavaTypeParameterImpl@672['E']
    nullable = 'false': Boolean@396
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@545
}

LazyJavaClassifierType@673['E'] {
    arguments = ArrayList@674[empty]
    classifier = JavaTypeParameterImpl@675['E']
    nullable = 'false': Boolean@396
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@570
}

LazyJavaClassifierType@676['E'] {
    arguments = ArrayList@677[empty]
    classifier = JavaTypeParameterImpl@678['E']
    nullable = 'false': Boolean@396
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@545
}

LazyJavaClassifierType@679['E'] {
    arguments = ArrayList@680[empty]
    classifier = JavaTypeParameterImpl@675['E']
    nullable = 'true': Boolean@407
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@570
}

LazyJavaClassifierType@681['E'] {
    arguments = ArrayList@682[empty]
    classifier = JavaTypeParameterImpl@663['E']
    nullable = 'true': Boolean@407
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@538
}

LazyJavaClassifierType@683['E'] {
    arguments = ArrayList@684[empty]
    classifier = JavaTypeParameterImpl@633['E']
    nullable = 'true': Boolean@407
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@538
}

LazyJavaClassifierType@685['E'] {
    arguments = ArrayList@686[empty]
    classifier = JavaTypeParameterImpl@551['E']
    nullable = 'true': Boolean@407
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@538
}

LazyJavaClassifierType@687['E'] {
    arguments = ArrayList@688[empty]
    classifier = JavaTypeParameterImpl@651['E']
    nullable = 'true': Boolean@407
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@538
}

LazyJavaClassifierType@689['E'] {
    arguments = ArrayList@690[empty]
    classifier = JavaTypeParameterImpl@548['E']
    nullable = 'true': Boolean@407
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@538
}

LazyJavaClassifierType@691['E'] {
    arguments = ArrayList@692[empty]
    classifier = JavaTypeParameterImpl@557['E']
    nullable = 'true': Boolean@407
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@545
}

LazyJavaClassifierType@693['E'] {
    arguments = ArrayList@694[empty]
    classifier = JavaTypeParameterImpl@541['E']
    nullable = 'true': Boolean@407
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@538
}

LazyJavaClassifierType@695['E'] {
    arguments = ArrayList@696[empty]
    classifier = JavaTypeParameterImpl@591['E']
    nullable = 'true': Boolean@407
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@545
}

LazyJavaClassifierType@697['E'] {
    arguments = ArrayList@698[empty]
    classifier = JavaTypeParameterImpl@612['E']
    nullable = 'true': Boolean@407
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@570
}

LazyJavaClassifierType@699['E'] {
    arguments = ArrayList@700[empty]
    classifier = JavaTypeParameterImpl@618['E']
    nullable = 'true': Boolean@407
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@538
}

LazyJavaClassifierType@701['E'] {
    arguments = ArrayList@702[empty]
    classifier = JavaTypeParameterImpl@654['E']
    nullable = 'true': Boolean@407
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@545
}

LazyJavaClassifierType@703['E'] {
    arguments = ArrayList@704[empty]
    classifier = JavaTypeParameterImpl@582['E']
    nullable = 'true': Boolean@407
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@570
}

LazyJavaClassifierType@705['E'] {
    arguments = ArrayList@706[empty]
    classifier = JavaTypeParameterImpl@597['E']
    nullable = 'true': Boolean@407
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@545
}

LazyJavaClassifierType@707['E'] {
    arguments = ArrayList@708[empty]
    classifier = JavaTypeParameterImpl@630['E']
    nullable = 'true': Boolean@407
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@545
}

LazyJavaClassifierType@709['E'] {
    arguments = ArrayList@710[empty]
    classifier = JavaTypeParameterImpl@672['E']
    nullable = 'true': Boolean@407
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@545
}

LazyJavaClassifierType@711['E'] {
    arguments = ArrayList@712[empty]
    classifier = JavaTypeParameterImpl@609['E']
    nullable = 'true': Boolean@407
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@545
}

LazyJavaClassifierType@713['E'] {
    arguments = ArrayList@714[empty]
    classifier = JavaTypeParameterImpl@624['E']
    nullable = 'true': Boolean@407
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@545
}

LazyJavaClassifierType@715['E'] {
    arguments = ArrayList@716[empty]
    classifier = JavaTypeParameterImpl@615['E']
    nullable = 'true': Boolean@407
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@570
}

LazyJavaClassifierType@717['E'] {
    arguments = ArrayList@718[empty]
    classifier = JavaTypeParameterImpl@639['E']
    nullable = 'true': Boolean@407
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@545
}

LazyJavaClassifierType@719['E'] {
    arguments = ArrayList@720[empty]
    classifier = JavaTypeParameterImpl@603['E']
    nullable = 'true': Boolean@407
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@545
}

LazyJavaClassifierType@721['E'] {
    arguments = ArrayList@722[empty]
    classifier = JavaTypeParameterImpl@678['E']
    nullable = 'true': Boolean@407
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@545
}

LazyJavaClassifierType@723['E'] {
    arguments = ArrayList@724[empty]
    classifier = JavaTypeParameterImpl@627['E']
    nullable = 'true': Boolean@407
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@545
}

LazyJavaClassifierType@725['E'] {
    arguments = ArrayList@726[empty]
    classifier = JavaTypeParameterImpl@576['E']
    nullable = 'true': Boolean@407
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@545
}

LazyJavaClassifierType@727['E'] {
    arguments = ArrayList@728[empty]
    classifier = JavaTypeParameterImpl@585['E']
    nullable = 'true': Boolean@407
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@538
}

LazyJavaClassifierType@729['E'] {
    arguments = ArrayList@730[empty]
    classifier = JavaTypeParameterImpl@657['E']
    nullable = 'true': Boolean@407
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@545
}

LazyJavaClassifierType@731['E'] {
    arguments = ArrayList@732[empty]
    classifier = JavaTypeParameterImpl@606['E']
    nullable = 'true': Boolean@407
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@545
}

LazyJavaClassifierType@733['E'] {
    arguments = ArrayList@734[empty]
    classifier = JavaTypeParameterImpl@563['E']
    nullable = 'true': Boolean@407
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@538
}

LazyJavaClassifierType@735['E'] {
    arguments = ArrayList@736[empty]
    classifier = JavaTypeParameterImpl@600['E']
    nullable = 'true': Boolean@407
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@538
}

LazyJavaClassifierType@737['E'] {
    arguments = ArrayList@738[empty]
    classifier = JavaTypeParameterImpl@621['E']
    nullable = 'true': Boolean@407
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@538
}

LazyJavaClassifierType@739['E'] {
    arguments = ArrayList@740[empty]
    classifier = JavaTypeParameterImpl@648['E']
    nullable = 'true': Boolean@407
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@570
}

LazyJavaClassifierType@741['E'] {
    arguments = ArrayList@742[empty]
    classifier = JavaTypeParameterImpl@569['E']
    nullable = 'true': Boolean@407
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@570
}

LazyJavaClassifierType@743['E'] {
    arguments = ArrayList@744[empty]
    classifier = JavaTypeParameterImpl@669['E']
    nullable = 'true': Boolean@407
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@538
}

LazyJavaClassifierType@745['E'] {
    arguments = ArrayList@746[empty]
    classifier = JavaTypeParameterImpl@536['E']
    nullable = 'true': Boolean@407
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@538
}

LazyJavaClassifierType@747['E'] {
    arguments = ArrayList@748[empty]
    classifier = JavaTypeParameterImpl@660['E']
    nullable = 'true': Boolean@407
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@545
}

LazyJavaClassifierType@749['E'] {
    arguments = ArrayList@750[empty]
    classifier = JavaTypeParameterImpl@588['E']
    nullable = 'true': Boolean@407
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@545
}

LazyJavaClassifierType@751['E'] {
    arguments = ArrayList@752[empty]
    classifier = JavaTypeParameterImpl@579['E']
    nullable = 'true': Boolean@407
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@545
}

LazyJavaClassifierType@753['E'] {
    arguments = ArrayList@754[empty]
    classifier = JavaTypeParameterImpl@560['E']
    nullable = 'true': Boolean@407
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@538
}

LazyJavaClassifierType@755['E'] {
    arguments = ArrayList@756[empty]
    classifier = JavaTypeParameterImpl@544['E']
    nullable = 'true': Boolean@407
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@545
}

LazyJavaClassifierType@757['E'] {
    arguments = ArrayList@758[empty]
    classifier = JavaTypeParameterImpl@636['E']
    nullable = 'true': Boolean@407
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@545
}

LazyJavaClassifierType@759['E'] {
    arguments = ArrayList@760[empty]
    classifier = JavaTypeParameterImpl@666['E']
    nullable = 'true': Boolean@407
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@538
}

LazyJavaClassifierType@761['E'] {
    arguments = ArrayList@762[empty]
    classifier = JavaTypeParameterImpl@573['E']
    nullable = 'true': Boolean@407
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@545
}

LazyJavaClassifierType@763['E'] {
    arguments = ArrayList@764[empty]
    classifier = JavaTypeParameterImpl@566['E']
    nullable = 'true': Boolean@407
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@538
}

LazyJavaClassifierType@765['E'] {
    arguments = ArrayList@766[empty]
    classifier = JavaTypeParameterImpl@642['E']
    nullable = 'true': Boolean@407
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@538
}

LazyJavaClassifierType@767['E'] {
    arguments = ArrayList@768[empty]
    classifier = JavaTypeParameterImpl@645['E']
    nullable = 'true': Boolean@407
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@545
}

LazyJavaClassifierType@769['E'] {
    arguments = ArrayList@770[empty]
    classifier = JavaTypeParameterImpl@594['E']
    nullable = 'true': Boolean@407
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@538
}

LazyJavaClassifierType@771['E'] {
    arguments = ArrayList@772[empty]
    classifier = JavaTypeParameterImpl@554['E']
    nullable = 'true': Boolean@407
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@545
}

LazyJavaClassifierType@773['Iterator<E>'] {
    arguments = ArrayList@774[1] { TypeProjectionImpl@775 }
    classifier = JavaClassImpl@776['Iterator']
    memberScope = SubstitutingScope@777
    nullable = 'false': Boolean@396
    typeConstructor = DeserializedClassTypeConstructor@778
}

LazyJavaClassifierType@779['Iterator<E>'] {
    arguments = ArrayList@780[1] { TypeProjectionImpl@781 }
    classifier = JavaClassImpl@782['Iterator']
    memberScope = SubstitutingScope@783
    nullable = 'false': Boolean@396
    typeConstructor = DeserializedClassTypeConstructor@778
}

LazyJavaClassifierType@784['Iterator<E>'] {
    arguments = ArrayList@785[1] { TypeProjectionImpl@786 }
    classifier = JavaClassImpl@787['Iterator']
    memberScope = SubstitutingScope@788
    nullable = 'false': Boolean@396
    typeConstructor = DeserializedClassTypeConstructor@778
}

LazyJavaClassifierType@789['Iterator<E>'] {
    arguments = ArrayList@790[1] { TypeProjectionImpl@791 }
    classifier = JavaClassImpl@782['Iterator']
    memberScope = SubstitutingScope@792
    nullable = 'true': Boolean@407
    typeConstructor = DeserializedClassTypeConstructor@793
}

LazyJavaClassifierType@794['Iterator<E>'] {
    arguments = ArrayList@795[1] { TypeProjectionImpl@796 }
    classifier = JavaClassImpl@787['Iterator']
    memberScope = SubstitutingScope@797
    nullable = 'true': Boolean@407
    typeConstructor = DeserializedClassTypeConstructor@793
}

LazyJavaClassifierType@798['Iterator<E>'] {
    arguments = ArrayList@799[1] { TypeProjectionImpl@800 }
    classifier = JavaClassImpl@776['Iterator']
    memberScope = SubstitutingScope@801
    nullable = 'true': Boolean@407
    typeConstructor = DeserializedClassTypeConstructor@793
}

LazyJavaClassifierType@802['List<E>'] {
    arguments = ArrayList@803[1] { TypeProjectionImpl@804 }
    classifier = JavaClassImpl@805['List']
    memberScope = SubstitutingScope@806
    nullable = 'false': Boolean@396
    typeConstructor = DeserializedClassTypeConstructor@807
}

LazyJavaClassifierType@372['List<E>'] {
    arguments = ArrayList@808[1] { TypeProjectionImpl@809 }
    classifier = JavaClassImpl@810['List']
    memberScope = SubstitutingScope@811
    nullable = 'false': Boolean@396
    typeConstructor = DeserializedClassTypeConstructor@807
}

LazyJavaClassifierType@367['List<E>'] {
    arguments = ArrayList@812[1] { TypeProjectionImpl@813 }
    classifier = JavaClassImpl@814['List']
    memberScope = SubstitutingScope@815
    nullable = 'false': Boolean@396
    typeConstructor = DeserializedClassTypeConstructor@807
}

LazyJavaClassifierType@816['List<E>'] {
    arguments = ArrayList@817[1] { TypeProjectionImpl@818 }
    classifier = JavaClassImpl@819['List']
    memberScope = SubstitutingScope@820
    nullable = 'false': Boolean@396
    typeConstructor = DeserializedClassTypeConstructor@807
}

LazyJavaClassifierType@821['List<E>'] {
    arguments = ArrayList@822[1] { TypeProjectionImpl@823 }
    classifier = JavaClassImpl@819['List']
    memberScope = SubstitutingScope@824
    nullable = 'true': Boolean@407
    typeConstructor = DeserializedClassTypeConstructor@825
}

LazyJavaClassifierType@826['List<E>'] {
    arguments = ArrayList@827[1] { TypeProjectionImpl@828 }
    classifier = JavaClassImpl@805['List']
    memberScope = SubstitutingScope@829
    nullable = 'true': Boolean@407
    typeConstructor = DeserializedClassTypeConstructor@825
}

LazyJavaClassifierType@830['ListIterator<E>'] {
    arguments = ArrayList@831[1] { TypeProjectionImpl@832 }
    classifier = JavaClassImpl@833['ListIterator']
    memberScope = SubstitutingScope@834
    nullable = 'false': Boolean@396
    typeConstructor = DeserializedClassTypeConstructor@835
}

LazyJavaClassifierType@836['ListIterator<E>'] {
    arguments = ArrayList@837[1] { TypeProjectionImpl@838 }
    classifier = JavaClassImpl@839['ListIterator']
    memberScope = SubstitutingScope@840
    nullable = 'false': Boolean@396
    typeConstructor = DeserializedClassTypeConstructor@835
}

LazyJavaClassifierType@841['ListIterator<E>'] {
    arguments = ArrayList@842[1] { TypeProjectionImpl@843 }
    classifier = JavaClassImpl@844['ListIterator']
    memberScope = SubstitutingScope@845
    nullable = 'false': Boolean@396
    typeConstructor = DeserializedClassTypeConstructor@835
}

LazyJavaClassifierType@846['ListIterator<E>'] {
    arguments = ArrayList@847[1] { TypeProjectionImpl@848 }
    classifier = JavaClassImpl@849['ListIterator']
    memberScope = SubstitutingScope@850
    nullable = 'false': Boolean@396
    typeConstructor = DeserializedClassTypeConstructor@835
}

LazyJavaClassifierType@851['ListIterator<E>'] {
    arguments = ArrayList@852[1] { TypeProjectionImpl@853 }
    classifier = JavaClassImpl@849['ListIterator']
    memberScope = SubstitutingScope@854
    nullable = 'true': Boolean@407
    typeConstructor = DeserializedClassTypeConstructor@855
}

LazyJavaClassifierType@856['ListIterator<E>'] {
    arguments = ArrayList@857[1] { TypeProjectionImpl@858 }
    classifier = JavaClassImpl@844['ListIterator']
    memberScope = SubstitutingScope@859
    nullable = 'true': Boolean@407
    typeConstructor = DeserializedClassTypeConstructor@855
}

LazyJavaClassifierType@860['ListIterator<E>'] {
    arguments = ArrayList@861[1] { TypeProjectionImpl@862 }
    classifier = JavaClassImpl@833['ListIterator']
    memberScope = SubstitutingScope@863
    nullable = 'true': Boolean@407
    typeConstructor = DeserializedClassTypeConstructor@855
}

LazyJavaClassifierType@864['ListIterator<E>'] {
    arguments = ArrayList@865[1] { TypeProjectionImpl@866 }
    classifier = JavaClassImpl@839['ListIterator']
    memberScope = SubstitutingScope@867
    nullable = 'true': Boolean@407
    typeConstructor = DeserializedClassTypeConstructor@855
}

LazyJavaClassifierType@868['Object'] {
    arguments = ArrayList@869[empty]
    classifier = JavaClassImpl@870['Object']
    memberScope = DeserializedClassMemberScope@871
    nullable = 'false': Boolean@396
    typeConstructor = DeserializedClassTypeConstructor@872
}

LazyJavaClassifierType@873['Object'] {
    arguments = ArrayList@874[empty]
    classifier = JavaClassImpl@875['Object']
    memberScope = DeserializedClassMemberScope@871
    nullable = 'false': Boolean@396
    typeConstructor = DeserializedClassTypeConstructor@872
}

LazyJavaClassifierType@876['Object'] {
    arguments = ArrayList@877[empty]
    classifier = JavaClassImpl@878['Object']
    memberScope = DeserializedClassMemberScope@871
    nullable = 'false': Boolean@396
    typeConstructor = DeserializedClassTypeConstructor@872
}

LazyJavaClassifierType@879['Object'] {
    arguments = ArrayList@880[empty]
    classifier = JavaClassImpl@881['Object']
    memberScope = DeserializedClassMemberScope@871
    nullable = 'false': Boolean@396
    typeConstructor = DeserializedClassTypeConstructor@872
}

LazyJavaClassifierType@882['Object'] {
    arguments = ArrayList@883[empty]
    classifier = JavaClassImpl@884['Object']
    memberScope = DeserializedClassMemberScope@871
    nullable = 'false': Boolean@396
    typeConstructor = DeserializedClassTypeConstructor@872
}

LazyJavaClassifierType@885['Object'] {
    arguments = ArrayList@886[empty]
    classifier = JavaClassImpl@887['Object']
    memberScope = DeserializedClassMemberScope@871
    nullable = 'false': Boolean@396
    typeConstructor = DeserializedClassTypeConstructor@872
}

LazyJavaClassifierType@888['Object'] {
    arguments = ArrayList@889[empty]
    classifier = JavaClassImpl@890['Object']
    memberScope = DeserializedClassMemberScope@871
    nullable = 'false': Boolean@396
    typeConstructor = DeserializedClassTypeConstructor@872
}

LazyJavaClassifierType@891['Object'] {
    arguments = ArrayList@892[empty]
    classifier = JavaClassImpl@893['Object']
    memberScope = DeserializedClassMemberScope@871
    nullable = 'false': Boolean@396
    typeConstructor = DeserializedClassTypeConstructor@872
}

LazyJavaClassifierType@894['Object'] {
    arguments = ArrayList@895[empty]
    classifier = JavaClassImpl@896['Object']
    memberScope = DeserializedClassMemberScope@871
    nullable = 'false': Boolean@396
    typeConstructor = DeserializedClassTypeConstructor@872
}

LazyJavaClassifierType@897['Object'] {
    arguments = ArrayList@898[empty]
    classifier = JavaClassImpl@899['Object']
    memberScope = DeserializedClassMemberScope@871
    nullable = 'false': Boolean@396
    typeConstructor = DeserializedClassTypeConstructor@872
}

LazyJavaClassifierType@900['Object'] {
    arguments = ArrayList@901[empty]
    classifier = JavaClassImpl@902['Object']
    memberScope = DeserializedClassMemberScope@871
    nullable = 'false': Boolean@396
    typeConstructor = DeserializedClassTypeConstructor@872
}

LazyJavaClassifierType@903['Object'] {
    arguments = ArrayList@904[empty]
    classifier = JavaClassImpl@905['Object']
    memberScope = DeserializedClassMemberScope@871
    nullable = 'false': Boolean@396
    typeConstructor = DeserializedClassTypeConstructor@872
}

LazyJavaClassifierType@906['Object'] {
    arguments = ArrayList@907[empty]
    classifier = JavaClassImpl@908['Object']
    memberScope = DeserializedClassMemberScope@871
    nullable = 'false': Boolean@396
    typeConstructor = DeserializedClassTypeConstructor@872
}

LazyJavaClassifierType@909['Object'] {
    arguments = ArrayList@910[empty]
    classifier = JavaClassImpl@884['Object']
    memberScope = DeserializedClassMemberScope@871
    nullable = 'true': Boolean@407
    typeConstructor = DeserializedClassTypeConstructor@872
}

LazyJavaClassifierType@911['Object'] {
    arguments = ArrayList@912[empty]
    classifier = JavaClassImpl@905['Object']
    memberScope = DeserializedClassMemberScope@871
    nullable = 'true': Boolean@407
    typeConstructor = DeserializedClassTypeConstructor@872
}

LazyJavaClassifierType@913['Object'] {
    arguments = ArrayList@914[empty]
    classifier = JavaClassImpl@899['Object']
    memberScope = DeserializedClassMemberScope@871
    nullable = 'true': Boolean@407
    typeConstructor = DeserializedClassTypeConstructor@872
}

LazyJavaClassifierType@915['Object'] {
    arguments = ArrayList@916[empty]
    classifier = JavaClassImpl@878['Object']
    memberScope = DeserializedClassMemberScope@871
    nullable = 'true': Boolean@407
    typeConstructor = DeserializedClassTypeConstructor@872
}

LazyJavaClassifierType@917['Object'] {
    arguments = ArrayList@918[empty]
    classifier = JavaClassImpl@870['Object']
    memberScope = DeserializedClassMemberScope@871
    nullable = 'true': Boolean@407
    typeConstructor = DeserializedClassTypeConstructor@872
}

LazyJavaClassifierType@919['Object'] {
    arguments = ArrayList@920[empty]
    classifier = JavaClassImpl@881['Object']
    memberScope = DeserializedClassMemberScope@871
    nullable = 'true': Boolean@407
    typeConstructor = DeserializedClassTypeConstructor@872
}

LazyJavaClassifierType@921['Object'] {
    arguments = ArrayList@922[empty]
    classifier = JavaClassImpl@875['Object']
    memberScope = DeserializedClassMemberScope@871
    nullable = 'true': Boolean@407
    typeConstructor = DeserializedClassTypeConstructor@872
}

LazyJavaClassifierType@923['Object'] {
    arguments = ArrayList@924[empty]
    classifier = JavaClassImpl@908['Object']
    memberScope = DeserializedClassMemberScope@871
    nullable = 'true': Boolean@407
    typeConstructor = DeserializedClassTypeConstructor@872
}

LazyJavaClassifierType@925['Object'] {
    arguments = ArrayList@926[empty]
    classifier = JavaClassImpl@890['Object']
    memberScope = DeserializedClassMemberScope@871
    nullable = 'true': Boolean@407
    typeConstructor = DeserializedClassTypeConstructor@872
}

LazyJavaClassifierType@927['Object'] {
    arguments = ArrayList@928[empty]
    classifier = JavaClassImpl@887['Object']
    memberScope = DeserializedClassMemberScope@871
    nullable = 'true': Boolean@407
    typeConstructor = DeserializedClassTypeConstructor@872
}

LazyJavaClassifierType@929['Object'] {
    arguments = ArrayList@930[empty]
    classifier = JavaClassImpl@893['Object']
    memberScope = DeserializedClassMemberScope@871
    nullable = 'true': Boolean@407
    typeConstructor = DeserializedClassTypeConstructor@872
}

LazyJavaClassifierType@931['Object'] {
    arguments = ArrayList@932[empty]
    classifier = JavaClassImpl@896['Object']
    memberScope = DeserializedClassMemberScope@871
    nullable = 'true': Boolean@407
    typeConstructor = DeserializedClassTypeConstructor@872
}

LazyJavaClassifierType@933['Object'] {
    arguments = ArrayList@934[empty]
    classifier = JavaClassImpl@902['Object']
    memberScope = DeserializedClassMemberScope@871
    nullable = 'true': Boolean@407
    typeConstructor = DeserializedClassTypeConstructor@872
}

LazyJavaClassifierType@935['Object'] {
    classifier = JavaClassImpl@936['Object']
    typeConstructor = DeserializedClassTypeConstructor@872
}

LazyJavaClassifierType@937['Object'] {
    classifier = JavaClassImpl@938['Object']
    typeConstructor = DeserializedClassTypeConstructor@872
}

LazyJavaClassifierType@939['Object'] {
    classifier = JavaClassImpl@940['Object']
    typeConstructor = DeserializedClassTypeConstructor@872
}

LazyJavaClassifierType@941['Object'] {
    classifier = JavaClassImpl@942['Object']
    typeConstructor = DeserializedClassTypeConstructor@872
}

LazyJavaClassifierType@943['Object'] {
    classifier = JavaClassImpl@944['Object']
    typeConstructor = DeserializedClassTypeConstructor@872
}

LazyJavaClassifierType@945['ObjectInputStream'] {
    arguments = ArrayList@946[empty]
    classifier = JavaClassImpl@947['ObjectInputStream']
    memberScope = LazyJavaClassMemberScope@948
    nullable = 'false': Boolean@396
    typeConstructor = LazyJavaClassTypeConstructor@332['ObjectInputStream']
}

LazyJavaClassifierType@949['ObjectInputStream'] {
    arguments = ArrayList@950[empty]
    classifier = JavaClassImpl@947['ObjectInputStream']
    memberScope = LazyJavaClassMemberScope@948
    nullable = 'true': Boolean@407
    typeConstructor = LazyJavaClassTypeConstructor@332['ObjectInputStream']
}

LazyJavaClassifierType@951['ObjectOutputStream'] {
    arguments = ArrayList@952[empty]
    classifier = JavaClassImpl@953['ObjectOutputStream']
    memberScope = LazyJavaClassMemberScope@954
    nullable = 'false': Boolean@396
    typeConstructor = LazyJavaClassTypeConstructor@334['ObjectOutputStream']
}

LazyJavaClassifierType@955['ObjectOutputStream'] {
    arguments = ArrayList@956[empty]
    classifier = JavaClassImpl@953['ObjectOutputStream']
    memberScope = LazyJavaClassMemberScope@954
    nullable = 'true': Boolean@407
    typeConstructor = LazyJavaClassTypeConstructor@334['ObjectOutputStream']
}

LazyJavaClassifierType@373['RandomAccess'] {
    arguments = ArrayList@957[empty]
    classifier = JavaClassImpl@958['RandomAccess']
    memberScope = LazyJavaClassMemberScope@339
    nullable = 'false': Boolean@396
    typeConstructor = LazyJavaClassTypeConstructor@347['RandomAccess']
}

LazyJavaClassifierType@959['Serializable'] {
    arguments = ArrayList@960[empty]
    classifier = JavaClassImpl@961['Serializable']
    memberScope = LazyJavaClassMemberScope@350
    nullable = 'false': Boolean@396
    typeConstructor = LazyJavaClassTypeConstructor@358['Serializable']
}

LazyJavaClassifierType@962['String'] {
    arguments = ArrayList@963[empty]
    classifier = JavaClassImpl@964['String']
    memberScope = DeserializedClassMemberScope@965
    nullable = 'false': Boolean@396
    typeConstructor = DeserializedClassTypeConstructor@966
}

LazyJavaClassifierType@967['String'] {
    arguments = ArrayList@968[empty]
    classifier = JavaClassImpl@969['String']
    memberScope = DeserializedClassMemberScope@965
    nullable = 'false': Boolean@396
    typeConstructor = DeserializedClassTypeConstructor@966
}

LazyJavaClassifierType@970['String'] {
    arguments = ArrayList@971[empty]
    classifier = JavaClassImpl@972['String']
    memberScope = DeserializedClassMemberScope@965
    nullable = 'false': Boolean@396
    typeConstructor = DeserializedClassTypeConstructor@966
}

LazyJavaClassifierType@973['String'] {
    arguments = ArrayList@974[empty]
    classifier = JavaClassImpl@969['String']
    memberScope = DeserializedClassMemberScope@965
    nullable = 'true': Boolean@407
    typeConstructor = DeserializedClassTypeConstructor@966
}

LazyJavaClassifierType@975['String'] {
    arguments = ArrayList@976[empty]
    classifier = JavaClassImpl@972['String']
    memberScope = DeserializedClassMemberScope@965
    nullable = 'true': Boolean@407
    typeConstructor = DeserializedClassTypeConstructor@966
}

LazyJavaClassifierType@977['String'] {
    arguments = ArrayList@978[empty]
    classifier = JavaClassImpl@964['String']
    memberScope = DeserializedClassMemberScope@965
    nullable = 'true': Boolean@407
    typeConstructor = DeserializedClassTypeConstructor@966
}

LazyJavaClassifierType@979['T'] {
    arguments = ArrayList@980[empty]
    classifier = JavaTypeParameterImpl@981['T']
    nullable = 'false': Boolean@396
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@982
}

LazyJavaClassifierType@983['T'] {
    arguments = ArrayList@984[empty]
    classifier = JavaTypeParameterImpl@985['T']
    nullable = 'false': Boolean@396
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@986
}

LazyJavaClassifierType@987['T'] {
    arguments = ArrayList@988[empty]
    classifier = JavaTypeParameterImpl@989['T']
    nullable = 'false': Boolean@396
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@986
}

LazyJavaClassifierType@990['T'] {
    arguments = ArrayList@991[empty]
    classifier = JavaTypeParameterImpl@992['T']
    nullable = 'false': Boolean@396
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@982
}

LazyJavaClassifierType@993['T'] {
    arguments = ArrayList@994[empty]
    classifier = JavaTypeParameterImpl@992['T']
    nullable = 'true': Boolean@407
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@982
}

LazyJavaClassifierType@995['T'] {
    arguments = ArrayList@996[empty]
    classifier = JavaTypeParameterImpl@981['T']
    nullable = 'true': Boolean@407
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@982
}

LazyJavaClassifierType@997['T'] {
    arguments = ArrayList@998[empty]
    classifier = JavaTypeParameterImpl@985['T']
    nullable = 'true': Boolean@407
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@986
}

LazyJavaClassifierType@999['T'] {
    arguments = ArrayList@1000[empty]
    classifier = JavaTypeParameterImpl@989['T']
    nullable = 'true': Boolean@407
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@986
}

LazyJavaClassifierType@1001['TB'] {
    arguments = ArrayList@1002[empty]
    classifier = JavaTypeParameterImpl@1003['TB']
    nullable = 'false': Boolean@396
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1004
}

LazyJavaClassifierType@1005['TB'] {
    arguments = ArrayList@1006[empty]
    classifier = JavaTypeParameterImpl@1007['TB']
    nullable = 'false': Boolean@396
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1004
}

LazyJavaClassifierType@1008['TB'] {
    arguments = ArrayList@1009[empty]
    classifier = JavaTypeParameterImpl@1010['TB']
    nullable = 'false': Boolean@396
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1004
}

LazyJavaClassifierType@1011['TB'] {
    arguments = ArrayList@1012[empty]
    classifier = JavaTypeParameterImpl@1007['TB']
    nullable = 'true': Boolean@407
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1004
}

LazyJavaClassifierType@1013['TB'] {
    arguments = ArrayList@1014[empty]
    classifier = JavaTypeParameterImpl@1003['TB']
    nullable = 'true': Boolean@407
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1004
}

LazyJavaClassifierType@1015['TB'] {
    arguments = ArrayList@1016[empty]
    classifier = JavaTypeParameterImpl@1010['TB']
    nullable = 'true': Boolean@407
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1004
}

LazyJavaClassifierType@1017['TC'] {
    arguments = ArrayList@1018[empty]
    classifier = JavaTypeParameterImpl@1019['TC']
    nullable = 'false': Boolean@396
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1020
}

LazyJavaClassifierType@1021['TC'] {
    arguments = ArrayList@1022[empty]
    classifier = JavaTypeParameterImpl@1023['TC']
    nullable = 'false': Boolean@396
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1020
}

LazyJavaClassifierType@1024['TC'] {
    arguments = ArrayList@1025[empty]
    classifier = JavaTypeParameterImpl@1023['TC']
    nullable = 'true': Boolean@407
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1020
}

LazyJavaClassifierType@1026['TC'] {
    arguments = ArrayList@1027[empty]
    classifier = JavaTypeParameterImpl@1019['TC']
    nullable = 'true': Boolean@407
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1020
}

LazyJavaPackageFragmentProvider@1028 {
    packageFragments('<root>': FqName@1029) = LazyJavaPackageFragment@1030['<root>']
    packageFragments('A': FqName@1031) = null
    packageFragments('AL': FqName@1032) = null
    packageFragments('C': FqName@1033) = null
    packageFragments('K': FqName@1034) = null
    packageFragments('P': FqName@1035) = null
    packageFragments('TA': FqName@1036) = null
    packageFragments('java': FqName@1037) = LazyJavaPackageFragment@1038['java']
    packageFragments('java.io': FqName@1039) = LazyJavaPackageFragment@1040['io']
    packageFragments('java.lang': FqName@1041) = LazyJavaPackageFragment@1042['lang']
    packageFragments('java.lang.A': FqName@1043) = null
    packageFragments('java.lang.C': FqName@1044) = null
    packageFragments('java.lang.P': FqName@1045) = null
    packageFragments('java.lang.TA': FqName@1046) = null
    packageFragments('java.util': FqName@1047) = LazyJavaPackageFragment@1048['util']
    packageFragments('java.util.ArrayList': FqName@1049) = null
    packageFragments('kotlin': FqName@1050) = null
    packageFragments('kotlin.A': FqName@1051) = null
    packageFragments('kotlin.C': FqName@1052) = null
    packageFragments('kotlin.P': FqName@1053) = null
    packageFragments('kotlin.TA': FqName@1054) = null
    packageFragments('kotlin.io': FqName@1055) = null
    packageFragments('kotlin.jvm': FqName@1056) = null
    packageFragments('p': FqName@1057) = LazyJavaPackageFragment@1058['p']
    packageFragments('p.A': FqName@1059) = null
    packageFragments('p.C': FqName@1060) = null
    packageFragments('p.P': FqName@1061) = null
    packageFragments('p.TA': FqName@1062) = null
    topLevelClasses(JavaClassImpl@414['AbstractCollection']) = LazyJavaClassDescriptor@0['AbstractCollection']
    topLevelClasses(JavaClassImpl@418['AbstractList']) = LazyJavaClassDescriptor@84['AbstractList']
    topLevelClasses(JavaClassImpl@1063['ArrayList']) = LazyJavaClassDescriptor@161['ArrayList']
    topLevelClasses(JavaClassImpl@422['B']) = LazyJavaClassDescriptor@289['B']
    topLevelClasses(JavaClassImpl@1064['C']) = LazyJavaClassDescriptor@313['C']
    topLevelClasses(JavaClassImpl@947['ObjectInputStream']) = LazyJavaClassDescriptor@331['ObjectInputStream']
    topLevelClasses(JavaClassImpl@953['ObjectOutputStream']) = LazyJavaClassDescriptor@333['ObjectOutputStream']
    topLevelClasses(JavaClassImpl@1065['P']) = LazyJavaClassDescriptor@335['P']
    topLevelClasses(JavaClassImpl@958['RandomAccess']) = LazyJavaClassDescriptor@337['RandomAccess']
    topLevelClasses(JavaClassImpl@961['Serializable']) = LazyJavaClassDescriptor@348['Serializable']
}

LazyJavaPackageFragment@1030['<root>'] {
    classes('C': Name@1066) = null // through LazyPackageFragmentScopeForJavaPackage@1067
    classes('P': Name@1068) = null // through LazyPackageFragmentScopeForJavaPackage@1067
    classes('java': Name@1069) = null // through LazyPackageFragmentScopeForJavaPackage@1067
    classes('p': Name@1070) = null // through LazyPackageFragmentScopeForJavaPackage@1067
    deserializedPackageScope = Empty@1071 // through LazyPackageFragmentScopeForJavaPackage@1067
    functions('p': Name@1072) = EmptyList@3[empty] // through LazyPackageFragmentScopeForJavaPackage@1067
    memberIndex = computeMemberIndex$1@1073 // through LazyPackageFragmentScopeForJavaPackage@1067
}

LazyJavaPackageFragment@1038['java'] {
    classes('lang': Name@1074) = null // through LazyPackageFragmentScopeForJavaPackage@1075
    classes('util': Name@1076) = null // through LazyPackageFragmentScopeForJavaPackage@1075
    deserializedPackageScope = Empty@1071 // through LazyPackageFragmentScopeForJavaPackage@1075
    functions('lang': Name@1077) = EmptyList@3[empty] // through LazyPackageFragmentScopeForJavaPackage@1075
    memberIndex = computeMemberIndex$1@1078 // through LazyPackageFragmentScopeForJavaPackage@1075
}

LazyJavaPackageFragment@1042['lang'] {
    classes('java': Name@1069) = null // through LazyPackageFragmentScopeForJavaPackage@1079
}

LazyJavaPackageFragment@1058['p'] {
    classes('C': Name@1066) = LazyJavaClassDescriptor@313['C'] // through LazyPackageFragmentScopeForJavaPackage@1080
    classes('P': Name@1068) = LazyJavaClassDescriptor@335['P'] // through LazyPackageFragmentScopeForJavaPackage@1080
    classes('java': Name@1069) = null // through LazyPackageFragmentScopeForJavaPackage@1080
}

LazyJavaPackageFragment@1048['util'] {
    classes('ArrayList': Name@1081) = LazyJavaClassDescriptor@161['ArrayList'] // through LazyPackageFragmentScopeForJavaPackage@1082
}

LazyJavaTypeParameterDescriptor@369['E'] {
    defaultType = JetTypeImpl@1083['E']
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@545
    upperBounds = LinkedHashSet@1084[1] { NullableType@1085 }
    upperBoundsAsType = NullableType@1085
}

LazyJavaTypeParameterDescriptor@364['E'] {
    defaultType = JetTypeImpl@1086['E']
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@538
    upperBounds = LinkedHashSet@1087[1] { NullableType@1088 }
    upperBoundsAsType = NullableType@1088
}

LazyJavaTypeParameterDescriptor@360['E'] {
    defaultType = JetTypeImpl@1089['E']
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@570
    upperBounds = LinkedHashSet@1090[1] { NullableType@1091 }
    upperBoundsAsType = NullableType@1091
}

LazyJavaTypeParameterDescriptor@1092['T'] {
    defaultType = JetTypeImpl@1093['T']
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@986
    upperBounds = LinkedHashSet@1094[1] { NullableType@1095 }
    upperBoundsAsType = NullableType@1095
}

LazyJavaTypeParameterDescriptor@1096['T'] {
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@982
    upperBounds = LinkedHashSet@1097[1] { NullableType@1098 }
    upperBoundsAsType = NullableType@1098
}

LazyJavaTypeParameterDescriptor@375['TB'] {
    defaultType = JetTypeImpl@1099['TB']
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1004
    upperBounds = LinkedHashSet@1100[1] { NullableType@1101 }
}

LazyJavaTypeParameterDescriptor@379['TC'] {
    defaultType = JetTypeImpl@1102['TC']
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@1020
    upperBounds = LinkedHashSet@1103[1] { NullableType@1104 }
}

LazyJavaTypeParameterResolver@1105 {
    resolve(JavaTypeParameterImpl@1106['E']) = LazyJavaTypeParameterDescriptor@369['E']
}

LazyJavaTypeParameterResolver@1107 {
    resolve(JavaTypeParameterImpl@1108['E']) = LazyJavaTypeParameterDescriptor@364['E']
}

LazyJavaTypeParameterResolver@1109 {
    resolve(JavaTypeParameterImpl@1110['E']) = LazyJavaTypeParameterDescriptor@360['E']
}

LazyJavaTypeParameterResolver@1111 {
    resolve(JavaTypeParameterImpl@585['E']) = null
}

LazyJavaTypeParameterResolver@1112 {
    resolve(JavaTypeParameterImpl@551['E']) = null
}

LazyJavaTypeParameterResolver@1113 {
    resolve(JavaTypeParameterImpl@672['E']) = null
}

LazyJavaTypeParameterResolver@1114 {
    resolve(JavaTypeParameterImpl@576['E']) = null
}

LazyJavaTypeParameterResolver@1115 {
    resolve(JavaTypeParameterImpl@566['E']) = null
}

LazyJavaTypeParameterResolver@1116 {
    resolve(JavaTypeParameterImpl@569['E']) = null
}

LazyJavaTypeParameterResolver@1117 {
    resolve(JavaTypeParameterImpl@554['E']) = null
}

LazyJavaTypeParameterResolver@1118 {
    resolve(JavaTypeParameterImpl@563['E']) = null
}

LazyJavaTypeParameterResolver@1119 {
    resolve(JavaTypeParameterImpl@654['E']) = null
}

LazyJavaTypeParameterResolver@1120 {
    resolve(JavaTypeParameterImpl@642['E']) = null
}

LazyJavaTypeParameterResolver@1121 {
    resolve(JavaTypeParameterImpl@544['E']) = null
}

LazyJavaTypeParameterResolver@1122 {
    resolve(JavaTypeParameterImpl@660['E']) = null
}

LazyJavaTypeParameterResolver@1123 {
    resolve(JavaTypeParameterImpl@603['E']) = null
}

LazyJavaTypeParameterResolver@1124 {
    resolve(JavaTypeParameterImpl@606['E']) = null
}

LazyJavaTypeParameterResolver@1125 {
    resolve(JavaTypeParameterImpl@612['E']) = null
}

LazyJavaTypeParameterResolver@1126 {
    resolve(JavaTypeParameterImpl@621['E']) = null
}

LazyJavaTypeParameterResolver@1127 {
    resolve(JavaTypeParameterImpl@594['E']) = null
}

LazyJavaTypeParameterResolver@1128 {
    resolve(JavaTypeParameterImpl@639['E']) = null
}

LazyJavaTypeParameterResolver@1129 {
    resolve(JavaTypeParameterImpl@600['E']) = null
}

LazyJavaTypeParameterResolver@1130 {
    resolve(JavaTypeParameterImpl@597['E']) = null
}

LazyJavaTypeParameterResolver@1131 {
    resolve(JavaTypeParameterImpl@582['E']) = null
}

LazyJavaTypeParameterResolver@1132 {
    resolve(JavaTypeParameterImpl@651['E']) = null
}

LazyJavaTypeParameterResolver@1133 {
    resolve(JavaTypeParameterImpl@663['E']) = null
}

LazyJavaTypeParameterResolver@1134 {
    resolve(JavaTypeParameterImpl@678['E']) = null
}

LazyJavaTypeParameterResolver@1135 {
    resolve(JavaTypeParameterImpl@624['E']) = null
}

LazyJavaTypeParameterResolver@1136 {
    resolve(JavaTypeParameterImpl@1137['T']) = LazyJavaTypeParameterDescriptor@1096['T']
}

LazyJavaTypeParameterResolver@1138 {
    resolve(JavaTypeParameterImpl@1139['T']) = LazyJavaTypeParameterDescriptor@1092['T']
}

LazyJavaTypeParameterResolver@1140 {
    resolve(JavaTypeParameterImpl@1141['TB']) = LazyJavaTypeParameterDescriptor@375['TB']
}

LazyJavaTypeParameterResolver@1142 {
    resolve(JavaTypeParameterImpl@1007['TB']) = null
}

LazyJavaTypeParameterResolver@1143 {
    resolve(JavaTypeParameterImpl@1144['TC']) = LazyJavaTypeParameterDescriptor@379['TC']
}

ResolutionTaskHolder@1145 {
    <name not found> = ArrayList@1146[1] { ResolutionCandidate@1147 }
    <name not found> = ArrayList@1148[1] { ResolutionCandidate@1147 }
}

ResolutionTaskHolder@1149 {
    <name not found> = ArrayList@1150[3] { ResolutionCandidate@1151, ResolutionCandidate@1152, ResolutionCandidate@1153 }
    <name not found> = ArrayList@1154[3] { ResolutionCandidate@1151, ResolutionCandidate@1152, ResolutionCandidate@1153 }
}
