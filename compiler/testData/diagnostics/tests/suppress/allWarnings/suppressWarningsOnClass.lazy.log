LazyAnnotationDescriptor@0 {
    resolutionResults = OverloadResolutionResultsImpl@1
    type = JetTypeImpl@2['suppress']
    valueArguments(ValueParameterDescriptorImpl@3['names']) = ArrayValue@4
}

LazyJavaPackageFragmentProvider@5 {
    packageFragments('<root>': FqName@6) = LazyJavaPackageFragment@7['<root>']
    packageFragments('C': FqName@8) = null
    packageFragments('String': FqName@9) = null
    packageFragments('java': FqName@10) = LazyJavaPackageFragment@11['java']
    packageFragments('java.lang': FqName@12) = LazyJavaPackageFragment@13['lang']
    packageFragments('java.lang.String': FqName@14) = null
    packageFragments('java.lang.suppress': FqName@15) = null
    packageFragments('kotlin': FqName@16) = null
    packageFragments('kotlin.String': FqName@17) = null
    packageFragments('kotlin.io': FqName@18) = null
    packageFragments('kotlin.jvm': FqName@19) = null
    packageFragments('kotlin.suppress': FqName@20) = null
    packageFragments('suppress': FqName@21) = null
}

LazyJavaPackageFragment@7['<root>'] {
    classes('String': Name@22) = null // through LazyPackageFragmentScopeForJavaPackage@23
    classes('suppress': Name@24) = null // through LazyPackageFragmentScopeForJavaPackage@23
}

LazyJavaPackageFragment@11['java'] {
    classes('lang': Name@25) = null // through LazyPackageFragmentScopeForJavaPackage@26
    deserializedPackageScope = Empty@27 // through LazyPackageFragmentScopeForJavaPackage@26
    functions('lang': Name@28) = EmptyList@29[empty] // through LazyPackageFragmentScopeForJavaPackage@26
    memberIndex = computeMemberIndex$1@30 // through LazyPackageFragmentScopeForJavaPackage@26
}

ResolutionTaskHolder@31 {
    <name not found> = ArrayList@32[1] { ResolutionCandidate@33 }
    <name not found> = ArrayList@34[1] { ResolutionCandidate@33 }
}

ResolutionTaskHolder@35 {
    <name not found> = ArrayList@36[1] { ResolutionCandidate@37 }
    <name not found> = ArrayList@38[1] { ResolutionCandidate@37 }
}
